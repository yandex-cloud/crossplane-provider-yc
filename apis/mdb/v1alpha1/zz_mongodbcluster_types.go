/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuditLogInitParameters struct {

	// (String) Configuration of the audit log filter in JSON format. For more information see auditLog.filter description in the official documentation. Available only in enterprise edition.
	// Configuration of the audit log filter in JSON format. For more information see [auditLog.filter](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.filter) description in the official documentation. Available only in enterprise edition.
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Boolean) Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see auditLog.runtimeConfiguration description in the official documentation. Available only in enterprise edition.
	// Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see [auditLog.runtimeConfiguration](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.runtimeConfiguration) description in the official documentation. Available only in enterprise edition.
	RuntimeConfiguration *bool `json:"runtimeConfiguration,omitempty" tf:"runtime_configuration,omitempty"`
}

type AuditLogObservation struct {

	// (String) Configuration of the audit log filter in JSON format. For more information see auditLog.filter description in the official documentation. Available only in enterprise edition.
	// Configuration of the audit log filter in JSON format. For more information see [auditLog.filter](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.filter) description in the official documentation. Available only in enterprise edition.
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Boolean) Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see auditLog.runtimeConfiguration description in the official documentation. Available only in enterprise edition.
	// Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see [auditLog.runtimeConfiguration](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.runtimeConfiguration) description in the official documentation. Available only in enterprise edition.
	RuntimeConfiguration *bool `json:"runtimeConfiguration,omitempty" tf:"runtime_configuration,omitempty"`
}

type AuditLogParameters struct {

	// (String) Configuration of the audit log filter in JSON format. For more information see auditLog.filter description in the official documentation. Available only in enterprise edition.
	// Configuration of the audit log filter in JSON format. For more information see [auditLog.filter](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.filter) description in the official documentation. Available only in enterprise edition.
	// +kubebuilder:validation:Optional
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Boolean) Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see auditLog.runtimeConfiguration description in the official documentation. Available only in enterprise edition.
	// Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see [auditLog.runtimeConfiguration](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.runtimeConfiguration) description in the official documentation. Available only in enterprise edition.
	// +kubebuilder:validation:Optional
	RuntimeConfiguration *bool `json:"runtimeConfiguration,omitempty" tf:"runtime_configuration,omitempty"`
}

type ClusterConfigAccessInitParameters struct {

	// (Boolean) Allow access for Yandex DataLens.
	// Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).
	DataLens *bool `json:"dataLens,omitempty" tf:"data_lens,omitempty"`

	// (Boolean) Allow access for DataTransfer.
	// Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).
	DataTransfer *bool `json:"dataTransfer,omitempty" tf:"data_transfer,omitempty"`

	// (Boolean) Allow access for WebSQL.
	// Allow access for [WebSQL](https://yandex.cloud/ru/docs/websql/).
	WebSQL *bool `json:"webSql,omitempty" tf:"web_sql,omitempty"`
}

type ClusterConfigAccessObservation struct {

	// (Boolean) Allow access for Yandex DataLens.
	// Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).
	DataLens *bool `json:"dataLens,omitempty" tf:"data_lens,omitempty"`

	// (Boolean) Allow access for DataTransfer.
	// Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).
	DataTransfer *bool `json:"dataTransfer,omitempty" tf:"data_transfer,omitempty"`

	// (Boolean) Allow access for WebSQL.
	// Allow access for [WebSQL](https://yandex.cloud/ru/docs/websql/).
	WebSQL *bool `json:"webSql,omitempty" tf:"web_sql,omitempty"`
}

type ClusterConfigAccessParameters struct {

	// (Boolean) Allow access for Yandex DataLens.
	// Allow access for [Yandex DataLens](https://yandex.cloud/services/datalens).
	// +kubebuilder:validation:Optional
	DataLens *bool `json:"dataLens,omitempty" tf:"data_lens,omitempty"`

	// (Boolean) Allow access for DataTransfer.
	// Allow access for [DataTransfer](https://yandex.cloud/services/data-transfer).
	// +kubebuilder:validation:Optional
	DataTransfer *bool `json:"dataTransfer,omitempty" tf:"data_transfer,omitempty"`

	// (Boolean) Allow access for WebSQL.
	// Allow access for [WebSQL](https://yandex.cloud/ru/docs/websql/).
	// +kubebuilder:validation:Optional
	WebSQL *bool `json:"webSql,omitempty" tf:"web_sql,omitempty"`
}

type ClusterConfigBackupWindowStartInitParameters struct {

	// (Number) The hour at which backup will be started.
	// The hour at which backup will be started.
	Hours *int64 `json:"hours,omitempty" tf:"hours,omitempty"`

	// (Number) The minute at which backup will be started.
	// The minute at which backup will be started.
	Minutes *int64 `json:"minutes,omitempty" tf:"minutes,omitempty"`
}

type ClusterConfigBackupWindowStartObservation struct {

	// (Number) The hour at which backup will be started.
	// The hour at which backup will be started.
	Hours *int64 `json:"hours,omitempty" tf:"hours,omitempty"`

	// (Number) The minute at which backup will be started.
	// The minute at which backup will be started.
	Minutes *int64 `json:"minutes,omitempty" tf:"minutes,omitempty"`
}

type ClusterConfigBackupWindowStartParameters struct {

	// (Number) The hour at which backup will be started.
	// The hour at which backup will be started.
	// +kubebuilder:validation:Optional
	Hours *int64 `json:"hours,omitempty" tf:"hours,omitempty"`

	// (Number) The minute at which backup will be started.
	// The minute at which backup will be started.
	// +kubebuilder:validation:Optional
	Minutes *int64 `json:"minutes,omitempty" tf:"minutes,omitempty"`
}

type ClusterConfigInitParameters struct {

	// (Block List, Max: 1) Access policy to the MongoDB cluster. (see below for nested schema)
	// Access policy to the MongoDB cluster.
	Access []ClusterConfigAccessInitParameters `json:"access,omitempty" tf:"access,omitempty"`

	// (Number) Retain period of automatically created backup in days.
	// Retain period of automatically created backup in days.
	BackupRetainPeriodDays *int64 `json:"backupRetainPeriodDays,omitempty" tf:"backup_retain_period_days,omitempty"`

	// (Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)
	// Time to start the daily backup, in the UTC timezone.
	BackupWindowStart []ClusterConfigBackupWindowStartInitParameters `json:"backupWindowStart,omitempty" tf:"backup_window_start,omitempty"`

	// (String) Feature compatibility version of MongoDB. If not provided version is taken. Can be either 6.0, 5.0, 4.4 and 4.2.
	// Feature compatibility version of MongoDB. If not provided version is taken. Can be either `6.0`, `5.0`, `4.4` and `4.2`.
	FeatureCompatibilityVersion *string `json:"featureCompatibilityVersion,omitempty" tf:"feature_compatibility_version,omitempty"`

	// (Block List, Max: 1) Configuration of the mongocfg service. (see below for nested schema)
	// Configuration of the mongocfg service.
	Mongocfg []MongocfgInitParameters `json:"mongocfg,omitempty" tf:"mongocfg,omitempty"`

	// (Block List, Max: 1) Configuration of the mongod service. (see below for nested schema)
	// Configuration of the mongod service.
	Mongod []MongodInitParameters `json:"mongod,omitempty" tf:"mongod,omitempty"`

	// (Block List, Max: 1) Configuration of the mongos service. (see below for nested schema)
	// Configuration of the mongos service.
	Mongos []MongosInitParameters `json:"mongos,omitempty" tf:"mongos,omitempty"`

	// (Block List, Max: 1) Performance diagnostics to the MongoDB cluster. (see below for nested schema)
	// Performance diagnostics to the MongoDB cluster.
	PerformanceDiagnostics []PerformanceDiagnosticsInitParameters `json:"performanceDiagnostics,omitempty" tf:"performance_diagnostics,omitempty"`

	// enterprise, 5.0, 5.0-enterprise, 6.0 and 6.0-enterprise.
	// Version of the MongoDB server software. Can be either `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`, `6.0` and `6.0-enterprise`.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ClusterConfigObservation struct {

	// (Block List, Max: 1) Access policy to the MongoDB cluster. (see below for nested schema)
	// Access policy to the MongoDB cluster.
	Access []ClusterConfigAccessObservation `json:"access,omitempty" tf:"access,omitempty"`

	// (Number) Retain period of automatically created backup in days.
	// Retain period of automatically created backup in days.
	BackupRetainPeriodDays *int64 `json:"backupRetainPeriodDays,omitempty" tf:"backup_retain_period_days,omitempty"`

	// (Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)
	// Time to start the daily backup, in the UTC timezone.
	BackupWindowStart []ClusterConfigBackupWindowStartObservation `json:"backupWindowStart,omitempty" tf:"backup_window_start,omitempty"`

	// (String) Feature compatibility version of MongoDB. If not provided version is taken. Can be either 6.0, 5.0, 4.4 and 4.2.
	// Feature compatibility version of MongoDB. If not provided version is taken. Can be either `6.0`, `5.0`, `4.4` and `4.2`.
	FeatureCompatibilityVersion *string `json:"featureCompatibilityVersion,omitempty" tf:"feature_compatibility_version,omitempty"`

	// (Block List, Max: 1) Configuration of the mongocfg service. (see below for nested schema)
	// Configuration of the mongocfg service.
	Mongocfg []MongocfgObservation `json:"mongocfg,omitempty" tf:"mongocfg,omitempty"`

	// (Block List, Max: 1) Configuration of the mongod service. (see below for nested schema)
	// Configuration of the mongod service.
	Mongod []MongodObservation `json:"mongod,omitempty" tf:"mongod,omitempty"`

	// (Block List, Max: 1) Configuration of the mongos service. (see below for nested schema)
	// Configuration of the mongos service.
	Mongos []MongosObservation `json:"mongos,omitempty" tf:"mongos,omitempty"`

	// (Block List, Max: 1) Performance diagnostics to the MongoDB cluster. (see below for nested schema)
	// Performance diagnostics to the MongoDB cluster.
	PerformanceDiagnostics []PerformanceDiagnosticsObservation `json:"performanceDiagnostics,omitempty" tf:"performance_diagnostics,omitempty"`

	// enterprise, 5.0, 5.0-enterprise, 6.0 and 6.0-enterprise.
	// Version of the MongoDB server software. Can be either `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`, `6.0` and `6.0-enterprise`.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ClusterConfigParameters struct {

	// (Block List, Max: 1) Access policy to the MongoDB cluster. (see below for nested schema)
	// Access policy to the MongoDB cluster.
	// +kubebuilder:validation:Optional
	Access []ClusterConfigAccessParameters `json:"access,omitempty" tf:"access,omitempty"`

	// (Number) Retain period of automatically created backup in days.
	// Retain period of automatically created backup in days.
	// +kubebuilder:validation:Optional
	BackupRetainPeriodDays *int64 `json:"backupRetainPeriodDays,omitempty" tf:"backup_retain_period_days,omitempty"`

	// (Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)
	// Time to start the daily backup, in the UTC timezone.
	// +kubebuilder:validation:Optional
	BackupWindowStart []ClusterConfigBackupWindowStartParameters `json:"backupWindowStart,omitempty" tf:"backup_window_start,omitempty"`

	// (String) Feature compatibility version of MongoDB. If not provided version is taken. Can be either 6.0, 5.0, 4.4 and 4.2.
	// Feature compatibility version of MongoDB. If not provided version is taken. Can be either `6.0`, `5.0`, `4.4` and `4.2`.
	// +kubebuilder:validation:Optional
	FeatureCompatibilityVersion *string `json:"featureCompatibilityVersion,omitempty" tf:"feature_compatibility_version,omitempty"`

	// (Block List, Max: 1) Configuration of the mongocfg service. (see below for nested schema)
	// Configuration of the mongocfg service.
	// +kubebuilder:validation:Optional
	Mongocfg []MongocfgParameters `json:"mongocfg,omitempty" tf:"mongocfg,omitempty"`

	// (Block List, Max: 1) Configuration of the mongod service. (see below for nested schema)
	// Configuration of the mongod service.
	// +kubebuilder:validation:Optional
	Mongod []MongodParameters `json:"mongod,omitempty" tf:"mongod,omitempty"`

	// (Block List, Max: 1) Configuration of the mongos service. (see below for nested schema)
	// Configuration of the mongos service.
	// +kubebuilder:validation:Optional
	Mongos []MongosParameters `json:"mongos,omitempty" tf:"mongos,omitempty"`

	// (Block List, Max: 1) Performance diagnostics to the MongoDB cluster. (see below for nested schema)
	// Performance diagnostics to the MongoDB cluster.
	// +kubebuilder:validation:Optional
	PerformanceDiagnostics []PerformanceDiagnosticsParameters `json:"performanceDiagnostics,omitempty" tf:"performance_diagnostics,omitempty"`

	// enterprise, 5.0, 5.0-enterprise, 6.0 and 6.0-enterprise.
	// Version of the MongoDB server software. Can be either `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`, `6.0` and `6.0-enterprise`.
	// +kubebuilder:validation:Optional
	Version *string `json:"version" tf:"version,omitempty"`
}

type DiskSizeAutoscalingMongocfgInitParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongocfgObservation struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongocfgParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	// +kubebuilder:validation:Optional
	DiskSizeLimit *int64 `json:"diskSizeLimit" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongodInitParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongodObservation struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongodParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	// +kubebuilder:validation:Optional
	DiskSizeLimit *int64 `json:"diskSizeLimit" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongoinfraInitParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongoinfraObservation struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongoinfraParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	// +kubebuilder:validation:Optional
	DiskSizeLimit *int64 `json:"diskSizeLimit" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongosInitParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongosObservation struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	DiskSizeLimit *int64 `json:"diskSizeLimit,omitempty" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type DiskSizeAutoscalingMongosParameters struct {

	// (Number) Limit of disk size after autoscaling (GiB).
	// Limit of disk size after autoscaling (GiB).
	// +kubebuilder:validation:Optional
	DiskSizeLimit *int64 `json:"diskSizeLimit" tf:"disk_size_limit,omitempty"`

	// (Number) Immediate autoscaling disk usage (percent).
	// Immediate autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	EmergencyUsageThreshold *int64 `json:"emergencyUsageThreshold,omitempty" tf:"emergency_usage_threshold,omitempty"`

	// (Number) Maintenance window autoscaling disk usage (percent).
	// Maintenance window autoscaling disk usage (percent).
	// +kubebuilder:validation:Optional
	PlannedUsageThreshold *int64 `json:"plannedUsageThreshold,omitempty" tf:"planned_usage_threshold,omitempty"`
}

type HostParametersInitParameters struct {

	// (Boolean) Should this host be hidden in replicaset. Can be either true of false. For more information see the official documentation.
	// Should this host be hidden in replicaset. Can be either `true` of `false`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.hidden).
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// (Number) A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see the official documentation.
	// A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.priority).
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Number) The number of seconds behind the primary that this replica set member should lag. For more information see the official documentation.
	// The number of seconds `behind` the primary that this replica set member should `lag`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.secondaryDelaySecs).
	SecondaryDelaySecs *int64 `json:"secondaryDelaySecs,omitempty" tf:"secondary_delay_secs,omitempty"`

	// (Map of String) A set of key/value pairs to assign for the replica set member. For more information see the official documentation.
	// A set of key/value pairs to assign for the replica set member. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.tags).
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type HostParametersObservation struct {

	// (Boolean) Should this host be hidden in replicaset. Can be either true of false. For more information see the official documentation.
	// Should this host be hidden in replicaset. Can be either `true` of `false`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.hidden).
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// (Number) A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see the official documentation.
	// A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.priority).
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Number) The number of seconds behind the primary that this replica set member should lag. For more information see the official documentation.
	// The number of seconds `behind` the primary that this replica set member should `lag`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.secondaryDelaySecs).
	SecondaryDelaySecs *int64 `json:"secondaryDelaySecs,omitempty" tf:"secondary_delay_secs,omitempty"`

	// (Map of String) A set of key/value pairs to assign for the replica set member. For more information see the official documentation.
	// A set of key/value pairs to assign for the replica set member. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.tags).
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type HostParametersParameters struct {

	// (Boolean) Should this host be hidden in replicaset. Can be either true of false. For more information see the official documentation.
	// Should this host be hidden in replicaset. Can be either `true` of `false`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.hidden).
	// +kubebuilder:validation:Optional
	Hidden *bool `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// (Number) A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see the official documentation.
	// A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.priority).
	// +kubebuilder:validation:Optional
	Priority *float64 `json:"priority,omitempty" tf:"priority,omitempty"`

	// (Number) The number of seconds behind the primary that this replica set member should lag. For more information see the official documentation.
	// The number of seconds `behind` the primary that this replica set member should `lag`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.secondaryDelaySecs).
	// +kubebuilder:validation:Optional
	SecondaryDelaySecs *int64 `json:"secondaryDelaySecs,omitempty" tf:"secondary_delay_secs,omitempty"`

	// (Map of String) A set of key/value pairs to assign for the replica set member. For more information see the official documentation.
	// A set of key/value pairs to assign for the replica set member. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.tags).
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type JournalInitParameters struct {

	// (Number) The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the storage.journal.commitIntervalMs description in the official documentation.
	// The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the [storage.journal.commitIntervalMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.journal.commitIntervalMs) description in the official documentation.
	CommitInterval *int64 `json:"commitInterval,omitempty" tf:"commit_interval,omitempty"`
}

type JournalObservation struct {

	// (Number) The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the storage.journal.commitIntervalMs description in the official documentation.
	// The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the [storage.journal.commitIntervalMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.journal.commitIntervalMs) description in the official documentation.
	CommitInterval *int64 `json:"commitInterval,omitempty" tf:"commit_interval,omitempty"`
}

type JournalParameters struct {

	// (Number) The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the storage.journal.commitIntervalMs description in the official documentation.
	// The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the [storage.journal.commitIntervalMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.journal.commitIntervalMs) description in the official documentation.
	// +kubebuilder:validation:Optional
	CommitInterval *int64 `json:"commitInterval,omitempty" tf:"commit_interval,omitempty"`
}

type KmipInitParameters struct {

	// (String) String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see security.kmip.clientCertificateFile description in the official documentation.
	// String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see [security.kmip.clientCertificateFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.clientCertificateFile) description in the official documentation.
	ClientCertificate *string `json:"clientCertificate,omitempty" tf:"client_certificate,omitempty"`

	// (String) Unique KMIP identifier for an existing key within the KMIP server. For more information see security.kmip.keyIdentifier description in the official documentation.
	// Unique KMIP identifier for an existing key within the KMIP server. For more information see [security.kmip.keyIdentifier](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.keyIdentifier) description in the official documentation.
	KeyIdentifier *string `json:"keyIdentifier,omitempty" tf:"key_identifier,omitempty"`

	// (Number) Port number to use to communicate with the KMIP server. Default: 5696 For more information see security.kmip.port description in the official documentation.
	// Port number to use to communicate with the KMIP server. Default: 5696 For more information see [security.kmip.port](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.port) description in the official documentation.
	Port *int64 `json:"port,omitempty" tf:"port,omitempty"`

	// (String) Path to CA File. Used for validating secure client connection to KMIP server. For more information see security.kmip.serverCAFile description in the official documentation.
	// Path to CA File. Used for validating secure client connection to KMIP server. For more information see [security.kmip.serverCAFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverCAFile) description in the official documentation.
	ServerCA *string `json:"serverCa,omitempty" tf:"server_ca,omitempty"`

	// (String) Hostname or IP address of the KMIP server to connect to. For more information see security.kmip.serverName description in the official documentation.
	// Hostname or IP address of the KMIP server to connect to. For more information see [security.kmip.serverName](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverName) description in the official documentation.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type KmipObservation struct {

	// (String) String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see security.kmip.clientCertificateFile description in the official documentation.
	// String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see [security.kmip.clientCertificateFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.clientCertificateFile) description in the official documentation.
	ClientCertificate *string `json:"clientCertificate,omitempty" tf:"client_certificate,omitempty"`

	// (String) Unique KMIP identifier for an existing key within the KMIP server. For more information see security.kmip.keyIdentifier description in the official documentation.
	// Unique KMIP identifier for an existing key within the KMIP server. For more information see [security.kmip.keyIdentifier](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.keyIdentifier) description in the official documentation.
	KeyIdentifier *string `json:"keyIdentifier,omitempty" tf:"key_identifier,omitempty"`

	// (Number) Port number to use to communicate with the KMIP server. Default: 5696 For more information see security.kmip.port description in the official documentation.
	// Port number to use to communicate with the KMIP server. Default: 5696 For more information see [security.kmip.port](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.port) description in the official documentation.
	Port *int64 `json:"port,omitempty" tf:"port,omitempty"`

	// (String) Path to CA File. Used for validating secure client connection to KMIP server. For more information see security.kmip.serverCAFile description in the official documentation.
	// Path to CA File. Used for validating secure client connection to KMIP server. For more information see [security.kmip.serverCAFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverCAFile) description in the official documentation.
	ServerCA *string `json:"serverCa,omitempty" tf:"server_ca,omitempty"`

	// (String) Hostname or IP address of the KMIP server to connect to. For more information see security.kmip.serverName description in the official documentation.
	// Hostname or IP address of the KMIP server to connect to. For more information see [security.kmip.serverName](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverName) description in the official documentation.
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type KmipParameters struct {

	// (String) String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see security.kmip.clientCertificateFile description in the official documentation.
	// String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see [security.kmip.clientCertificateFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.clientCertificateFile) description in the official documentation.
	// +kubebuilder:validation:Optional
	ClientCertificate *string `json:"clientCertificate,omitempty" tf:"client_certificate,omitempty"`

	// (String) Unique KMIP identifier for an existing key within the KMIP server. For more information see security.kmip.keyIdentifier description in the official documentation.
	// Unique KMIP identifier for an existing key within the KMIP server. For more information see [security.kmip.keyIdentifier](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.keyIdentifier) description in the official documentation.
	// +kubebuilder:validation:Optional
	KeyIdentifier *string `json:"keyIdentifier,omitempty" tf:"key_identifier,omitempty"`

	// (Number) Port number to use to communicate with the KMIP server. Default: 5696 For more information see security.kmip.port description in the official documentation.
	// Port number to use to communicate with the KMIP server. Default: 5696 For more information see [security.kmip.port](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.port) description in the official documentation.
	// +kubebuilder:validation:Optional
	Port *int64 `json:"port,omitempty" tf:"port,omitempty"`

	// (String) Path to CA File. Used for validating secure client connection to KMIP server. For more information see security.kmip.serverCAFile description in the official documentation.
	// Path to CA File. Used for validating secure client connection to KMIP server. For more information see [security.kmip.serverCAFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverCAFile) description in the official documentation.
	// +kubebuilder:validation:Optional
	ServerCA *string `json:"serverCa,omitempty" tf:"server_ca,omitempty"`

	// (String) Hostname or IP address of the KMIP server to connect to. For more information see security.kmip.serverName description in the official documentation.
	// Hostname or IP address of the KMIP server to connect to. For more information see [security.kmip.serverName](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverName) description in the official documentation.
	// +kubebuilder:validation:Optional
	ServerName *string `json:"serverName,omitempty" tf:"server_name,omitempty"`
}

type MongocfgInitParameters struct {

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	Net []NetInitParameters `json:"net,omitempty" tf:"net,omitempty"`

	// (Block List, Max: 1) A set of profiling settings (see the operationProfiling option). (see below for nested schema)
	// A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
	OperationProfiling []OperationProfilingInitParameters `json:"operationProfiling,omitempty" tf:"operation_profiling,omitempty"`

	// (Block List, Max: 1) A set of storage settings (see the storage option). (see below for nested schema)
	// A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
	Storage []StorageInitParameters `json:"storage,omitempty" tf:"storage,omitempty"`
}

type MongocfgObservation struct {

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	Net []NetObservation `json:"net,omitempty" tf:"net,omitempty"`

	// (Block List, Max: 1) A set of profiling settings (see the operationProfiling option). (see below for nested schema)
	// A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
	OperationProfiling []OperationProfilingObservation `json:"operationProfiling,omitempty" tf:"operation_profiling,omitempty"`

	// (Block List, Max: 1) A set of storage settings (see the storage option). (see below for nested schema)
	// A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
	Storage []StorageObservation `json:"storage,omitempty" tf:"storage,omitempty"`
}

type MongocfgParameters struct {

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	// +kubebuilder:validation:Optional
	Net []NetParameters `json:"net,omitempty" tf:"net,omitempty"`

	// (Block List, Max: 1) A set of profiling settings (see the operationProfiling option). (see below for nested schema)
	// A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
	// +kubebuilder:validation:Optional
	OperationProfiling []OperationProfilingParameters `json:"operationProfiling,omitempty" tf:"operation_profiling,omitempty"`

	// (Block List, Max: 1) A set of storage settings (see the storage option). (see below for nested schema)
	// A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
	// +kubebuilder:validation:Optional
	Storage []StorageParameters `json:"storage,omitempty" tf:"storage,omitempty"`
}

type MongodInitParameters struct {

	// (Block List, Max: 1) A set of audit log settings (see the auditLog option). Available only in enterprise edition. (see below for nested schema)
	// A set of audit log settings (see the [auditLog](https://www.mongodb.com/docs/manual/reference/configuration-options/#auditlog-options) option). Available only in enterprise edition.
	AuditLog []AuditLogInitParameters `json:"auditLog,omitempty" tf:"audit_log,omitempty"`

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	Net []MongodNetInitParameters `json:"net,omitempty" tf:"net,omitempty"`

	// (Block List, Max: 1) A set of profiling settings (see the operationProfiling option). (see below for nested schema)
	// A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
	OperationProfiling []MongodOperationProfilingInitParameters `json:"operationProfiling,omitempty" tf:"operation_profiling,omitempty"`

	// (Block List, Max: 1) A set of MongoDB Security settings (see the security option). Available only in enterprise edition. (see below for nested schema)
	// A set of MongoDB Security settings (see the [security](https://www.mongodb.com/docs/manual/reference/configuration-options/#security-options) option). Available only in enterprise edition.
	Security []SecurityInitParameters `json:"security,omitempty" tf:"security,omitempty"`

	// (Block List, Max: 1) A set of MongoDB Server Parameters (see the setParameter option). (see below for nested schema)
	// A set of MongoDB Server Parameters (see the [setParameter](https://www.mongodb.com/docs/manual/reference/configuration-options/#setparameter-option) option).
	SetParameter []SetParameterInitParameters `json:"setParameter,omitempty" tf:"set_parameter,omitempty"`

	// (Block List, Max: 1) A set of storage settings (see the storage option). (see below for nested schema)
	// A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
	Storage []MongodStorageInitParameters `json:"storage,omitempty" tf:"storage,omitempty"`
}

type MongodNetInitParameters struct {

	// (List of String) Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make disabled the only value. For more information, see the net.Compression.Compressors description in the official documentation.
	// Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.
	Compressors []*string `json:"compressors,omitempty" tf:"compressors,omitempty"`

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type MongodNetObservation struct {

	// (List of String) Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make disabled the only value. For more information, see the net.Compression.Compressors description in the official documentation.
	// Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.
	Compressors []*string `json:"compressors,omitempty" tf:"compressors,omitempty"`

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type MongodNetParameters struct {

	// (List of String) Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make disabled the only value. For more information, see the net.Compression.Compressors description in the official documentation.
	// Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.
	// +kubebuilder:validation:Optional
	Compressors []*string `json:"compressors,omitempty" tf:"compressors,omitempty"`

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	// +kubebuilder:validation:Optional
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type MongodObservation struct {

	// (Block List, Max: 1) A set of audit log settings (see the auditLog option). Available only in enterprise edition. (see below for nested schema)
	// A set of audit log settings (see the [auditLog](https://www.mongodb.com/docs/manual/reference/configuration-options/#auditlog-options) option). Available only in enterprise edition.
	AuditLog []AuditLogObservation `json:"auditLog,omitempty" tf:"audit_log,omitempty"`

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	Net []MongodNetObservation `json:"net,omitempty" tf:"net,omitempty"`

	// (Block List, Max: 1) A set of profiling settings (see the operationProfiling option). (see below for nested schema)
	// A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
	OperationProfiling []MongodOperationProfilingObservation `json:"operationProfiling,omitempty" tf:"operation_profiling,omitempty"`

	// (Block List, Max: 1) A set of MongoDB Security settings (see the security option). Available only in enterprise edition. (see below for nested schema)
	// A set of MongoDB Security settings (see the [security](https://www.mongodb.com/docs/manual/reference/configuration-options/#security-options) option). Available only in enterprise edition.
	Security []SecurityObservation `json:"security,omitempty" tf:"security,omitempty"`

	// (Block List, Max: 1) A set of MongoDB Server Parameters (see the setParameter option). (see below for nested schema)
	// A set of MongoDB Server Parameters (see the [setParameter](https://www.mongodb.com/docs/manual/reference/configuration-options/#setparameter-option) option).
	SetParameter []SetParameterObservation `json:"setParameter,omitempty" tf:"set_parameter,omitempty"`

	// (Block List, Max: 1) A set of storage settings (see the storage option). (see below for nested schema)
	// A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
	Storage []MongodStorageObservation `json:"storage,omitempty" tf:"storage,omitempty"`
}

type MongodOperationProfilingInitParameters struct {

	// (String) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the operationProfiling.mode description in the official documentation.
	// Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Number) The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the operationProfiling.slowOpSampleRate description in the official documentation.
	// The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the [operationProfiling.slowOpSampleRate](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpSampleRate) description in the official documentation.
	SlowOpSampleRate *float64 `json:"slowOpSampleRate,omitempty" tf:"slow_op_sample_rate,omitempty"`

	// (Number) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the operationProfiling.slowOpThresholdMs description in the official documentation.
	// The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.
	SlowOpThreshold *int64 `json:"slowOpThreshold,omitempty" tf:"slow_op_threshold,omitempty"`
}

type MongodOperationProfilingObservation struct {

	// (String) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the operationProfiling.mode description in the official documentation.
	// Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Number) The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the operationProfiling.slowOpSampleRate description in the official documentation.
	// The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the [operationProfiling.slowOpSampleRate](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpSampleRate) description in the official documentation.
	SlowOpSampleRate *float64 `json:"slowOpSampleRate,omitempty" tf:"slow_op_sample_rate,omitempty"`

	// (Number) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the operationProfiling.slowOpThresholdMs description in the official documentation.
	// The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.
	SlowOpThreshold *int64 `json:"slowOpThreshold,omitempty" tf:"slow_op_threshold,omitempty"`
}

type MongodOperationProfilingParameters struct {

	// (String) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the operationProfiling.mode description in the official documentation.
	// Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Number) The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the operationProfiling.slowOpSampleRate description in the official documentation.
	// The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the [operationProfiling.slowOpSampleRate](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpSampleRate) description in the official documentation.
	// +kubebuilder:validation:Optional
	SlowOpSampleRate *float64 `json:"slowOpSampleRate,omitempty" tf:"slow_op_sample_rate,omitempty"`

	// (Number) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the operationProfiling.slowOpThresholdMs description in the official documentation.
	// The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.
	// +kubebuilder:validation:Optional
	SlowOpThreshold *int64 `json:"slowOpThreshold,omitempty" tf:"slow_op_threshold,omitempty"`
}

type MongodParameters struct {

	// (Block List, Max: 1) A set of audit log settings (see the auditLog option). Available only in enterprise edition. (see below for nested schema)
	// A set of audit log settings (see the [auditLog](https://www.mongodb.com/docs/manual/reference/configuration-options/#auditlog-options) option). Available only in enterprise edition.
	// +kubebuilder:validation:Optional
	AuditLog []AuditLogParameters `json:"auditLog,omitempty" tf:"audit_log,omitempty"`

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	// +kubebuilder:validation:Optional
	Net []MongodNetParameters `json:"net,omitempty" tf:"net,omitempty"`

	// (Block List, Max: 1) A set of profiling settings (see the operationProfiling option). (see below for nested schema)
	// A set of profiling settings (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
	// +kubebuilder:validation:Optional
	OperationProfiling []MongodOperationProfilingParameters `json:"operationProfiling,omitempty" tf:"operation_profiling,omitempty"`

	// (Block List, Max: 1) A set of MongoDB Security settings (see the security option). Available only in enterprise edition. (see below for nested schema)
	// A set of MongoDB Security settings (see the [security](https://www.mongodb.com/docs/manual/reference/configuration-options/#security-options) option). Available only in enterprise edition.
	// +kubebuilder:validation:Optional
	Security []SecurityParameters `json:"security,omitempty" tf:"security,omitempty"`

	// (Block List, Max: 1) A set of MongoDB Server Parameters (see the setParameter option). (see below for nested schema)
	// A set of MongoDB Server Parameters (see the [setParameter](https://www.mongodb.com/docs/manual/reference/configuration-options/#setparameter-option) option).
	// +kubebuilder:validation:Optional
	SetParameter []SetParameterParameters `json:"setParameter,omitempty" tf:"set_parameter,omitempty"`

	// (Block List, Max: 1) A set of storage settings (see the storage option). (see below for nested schema)
	// A set of storage settings (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
	// +kubebuilder:validation:Optional
	Storage []MongodStorageParameters `json:"storage,omitempty" tf:"storage,omitempty"`
}

type MongodStorageInitParameters struct {

	// (Block List, Max: 1) The durability journal to ensure data files remain valid and recoverable. (see below for nested schema)
	// The durability journal to ensure data files remain valid and recoverable.
	Journal []JournalInitParameters `json:"journal,omitempty" tf:"journal,omitempty"`

	// (Block List, Max: 1) The WiredTiger engine settings. (see the storage.wiredTiger option). (see below for nested schema)
	// The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option). These settings available only on `mongod` hosts.
	WiredTiger []StorageWiredTigerInitParameters `json:"wiredTiger,omitempty" tf:"wired_tiger,omitempty"`
}

type MongodStorageObservation struct {

	// (Block List, Max: 1) The durability journal to ensure data files remain valid and recoverable. (see below for nested schema)
	// The durability journal to ensure data files remain valid and recoverable.
	Journal []JournalObservation `json:"journal,omitempty" tf:"journal,omitempty"`

	// (Block List, Max: 1) The WiredTiger engine settings. (see the storage.wiredTiger option). (see below for nested schema)
	// The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option). These settings available only on `mongod` hosts.
	WiredTiger []StorageWiredTigerObservation `json:"wiredTiger,omitempty" tf:"wired_tiger,omitempty"`
}

type MongodStorageParameters struct {

	// (Block List, Max: 1) The durability journal to ensure data files remain valid and recoverable. (see below for nested schema)
	// The durability journal to ensure data files remain valid and recoverable.
	// +kubebuilder:validation:Optional
	Journal []JournalParameters `json:"journal,omitempty" tf:"journal,omitempty"`

	// (Block List, Max: 1) The WiredTiger engine settings. (see the storage.wiredTiger option). (see below for nested schema)
	// The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option). These settings available only on `mongod` hosts.
	// +kubebuilder:validation:Optional
	WiredTiger []StorageWiredTigerParameters `json:"wiredTiger,omitempty" tf:"wired_tiger,omitempty"`
}

type MongodbClusterDatabaseInitParameters struct {

	// (String) The resource name.
	// The name of the database.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type MongodbClusterDatabaseObservation struct {

	// (String) The resource name.
	// The name of the database.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type MongodbClusterDatabaseParameters struct {

	// (String) The resource name.
	// The name of the database.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type MongodbClusterHostInitParameters struct {

	// (Boolean) Should this host have assigned public IP assigned. Can be either true or false.
	// Should this host have assigned public IP assigned. Can be either `true` or `false`.
	AssignPublicIP *bool `json:"assignPublicIp,omitempty" tf:"assign_public_ip,omitempty"`

	// (Block List, Max: 1) The parameters of mongod host in replicaset. (see below for nested schema)
	// The parameters of mongod host in replicaset.
	HostParameters []HostParametersInitParameters `json:"hostParameters,omitempty" tf:"host_parameters,omitempty"`

	// (String) The role of the cluster (either PRIMARY or SECONDARY).
	// The role of the cluster (either PRIMARY or SECONDARY).
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// (String) The name of the shard to which the host belongs. Only for sharded cluster.
	// The name of the shard to which the host belongs. Only for sharded cluster.
	ShardName *string `json:"shardName,omitempty" tf:"shard_name,omitempty"`

	// (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Subnet
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// (String) Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
	// Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to `mongod`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type MongodbClusterHostObservation struct {

	// (Boolean) Should this host have assigned public IP assigned. Can be either true or false.
	// Should this host have assigned public IP assigned. Can be either `true` or `false`.
	AssignPublicIP *bool `json:"assignPublicIp,omitempty" tf:"assign_public_ip,omitempty"`

	// (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
	// The health of the host.
	Health *string `json:"health,omitempty" tf:"health,omitempty"`

	// (Block List, Max: 1) The parameters of mongod host in replicaset. (see below for nested schema)
	// The parameters of mongod host in replicaset.
	HostParameters []HostParametersObservation `json:"hostParameters,omitempty" tf:"host_parameters,omitempty"`

	// (String) The resource name.
	// The fully qualified domain name of the host. Computed on server side.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The role of the cluster (either PRIMARY or SECONDARY).
	// The role of the cluster (either PRIMARY or SECONDARY).
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// (String) The name of the shard to which the host belongs. Only for sharded cluster.
	// The name of the shard to which the host belongs. Only for sharded cluster.
	ShardName *string `json:"shardName,omitempty" tf:"shard_name,omitempty"`

	// (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// (String) Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
	// Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to `mongod`.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type MongodbClusterHostParameters struct {

	// (Boolean) Should this host have assigned public IP assigned. Can be either true or false.
	// Should this host have assigned public IP assigned. Can be either `true` or `false`.
	// +kubebuilder:validation:Optional
	AssignPublicIP *bool `json:"assignPublicIp,omitempty" tf:"assign_public_ip,omitempty"`

	// (Block List, Max: 1) The parameters of mongod host in replicaset. (see below for nested schema)
	// The parameters of mongod host in replicaset.
	// +kubebuilder:validation:Optional
	HostParameters []HostParametersParameters `json:"hostParameters,omitempty" tf:"host_parameters,omitempty"`

	// (String) The role of the cluster (either PRIMARY or SECONDARY).
	// The role of the cluster (either PRIMARY or SECONDARY).
	// +kubebuilder:validation:Optional
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// (String) The name of the shard to which the host belongs. Only for sharded cluster.
	// The name of the shard to which the host belongs. Only for sharded cluster.
	// +kubebuilder:validation:Optional
	ShardName *string `json:"shardName,omitempty" tf:"shard_name,omitempty"`

	// (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// (String) Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
	// Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to `mongod`.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId" tf:"zone_id,omitempty"`
}

type MongodbClusterInitParameters struct {

	// (Block List, Min: 1, Max: 1) Configuration of the MongoDB subcluster. (see below for nested schema)
	// Configuration of the MongoDB subcluster.
	ClusterConfig []ClusterConfigInitParameters `json:"clusterConfig,omitempty" tf:"cluster_config,omitempty"`

	// (String) The ID of the cluster.
	// The ID of the cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// (Block Set, Deprecated) A database of the MongoDB cluster. (see below for nested schema)
	// A database of the MongoDB cluster.
	Database []MongodbClusterDatabaseInitParameters `json:"database,omitempty" tf:"database,omitempty"`

	// (Boolean) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongocfg. (see below for nested schema)
	// Disk size autoscaling settings for mongocfg.
	DiskSizeAutoscalingMongocfg []DiskSizeAutoscalingMongocfgInitParameters `json:"diskSizeAutoscalingMongocfg,omitempty" tf:"disk_size_autoscaling_mongocfg,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongod. (see below for nested schema)
	// Disk size autoscaling settings for mongod.
	DiskSizeAutoscalingMongod []DiskSizeAutoscalingMongodInitParameters `json:"diskSizeAutoscalingMongod,omitempty" tf:"disk_size_autoscaling_mongod,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongoinfra. (see below for nested schema)
	// Disk size autoscaling settings for mongoinfra.
	DiskSizeAutoscalingMongoinfra []DiskSizeAutoscalingMongoinfraInitParameters `json:"diskSizeAutoscalingMongoinfra,omitempty" tf:"disk_size_autoscaling_mongoinfra,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongos. (see below for nested schema)
	// Disk size autoscaling settings for mongos.
	DiskSizeAutoscalingMongos []DiskSizeAutoscalingMongosInitParameters `json:"diskSizeAutoscalingMongos,omitempty" tf:"disk_size_autoscaling_mongos,omitempty"`

	// (String) Deployment environment of the MongoDB cluster. Can be either PRESTABLE or PRODUCTION.
	// Deployment environment of the MongoDB cluster. Can be either `PRESTABLE` or `PRODUCTION`.
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Block List, Min: 1) A host of the MongoDB cluster. (see below for nested schema)
	// A host of the MongoDB cluster.
	Host []MongodbClusterHostInitParameters `json:"host,omitempty" tf:"host,omitempty"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (Block List, Max: 1) Maintenance window settings of the MongoDB cluster. (see below for nested schema)
	// Maintenance window settings of the MongoDB cluster.
	MaintenanceWindow []MongodbClusterMaintenanceWindowInitParameters `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The VPC Network ID of subnets which resource attached to.
	// The `VPC Network ID` of subnets which resource attached to.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Network
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// (Block List, Max: 1, Deprecated) (DEPRECATED, use resources_* instead) Resources allocated to hosts of the MongoDB cluster. (see below for nested schema)
	// (**DEPRECATED**, use `resources_*` instead) Resources allocated to hosts of the MongoDB cluster.
	Resources []MongodbClusterResourcesInitParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongocfg hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongocfg` hosts of the MongoDB cluster.
	ResourcesMongocfg []ResourcesMongocfgInitParameters `json:"resourcesMongocfg,omitempty" tf:"resources_mongocfg,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongod hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongod` hosts of the MongoDB cluster.
	ResourcesMongod []ResourcesMongodInitParameters `json:"resourcesMongod,omitempty" tf:"resources_mongod,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongoinfra hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongoinfra` hosts of the MongoDB cluster.
	ResourcesMongoinfra []ResourcesMongoinfraInitParameters `json:"resourcesMongoinfra,omitempty" tf:"resources_mongoinfra,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongos hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongos` hosts of the MongoDB cluster.
	ResourcesMongos []ResourcesMongosInitParameters `json:"resourcesMongos,omitempty" tf:"resources_mongos,omitempty"`

	// (Block List, Max: 1) The cluster will be created from the specified backup. (see below for nested schema)
	// The cluster will be created from the specified backup.
	Restore []RestoreInitParameters `json:"restore,omitempty" tf:"restore,omitempty"`

	// (Set of String) The list of security groups applied to resource or their components.
	// The list of security groups applied to resource or their components.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.SecurityGroup
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// References to SecurityGroup in vpc to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsRefs []v1.Reference `json:"securityGroupIdsRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in vpc to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsSelector *v1.Selector `json:"securityGroupIdsSelector,omitempty" tf:"-"`

	// (Block Set, Deprecated) A user of the MongoDB cluster. (see below for nested schema)
	// A user of the MongoDB cluster.
	User []MongodbClusterUserInitParameters `json:"user,omitempty" tf:"user,omitempty"`
}

type MongodbClusterMaintenanceWindowInitParameters struct {

	// (String) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.
	// Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.
	Day *string `json:"day,omitempty" tf:"day,omitempty"`

	// 24) for maintenance window if window type is weekly.
	// Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
	Hour *int64 `json:"hour,omitempty" tf:"hour,omitempty"`

	// (String) Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
	// Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MongodbClusterMaintenanceWindowObservation struct {

	// (String) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.
	// Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.
	Day *string `json:"day,omitempty" tf:"day,omitempty"`

	// 24) for maintenance window if window type is weekly.
	// Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
	Hour *int64 `json:"hour,omitempty" tf:"hour,omitempty"`

	// (String) Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
	// Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MongodbClusterMaintenanceWindowParameters struct {

	// (String) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.
	// Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.
	// +kubebuilder:validation:Optional
	Day *string `json:"day,omitempty" tf:"day,omitempty"`

	// 24) for maintenance window if window type is weekly.
	// Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
	// +kubebuilder:validation:Optional
	Hour *int64 `json:"hour,omitempty" tf:"hour,omitempty"`

	// (String) Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
	// Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type MongodbClusterObservation struct {

	// (Block List, Min: 1, Max: 1) Configuration of the MongoDB subcluster. (see below for nested schema)
	// Configuration of the MongoDB subcluster.
	ClusterConfig []ClusterConfigObservation `json:"clusterConfig,omitempty" tf:"cluster_config,omitempty"`

	// (String) The ID of the cluster.
	// The ID of the cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// (String) The creation timestamp of the resource.
	// The creation timestamp of the resource.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (Block Set, Deprecated) A database of the MongoDB cluster. (see below for nested schema)
	// A database of the MongoDB cluster.
	Database []MongodbClusterDatabaseObservation `json:"database,omitempty" tf:"database,omitempty"`

	// (Boolean) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongocfg. (see below for nested schema)
	// Disk size autoscaling settings for mongocfg.
	DiskSizeAutoscalingMongocfg []DiskSizeAutoscalingMongocfgObservation `json:"diskSizeAutoscalingMongocfg,omitempty" tf:"disk_size_autoscaling_mongocfg,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongod. (see below for nested schema)
	// Disk size autoscaling settings for mongod.
	DiskSizeAutoscalingMongod []DiskSizeAutoscalingMongodObservation `json:"diskSizeAutoscalingMongod,omitempty" tf:"disk_size_autoscaling_mongod,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongoinfra. (see below for nested schema)
	// Disk size autoscaling settings for mongoinfra.
	DiskSizeAutoscalingMongoinfra []DiskSizeAutoscalingMongoinfraObservation `json:"diskSizeAutoscalingMongoinfra,omitempty" tf:"disk_size_autoscaling_mongoinfra,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongos. (see below for nested schema)
	// Disk size autoscaling settings for mongos.
	DiskSizeAutoscalingMongos []DiskSizeAutoscalingMongosObservation `json:"diskSizeAutoscalingMongos,omitempty" tf:"disk_size_autoscaling_mongos,omitempty"`

	// (String) Deployment environment of the MongoDB cluster. Can be either PRESTABLE or PRODUCTION.
	// Deployment environment of the MongoDB cluster. Can be either `PRESTABLE` or `PRODUCTION`.
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
	// Aggregated health of the cluster. Can be either `ALIVE`, `DEGRADED`, `DEAD` or `HEALTH_UNKNOWN`. For more information see `health` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-mongodb/api-ref/Cluster/).
	Health *string `json:"health,omitempty" tf:"health,omitempty"`

	// (Block List, Min: 1) A host of the MongoDB cluster. (see below for nested schema)
	// A host of the MongoDB cluster.
	Host []MongodbClusterHostObservation `json:"host,omitempty" tf:"host,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (Block List, Max: 1) Maintenance window settings of the MongoDB cluster. (see below for nested schema)
	// Maintenance window settings of the MongoDB cluster.
	MaintenanceWindow []MongodbClusterMaintenanceWindowObservation `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The VPC Network ID of subnets which resource attached to.
	// The `VPC Network ID` of subnets which resource attached to.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// (Block List, Max: 1, Deprecated) (DEPRECATED, use resources_* instead) Resources allocated to hosts of the MongoDB cluster. (see below for nested schema)
	// (**DEPRECATED**, use `resources_*` instead) Resources allocated to hosts of the MongoDB cluster.
	Resources []MongodbClusterResourcesObservation `json:"resources,omitempty" tf:"resources,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongocfg hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongocfg` hosts of the MongoDB cluster.
	ResourcesMongocfg []ResourcesMongocfgObservation `json:"resourcesMongocfg,omitempty" tf:"resources_mongocfg,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongod hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongod` hosts of the MongoDB cluster.
	ResourcesMongod []ResourcesMongodObservation `json:"resourcesMongod,omitempty" tf:"resources_mongod,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongoinfra hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongoinfra` hosts of the MongoDB cluster.
	ResourcesMongoinfra []ResourcesMongoinfraObservation `json:"resourcesMongoinfra,omitempty" tf:"resources_mongoinfra,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongos hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongos` hosts of the MongoDB cluster.
	ResourcesMongos []ResourcesMongosObservation `json:"resourcesMongos,omitempty" tf:"resources_mongos,omitempty"`

	// (Block List, Max: 1) The cluster will be created from the specified backup. (see below for nested schema)
	// The cluster will be created from the specified backup.
	Restore []RestoreObservation `json:"restore,omitempty" tf:"restore,omitempty"`

	// (Set of String) The list of security groups applied to resource or their components.
	// The list of security groups applied to resource or their components.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// (Boolean) MongoDB Cluster mode enabled/disabled.
	// MongoDB Cluster mode enabled/disabled.
	Sharded *bool `json:"sharded,omitempty" tf:"sharded,omitempty"`

	// (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
	// Status of the cluster. Can be either `CREATING`, `STARTING`, `RUNNING`, `UPDATING`, `STOPPING`, `STOPPED`, `ERROR` or `STATUS_UNKNOWN`. For more information see `status` field of JSON representation in [the official documentation](https://yandex.cloud/docs/managed-mongodb/api-ref/Cluster/).
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// (Block Set, Deprecated) A user of the MongoDB cluster. (see below for nested schema)
	// A user of the MongoDB cluster.
	User []MongodbClusterUserObservation `json:"user,omitempty" tf:"user,omitempty"`
}

type MongodbClusterParameters struct {

	// (Block List, Min: 1, Max: 1) Configuration of the MongoDB subcluster. (see below for nested schema)
	// Configuration of the MongoDB subcluster.
	// +kubebuilder:validation:Optional
	ClusterConfig []ClusterConfigParameters `json:"clusterConfig,omitempty" tf:"cluster_config,omitempty"`

	// (String) The ID of the cluster.
	// The ID of the cluster.
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// (Block Set, Deprecated) A database of the MongoDB cluster. (see below for nested schema)
	// A database of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	Database []MongodbClusterDatabaseParameters `json:"database,omitempty" tf:"database,omitempty"`

	// (Boolean) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	// +kubebuilder:validation:Optional
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (String) The resource description.
	// The resource description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongocfg. (see below for nested schema)
	// Disk size autoscaling settings for mongocfg.
	// +kubebuilder:validation:Optional
	DiskSizeAutoscalingMongocfg []DiskSizeAutoscalingMongocfgParameters `json:"diskSizeAutoscalingMongocfg,omitempty" tf:"disk_size_autoscaling_mongocfg,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongod. (see below for nested schema)
	// Disk size autoscaling settings for mongod.
	// +kubebuilder:validation:Optional
	DiskSizeAutoscalingMongod []DiskSizeAutoscalingMongodParameters `json:"diskSizeAutoscalingMongod,omitempty" tf:"disk_size_autoscaling_mongod,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongoinfra. (see below for nested schema)
	// Disk size autoscaling settings for mongoinfra.
	// +kubebuilder:validation:Optional
	DiskSizeAutoscalingMongoinfra []DiskSizeAutoscalingMongoinfraParameters `json:"diskSizeAutoscalingMongoinfra,omitempty" tf:"disk_size_autoscaling_mongoinfra,omitempty"`

	// (Block List, Max: 1) Disk size autoscaling settings for mongos. (see below for nested schema)
	// Disk size autoscaling settings for mongos.
	// +kubebuilder:validation:Optional
	DiskSizeAutoscalingMongos []DiskSizeAutoscalingMongosParameters `json:"diskSizeAutoscalingMongos,omitempty" tf:"disk_size_autoscaling_mongos,omitempty"`

	// (String) Deployment environment of the MongoDB cluster. Can be either PRESTABLE or PRODUCTION.
	// Deployment environment of the MongoDB cluster. Can be either `PRESTABLE` or `PRODUCTION`.
	// +kubebuilder:validation:Optional
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Block List, Min: 1) A host of the MongoDB cluster. (see below for nested schema)
	// A host of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	Host []MongodbClusterHostParameters `json:"host,omitempty" tf:"host,omitempty"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (Block List, Max: 1) Maintenance window settings of the MongoDB cluster. (see below for nested schema)
	// Maintenance window settings of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	MaintenanceWindow []MongodbClusterMaintenanceWindowParameters `json:"maintenanceWindow,omitempty" tf:"maintenance_window,omitempty"`

	// (String) The resource name.
	// The resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The VPC Network ID of subnets which resource attached to.
	// The `VPC Network ID` of subnets which resource attached to.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Network
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// (Block List, Max: 1, Deprecated) (DEPRECATED, use resources_* instead) Resources allocated to hosts of the MongoDB cluster. (see below for nested schema)
	// (**DEPRECATED**, use `resources_*` instead) Resources allocated to hosts of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	Resources []MongodbClusterResourcesParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongocfg hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongocfg` hosts of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	ResourcesMongocfg []ResourcesMongocfgParameters `json:"resourcesMongocfg,omitempty" tf:"resources_mongocfg,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongod hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongod` hosts of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	ResourcesMongod []ResourcesMongodParameters `json:"resourcesMongod,omitempty" tf:"resources_mongod,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongoinfra hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongoinfra` hosts of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	ResourcesMongoinfra []ResourcesMongoinfraParameters `json:"resourcesMongoinfra,omitempty" tf:"resources_mongoinfra,omitempty"`

	// (Block List, Max: 1) Resources allocated to mongos hosts of the MongoDB cluster. (see below for nested schema)
	// Resources allocated to `mongos` hosts of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	ResourcesMongos []ResourcesMongosParameters `json:"resourcesMongos,omitempty" tf:"resources_mongos,omitempty"`

	// (Block List, Max: 1) The cluster will be created from the specified backup. (see below for nested schema)
	// The cluster will be created from the specified backup.
	// +kubebuilder:validation:Optional
	Restore []RestoreParameters `json:"restore,omitempty" tf:"restore,omitempty"`

	// (Set of String) The list of security groups applied to resource or their components.
	// The list of security groups applied to resource or their components.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.SecurityGroup
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// References to SecurityGroup in vpc to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsRefs []v1.Reference `json:"securityGroupIdsRefs,omitempty" tf:"-"`

	// Selector for a list of SecurityGroup in vpc to populate securityGroupIds.
	// +kubebuilder:validation:Optional
	SecurityGroupIdsSelector *v1.Selector `json:"securityGroupIdsSelector,omitempty" tf:"-"`

	// (Block Set, Deprecated) A user of the MongoDB cluster. (see below for nested schema)
	// A user of the MongoDB cluster.
	// +kubebuilder:validation:Optional
	User []MongodbClusterUserParameters `json:"user,omitempty" tf:"user,omitempty"`
}

type MongodbClusterResourcesInitParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type MongodbClusterResourcesObservation struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type MongodbClusterResourcesParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	// +kubebuilder:validation:Optional
	DiskSize *int64 `json:"diskSize" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	// +kubebuilder:validation:Optional
	DiskTypeID *string `json:"diskTypeId" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	// +kubebuilder:validation:Optional
	ResourcePresetID *string `json:"resourcePresetId" tf:"resource_preset_id,omitempty"`
}

type MongodbClusterUserInitParameters struct {

	// (String) The resource name.
	// The name of the user.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The password of the user.
	// The password of the user.
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// (Block Set) Set of permissions granted to the user. (see below for nested schema)
	// Set of permissions granted to the user.
	Permission []MongodbClusterUserPermissionInitParameters `json:"permission,omitempty" tf:"permission,omitempty"`
}

type MongodbClusterUserObservation struct {

	// (String) The resource name.
	// The name of the user.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block Set) Set of permissions granted to the user. (see below for nested schema)
	// Set of permissions granted to the user.
	Permission []MongodbClusterUserPermissionObservation `json:"permission,omitempty" tf:"permission,omitempty"`
}

type MongodbClusterUserParameters struct {

	// (String) The resource name.
	// The name of the user.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String, Sensitive) The password of the user.
	// The password of the user.
	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// (Block Set) Set of permissions granted to the user. (see below for nested schema)
	// Set of permissions granted to the user.
	// +kubebuilder:validation:Optional
	Permission []MongodbClusterUserPermissionParameters `json:"permission,omitempty" tf:"permission,omitempty"`
}

type MongodbClusterUserPermissionInitParameters struct {

	// (String) The name of the database that the permission grants access to.
	// The name of the database that the permission grants access to.
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// (List of String) The roles of the user in this database. For more information see the official documentation.
	// The roles of the user in this database. For more information see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts/users-and-roles).
	Roles []*string `json:"roles,omitempty" tf:"roles,omitempty"`
}

type MongodbClusterUserPermissionObservation struct {

	// (String) The name of the database that the permission grants access to.
	// The name of the database that the permission grants access to.
	DatabaseName *string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// (List of String) The roles of the user in this database. For more information see the official documentation.
	// The roles of the user in this database. For more information see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts/users-and-roles).
	Roles []*string `json:"roles,omitempty" tf:"roles,omitempty"`
}

type MongodbClusterUserPermissionParameters struct {

	// (String) The name of the database that the permission grants access to.
	// The name of the database that the permission grants access to.
	// +kubebuilder:validation:Optional
	DatabaseName *string `json:"databaseName" tf:"database_name,omitempty"`

	// (List of String) The roles of the user in this database. For more information see the official documentation.
	// The roles of the user in this database. For more information see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts/users-and-roles).
	// +kubebuilder:validation:Optional
	Roles []*string `json:"roles,omitempty" tf:"roles,omitempty"`
}

type MongosInitParameters struct {

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	Net []MongosNetInitParameters `json:"net,omitempty" tf:"net,omitempty"`
}

type MongosNetInitParameters struct {

	// (List of String) Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make disabled the only value. For more information, see the net.Compression.Compressors description in the official documentation.
	// Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.
	Compressors []*string `json:"compressors,omitempty" tf:"compressors,omitempty"`

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type MongosNetObservation struct {

	// (List of String) Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make disabled the only value. For more information, see the net.Compression.Compressors description in the official documentation.
	// Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.
	Compressors []*string `json:"compressors,omitempty" tf:"compressors,omitempty"`

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type MongosNetParameters struct {

	// (List of String) Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make disabled the only value. For more information, see the net.Compression.Compressors description in the official documentation.
	// Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make `disabled` the only value. For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors) description in the official documentation.
	// +kubebuilder:validation:Optional
	Compressors []*string `json:"compressors,omitempty" tf:"compressors,omitempty"`

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	// +kubebuilder:validation:Optional
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type MongosObservation struct {

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	Net []MongosNetObservation `json:"net,omitempty" tf:"net,omitempty"`
}

type MongosParameters struct {

	// (Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)
	// A set of network settings (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
	// +kubebuilder:validation:Optional
	Net []MongosNetParameters `json:"net,omitempty" tf:"net,omitempty"`
}

type NetInitParameters struct {

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type NetObservation struct {

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type NetParameters struct {

	// (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
	// The maximum number of simultaneous connections that host will accept. For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections) description in the official documentation.
	// +kubebuilder:validation:Optional
	MaxIncomingConnections *int64 `json:"maxIncomingConnections,omitempty" tf:"max_incoming_connections,omitempty"`
}

type OperationProfilingInitParameters struct {

	// (String) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the operationProfiling.mode description in the official documentation.
	// Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Number) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the operationProfiling.slowOpThresholdMs description in the official documentation.
	// The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.
	SlowOpThreshold *int64 `json:"slowOpThreshold,omitempty" tf:"slow_op_threshold,omitempty"`
}

type OperationProfilingObservation struct {

	// (String) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the operationProfiling.mode description in the official documentation.
	// Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Number) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the operationProfiling.slowOpThresholdMs description in the official documentation.
	// The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.
	SlowOpThreshold *int64 `json:"slowOpThreshold,omitempty" tf:"slow_op_threshold,omitempty"`
}

type OperationProfilingParameters struct {

	// (String) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the operationProfiling.mode description in the official documentation.
	// Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode) description in the official documentation.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// (Number) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the operationProfiling.slowOpThresholdMs description in the official documentation.
	// The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs) description in the official documentation.
	// +kubebuilder:validation:Optional
	SlowOpThreshold *int64 `json:"slowOpThreshold,omitempty" tf:"slow_op_threshold,omitempty"`
}

type PerformanceDiagnosticsInitParameters struct {

	// (Boolean) Enable or disable performance diagnostics.
	// Enable or disable performance diagnostics.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type PerformanceDiagnosticsObservation struct {

	// (Boolean) Enable or disable performance diagnostics.
	// Enable or disable performance diagnostics.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type PerformanceDiagnosticsParameters struct {

	// (Boolean) Enable or disable performance diagnostics.
	// Enable or disable performance diagnostics.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`
}

type ResourcesMongocfgInitParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongocfgObservation struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongocfgParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	// +kubebuilder:validation:Optional
	DiskSize *int64 `json:"diskSize" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	// +kubebuilder:validation:Optional
	DiskTypeID *string `json:"diskTypeId" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	// +kubebuilder:validation:Optional
	ResourcePresetID *string `json:"resourcePresetId" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongodInitParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongodObservation struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongodParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	// +kubebuilder:validation:Optional
	DiskSize *int64 `json:"diskSize" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	// +kubebuilder:validation:Optional
	DiskTypeID *string `json:"diskTypeId" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	// +kubebuilder:validation:Optional
	ResourcePresetID *string `json:"resourcePresetId" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongoinfraInitParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongoinfraObservation struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongoinfraParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	// +kubebuilder:validation:Optional
	DiskSize *int64 `json:"diskSize" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	// +kubebuilder:validation:Optional
	DiskTypeID *string `json:"diskTypeId" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	// +kubebuilder:validation:Optional
	ResourcePresetID *string `json:"resourcePresetId" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongosInitParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongosObservation struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	DiskSize *int64 `json:"diskSize,omitempty" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	DiskTypeID *string `json:"diskTypeId,omitempty" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`
}

type ResourcesMongosParameters struct {

	// (Number) Volume of the storage available to a MongoDB host, in gigabytes.
	// Volume of the storage available to a MongoDB host, in gigabytes.
	// +kubebuilder:validation:Optional
	DiskSize *int64 `json:"diskSize" tf:"disk_size,omitempty"`

	// (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
	// Type of the storage of MongoDB hosts. For more information see [the official documentation](https://yandex.cloud/docs/managed-clickhouse/concepts/storage).
	// +kubebuilder:validation:Optional
	DiskTypeID *string `json:"diskTypeId" tf:"disk_type_id,omitempty"`

	// (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
	// The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see [the official documentation](https://yandex.cloud/docs/managed-mongodb/concepts).
	// +kubebuilder:validation:Optional
	ResourcePresetID *string `json:"resourcePresetId" tf:"resource_preset_id,omitempty"`
}

type RestoreInitParameters struct {

	// (String) Backup ID. The cluster will be created from the specified backup. How to get a list of PostgreSQL backups.
	// Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://yandex.cloud/docs/managed-mongodb/operations/cluster-backups).
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// 01-02T15:04:05 - UTC). When not set, current time is used.
	// Timestamp of the moment to which the MongoDB cluster should be restored. (Format: `2006-01-02T15:04:05` - UTC). When not set, current time is used.
	Time *string `json:"time,omitempty" tf:"time,omitempty"`
}

type RestoreObservation struct {

	// (String) Backup ID. The cluster will be created from the specified backup. How to get a list of PostgreSQL backups.
	// Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://yandex.cloud/docs/managed-mongodb/operations/cluster-backups).
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// 01-02T15:04:05 - UTC). When not set, current time is used.
	// Timestamp of the moment to which the MongoDB cluster should be restored. (Format: `2006-01-02T15:04:05` - UTC). When not set, current time is used.
	Time *string `json:"time,omitempty" tf:"time,omitempty"`
}

type RestoreParameters struct {

	// (String) Backup ID. The cluster will be created from the specified backup. How to get a list of PostgreSQL backups.
	// Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://yandex.cloud/docs/managed-mongodb/operations/cluster-backups).
	// +kubebuilder:validation:Optional
	BackupID *string `json:"backupId" tf:"backup_id,omitempty"`

	// 01-02T15:04:05 - UTC). When not set, current time is used.
	// Timestamp of the moment to which the MongoDB cluster should be restored. (Format: `2006-01-02T15:04:05` - UTC). When not set, current time is used.
	// +kubebuilder:validation:Optional
	Time *string `json:"time,omitempty" tf:"time,omitempty"`
}

type SecurityInitParameters struct {

	// (Boolean) Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see security.enableEncryption description in the official documentation. Available only in enterprise edition.
	// Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see [security.enableEncryption](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.enableEncryption) description in the official documentation. Available only in enterprise edition.
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// (Block List, Max: 1) Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see Encryption tutorial ). Requires enable_encryption to be true. The structure is documented below. Available only in enterprise edition. (see below for nested schema)
	// Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see [Encryption tutorial](https://www.mongodb.com/docs/rapid/tutorial/configure-encryption) ). Requires `enable_encryption` to be true. The structure is documented below. Available only in enterprise edition.
	Kmip []KmipInitParameters `json:"kmip,omitempty" tf:"kmip,omitempty"`
}

type SecurityObservation struct {

	// (Boolean) Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see security.enableEncryption description in the official documentation. Available only in enterprise edition.
	// Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see [security.enableEncryption](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.enableEncryption) description in the official documentation. Available only in enterprise edition.
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// (Block List, Max: 1) Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see Encryption tutorial ). Requires enable_encryption to be true. The structure is documented below. Available only in enterprise edition. (see below for nested schema)
	// Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see [Encryption tutorial](https://www.mongodb.com/docs/rapid/tutorial/configure-encryption) ). Requires `enable_encryption` to be true. The structure is documented below. Available only in enterprise edition.
	Kmip []KmipObservation `json:"kmip,omitempty" tf:"kmip,omitempty"`
}

type SecurityParameters struct {

	// (Boolean) Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see security.enableEncryption description in the official documentation. Available only in enterprise edition.
	// Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see [security.enableEncryption](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.enableEncryption) description in the official documentation. Available only in enterprise edition.
	// +kubebuilder:validation:Optional
	EnableEncryption *bool `json:"enableEncryption,omitempty" tf:"enable_encryption,omitempty"`

	// (Block List, Max: 1) Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see Encryption tutorial ). Requires enable_encryption to be true. The structure is documented below. Available only in enterprise edition. (see below for nested schema)
	// Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see [Encryption tutorial](https://www.mongodb.com/docs/rapid/tutorial/configure-encryption) ). Requires `enable_encryption` to be true. The structure is documented below. Available only in enterprise edition.
	// +kubebuilder:validation:Optional
	Kmip []KmipParameters `json:"kmip,omitempty" tf:"kmip,omitempty"`
}

type SetParameterInitParameters struct {

	// (Boolean) Enables the auditing of authorization successes. Can be either true or false. For more information, see the auditAuthorizationSuccess description in the official documentation. Available only in enterprise edition.
	// Enables the auditing of authorization successes. Can be either true or false. For more information, see the [auditAuthorizationSuccess](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.auditAuthorizationSuccess) description in the official documentation. Available only in enterprise edition.
	AuditAuthorizationSuccess *bool `json:"auditAuthorizationSuccess,omitempty" tf:"audit_authorization_success,omitempty"`

	// (Boolean) Enables the flow control. Can be either true or false. For more information, see the enableFlowControl description in the official documentation.
	// Enables the flow control. Can be either true or false. For more information, see the [enableFlowControl](https://www.mongodb.com/docs/rapid/reference/parameters/#mongodb-parameter-param.enableFlowControl) description in the official documentation.
	EnableFlowControl *bool `json:"enableFlowControl,omitempty" tf:"enable_flow_control,omitempty"`

	// (Number) The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the minSnapshotHistoryWindowInSeconds description in the official documentation.
	// The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the [minSnapshotHistoryWindowInSeconds](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.minSnapshotHistoryWindowInSeconds) description in the official documentation.
	MinSnapshotHistoryWindowInSeconds *int64 `json:"minSnapshotHistoryWindowInSeconds,omitempty" tf:"min_snapshot_history_window_in_seconds,omitempty"`
}

type SetParameterObservation struct {

	// (Boolean) Enables the auditing of authorization successes. Can be either true or false. For more information, see the auditAuthorizationSuccess description in the official documentation. Available only in enterprise edition.
	// Enables the auditing of authorization successes. Can be either true or false. For more information, see the [auditAuthorizationSuccess](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.auditAuthorizationSuccess) description in the official documentation. Available only in enterprise edition.
	AuditAuthorizationSuccess *bool `json:"auditAuthorizationSuccess,omitempty" tf:"audit_authorization_success,omitempty"`

	// (Boolean) Enables the flow control. Can be either true or false. For more information, see the enableFlowControl description in the official documentation.
	// Enables the flow control. Can be either true or false. For more information, see the [enableFlowControl](https://www.mongodb.com/docs/rapid/reference/parameters/#mongodb-parameter-param.enableFlowControl) description in the official documentation.
	EnableFlowControl *bool `json:"enableFlowControl,omitempty" tf:"enable_flow_control,omitempty"`

	// (Number) The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the minSnapshotHistoryWindowInSeconds description in the official documentation.
	// The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the [minSnapshotHistoryWindowInSeconds](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.minSnapshotHistoryWindowInSeconds) description in the official documentation.
	MinSnapshotHistoryWindowInSeconds *int64 `json:"minSnapshotHistoryWindowInSeconds,omitempty" tf:"min_snapshot_history_window_in_seconds,omitempty"`
}

type SetParameterParameters struct {

	// (Boolean) Enables the auditing of authorization successes. Can be either true or false. For more information, see the auditAuthorizationSuccess description in the official documentation. Available only in enterprise edition.
	// Enables the auditing of authorization successes. Can be either true or false. For more information, see the [auditAuthorizationSuccess](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.auditAuthorizationSuccess) description in the official documentation. Available only in enterprise edition.
	// +kubebuilder:validation:Optional
	AuditAuthorizationSuccess *bool `json:"auditAuthorizationSuccess,omitempty" tf:"audit_authorization_success,omitempty"`

	// (Boolean) Enables the flow control. Can be either true or false. For more information, see the enableFlowControl description in the official documentation.
	// Enables the flow control. Can be either true or false. For more information, see the [enableFlowControl](https://www.mongodb.com/docs/rapid/reference/parameters/#mongodb-parameter-param.enableFlowControl) description in the official documentation.
	// +kubebuilder:validation:Optional
	EnableFlowControl *bool `json:"enableFlowControl,omitempty" tf:"enable_flow_control,omitempty"`

	// (Number) The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the minSnapshotHistoryWindowInSeconds description in the official documentation.
	// The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the [minSnapshotHistoryWindowInSeconds](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.minSnapshotHistoryWindowInSeconds) description in the official documentation.
	// +kubebuilder:validation:Optional
	MinSnapshotHistoryWindowInSeconds *int64 `json:"minSnapshotHistoryWindowInSeconds,omitempty" tf:"min_snapshot_history_window_in_seconds,omitempty"`
}

type StorageInitParameters struct {

	// (Block List, Max: 1) The WiredTiger engine settings. (see the storage.wiredTiger option). (see below for nested schema)
	// The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option).
	WiredTiger []WiredTigerInitParameters `json:"wiredTiger,omitempty" tf:"wired_tiger,omitempty"`
}

type StorageObservation struct {

	// (Block List, Max: 1) The WiredTiger engine settings. (see the storage.wiredTiger option). (see below for nested schema)
	// The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option).
	WiredTiger []WiredTigerObservation `json:"wiredTiger,omitempty" tf:"wired_tiger,omitempty"`
}

type StorageParameters struct {

	// (Block List, Max: 1) The WiredTiger engine settings. (see the storage.wiredTiger option). (see below for nested schema)
	// The WiredTiger engine settings. (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option).
	// +kubebuilder:validation:Optional
	WiredTiger []WiredTigerParameters `json:"wiredTiger,omitempty" tf:"wired_tiger,omitempty"`
}

type StorageWiredTigerInitParameters struct {

	// collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on mongod hosts. For more information, see the storage.wiredTiger.collectionConfig.blockCompressor description in the official documentation.
	// Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on `mongod` hosts. For more information, see the [storage.wiredTiger.collectionConfig.blockCompressor](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.collectionConfig.blockCompressor) description in the official documentation.
	BlockCompressor *string `json:"blockCompressor,omitempty" tf:"block_compressor,omitempty"`

	// (Number) Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB description in the official documentation.
	// Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.
	CacheSizeGb *float64 `json:"cacheSizeGb,omitempty" tf:"cache_size_gb,omitempty"`

	// (Boolean) Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the storage.wiredTiger.indexConfig.prefixCompression description in the official documentation.
	// Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the [storage.wiredTiger.indexConfig.prefixCompression](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.indexConfig.prefixCompression) description in the official documentation.
	PrefixCompression *bool `json:"prefixCompression,omitempty" tf:"prefix_compression,omitempty"`
}

type StorageWiredTigerObservation struct {

	// collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on mongod hosts. For more information, see the storage.wiredTiger.collectionConfig.blockCompressor description in the official documentation.
	// Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on `mongod` hosts. For more information, see the [storage.wiredTiger.collectionConfig.blockCompressor](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.collectionConfig.blockCompressor) description in the official documentation.
	BlockCompressor *string `json:"blockCompressor,omitempty" tf:"block_compressor,omitempty"`

	// (Number) Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB description in the official documentation.
	// Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.
	CacheSizeGb *float64 `json:"cacheSizeGb,omitempty" tf:"cache_size_gb,omitempty"`

	// (Boolean) Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the storage.wiredTiger.indexConfig.prefixCompression description in the official documentation.
	// Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the [storage.wiredTiger.indexConfig.prefixCompression](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.indexConfig.prefixCompression) description in the official documentation.
	PrefixCompression *bool `json:"prefixCompression,omitempty" tf:"prefix_compression,omitempty"`
}

type StorageWiredTigerParameters struct {

	// collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on mongod hosts. For more information, see the storage.wiredTiger.collectionConfig.blockCompressor description in the official documentation.
	// Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on `mongod` hosts. For more information, see the [storage.wiredTiger.collectionConfig.blockCompressor](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.collectionConfig.blockCompressor) description in the official documentation.
	// +kubebuilder:validation:Optional
	BlockCompressor *string `json:"blockCompressor,omitempty" tf:"block_compressor,omitempty"`

	// (Number) Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB description in the official documentation.
	// Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.
	// +kubebuilder:validation:Optional
	CacheSizeGb *float64 `json:"cacheSizeGb,omitempty" tf:"cache_size_gb,omitempty"`

	// (Boolean) Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the storage.wiredTiger.indexConfig.prefixCompression description in the official documentation.
	// Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the [storage.wiredTiger.indexConfig.prefixCompression](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.indexConfig.prefixCompression) description in the official documentation.
	// +kubebuilder:validation:Optional
	PrefixCompression *bool `json:"prefixCompression,omitempty" tf:"prefix_compression,omitempty"`
}

type WiredTigerInitParameters struct {

	// (Number) Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB description in the official documentation.
	// Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.
	CacheSizeGb *float64 `json:"cacheSizeGb,omitempty" tf:"cache_size_gb,omitempty"`
}

type WiredTigerObservation struct {

	// (Number) Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB description in the official documentation.
	// Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.
	CacheSizeGb *float64 `json:"cacheSizeGb,omitempty" tf:"cache_size_gb,omitempty"`
}

type WiredTigerParameters struct {

	// (Number) Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB description in the official documentation.
	// Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB) description in the official documentation.
	// +kubebuilder:validation:Optional
	CacheSizeGb *float64 `json:"cacheSizeGb,omitempty" tf:"cache_size_gb,omitempty"`
}

// MongodbClusterSpec defines the desired state of MongodbCluster
type MongodbClusterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MongodbClusterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MongodbClusterInitParameters `json:"initProvider,omitempty"`
}

// MongodbClusterStatus defines the observed state of MongodbCluster.
type MongodbClusterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MongodbClusterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MongodbCluster is the Schema for the MongodbClusters API. Manages a MongoDB cluster within Yandex Cloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type MongodbCluster struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clusterConfig) || (has(self.initProvider) && has(self.initProvider.clusterConfig))",message="spec.forProvider.clusterConfig is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.environment) || (has(self.initProvider) && has(self.initProvider.environment))",message="spec.forProvider.environment is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.host) || (has(self.initProvider) && has(self.initProvider.host))",message="spec.forProvider.host is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   MongodbClusterSpec   `json:"spec"`
	Status MongodbClusterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MongodbClusterList contains a list of MongodbClusters
type MongodbClusterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MongodbCluster `json:"items"`
}

// Repository type metadata.
var (
	MongodbCluster_Kind             = "MongodbCluster"
	MongodbCluster_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MongodbCluster_Kind}.String()
	MongodbCluster_KindAPIVersion   = MongodbCluster_Kind + "." + CRDGroupVersion.String()
	MongodbCluster_GroupVersionKind = CRDGroupVersion.WithKind(MongodbCluster_Kind)
)

func init() {
	SchemeBuilder.Register(&MongodbCluster{}, &MongodbClusterList{})
}
