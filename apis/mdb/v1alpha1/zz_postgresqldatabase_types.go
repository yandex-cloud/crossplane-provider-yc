/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PostgresqlDatabaseExtensionInitParameters struct {

	// (String) The resource name.
	// Name of the database extension. For more information on available extensions see [the official documentation](https://yandex.cloud/docs/managed-postgresql/operations/cluster-extensions).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PostgresqlDatabaseExtensionObservation struct {

	// (String) The resource name.
	// Name of the database extension. For more information on available extensions see [the official documentation](https://yandex.cloud/docs/managed-postgresql/operations/cluster-extensions).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type PostgresqlDatabaseExtensionParameters struct {

	// (String) The resource name.
	// Name of the database extension. For more information on available extensions see [the official documentation](https://yandex.cloud/docs/managed-postgresql/operations/cluster-extensions).
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type PostgresqlDatabaseInitParameters struct {

	// (String) The ID of the PostgreSQL cluster.
	// The ID of the PostgreSQL cluster.
	// +crossplane:generate:reference:type=PostgresqlCluster
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a PostgresqlCluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a PostgresqlCluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// (String) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *string `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (Block Set) Set of database extensions. (see below for nested schema)
	// Set of database extensions.
	Extension []PostgresqlDatabaseExtensionInitParameters `json:"extension,omitempty" tf:"extension,omitempty"`

	// (String) POSIX locale for string sorting order. Forbidden to change in an existing database.
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `json:"lcCollate,omitempty" tf:"lc_collate,omitempty"`

	// (String) POSIX locale for character classification. Forbidden to change in an existing database.
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `json:"lcType,omitempty" tf:"lc_type,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// (String) Name of the template database.
	// Name of the template database.
	TemplateDB *string `json:"templateDb,omitempty" tf:"template_db,omitempty"`
}

type PostgresqlDatabaseObservation struct {

	// (String) The ID of the PostgreSQL cluster.
	// The ID of the PostgreSQL cluster.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// (String) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *string `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (Block Set) Set of database extensions. (see below for nested schema)
	// Set of database extensions.
	Extension []PostgresqlDatabaseExtensionObservation `json:"extension,omitempty" tf:"extension,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) POSIX locale for string sorting order. Forbidden to change in an existing database.
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `json:"lcCollate,omitempty" tf:"lc_collate,omitempty"`

	// (String) POSIX locale for character classification. Forbidden to change in an existing database.
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `json:"lcType,omitempty" tf:"lc_type,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// (String) Name of the template database.
	// Name of the template database.
	TemplateDB *string `json:"templateDb,omitempty" tf:"template_db,omitempty"`
}

type PostgresqlDatabaseParameters struct {

	// (String) The ID of the PostgreSQL cluster.
	// The ID of the PostgreSQL cluster.
	// +crossplane:generate:reference:type=PostgresqlCluster
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a PostgresqlCluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a PostgresqlCluster to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// (String) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	// +kubebuilder:validation:Optional
	DeletionProtection *string `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (Block Set) Set of database extensions. (see below for nested schema)
	// Set of database extensions.
	// +kubebuilder:validation:Optional
	Extension []PostgresqlDatabaseExtensionParameters `json:"extension,omitempty" tf:"extension,omitempty"`

	// (String) POSIX locale for string sorting order. Forbidden to change in an existing database.
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	// +kubebuilder:validation:Optional
	LcCollate *string `json:"lcCollate,omitempty" tf:"lc_collate,omitempty"`

	// (String) POSIX locale for character classification. Forbidden to change in an existing database.
	// POSIX locale for character classification. Forbidden to change in an existing database.
	// +kubebuilder:validation:Optional
	LcType *string `json:"lcType,omitempty" tf:"lc_type,omitempty"`

	// (String) The resource name.
	// The resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	// +kubebuilder:validation:Optional
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// (String) Name of the template database.
	// Name of the template database.
	// +kubebuilder:validation:Optional
	TemplateDB *string `json:"templateDb,omitempty" tf:"template_db,omitempty"`
}

// PostgresqlDatabaseSpec defines the desired state of PostgresqlDatabase
type PostgresqlDatabaseSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PostgresqlDatabaseParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PostgresqlDatabaseInitParameters `json:"initProvider,omitempty"`
}

// PostgresqlDatabaseStatus defines the observed state of PostgresqlDatabase.
type PostgresqlDatabaseStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PostgresqlDatabaseObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PostgresqlDatabase is the Schema for the PostgresqlDatabases API. Manages a PostgreSQL database within Yandex Cloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type PostgresqlDatabase struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.owner) || (has(self.initProvider) && has(self.initProvider.owner))",message="spec.forProvider.owner is a required parameter"
	Spec   PostgresqlDatabaseSpec   `json:"spec"`
	Status PostgresqlDatabaseStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PostgresqlDatabaseList contains a list of PostgresqlDatabases
type PostgresqlDatabaseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PostgresqlDatabase `json:"items"`
}

// Repository type metadata.
var (
	PostgresqlDatabase_Kind             = "PostgresqlDatabase"
	PostgresqlDatabase_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PostgresqlDatabase_Kind}.String()
	PostgresqlDatabase_KindAPIVersion   = PostgresqlDatabase_Kind + "." + CRDGroupVersion.String()
	PostgresqlDatabase_GroupVersionKind = CRDGroupVersion.WithKind(PostgresqlDatabase_Kind)
)

func init() {
	SchemeBuilder.Register(&PostgresqlDatabase{}, &PostgresqlDatabaseList{})
}
