/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OriginGroupInitParameters struct {

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block Set, Min: 1) A set of available origins, an origins group must contain at least one enabled origin with fields below. (see below for nested schema)
	// A set of available origins, an origins group must contain at least one enabled origin with fields below.
	Origin []OriginInitParameters `json:"origin,omitempty" tf:"origin,omitempty"`

	// (Boolean) If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
	// If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
	UseNext *bool `json:"useNext,omitempty" tf:"use_next,omitempty"`
}

type OriginGroupObservation struct {

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block Set, Min: 1) A set of available origins, an origins group must contain at least one enabled origin with fields below. (see below for nested schema)
	// A set of available origins, an origins group must contain at least one enabled origin with fields below.
	Origin []OriginObservation `json:"origin,omitempty" tf:"origin,omitempty"`

	// (Boolean) If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
	// If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
	UseNext *bool `json:"useNext,omitempty" tf:"use_next,omitempty"`
}

type OriginGroupParameters struct {

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (String) The resource name.
	// The resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block Set, Min: 1) A set of available origins, an origins group must contain at least one enabled origin with fields below. (see below for nested schema)
	// A set of available origins, an origins group must contain at least one enabled origin with fields below.
	// +kubebuilder:validation:Optional
	Origin []OriginParameters `json:"origin,omitempty" tf:"origin,omitempty"`

	// (Boolean) If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
	// If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
	// +kubebuilder:validation:Optional
	UseNext *bool `json:"useNext,omitempty" tf:"use_next,omitempty"`
}

type OriginInitParameters struct {

	// (Boolean) Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.
	// Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.
	Backup *bool `json:"backup,omitempty" tf:"backup,omitempty"`

	// (Boolean) The origin is enabled and used as a source for the CDN. Default enabled.
	// The origin is enabled and used as a source for the CDN. Default `enabled`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) IP address or Domain name of your origin and the port.
	// IP address or Domain name of your origin and the port.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type OriginObservation struct {

	// (Boolean) Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.
	// Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.
	Backup *bool `json:"backup,omitempty" tf:"backup,omitempty"`

	// (Boolean) The origin is enabled and used as a source for the CDN. Default enabled.
	// The origin is enabled and used as a source for the CDN. Default `enabled`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (Number)
	OriginGroupID *float64 `json:"originGroupId,omitempty" tf:"origin_group_id,omitempty"`

	// (String) IP address or Domain name of your origin and the port.
	// IP address or Domain name of your origin and the port.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`
}

type OriginParameters struct {

	// (Boolean) Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.
	// Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.
	// +kubebuilder:validation:Optional
	Backup *bool `json:"backup,omitempty" tf:"backup,omitempty"`

	// (Boolean) The origin is enabled and used as a source for the CDN. Default enabled.
	// The origin is enabled and used as a source for the CDN. Default `enabled`.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) IP address or Domain name of your origin and the port.
	// IP address or Domain name of your origin and the port.
	// +kubebuilder:validation:Optional
	Source *string `json:"source" tf:"source,omitempty"`
}

// OriginGroupSpec defines the desired state of OriginGroup
type OriginGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OriginGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OriginGroupInitParameters `json:"initProvider,omitempty"`
}

// OriginGroupStatus defines the observed state of OriginGroup.
type OriginGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OriginGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OriginGroup is the Schema for the OriginGroups API. Allows management of a Yandex Cloud CDN Origin Groups.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type OriginGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.origin) || (has(self.initProvider) && has(self.initProvider.origin))",message="spec.forProvider.origin is a required parameter"
	Spec   OriginGroupSpec   `json:"spec"`
	Status OriginGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OriginGroupList contains a list of OriginGroups
type OriginGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OriginGroup `json:"items"`
}

// Repository type metadata.
var (
	OriginGroup_Kind             = "OriginGroup"
	OriginGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OriginGroup_Kind}.String()
	OriginGroup_KindAPIVersion   = OriginGroup_Kind + "." + CRDGroupVersion.String()
	OriginGroup_GroupVersionKind = CRDGroupVersion.WithKind(OriginGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&OriginGroup{}, &OriginGroupList{})
}
