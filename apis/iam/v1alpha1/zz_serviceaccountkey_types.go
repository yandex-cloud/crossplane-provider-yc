/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ServiceAccountKeyInitParameters struct {

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The output format of the keys. PEM_FILE is the default format.
	// The output format of the keys. `PEM_FILE` is the default format.
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// (String) The algorithm used to generate the key. RSA_2048 is the default algorithm. Valid values are listed in the API reference.
	// The algorithm used to generate the key. `RSA_2048` is the default algorithm. Valid values are listed in the [API reference](https://yandex.cloud/docs/iam/api-ref/Key).
	KeyAlgorithm *string `json:"keyAlgorithm,omitempty" tf:"key_algorithm,omitempty"`

	// (Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)
	// option to create a Lockbox secret version from sensitive outputs
	OutputToLockbox []ServiceAccountKeyOutputToLockboxInitParameters `json:"outputToLockbox,omitempty" tf:"output_to_lockbox,omitempty"`

	// encoded public key or a keybase username in the form keybase:keybaseusername.
	// An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
	PgpKey *string `json:"pgpKey,omitempty" tf:"pgp_key,omitempty"`

	// (String) ID of the service account to create a pair for.
	// ID of the service account to create a pair for.
	// +crossplane:generate:reference:type=ServiceAccount
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`

	// Reference to a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDRef *v1.Reference `json:"serviceAccountIdRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDSelector *v1.Selector `json:"serviceAccountIdSelector,omitempty" tf:"-"`
}

type ServiceAccountKeyObservation struct {

	// (String) The creation timestamp of the resource.
	// The creation timestamp of the resource.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The encrypted private key, base64 encoded. This is only populated when pgp_key is supplied.
	// The encrypted private key, base64 encoded. This is only populated when `pgp_key` is supplied.
	EncryptedPrivateKey *string `json:"encryptedPrivateKey,omitempty" tf:"encrypted_private_key,omitempty"`

	// (String) The output format of the keys. PEM_FILE is the default format.
	// The output format of the keys. `PEM_FILE` is the default format.
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The algorithm used to generate the key. RSA_2048 is the default algorithm. Valid values are listed in the API reference.
	// The algorithm used to generate the key. `RSA_2048` is the default algorithm. Valid values are listed in the [API reference](https://yandex.cloud/docs/iam/api-ref/Key).
	KeyAlgorithm *string `json:"keyAlgorithm,omitempty" tf:"key_algorithm,omitempty"`

	// (String) The fingerprint of the PGP key used to encrypt the private key. This is only populated when pgp_key is supplied.
	// The fingerprint of the PGP key used to encrypt the private key. This is only populated when `pgp_key` is supplied.
	KeyFingerprint *string `json:"keyFingerprint,omitempty" tf:"key_fingerprint,omitempty"`

	// (Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)
	// option to create a Lockbox secret version from sensitive outputs
	OutputToLockbox []ServiceAccountKeyOutputToLockboxObservation `json:"outputToLockbox,omitempty" tf:"output_to_lockbox,omitempty"`

	// (String) ID of the Lockbox secret version that contains the value of secret_key. This is only populated when output_to_lockbox is supplied. This version will be destroyed when the IAM key is destroyed, or when output_to_lockbox is removed.
	// ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when `output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when `output_to_lockbox` is removed.
	OutputToLockboxVersionID *string `json:"outputToLockboxVersionId,omitempty" tf:"output_to_lockbox_version_id,omitempty"`

	// encoded public key or a keybase username in the form keybase:keybaseusername.
	// An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
	PgpKey *string `json:"pgpKey,omitempty" tf:"pgp_key,omitempty"`

	// (String) The public key.
	// The public key.
	PublicKey *string `json:"publicKey,omitempty" tf:"public_key,omitempty"`

	// (String) ID of the service account to create a pair for.
	// ID of the service account to create a pair for.
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`
}

type ServiceAccountKeyOutputToLockboxInitParameters struct {

	// (String) entry that will store the value of private_key
	// entry that will store the value of private_key
	EntryForPrivateKey *string `json:"entryForPrivateKey,omitempty" tf:"entry_for_private_key,omitempty"`

	// (String) ID of the Lockbox secret where to store the sensible values.
	// ID of the Lockbox secret where to store the sensible values.
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`
}

type ServiceAccountKeyOutputToLockboxObservation struct {

	// (String) entry that will store the value of private_key
	// entry that will store the value of private_key
	EntryForPrivateKey *string `json:"entryForPrivateKey,omitempty" tf:"entry_for_private_key,omitempty"`

	// (String) ID of the Lockbox secret where to store the sensible values.
	// ID of the Lockbox secret where to store the sensible values.
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`
}

type ServiceAccountKeyOutputToLockboxParameters struct {

	// (String) entry that will store the value of private_key
	// entry that will store the value of private_key
	// +kubebuilder:validation:Optional
	EntryForPrivateKey *string `json:"entryForPrivateKey" tf:"entry_for_private_key,omitempty"`

	// (String) ID of the Lockbox secret where to store the sensible values.
	// ID of the Lockbox secret where to store the sensible values.
	// +kubebuilder:validation:Optional
	SecretID *string `json:"secretId" tf:"secret_id,omitempty"`
}

type ServiceAccountKeyParameters struct {

	// (String) The resource description.
	// The resource description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The output format of the keys. PEM_FILE is the default format.
	// The output format of the keys. `PEM_FILE` is the default format.
	// +kubebuilder:validation:Optional
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// (String) The algorithm used to generate the key. RSA_2048 is the default algorithm. Valid values are listed in the API reference.
	// The algorithm used to generate the key. `RSA_2048` is the default algorithm. Valid values are listed in the [API reference](https://yandex.cloud/docs/iam/api-ref/Key).
	// +kubebuilder:validation:Optional
	KeyAlgorithm *string `json:"keyAlgorithm,omitempty" tf:"key_algorithm,omitempty"`

	// (Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)
	// option to create a Lockbox secret version from sensitive outputs
	// +kubebuilder:validation:Optional
	OutputToLockbox []ServiceAccountKeyOutputToLockboxParameters `json:"outputToLockbox,omitempty" tf:"output_to_lockbox,omitempty"`

	// encoded public key or a keybase username in the form keybase:keybaseusername.
	// An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
	// +kubebuilder:validation:Optional
	PgpKey *string `json:"pgpKey,omitempty" tf:"pgp_key,omitempty"`

	// (String) ID of the service account to create a pair for.
	// ID of the service account to create a pair for.
	// +crossplane:generate:reference:type=ServiceAccount
	// +kubebuilder:validation:Optional
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`

	// Reference to a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDRef *v1.Reference `json:"serviceAccountIdRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDSelector *v1.Selector `json:"serviceAccountIdSelector,omitempty" tf:"-"`
}

// ServiceAccountKeySpec defines the desired state of ServiceAccountKey
type ServiceAccountKeySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceAccountKeyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceAccountKeyInitParameters `json:"initProvider,omitempty"`
}

// ServiceAccountKeyStatus defines the observed state of ServiceAccountKey.
type ServiceAccountKeyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceAccountKeyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceAccountKey is the Schema for the ServiceAccountKeys API. Allows management of a Yandex Cloud IAM service account key.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type ServiceAccountKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceAccountKeySpec   `json:"spec"`
	Status            ServiceAccountKeyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceAccountKeyList contains a list of ServiceAccountKeys
type ServiceAccountKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceAccountKey `json:"items"`
}

// Repository type metadata.
var (
	ServiceAccountKey_Kind             = "ServiceAccountKey"
	ServiceAccountKey_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceAccountKey_Kind}.String()
	ServiceAccountKey_KindAPIVersion   = ServiceAccountKey_Kind + "." + CRDGroupVersion.String()
	ServiceAccountKey_GroupVersionKind = CRDGroupVersion.WithKind(ServiceAccountKey_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceAccountKey{}, &ServiceAccountKeyList{})
}
