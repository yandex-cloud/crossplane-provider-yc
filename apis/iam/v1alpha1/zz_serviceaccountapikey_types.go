/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OutputToLockboxInitParameters struct {

	// (String) entry that will store the value of secret_key
	// entry that will store the value of secret_key
	EntryForSecretKey *string `json:"entryForSecretKey,omitempty" tf:"entry_for_secret_key,omitempty"`

	// (String) ID of the Lockbox secret where to store the sensible values.
	// ID of the Lockbox secret where to store the sensible values.
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`
}

type OutputToLockboxObservation struct {

	// (String) entry that will store the value of secret_key
	// entry that will store the value of secret_key
	EntryForSecretKey *string `json:"entryForSecretKey,omitempty" tf:"entry_for_secret_key,omitempty"`

	// (String) ID of the Lockbox secret where to store the sensible values.
	// ID of the Lockbox secret where to store the sensible values.
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`
}

type OutputToLockboxParameters struct {

	// (String) entry that will store the value of secret_key
	// entry that will store the value of secret_key
	// +kubebuilder:validation:Optional
	EntryForSecretKey *string `json:"entryForSecretKey" tf:"entry_for_secret_key,omitempty"`

	// (String) ID of the Lockbox secret where to store the sensible values.
	// ID of the Lockbox secret where to store the sensible values.
	// +kubebuilder:validation:Optional
	SecretID *string `json:"secretId" tf:"secret_id,omitempty"`
}

type ServiceAccountAPIKeyInitParameters struct {

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The key will be no longer valid after expiration timestamp.
	// The key will be no longer valid after expiration timestamp.
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)
	// option to create a Lockbox secret version from sensitive outputs
	OutputToLockbox []OutputToLockboxInitParameters `json:"outputToLockbox,omitempty" tf:"output_to_lockbox,omitempty"`

	// encoded public key or a keybase username in the form keybase:keybaseusername.
	// An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
	PgpKey *string `json:"pgpKey,omitempty" tf:"pgp_key,omitempty"`

	// (String, Deprecated) The scope of the key.
	// The scope of the key.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (List of String) The list of scopes of the key.
	// The list of scopes of the key.
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (String) ID of the service account to an API key for.
	// ID of the service account to an API key for.
	// +crossplane:generate:reference:type=ServiceAccount
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`

	// Reference to a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDRef *v1.Reference `json:"serviceAccountIdRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDSelector *v1.Selector `json:"serviceAccountIdSelector,omitempty" tf:"-"`
}

type ServiceAccountAPIKeyObservation struct {

	// (String) The creation timestamp of the resource.
	// The creation timestamp of the resource.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The encrypted secret key, base64 encoded. This is only populated when pgp_key is supplied.
	// The encrypted secret key, base64 encoded. This is only populated when `pgp_key` is supplied.
	EncryptedSecretKey *string `json:"encryptedSecretKey,omitempty" tf:"encrypted_secret_key,omitempty"`

	// (String) The key will be no longer valid after expiration timestamp.
	// The key will be no longer valid after expiration timestamp.
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The fingerprint of the PGP key used to encrypt the secret key. This is only populated when pgp_key is supplied.
	// The fingerprint of the PGP key used to encrypt the secret key. This is only populated when `pgp_key` is supplied.
	KeyFingerprint *string `json:"keyFingerprint,omitempty" tf:"key_fingerprint,omitempty"`

	// (Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)
	// option to create a Lockbox secret version from sensitive outputs
	OutputToLockbox []OutputToLockboxObservation `json:"outputToLockbox,omitempty" tf:"output_to_lockbox,omitempty"`

	// (String) ID of the Lockbox secret version that contains the value of secret_key. This is only populated when output_to_lockbox is supplied. This version will be destroyed when the IAM key is destroyed, or when output_to_lockbox is removed.
	// ID of the Lockbox secret version that contains the value of `secret_key`. This is only populated when `output_to_lockbox` is supplied. This version will be destroyed when the IAM key is destroyed, or when `output_to_lockbox` is removed.
	OutputToLockboxVersionID *string `json:"outputToLockboxVersionId,omitempty" tf:"output_to_lockbox_version_id,omitempty"`

	// encoded public key or a keybase username in the form keybase:keybaseusername.
	// An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
	PgpKey *string `json:"pgpKey,omitempty" tf:"pgp_key,omitempty"`

	// (String, Deprecated) The scope of the key.
	// The scope of the key.
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (List of String) The list of scopes of the key.
	// The list of scopes of the key.
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (String) ID of the service account to an API key for.
	// ID of the service account to an API key for.
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`
}

type ServiceAccountAPIKeyParameters struct {

	// (String) The resource description.
	// The resource description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The key will be no longer valid after expiration timestamp.
	// The key will be no longer valid after expiration timestamp.
	// +kubebuilder:validation:Optional
	ExpiresAt *string `json:"expiresAt,omitempty" tf:"expires_at,omitempty"`

	// (Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)
	// option to create a Lockbox secret version from sensitive outputs
	// +kubebuilder:validation:Optional
	OutputToLockbox []OutputToLockboxParameters `json:"outputToLockbox,omitempty" tf:"output_to_lockbox,omitempty"`

	// encoded public key or a keybase username in the form keybase:keybaseusername.
	// An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase username in the form `keybase:keybaseusername`.
	// +kubebuilder:validation:Optional
	PgpKey *string `json:"pgpKey,omitempty" tf:"pgp_key,omitempty"`

	// (String, Deprecated) The scope of the key.
	// The scope of the key.
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`

	// (List of String) The list of scopes of the key.
	// The list of scopes of the key.
	// +kubebuilder:validation:Optional
	Scopes []*string `json:"scopes,omitempty" tf:"scopes,omitempty"`

	// (String) ID of the service account to an API key for.
	// ID of the service account to an API key for.
	// +crossplane:generate:reference:type=ServiceAccount
	// +kubebuilder:validation:Optional
	ServiceAccountID *string `json:"serviceAccountId,omitempty" tf:"service_account_id,omitempty"`

	// Reference to a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDRef *v1.Reference `json:"serviceAccountIdRef,omitempty" tf:"-"`

	// Selector for a ServiceAccount to populate serviceAccountId.
	// +kubebuilder:validation:Optional
	ServiceAccountIDSelector *v1.Selector `json:"serviceAccountIdSelector,omitempty" tf:"-"`
}

// ServiceAccountAPIKeySpec defines the desired state of ServiceAccountAPIKey
type ServiceAccountAPIKeySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceAccountAPIKeyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceAccountAPIKeyInitParameters `json:"initProvider,omitempty"`
}

// ServiceAccountAPIKeyStatus defines the observed state of ServiceAccountAPIKey.
type ServiceAccountAPIKeyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceAccountAPIKeyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceAccountAPIKey is the Schema for the ServiceAccountAPIKeys API. Allows management of a Yandex Cloud IAM service account API key.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type ServiceAccountAPIKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceAccountAPIKeySpec   `json:"spec"`
	Status            ServiceAccountAPIKeyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceAccountAPIKeyList contains a list of ServiceAccountAPIKeys
type ServiceAccountAPIKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceAccountAPIKey `json:"items"`
}

// Repository type metadata.
var (
	ServiceAccountAPIKey_Kind             = "ServiceAccountAPIKey"
	ServiceAccountAPIKey_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceAccountAPIKey_Kind}.String()
	ServiceAccountAPIKey_KindAPIVersion   = ServiceAccountAPIKey_Kind + "." + CRDGroupVersion.String()
	ServiceAccountAPIKey_GroupVersionKind = CRDGroupVersion.WithKind(ServiceAccountAPIKey_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceAccountAPIKey{}, &ServiceAccountAPIKeyList{})
}
