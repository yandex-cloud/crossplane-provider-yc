/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ColumnsInitParameters struct {

	// (List of String)
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type ColumnsObservation struct {

	// (List of String)
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type ColumnsParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type ConvertToStringInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []ColumnsInitParameters `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []TablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type ConvertToStringObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []ColumnsObservation `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []TablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type ConvertToStringParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Columns []ColumnsParameters `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Tables []TablesParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type FilterColumnsColumnsInitParameters struct {

	// (List of String)
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type FilterColumnsColumnsObservation struct {

	// (List of String)
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type FilterColumnsColumnsParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type FilterColumnsInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []FilterColumnsColumnsInitParameters `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []FilterColumnsTablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type FilterColumnsObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []FilterColumnsColumnsObservation `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []FilterColumnsTablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type FilterColumnsParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Columns []FilterColumnsColumnsParameters `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Tables []FilterColumnsTablesParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type FilterColumnsTablesInitParameters struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type FilterColumnsTablesObservation struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type FilterColumnsTablesParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type FilterRowsInitParameters struct {

	// (String)
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []FilterRowsTablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type FilterRowsObservation struct {

	// (String)
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []FilterRowsTablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type FilterRowsParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Tables []FilterRowsTablesParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type FilterRowsTablesInitParameters struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type FilterRowsTablesObservation struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type FilterRowsTablesParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type FunctionInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	MaskFunctionHash []MaskFunctionHashInitParameters `json:"maskFunctionHash,omitempty" tf:"mask_function_hash,omitempty"`
}

type FunctionObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	MaskFunctionHash []MaskFunctionHashObservation `json:"maskFunctionHash,omitempty" tf:"mask_function_hash,omitempty"`
}

type FunctionParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	MaskFunctionHash []MaskFunctionHashParameters `json:"maskFunctionHash,omitempty" tf:"mask_function_hash,omitempty"`
}

type MaskFieldInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []*string `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Function []FunctionInitParameters `json:"function,omitempty" tf:"function,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []MaskFieldTablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type MaskFieldObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []*string `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Function []FunctionObservation `json:"function,omitempty" tf:"function,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []MaskFieldTablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type MaskFieldParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Columns []*string `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Function []FunctionParameters `json:"function,omitempty" tf:"function,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Tables []MaskFieldTablesParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type MaskFieldTablesInitParameters struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type MaskFieldTablesObservation struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type MaskFieldTablesParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type MaskFunctionHashInitParameters struct {

	// (String)
	UserDefinedSalt *string `json:"userDefinedSalt,omitempty" tf:"user_defined_salt,omitempty"`
}

type MaskFunctionHashObservation struct {

	// (String)
	UserDefinedSalt *string `json:"userDefinedSalt,omitempty" tf:"user_defined_salt,omitempty"`
}

type MaskFunctionHashParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	UserDefinedSalt *string `json:"userDefinedSalt,omitempty" tf:"user_defined_salt,omitempty"`
}

type NewNameInitParameters struct {

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	NameSpace *string `json:"nameSpace,omitempty" tf:"name_space,omitempty"`
}

type NewNameObservation struct {

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	NameSpace *string `json:"nameSpace,omitempty" tf:"name_space,omitempty"`
}

type NewNameParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	NameSpace *string `json:"nameSpace,omitempty" tf:"name_space,omitempty"`
}

type OriginalNameInitParameters struct {

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	NameSpace *string `json:"nameSpace,omitempty" tf:"name_space,omitempty"`
}

type OriginalNameObservation struct {

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	NameSpace *string `json:"nameSpace,omitempty" tf:"name_space,omitempty"`
}

type OriginalNameParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	NameSpace *string `json:"nameSpace,omitempty" tf:"name_space,omitempty"`
}

type RenameTablesInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	RenameTables []RenameTablesRenameTablesInitParameters `json:"renameTables,omitempty" tf:"rename_tables,omitempty"`
}

type RenameTablesObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	RenameTables []RenameTablesRenameTablesObservation `json:"renameTables,omitempty" tf:"rename_tables,omitempty"`
}

type RenameTablesParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	RenameTables []RenameTablesRenameTablesParameters `json:"renameTables,omitempty" tf:"rename_tables,omitempty"`
}

type RenameTablesRenameTablesInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	NewName []NewNameInitParameters `json:"newName,omitempty" tf:"new_name,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	OriginalName []OriginalNameInitParameters `json:"originalName,omitempty" tf:"original_name,omitempty"`
}

type RenameTablesRenameTablesObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	NewName []NewNameObservation `json:"newName,omitempty" tf:"new_name,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	OriginalName []OriginalNameObservation `json:"originalName,omitempty" tf:"original_name,omitempty"`
}

type RenameTablesRenameTablesParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	NewName []NewNameParameters `json:"newName,omitempty" tf:"new_name,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	OriginalName []OriginalNameParameters `json:"originalName,omitempty" tf:"original_name,omitempty"`
}

type ReplacePrimaryKeyInitParameters struct {

	// (List of String)
	Keys []*string `json:"keys,omitempty" tf:"keys,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []ReplacePrimaryKeyTablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type ReplacePrimaryKeyObservation struct {

	// (List of String)
	Keys []*string `json:"keys,omitempty" tf:"keys,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []ReplacePrimaryKeyTablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type ReplacePrimaryKeyParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	Keys []*string `json:"keys,omitempty" tf:"keys,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Tables []ReplacePrimaryKeyTablesParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type ReplacePrimaryKeyTablesInitParameters struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type ReplacePrimaryKeyTablesObservation struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type ReplacePrimaryKeyTablesParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type RuntimeInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	YcRuntime []YcRuntimeInitParameters `json:"ycRuntime,omitempty" tf:"yc_runtime,omitempty"`
}

type RuntimeObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	YcRuntime []YcRuntimeObservation `json:"ycRuntime,omitempty" tf:"yc_runtime,omitempty"`
}

type RuntimeParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	YcRuntime []YcRuntimeParameters `json:"ycRuntime,omitempty" tf:"yc_runtime,omitempty"`
}

type SharderTransformerColumnsInitParameters struct {

	// (List of String)
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type SharderTransformerColumnsObservation struct {

	// (List of String)
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type SharderTransformerColumnsParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeColumns []*string `json:"excludeColumns,omitempty" tf:"exclude_columns,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeColumns []*string `json:"includeColumns,omitempty" tf:"include_columns,omitempty"`
}

type SharderTransformerInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []SharderTransformerColumnsInitParameters `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Number)
	ShardsCount *float64 `json:"shardsCount,omitempty" tf:"shards_count,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []SharderTransformerTablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type SharderTransformerObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []SharderTransformerColumnsObservation `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Number)
	ShardsCount *float64 `json:"shardsCount,omitempty" tf:"shards_count,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []SharderTransformerTablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type SharderTransformerParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Columns []SharderTransformerColumnsParameters `json:"columns,omitempty" tf:"columns,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	ShardsCount *float64 `json:"shardsCount,omitempty" tf:"shards_count,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Tables []SharderTransformerTablesParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type SharderTransformerTablesInitParameters struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type SharderTransformerTablesObservation struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type SharderTransformerTablesParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type TableSplitterTransformerInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []*string `json:"columns,omitempty" tf:"columns,omitempty"`

	// (String)
	Splitter *string `json:"splitter,omitempty" tf:"splitter,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []TableSplitterTransformerTablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type TableSplitterTransformerObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	Columns []*string `json:"columns,omitempty" tf:"columns,omitempty"`

	// (String)
	Splitter *string `json:"splitter,omitempty" tf:"splitter,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Tables []TableSplitterTransformerTablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type TableSplitterTransformerParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Columns []*string `json:"columns,omitempty" tf:"columns,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Splitter *string `json:"splitter,omitempty" tf:"splitter,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Tables []TableSplitterTransformerTablesParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type TableSplitterTransformerTablesInitParameters struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type TableSplitterTransformerTablesObservation struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type TableSplitterTransformerTablesParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type TablesInitParameters struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type TablesObservation struct {

	// (List of String)
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type TablesParameters struct {

	// (List of String)
	// +kubebuilder:validation:Optional
	ExcludeTables []*string `json:"excludeTables,omitempty" tf:"exclude_tables,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	IncludeTables []*string `json:"includeTables,omitempty" tf:"include_tables,omitempty"`
}

type TransferInitParameters struct {

	// (String)
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Map of String)
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	OnCreateActivateMode *string `json:"onCreateActivateMode,omitempty" tf:"on_create_activate_mode,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Runtime []RuntimeInitParameters `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=Endpoint
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// Reference to a Endpoint to populate sourceId.
	// +kubebuilder:validation:Optional
	SourceIDRef *v1.Reference `json:"sourceIdRef,omitempty" tf:"-"`

	// Selector for a Endpoint to populate sourceId.
	// +kubebuilder:validation:Optional
	SourceIDSelector *v1.Selector `json:"sourceIdSelector,omitempty" tf:"-"`

	// (String)
	// +crossplane:generate:reference:type=Endpoint
	TargetID *string `json:"targetId,omitempty" tf:"target_id,omitempty"`

	// Reference to a Endpoint to populate targetId.
	// +kubebuilder:validation:Optional
	TargetIDRef *v1.Reference `json:"targetIdRef,omitempty" tf:"-"`

	// Selector for a Endpoint to populate targetId.
	// +kubebuilder:validation:Optional
	TargetIDSelector *v1.Selector `json:"targetIdSelector,omitempty" tf:"-"`

	// (Block List, Max: 1) (see below for nested schema)
	Transformation []TransformationInitParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TransferObservation struct {

	// (String)
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String)
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Map of String)
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	OnCreateActivateMode *string `json:"onCreateActivateMode,omitempty" tf:"on_create_activate_mode,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Runtime []RuntimeObservation `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// (String)
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// (String)
	TargetID *string `json:"targetId,omitempty" tf:"target_id,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	Transformation []TransformationObservation `json:"transformation,omitempty" tf:"transformation,omitempty"`

	// (String)
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String)
	Warning *string `json:"warning,omitempty" tf:"warning,omitempty"`
}

type TransferParameters struct {

	// (String)
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Map of String)
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	OnCreateActivateMode *string `json:"onCreateActivateMode,omitempty" tf:"on_create_activate_mode,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Runtime []RuntimeParameters `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=Endpoint
	// +kubebuilder:validation:Optional
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// Reference to a Endpoint to populate sourceId.
	// +kubebuilder:validation:Optional
	SourceIDRef *v1.Reference `json:"sourceIdRef,omitempty" tf:"-"`

	// Selector for a Endpoint to populate sourceId.
	// +kubebuilder:validation:Optional
	SourceIDSelector *v1.Selector `json:"sourceIdSelector,omitempty" tf:"-"`

	// (String)
	// +crossplane:generate:reference:type=Endpoint
	// +kubebuilder:validation:Optional
	TargetID *string `json:"targetId,omitempty" tf:"target_id,omitempty"`

	// Reference to a Endpoint to populate targetId.
	// +kubebuilder:validation:Optional
	TargetIDRef *v1.Reference `json:"targetIdRef,omitempty" tf:"-"`

	// Selector for a Endpoint to populate targetId.
	// +kubebuilder:validation:Optional
	TargetIDSelector *v1.Selector `json:"targetIdSelector,omitempty" tf:"-"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformation []TransformationParameters `json:"transformation,omitempty" tf:"transformation,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TransformationInitParameters struct {

	// (Block List) (see below for nested schema)
	Transformers []TransformersInitParameters `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type TransformationObservation struct {

	// (Block List) (see below for nested schema)
	Transformers []TransformersObservation `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type TransformationParameters struct {

	// (Block List) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Transformers []TransformersParameters `json:"transformers,omitempty" tf:"transformers,omitempty"`
}

type TransformersInitParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	ConvertToString []ConvertToStringInitParameters `json:"convertToString,omitempty" tf:"convert_to_string,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	FilterColumns []FilterColumnsInitParameters `json:"filterColumns,omitempty" tf:"filter_columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	FilterRows []FilterRowsInitParameters `json:"filterRows,omitempty" tf:"filter_rows,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	MaskField []MaskFieldInitParameters `json:"maskField,omitempty" tf:"mask_field,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	RenameTables []RenameTablesInitParameters `json:"renameTables,omitempty" tf:"rename_tables,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	ReplacePrimaryKey []ReplacePrimaryKeyInitParameters `json:"replacePrimaryKey,omitempty" tf:"replace_primary_key,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	SharderTransformer []SharderTransformerInitParameters `json:"sharderTransformer,omitempty" tf:"sharder_transformer,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	TableSplitterTransformer []TableSplitterTransformerInitParameters `json:"tableSplitterTransformer,omitempty" tf:"table_splitter_transformer,omitempty"`
}

type TransformersObservation struct {

	// (Block List, Max: 1) (see below for nested schema)
	ConvertToString []ConvertToStringObservation `json:"convertToString,omitempty" tf:"convert_to_string,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	FilterColumns []FilterColumnsObservation `json:"filterColumns,omitempty" tf:"filter_columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	FilterRows []FilterRowsObservation `json:"filterRows,omitempty" tf:"filter_rows,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	MaskField []MaskFieldObservation `json:"maskField,omitempty" tf:"mask_field,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	RenameTables []RenameTablesObservation `json:"renameTables,omitempty" tf:"rename_tables,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	ReplacePrimaryKey []ReplacePrimaryKeyObservation `json:"replacePrimaryKey,omitempty" tf:"replace_primary_key,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	SharderTransformer []SharderTransformerObservation `json:"sharderTransformer,omitempty" tf:"sharder_transformer,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	TableSplitterTransformer []TableSplitterTransformerObservation `json:"tableSplitterTransformer,omitempty" tf:"table_splitter_transformer,omitempty"`
}

type TransformersParameters struct {

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ConvertToString []ConvertToStringParameters `json:"convertToString,omitempty" tf:"convert_to_string,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	FilterColumns []FilterColumnsParameters `json:"filterColumns,omitempty" tf:"filter_columns,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	FilterRows []FilterRowsParameters `json:"filterRows,omitempty" tf:"filter_rows,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	MaskField []MaskFieldParameters `json:"maskField,omitempty" tf:"mask_field,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	RenameTables []RenameTablesParameters `json:"renameTables,omitempty" tf:"rename_tables,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	ReplacePrimaryKey []ReplacePrimaryKeyParameters `json:"replacePrimaryKey,omitempty" tf:"replace_primary_key,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	SharderTransformer []SharderTransformerParameters `json:"sharderTransformer,omitempty" tf:"sharder_transformer,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	TableSplitterTransformer []TableSplitterTransformerParameters `json:"tableSplitterTransformer,omitempty" tf:"table_splitter_transformer,omitempty"`
}

type UploadShardParamsInitParameters struct {

	// (Number)
	JobCount *float64 `json:"jobCount,omitempty" tf:"job_count,omitempty"`

	// (Number)
	ProcessCount *float64 `json:"processCount,omitempty" tf:"process_count,omitempty"`
}

type UploadShardParamsObservation struct {

	// (Number)
	JobCount *float64 `json:"jobCount,omitempty" tf:"job_count,omitempty"`

	// (Number)
	ProcessCount *float64 `json:"processCount,omitempty" tf:"process_count,omitempty"`
}

type UploadShardParamsParameters struct {

	// (Number)
	// +kubebuilder:validation:Optional
	JobCount *float64 `json:"jobCount,omitempty" tf:"job_count,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	ProcessCount *float64 `json:"processCount,omitempty" tf:"process_count,omitempty"`
}

type YcRuntimeInitParameters struct {

	// (Number)
	JobCount *float64 `json:"jobCount,omitempty" tf:"job_count,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	UploadShardParams []UploadShardParamsInitParameters `json:"uploadShardParams,omitempty" tf:"upload_shard_params,omitempty"`
}

type YcRuntimeObservation struct {

	// (Number)
	JobCount *float64 `json:"jobCount,omitempty" tf:"job_count,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	UploadShardParams []UploadShardParamsObservation `json:"uploadShardParams,omitempty" tf:"upload_shard_params,omitempty"`
}

type YcRuntimeParameters struct {

	// (Number)
	// +kubebuilder:validation:Optional
	JobCount *float64 `json:"jobCount,omitempty" tf:"job_count,omitempty"`

	// (Block List, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	UploadShardParams []UploadShardParamsParameters `json:"uploadShardParams,omitempty" tf:"upload_shard_params,omitempty"`
}

// TransferSpec defines the desired state of Transfer
type TransferSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TransferParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TransferInitParameters `json:"initProvider,omitempty"`
}

// TransferStatus defines the observed state of Transfer.
type TransferStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TransferObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Transfer is the Schema for the Transfers API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type Transfer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TransferSpec   `json:"spec"`
	Status            TransferStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TransferList contains a list of Transfers
type TransferList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Transfer `json:"items"`
}

// Repository type metadata.
var (
	Transfer_Kind             = "Transfer"
	Transfer_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Transfer_Kind}.String()
	Transfer_KindAPIVersion   = Transfer_Kind + "." + CRDGroupVersion.String()
	Transfer_GroupVersionKind = CRDGroupVersion.WithKind(Transfer_Kind)
)

func init() {
	SchemeBuilder.Register(&Transfer{}, &TransferList{})
}
