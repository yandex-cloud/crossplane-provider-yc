//go:build !ignore_autogenerated

/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AltNamesInitParameters) DeepCopyInto(out *AltNamesInitParameters) {
	*out = *in
	if in.FromName != nil {
		in, out := &in.FromName, &out.FromName
		*out = new(string)
		**out = **in
	}
	if in.ToName != nil {
		in, out := &in.ToName, &out.ToName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AltNamesInitParameters.
func (in *AltNamesInitParameters) DeepCopy() *AltNamesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AltNamesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AltNamesObservation) DeepCopyInto(out *AltNamesObservation) {
	*out = *in
	if in.FromName != nil {
		in, out := &in.FromName, &out.FromName
		*out = new(string)
		**out = **in
	}
	if in.ToName != nil {
		in, out := &in.ToName, &out.ToName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AltNamesObservation.
func (in *AltNamesObservation) DeepCopy() *AltNamesObservation {
	if in == nil {
		return nil
	}
	out := new(AltNamesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AltNamesParameters) DeepCopyInto(out *AltNamesParameters) {
	*out = *in
	if in.FromName != nil {
		in, out := &in.FromName, &out.FromName
		*out = new(string)
		**out = **in
	}
	if in.ToName != nil {
		in, out := &in.ToName, &out.ToName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AltNamesParameters.
func (in *AltNamesParameters) DeepCopy() *AltNamesParameters {
	if in == nil {
		return nil
	}
	out := new(AltNamesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditTrailsV1ParserInitParameters) DeepCopyInto(out *AuditTrailsV1ParserInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditTrailsV1ParserInitParameters.
func (in *AuditTrailsV1ParserInitParameters) DeepCopy() *AuditTrailsV1ParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuditTrailsV1ParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditTrailsV1ParserObservation) DeepCopyInto(out *AuditTrailsV1ParserObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditTrailsV1ParserObservation.
func (in *AuditTrailsV1ParserObservation) DeepCopy() *AuditTrailsV1ParserObservation {
	if in == nil {
		return nil
	}
	out := new(AuditTrailsV1ParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditTrailsV1ParserParameters) DeepCopyInto(out *AuditTrailsV1ParserParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditTrailsV1ParserParameters.
func (in *AuditTrailsV1ParserParameters) DeepCopy() *AuditTrailsV1ParserParameters {
	if in == nil {
		return nil
	}
	out := new(AuditTrailsV1ParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthInitParameters) DeepCopyInto(out *AuthInitParameters) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]NoAuthInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]SaslInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthInitParameters.
func (in *AuthInitParameters) DeepCopy() *AuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthNoAuthInitParameters) DeepCopyInto(out *AuthNoAuthInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthNoAuthInitParameters.
func (in *AuthNoAuthInitParameters) DeepCopy() *AuthNoAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthNoAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthNoAuthObservation) DeepCopyInto(out *AuthNoAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthNoAuthObservation.
func (in *AuthNoAuthObservation) DeepCopy() *AuthNoAuthObservation {
	if in == nil {
		return nil
	}
	out := new(AuthNoAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthNoAuthParameters) DeepCopyInto(out *AuthNoAuthParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthNoAuthParameters.
func (in *AuthNoAuthParameters) DeepCopy() *AuthNoAuthParameters {
	if in == nil {
		return nil
	}
	out := new(AuthNoAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthObservation) DeepCopyInto(out *AuthObservation) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]NoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]SaslObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthObservation.
func (in *AuthObservation) DeepCopy() *AuthObservation {
	if in == nil {
		return nil
	}
	out := new(AuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthParameters) DeepCopyInto(out *AuthParameters) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]NoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]SaslParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthParameters.
func (in *AuthParameters) DeepCopy() *AuthParameters {
	if in == nil {
		return nil
	}
	out := new(AuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslInitParameters) DeepCopyInto(out *AuthSaslInitParameters) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]AuthSaslPasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslInitParameters.
func (in *AuthSaslInitParameters) DeepCopy() *AuthSaslInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSaslInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslObservation) DeepCopyInto(out *AuthSaslObservation) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]AuthSaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslObservation.
func (in *AuthSaslObservation) DeepCopy() *AuthSaslObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSaslObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslParameters) DeepCopyInto(out *AuthSaslParameters) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]AuthSaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslParameters.
func (in *AuthSaslParameters) DeepCopy() *AuthSaslParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSaslParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslPasswordInitParameters) DeepCopyInto(out *AuthSaslPasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslPasswordInitParameters.
func (in *AuthSaslPasswordInitParameters) DeepCopy() *AuthSaslPasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSaslPasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslPasswordObservation) DeepCopyInto(out *AuthSaslPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslPasswordObservation.
func (in *AuthSaslPasswordObservation) DeepCopy() *AuthSaslPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(AuthSaslPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthSaslPasswordParameters) DeepCopyInto(out *AuthSaslPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthSaslPasswordParameters.
func (in *AuthSaslPasswordParameters) DeepCopy() *AuthSaslPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(AuthSaslPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseSourceInitParameters) DeepCopyInto(out *ClickhouseSourceInitParameters) {
	*out = *in
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseSourceInitParameters.
func (in *ClickhouseSourceInitParameters) DeepCopy() *ClickhouseSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseSourceObservation) DeepCopyInto(out *ClickhouseSourceObservation) {
	*out = *in
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseSourceObservation.
func (in *ClickhouseSourceObservation) DeepCopy() *ClickhouseSourceObservation {
	if in == nil {
		return nil
	}
	out := new(ClickhouseSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseSourceParameters) DeepCopyInto(out *ClickhouseSourceParameters) {
	*out = *in
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseSourceParameters.
func (in *ClickhouseSourceParameters) DeepCopy() *ClickhouseSourceParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetConnectionInitParameters) DeepCopyInto(out *ClickhouseTargetConnectionInitParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionConnectionOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetConnectionInitParameters.
func (in *ClickhouseTargetConnectionInitParameters) DeepCopy() *ClickhouseTargetConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetConnectionObservation) DeepCopyInto(out *ClickhouseTargetConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetConnectionObservation.
func (in *ClickhouseTargetConnectionObservation) DeepCopy() *ClickhouseTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetConnectionParameters) DeepCopyInto(out *ClickhouseTargetConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetConnectionParameters.
func (in *ClickhouseTargetConnectionParameters) DeepCopy() *ClickhouseTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetInitParameters) DeepCopyInto(out *ClickhouseTargetInitParameters) {
	*out = *in
	if in.AltNames != nil {
		in, out := &in.AltNames, &out.AltNames
		*out = make([]AltNamesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ClickhouseTargetConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Sharding != nil {
		in, out := &in.Sharding, &out.Sharding
		*out = make([]ShardingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetInitParameters.
func (in *ClickhouseTargetInitParameters) DeepCopy() *ClickhouseTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetObservation) DeepCopyInto(out *ClickhouseTargetObservation) {
	*out = *in
	if in.AltNames != nil {
		in, out := &in.AltNames, &out.AltNames
		*out = make([]AltNamesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ClickhouseTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Sharding != nil {
		in, out := &in.Sharding, &out.Sharding
		*out = make([]ShardingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetObservation.
func (in *ClickhouseTargetObservation) DeepCopy() *ClickhouseTargetObservation {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseTargetParameters) DeepCopyInto(out *ClickhouseTargetParameters) {
	*out = *in
	if in.AltNames != nil {
		in, out := &in.AltNames, &out.AltNames
		*out = make([]AltNamesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.ClickhouseClusterName != nil {
		in, out := &in.ClickhouseClusterName, &out.ClickhouseClusterName
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]ClickhouseTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Sharding != nil {
		in, out := &in.Sharding, &out.Sharding
		*out = make([]ShardingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseTargetParameters.
func (in *ClickhouseTargetParameters) DeepCopy() *ClickhouseTargetParameters {
	if in == nil {
		return nil
	}
	out := new(ClickhouseTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingParserInitParameters) DeepCopyInto(out *CloudLoggingParserInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingParserInitParameters.
func (in *CloudLoggingParserInitParameters) DeepCopy() *CloudLoggingParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingParserObservation) DeepCopyInto(out *CloudLoggingParserObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingParserObservation.
func (in *CloudLoggingParserObservation) DeepCopy() *CloudLoggingParserObservation {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudLoggingParserParameters) DeepCopyInto(out *CloudLoggingParserParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudLoggingParserParameters.
func (in *CloudLoggingParserParameters) DeepCopy() *CloudLoggingParserParameters {
	if in == nil {
		return nil
	}
	out := new(CloudLoggingParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionsInitParameters) DeepCopyInto(out *CollectionsInitParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionsInitParameters.
func (in *CollectionsInitParameters) DeepCopy() *CollectionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CollectionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionsObservation) DeepCopyInto(out *CollectionsObservation) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionsObservation.
func (in *CollectionsObservation) DeepCopy() *CollectionsObservation {
	if in == nil {
		return nil
	}
	out := new(CollectionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CollectionsParameters) DeepCopyInto(out *CollectionsParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CollectionsParameters.
func (in *CollectionsParameters) DeepCopy() *CollectionsParameters {
	if in == nil {
		return nil
	}
	out := new(CollectionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueHashInitParameters) DeepCopyInto(out *ColumnValueHashInitParameters) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueHashInitParameters.
func (in *ColumnValueHashInitParameters) DeepCopy() *ColumnValueHashInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnValueHashInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueHashObservation) DeepCopyInto(out *ColumnValueHashObservation) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueHashObservation.
func (in *ColumnValueHashObservation) DeepCopy() *ColumnValueHashObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnValueHashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueHashParameters) DeepCopyInto(out *ColumnValueHashParameters) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueHashParameters.
func (in *ColumnValueHashParameters) DeepCopy() *ColumnValueHashParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnValueHashParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueInitParameters) DeepCopyInto(out *ColumnValueInitParameters) {
	*out = *in
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueInitParameters.
func (in *ColumnValueInitParameters) DeepCopy() *ColumnValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueObservation) DeepCopyInto(out *ColumnValueObservation) {
	*out = *in
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueObservation.
func (in *ColumnValueObservation) DeepCopy() *ColumnValueObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnValueParameters) DeepCopyInto(out *ColumnValueParameters) {
	*out = *in
	if in.StringValue != nil {
		in, out := &in.StringValue, &out.StringValue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnValueParameters.
func (in *ColumnValueParameters) DeepCopy() *ColumnValueParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsInitParameters) DeepCopyInto(out *ColumnsInitParameters) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsInitParameters.
func (in *ColumnsInitParameters) DeepCopy() *ColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsObservation) DeepCopyInto(out *ColumnsObservation) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsObservation.
func (in *ColumnsObservation) DeepCopy() *ColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(ColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColumnsParameters) DeepCopyInto(out *ColumnsParameters) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColumnsParameters.
func (in *ColumnsParameters) DeepCopy() *ColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(ColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsInitParameters) DeepCopyInto(out *ConnectionConnectionOptionsInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOptionsOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionOptionsPasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsInitParameters.
func (in *ConnectionConnectionOptionsInitParameters) DeepCopy() *ConnectionConnectionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsObservation) DeepCopyInto(out *ConnectionConnectionOptionsObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOptionsOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsObservation.
func (in *ConnectionConnectionOptionsObservation) DeepCopy() *ConnectionConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseInitParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOptionsOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseInitParameters.
func (in *ConnectionConnectionOptionsOnPremiseInitParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOptionsOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseObservation.
func (in *ConnectionConnectionOptionsOnPremiseObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOptionsOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseParameters.
func (in *ConnectionConnectionOptionsOnPremiseParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeDisabledInitParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledInitParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeEnabledInitParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledInitParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeInitParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeInitParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeInitParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeObservation) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeObservation.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeObservation) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeParameters) DeepCopyInto(out *ConnectionConnectionOptionsOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsOnPremiseTLSModeParameters.
func (in *ConnectionConnectionOptionsOnPremiseTLSModeParameters) DeepCopy() *ConnectionConnectionOptionsOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsParameters) DeepCopyInto(out *ConnectionConnectionOptionsParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOptionsOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsParameters.
func (in *ConnectionConnectionOptionsParameters) DeepCopy() *ConnectionConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsPasswordInitParameters) DeepCopyInto(out *ConnectionConnectionOptionsPasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsPasswordInitParameters.
func (in *ConnectionConnectionOptionsPasswordInitParameters) DeepCopy() *ConnectionConnectionOptionsPasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsPasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsPasswordObservation) DeepCopyInto(out *ConnectionConnectionOptionsPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsPasswordObservation.
func (in *ConnectionConnectionOptionsPasswordObservation) DeepCopy() *ConnectionConnectionOptionsPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionConnectionOptionsPasswordParameters) DeepCopyInto(out *ConnectionConnectionOptionsPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionConnectionOptionsPasswordParameters.
func (in *ConnectionConnectionOptionsPasswordParameters) DeepCopy() *ConnectionConnectionOptionsPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionConnectionOptionsPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInitParameters) DeepCopyInto(out *ConnectionInitParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInitParameters.
func (in *ConnectionInitParameters) DeepCopy() *ConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseInitParameters) DeepCopyInto(out *ConnectionOnPremiseInitParameters) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseInitParameters.
func (in *ConnectionOnPremiseInitParameters) DeepCopy() *ConnectionOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseObservation) DeepCopyInto(out *ConnectionOnPremiseObservation) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseObservation.
func (in *ConnectionOnPremiseObservation) DeepCopy() *ConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseParameters) DeepCopyInto(out *ConnectionOnPremiseParameters) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseParameters.
func (in *ConnectionOnPremiseParameters) DeepCopy() *ConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeDisabledInitParameters.
func (in *ConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopy() *ConnectionOnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *ConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeDisabledObservation.
func (in *ConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *ConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeDisabledParameters.
func (in *ConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *ConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeEnabledInitParameters.
func (in *ConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopy() *ConnectionOnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *ConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeEnabledObservation.
func (in *ConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *ConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeEnabledParameters.
func (in *ConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *ConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeInitParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]OnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]OnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeInitParameters.
func (in *ConnectionOnPremiseTLSModeInitParameters) DeepCopy() *ConnectionOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *ConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]OnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]OnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeObservation.
func (in *ConnectionOnPremiseTLSModeObservation) DeepCopy() *ConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *ConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]OnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]OnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOnPremiseTLSModeParameters.
func (in *ConnectionOnPremiseTLSModeParameters) DeepCopy() *ConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsInitParameters) DeepCopyInto(out *ConnectionOptionsInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]OnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsInitParameters.
func (in *ConnectionOptionsInitParameters) DeepCopy() *ConnectionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsObservation) DeepCopyInto(out *ConnectionOptionsObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]OnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsObservation.
func (in *ConnectionOptionsObservation) DeepCopy() *ConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseInitParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseInitParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]OnPremiseShardsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]OnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseInitParameters.
func (in *ConnectionOptionsOnPremiseInitParameters) DeepCopy() *ConnectionOptionsOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseObservation) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]OnPremiseShardsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]OnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseObservation.
func (in *ConnectionOptionsOnPremiseObservation) DeepCopy() *ConnectionOptionsOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]OnPremiseShardsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]OnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseParameters.
func (in *ConnectionOptionsOnPremiseParameters) DeepCopy() *ConnectionOptionsOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeDisabledInitParameters.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledInitParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeDisabledObservation.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledObservation) DeepCopy() *ConnectionOptionsOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeDisabledParameters.
func (in *ConnectionOptionsOnPremiseTLSModeDisabledParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeEnabledInitParameters.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledInitParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeEnabledObservation.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledObservation) DeepCopy() *ConnectionOptionsOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeEnabledParameters.
func (in *ConnectionOptionsOnPremiseTLSModeEnabledParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeInitParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeInitParameters.
func (in *ConnectionOptionsOnPremiseTLSModeInitParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeObservation) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeObservation.
func (in *ConnectionOptionsOnPremiseTLSModeObservation) DeepCopy() *ConnectionOptionsOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsOnPremiseTLSModeParameters) DeepCopyInto(out *ConnectionOptionsOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOptionsOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsOnPremiseTLSModeParameters.
func (in *ConnectionOptionsOnPremiseTLSModeParameters) DeepCopy() *ConnectionOptionsOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsParameters) DeepCopyInto(out *ConnectionOptionsParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]OnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsParameters.
func (in *ConnectionOptionsParameters) DeepCopy() *ConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsPasswordInitParameters) DeepCopyInto(out *ConnectionOptionsPasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsPasswordInitParameters.
func (in *ConnectionOptionsPasswordInitParameters) DeepCopy() *ConnectionOptionsPasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsPasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsPasswordObservation) DeepCopyInto(out *ConnectionOptionsPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsPasswordObservation.
func (in *ConnectionOptionsPasswordObservation) DeepCopy() *ConnectionOptionsPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionOptionsPasswordParameters) DeepCopyInto(out *ConnectionOptionsPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionOptionsPasswordParameters.
func (in *ConnectionOptionsPasswordParameters) DeepCopy() *ConnectionOptionsPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionOptionsPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]ConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConvertToStringInitParameters) DeepCopyInto(out *ConvertToStringInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConvertToStringInitParameters.
func (in *ConvertToStringInitParameters) DeepCopy() *ConvertToStringInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConvertToStringInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConvertToStringObservation) DeepCopyInto(out *ConvertToStringObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConvertToStringObservation.
func (in *ConvertToStringObservation) DeepCopy() *ConvertToStringObservation {
	if in == nil {
		return nil
	}
	out := new(ConvertToStringObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConvertToStringParameters) DeepCopyInto(out *ConvertToStringParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]ColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConvertToStringParameters.
func (in *ConvertToStringParameters) DeepCopy() *ConvertToStringParameters {
	if in == nil {
		return nil
	}
	out := new(ConvertToStringParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMappingInitParameters) DeepCopyInto(out *CustomMappingInitParameters) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]MappingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMappingInitParameters.
func (in *CustomMappingInitParameters) DeepCopy() *CustomMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMappingObservation) DeepCopyInto(out *CustomMappingObservation) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]MappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMappingObservation.
func (in *CustomMappingObservation) DeepCopy() *CustomMappingObservation {
	if in == nil {
		return nil
	}
	out := new(CustomMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomMappingParameters) DeepCopyInto(out *CustomMappingParameters) {
	*out = *in
	if in.ColumnName != nil {
		in, out := &in.ColumnName, &out.ColumnName
		*out = new(string)
		**out = **in
	}
	if in.Mapping != nil {
		in, out := &in.Mapping, &out.Mapping
		*out = make([]MappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomMappingParameters.
func (in *CustomMappingParameters) DeepCopy() *CustomMappingParameters {
	if in == nil {
		return nil
	}
	out := new(CustomMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsFieldsInitParameters) DeepCopyInto(out *DataSchemaFieldsFieldsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsFieldsInitParameters.
func (in *DataSchemaFieldsFieldsInitParameters) DeepCopy() *DataSchemaFieldsFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsFieldsObservation) DeepCopyInto(out *DataSchemaFieldsFieldsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsFieldsObservation.
func (in *DataSchemaFieldsFieldsObservation) DeepCopy() *DataSchemaFieldsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsFieldsParameters) DeepCopyInto(out *DataSchemaFieldsFieldsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsFieldsParameters.
func (in *DataSchemaFieldsFieldsParameters) DeepCopy() *DataSchemaFieldsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsInitParameters) DeepCopyInto(out *DataSchemaFieldsInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsInitParameters.
func (in *DataSchemaFieldsInitParameters) DeepCopy() *DataSchemaFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsObservation) DeepCopyInto(out *DataSchemaFieldsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsObservation.
func (in *DataSchemaFieldsObservation) DeepCopy() *DataSchemaFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaFieldsParameters) DeepCopyInto(out *DataSchemaFieldsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaFieldsParameters.
func (in *DataSchemaFieldsParameters) DeepCopy() *DataSchemaFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaInitParameters) DeepCopyInto(out *DataSchemaInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaInitParameters.
func (in *DataSchemaInitParameters) DeepCopy() *DataSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaObservation) DeepCopyInto(out *DataSchemaObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaObservation.
func (in *DataSchemaObservation) DeepCopy() *DataSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(DataSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSchemaParameters) DeepCopyInto(out *DataSchemaParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSchemaParameters.
func (in *DataSchemaParameters) DeepCopy() *DataSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(DataSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisabledInitParameters) DeepCopyInto(out *DisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisabledInitParameters.
func (in *DisabledInitParameters) DeepCopy() *DisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(DisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisabledObservation) DeepCopyInto(out *DisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisabledObservation.
func (in *DisabledObservation) DeepCopy() *DisabledObservation {
	if in == nil {
		return nil
	}
	out := new(DisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DisabledParameters) DeepCopyInto(out *DisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DisabledParameters.
func (in *DisabledParameters) DeepCopy() *DisabledParameters {
	if in == nil {
		return nil
	}
	out := new(DisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledInitParameters) DeepCopyInto(out *EnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledInitParameters.
func (in *EnabledInitParameters) DeepCopy() *EnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledObservation) DeepCopyInto(out *EnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledObservation.
func (in *EnabledObservation) DeepCopy() *EnabledObservation {
	if in == nil {
		return nil
	}
	out := new(EnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnabledParameters) DeepCopyInto(out *EnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnabledParameters.
func (in *EnabledParameters) DeepCopy() *EnabledParameters {
	if in == nil {
		return nil
	}
	out := new(EnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Endpoint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointInitParameters) DeepCopyInto(out *EndpointInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointInitParameters.
func (in *EndpointInitParameters) DeepCopy() *EndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointList) DeepCopyInto(out *EndpointList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Endpoint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointList.
func (in *EndpointList) DeepCopy() *EndpointList {
	if in == nil {
		return nil
	}
	out := new(EndpointList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EndpointList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointObservation) DeepCopyInto(out *EndpointObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointObservation.
func (in *EndpointObservation) DeepCopy() *EndpointObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointParameters) DeepCopyInto(out *EndpointParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointParameters.
func (in *EndpointParameters) DeepCopy() *EndpointParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointSpec) DeepCopyInto(out *EndpointSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointSpec.
func (in *EndpointSpec) DeepCopy() *EndpointSpec {
	if in == nil {
		return nil
	}
	out := new(EndpointSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointStatus) DeepCopyInto(out *EndpointStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointStatus.
func (in *EndpointStatus) DeepCopy() *EndpointStatus {
	if in == nil {
		return nil
	}
	out := new(EndpointStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedCollectionsInitParameters) DeepCopyInto(out *ExcludedCollectionsInitParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedCollectionsInitParameters.
func (in *ExcludedCollectionsInitParameters) DeepCopy() *ExcludedCollectionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludedCollectionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedCollectionsObservation) DeepCopyInto(out *ExcludedCollectionsObservation) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedCollectionsObservation.
func (in *ExcludedCollectionsObservation) DeepCopy() *ExcludedCollectionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExcludedCollectionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExcludedCollectionsParameters) DeepCopyInto(out *ExcludedCollectionsParameters) {
	*out = *in
	if in.CollectionName != nil {
		in, out := &in.CollectionName, &out.CollectionName
		*out = new(string)
		**out = **in
	}
	if in.DatabaseName != nil {
		in, out := &in.DatabaseName, &out.DatabaseName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExcludedCollectionsParameters.
func (in *ExcludedCollectionsParameters) DeepCopy() *ExcludedCollectionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExcludedCollectionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsFieldsInitParameters) DeepCopyInto(out *FieldsFieldsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsFieldsInitParameters.
func (in *FieldsFieldsInitParameters) DeepCopy() *FieldsFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsFieldsObservation) DeepCopyInto(out *FieldsFieldsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsFieldsObservation.
func (in *FieldsFieldsObservation) DeepCopy() *FieldsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(FieldsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsFieldsParameters) DeepCopyInto(out *FieldsFieldsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsFieldsParameters.
func (in *FieldsFieldsParameters) DeepCopy() *FieldsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsInitParameters) DeepCopyInto(out *FieldsInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsInitParameters.
func (in *FieldsInitParameters) DeepCopy() *FieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsObservation) DeepCopyInto(out *FieldsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsObservation.
func (in *FieldsObservation) DeepCopy() *FieldsObservation {
	if in == nil {
		return nil
	}
	out := new(FieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldsParameters) DeepCopyInto(out *FieldsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]FieldsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldsParameters.
func (in *FieldsParameters) DeepCopy() *FieldsParameters {
	if in == nil {
		return nil
	}
	out := new(FieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsColumnsInitParameters) DeepCopyInto(out *FilterColumnsColumnsInitParameters) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsColumnsInitParameters.
func (in *FilterColumnsColumnsInitParameters) DeepCopy() *FilterColumnsColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsColumnsObservation) DeepCopyInto(out *FilterColumnsColumnsObservation) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsColumnsObservation.
func (in *FilterColumnsColumnsObservation) DeepCopy() *FilterColumnsColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsColumnsParameters) DeepCopyInto(out *FilterColumnsColumnsParameters) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsColumnsParameters.
func (in *FilterColumnsColumnsParameters) DeepCopy() *FilterColumnsColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsInitParameters) DeepCopyInto(out *FilterColumnsInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]FilterColumnsColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]FilterColumnsTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsInitParameters.
func (in *FilterColumnsInitParameters) DeepCopy() *FilterColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsObservation) DeepCopyInto(out *FilterColumnsObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]FilterColumnsColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]FilterColumnsTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsObservation.
func (in *FilterColumnsObservation) DeepCopy() *FilterColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsParameters) DeepCopyInto(out *FilterColumnsParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]FilterColumnsColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]FilterColumnsTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsParameters.
func (in *FilterColumnsParameters) DeepCopy() *FilterColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsTablesInitParameters) DeepCopyInto(out *FilterColumnsTablesInitParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsTablesInitParameters.
func (in *FilterColumnsTablesInitParameters) DeepCopy() *FilterColumnsTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsTablesObservation) DeepCopyInto(out *FilterColumnsTablesObservation) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsTablesObservation.
func (in *FilterColumnsTablesObservation) DeepCopy() *FilterColumnsTablesObservation {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterColumnsTablesParameters) DeepCopyInto(out *FilterColumnsTablesParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterColumnsTablesParameters.
func (in *FilterColumnsTablesParameters) DeepCopy() *FilterColumnsTablesParameters {
	if in == nil {
		return nil
	}
	out := new(FilterColumnsTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRowsInitParameters) DeepCopyInto(out *FilterRowsInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]FilterRowsTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRowsInitParameters.
func (in *FilterRowsInitParameters) DeepCopy() *FilterRowsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterRowsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRowsObservation) DeepCopyInto(out *FilterRowsObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]FilterRowsTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRowsObservation.
func (in *FilterRowsObservation) DeepCopy() *FilterRowsObservation {
	if in == nil {
		return nil
	}
	out := new(FilterRowsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRowsParameters) DeepCopyInto(out *FilterRowsParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]FilterRowsTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRowsParameters.
func (in *FilterRowsParameters) DeepCopy() *FilterRowsParameters {
	if in == nil {
		return nil
	}
	out := new(FilterRowsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRowsTablesInitParameters) DeepCopyInto(out *FilterRowsTablesInitParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRowsTablesInitParameters.
func (in *FilterRowsTablesInitParameters) DeepCopy() *FilterRowsTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FilterRowsTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRowsTablesObservation) DeepCopyInto(out *FilterRowsTablesObservation) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRowsTablesObservation.
func (in *FilterRowsTablesObservation) DeepCopy() *FilterRowsTablesObservation {
	if in == nil {
		return nil
	}
	out := new(FilterRowsTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterRowsTablesParameters) DeepCopyInto(out *FilterRowsTablesParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterRowsTablesParameters.
func (in *FilterRowsTablesParameters) DeepCopy() *FilterRowsTablesParameters {
	if in == nil {
		return nil
	}
	out := new(FilterRowsTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionInitParameters) DeepCopyInto(out *FunctionInitParameters) {
	*out = *in
	if in.MaskFunctionHash != nil {
		in, out := &in.MaskFunctionHash, &out.MaskFunctionHash
		*out = make([]MaskFunctionHashInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionInitParameters.
func (in *FunctionInitParameters) DeepCopy() *FunctionInitParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionObservation) DeepCopyInto(out *FunctionObservation) {
	*out = *in
	if in.MaskFunctionHash != nil {
		in, out := &in.MaskFunctionHash, &out.MaskFunctionHash
		*out = make([]MaskFunctionHashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionObservation.
func (in *FunctionObservation) DeepCopy() *FunctionObservation {
	if in == nil {
		return nil
	}
	out := new(FunctionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FunctionParameters) DeepCopyInto(out *FunctionParameters) {
	*out = *in
	if in.MaskFunctionHash != nil {
		in, out := &in.MaskFunctionHash, &out.MaskFunctionHash
		*out = make([]MaskFunctionHashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FunctionParameters.
func (in *FunctionParameters) DeepCopy() *FunctionParameters {
	if in == nil {
		return nil
	}
	out := new(FunctionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaFieldsFieldsInitParameters) DeepCopyInto(out *JSONParserDataSchemaFieldsFieldsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaFieldsFieldsInitParameters.
func (in *JSONParserDataSchemaFieldsFieldsInitParameters) DeepCopy() *JSONParserDataSchemaFieldsFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaFieldsFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaFieldsFieldsObservation) DeepCopyInto(out *JSONParserDataSchemaFieldsFieldsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaFieldsFieldsObservation.
func (in *JSONParserDataSchemaFieldsFieldsObservation) DeepCopy() *JSONParserDataSchemaFieldsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaFieldsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaFieldsFieldsParameters) DeepCopyInto(out *JSONParserDataSchemaFieldsFieldsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaFieldsFieldsParameters.
func (in *JSONParserDataSchemaFieldsFieldsParameters) DeepCopy() *JSONParserDataSchemaFieldsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaFieldsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaFieldsInitParameters) DeepCopyInto(out *JSONParserDataSchemaFieldsInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]JSONParserDataSchemaFieldsFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaFieldsInitParameters.
func (in *JSONParserDataSchemaFieldsInitParameters) DeepCopy() *JSONParserDataSchemaFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaFieldsObservation) DeepCopyInto(out *JSONParserDataSchemaFieldsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]JSONParserDataSchemaFieldsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaFieldsObservation.
func (in *JSONParserDataSchemaFieldsObservation) DeepCopy() *JSONParserDataSchemaFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaFieldsParameters) DeepCopyInto(out *JSONParserDataSchemaFieldsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]JSONParserDataSchemaFieldsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaFieldsParameters.
func (in *JSONParserDataSchemaFieldsParameters) DeepCopy() *JSONParserDataSchemaFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaInitParameters) DeepCopyInto(out *JSONParserDataSchemaInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]JSONParserDataSchemaFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaInitParameters.
func (in *JSONParserDataSchemaInitParameters) DeepCopy() *JSONParserDataSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaObservation) DeepCopyInto(out *JSONParserDataSchemaObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]JSONParserDataSchemaFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaObservation.
func (in *JSONParserDataSchemaObservation) DeepCopy() *JSONParserDataSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserDataSchemaParameters) DeepCopyInto(out *JSONParserDataSchemaParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]JSONParserDataSchemaFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserDataSchemaParameters.
func (in *JSONParserDataSchemaParameters) DeepCopy() *JSONParserDataSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserDataSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserInitParameters) DeepCopyInto(out *JSONParserInitParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]DataSchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserInitParameters.
func (in *JSONParserInitParameters) DeepCopy() *JSONParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserObservation) DeepCopyInto(out *JSONParserObservation) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]DataSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserObservation.
func (in *JSONParserObservation) DeepCopy() *JSONParserObservation {
	if in == nil {
		return nil
	}
	out := new(JSONParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JSONParserParameters) DeepCopyInto(out *JSONParserParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]DataSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JSONParserParameters.
func (in *JSONParserParameters) DeepCopy() *JSONParserParameters {
	if in == nil {
		return nil
	}
	out := new(JSONParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceConnectionInitParameters) DeepCopyInto(out *KafkaSourceConnectionInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceConnectionInitParameters.
func (in *KafkaSourceConnectionInitParameters) DeepCopy() *KafkaSourceConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceConnectionObservation) DeepCopyInto(out *KafkaSourceConnectionObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceConnectionObservation.
func (in *KafkaSourceConnectionObservation) DeepCopy() *KafkaSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceConnectionParameters) DeepCopyInto(out *KafkaSourceConnectionParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceConnectionParameters.
func (in *KafkaSourceConnectionParameters) DeepCopy() *KafkaSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceInitParameters) DeepCopyInto(out *KafkaSourceInitParameters) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]AuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaSourceConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicNames != nil {
		in, out := &in.TopicNames, &out.TopicNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Transformer != nil {
		in, out := &in.Transformer, &out.Transformer
		*out = make([]TransformerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceInitParameters.
func (in *KafkaSourceInitParameters) DeepCopy() *KafkaSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceObservation) DeepCopyInto(out *KafkaSourceObservation) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]AuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicNames != nil {
		in, out := &in.TopicNames, &out.TopicNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Transformer != nil {
		in, out := &in.Transformer, &out.Transformer
		*out = make([]TransformerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceObservation.
func (in *KafkaSourceObservation) DeepCopy() *KafkaSourceObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaSourceParameters) DeepCopyInto(out *KafkaSourceParameters) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]AuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicNames != nil {
		in, out := &in.TopicNames, &out.TopicNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Transformer != nil {
		in, out := &in.Transformer, &out.Transformer
		*out = make([]TransformerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaSourceParameters.
func (in *KafkaSourceParameters) DeepCopy() *KafkaSourceParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetAuthInitParameters) DeepCopyInto(out *KafkaTargetAuthInitParameters) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]AuthNoAuthInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]AuthSaslInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetAuthInitParameters.
func (in *KafkaTargetAuthInitParameters) DeepCopy() *KafkaTargetAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetAuthObservation) DeepCopyInto(out *KafkaTargetAuthObservation) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]AuthNoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]AuthSaslObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetAuthObservation.
func (in *KafkaTargetAuthObservation) DeepCopy() *KafkaTargetAuthObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetAuthParameters) DeepCopyInto(out *KafkaTargetAuthParameters) {
	*out = *in
	if in.NoAuth != nil {
		in, out := &in.NoAuth, &out.NoAuth
		*out = make([]AuthNoAuthParameters, len(*in))
		copy(*out, *in)
	}
	if in.Sasl != nil {
		in, out := &in.Sasl, &out.Sasl
		*out = make([]AuthSaslParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetAuthParameters.
func (in *KafkaTargetAuthParameters) DeepCopy() *KafkaTargetAuthParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionInitParameters) DeepCopyInto(out *KafkaTargetConnectionInitParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]KafkaTargetConnectionOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionInitParameters.
func (in *KafkaTargetConnectionInitParameters) DeepCopy() *KafkaTargetConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionObservation) DeepCopyInto(out *KafkaTargetConnectionObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]KafkaTargetConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionObservation.
func (in *KafkaTargetConnectionObservation) DeepCopy() *KafkaTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseInitParameters) DeepCopyInto(out *KafkaTargetConnectionOnPremiseInitParameters) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]KafkaTargetConnectionOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseInitParameters.
func (in *KafkaTargetConnectionOnPremiseInitParameters) DeepCopy() *KafkaTargetConnectionOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseObservation) DeepCopyInto(out *KafkaTargetConnectionOnPremiseObservation) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]KafkaTargetConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseObservation.
func (in *KafkaTargetConnectionOnPremiseObservation) DeepCopy() *KafkaTargetConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseParameters) DeepCopyInto(out *KafkaTargetConnectionOnPremiseParameters) {
	*out = *in
	if in.BrokerUrls != nil {
		in, out := &in.BrokerUrls, &out.BrokerUrls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]KafkaTargetConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseParameters.
func (in *KafkaTargetConnectionOnPremiseParameters) DeepCopy() *KafkaTargetConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseTLSModeInitParameters) DeepCopyInto(out *KafkaTargetConnectionOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseTLSModeInitParameters.
func (in *KafkaTargetConnectionOnPremiseTLSModeInitParameters) DeepCopy() *KafkaTargetConnectionOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *KafkaTargetConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseTLSModeObservation.
func (in *KafkaTargetConnectionOnPremiseTLSModeObservation) DeepCopy() *KafkaTargetConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *KafkaTargetConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]ConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]ConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionOnPremiseTLSModeParameters.
func (in *KafkaTargetConnectionOnPremiseTLSModeParameters) DeepCopy() *KafkaTargetConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetConnectionParameters) DeepCopyInto(out *KafkaTargetConnectionParameters) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]KafkaTargetConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetConnectionParameters.
func (in *KafkaTargetConnectionParameters) DeepCopy() *KafkaTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetInitParameters) DeepCopyInto(out *KafkaTargetInitParameters) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]KafkaTargetAuthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaTargetConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]SerializerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicSettings != nil {
		in, out := &in.TopicSettings, &out.TopicSettings
		*out = make([]TopicSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetInitParameters.
func (in *KafkaTargetInitParameters) DeepCopy() *KafkaTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetObservation) DeepCopyInto(out *KafkaTargetObservation) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]KafkaTargetAuthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]SerializerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicSettings != nil {
		in, out := &in.TopicSettings, &out.TopicSettings
		*out = make([]TopicSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetObservation.
func (in *KafkaTargetObservation) DeepCopy() *KafkaTargetObservation {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaTargetParameters) DeepCopyInto(out *KafkaTargetParameters) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = make([]KafkaTargetAuthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]KafkaTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]SerializerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicSettings != nil {
		in, out := &in.TopicSettings, &out.TopicSettings
		*out = make([]TopicSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaTargetParameters.
func (in *KafkaTargetParameters) DeepCopy() *KafkaTargetParameters {
	if in == nil {
		return nil
	}
	out := new(KafkaTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingInitParameters) DeepCopyInto(out *MappingInitParameters) {
	*out = *in
	if in.ColumnValue != nil {
		in, out := &in.ColumnValue, &out.ColumnValue
		*out = make([]ColumnValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardName != nil {
		in, out := &in.ShardName, &out.ShardName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingInitParameters.
func (in *MappingInitParameters) DeepCopy() *MappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(MappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingObservation) DeepCopyInto(out *MappingObservation) {
	*out = *in
	if in.ColumnValue != nil {
		in, out := &in.ColumnValue, &out.ColumnValue
		*out = make([]ColumnValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardName != nil {
		in, out := &in.ShardName, &out.ShardName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingObservation.
func (in *MappingObservation) DeepCopy() *MappingObservation {
	if in == nil {
		return nil
	}
	out := new(MappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MappingParameters) DeepCopyInto(out *MappingParameters) {
	*out = *in
	if in.ColumnValue != nil {
		in, out := &in.ColumnValue, &out.ColumnValue
		*out = make([]ColumnValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardName != nil {
		in, out := &in.ShardName, &out.ShardName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MappingParameters.
func (in *MappingParameters) DeepCopy() *MappingParameters {
	if in == nil {
		return nil
	}
	out := new(MappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFieldInitParameters) DeepCopyInto(out *MaskFieldInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = make([]FunctionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]MaskFieldTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFieldInitParameters.
func (in *MaskFieldInitParameters) DeepCopy() *MaskFieldInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaskFieldInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFieldObservation) DeepCopyInto(out *MaskFieldObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = make([]FunctionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]MaskFieldTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFieldObservation.
func (in *MaskFieldObservation) DeepCopy() *MaskFieldObservation {
	if in == nil {
		return nil
	}
	out := new(MaskFieldObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFieldParameters) DeepCopyInto(out *MaskFieldParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = make([]FunctionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]MaskFieldTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFieldParameters.
func (in *MaskFieldParameters) DeepCopy() *MaskFieldParameters {
	if in == nil {
		return nil
	}
	out := new(MaskFieldParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFieldTablesInitParameters) DeepCopyInto(out *MaskFieldTablesInitParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFieldTablesInitParameters.
func (in *MaskFieldTablesInitParameters) DeepCopy() *MaskFieldTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaskFieldTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFieldTablesObservation) DeepCopyInto(out *MaskFieldTablesObservation) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFieldTablesObservation.
func (in *MaskFieldTablesObservation) DeepCopy() *MaskFieldTablesObservation {
	if in == nil {
		return nil
	}
	out := new(MaskFieldTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFieldTablesParameters) DeepCopyInto(out *MaskFieldTablesParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFieldTablesParameters.
func (in *MaskFieldTablesParameters) DeepCopy() *MaskFieldTablesParameters {
	if in == nil {
		return nil
	}
	out := new(MaskFieldTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFunctionHashInitParameters) DeepCopyInto(out *MaskFunctionHashInitParameters) {
	*out = *in
	if in.UserDefinedSalt != nil {
		in, out := &in.UserDefinedSalt, &out.UserDefinedSalt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFunctionHashInitParameters.
func (in *MaskFunctionHashInitParameters) DeepCopy() *MaskFunctionHashInitParameters {
	if in == nil {
		return nil
	}
	out := new(MaskFunctionHashInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFunctionHashObservation) DeepCopyInto(out *MaskFunctionHashObservation) {
	*out = *in
	if in.UserDefinedSalt != nil {
		in, out := &in.UserDefinedSalt, &out.UserDefinedSalt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFunctionHashObservation.
func (in *MaskFunctionHashObservation) DeepCopy() *MaskFunctionHashObservation {
	if in == nil {
		return nil
	}
	out := new(MaskFunctionHashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaskFunctionHashParameters) DeepCopyInto(out *MaskFunctionHashParameters) {
	*out = *in
	if in.UserDefinedSalt != nil {
		in, out := &in.UserDefinedSalt, &out.UserDefinedSalt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaskFunctionHashParameters.
func (in *MaskFunctionHashParameters) DeepCopy() *MaskFunctionHashParameters {
	if in == nil {
		return nil
	}
	out := new(MaskFunctionHashParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetrikaSourceInitParameters) DeepCopyInto(out *MetrikaSourceInitParameters) {
	*out = *in
	if in.CounterIds != nil {
		in, out := &in.CounterIds, &out.CounterIds
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]StreamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = make([]TokenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetrikaSourceInitParameters.
func (in *MetrikaSourceInitParameters) DeepCopy() *MetrikaSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetrikaSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetrikaSourceObservation) DeepCopyInto(out *MetrikaSourceObservation) {
	*out = *in
	if in.CounterIds != nil {
		in, out := &in.CounterIds, &out.CounterIds
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]StreamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = make([]TokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetrikaSourceObservation.
func (in *MetrikaSourceObservation) DeepCopy() *MetrikaSourceObservation {
	if in == nil {
		return nil
	}
	out := new(MetrikaSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetrikaSourceParameters) DeepCopyInto(out *MetrikaSourceParameters) {
	*out = *in
	if in.CounterIds != nil {
		in, out := &in.CounterIds, &out.CounterIds
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Streams != nil {
		in, out := &in.Streams, &out.Streams
		*out = make([]StreamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = make([]TokenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetrikaSourceParameters.
func (in *MetrikaSourceParameters) DeepCopy() *MetrikaSourceParameters {
	if in == nil {
		return nil
	}
	out := new(MetrikaSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionConnectionOptionsInitParameters) DeepCopyInto(out *MongoSourceConnectionConnectionOptionsInitParameters) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionConnectionOptionsOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionConnectionOptionsPasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionConnectionOptionsInitParameters.
func (in *MongoSourceConnectionConnectionOptionsInitParameters) DeepCopy() *MongoSourceConnectionConnectionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionConnectionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionConnectionOptionsObservation) DeepCopyInto(out *MongoSourceConnectionConnectionOptionsObservation) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionConnectionOptionsOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionConnectionOptionsObservation.
func (in *MongoSourceConnectionConnectionOptionsObservation) DeepCopy() *MongoSourceConnectionConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionConnectionOptionsParameters) DeepCopyInto(out *MongoSourceConnectionConnectionOptionsParameters) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]ConnectionConnectionOptionsOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]ConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionConnectionOptionsParameters.
func (in *MongoSourceConnectionConnectionOptionsParameters) DeepCopy() *MongoSourceConnectionConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionInitParameters) DeepCopyInto(out *MongoSourceConnectionInitParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoSourceConnectionConnectionOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionInitParameters.
func (in *MongoSourceConnectionInitParameters) DeepCopy() *MongoSourceConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionObservation) DeepCopyInto(out *MongoSourceConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoSourceConnectionConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionObservation.
func (in *MongoSourceConnectionObservation) DeepCopy() *MongoSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceConnectionParameters) DeepCopyInto(out *MongoSourceConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoSourceConnectionConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceConnectionParameters.
func (in *MongoSourceConnectionParameters) DeepCopy() *MongoSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceInitParameters) DeepCopyInto(out *MongoSourceInitParameters) {
	*out = *in
	if in.Collections != nil {
		in, out := &in.Collections, &out.Collections
		*out = make([]CollectionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoSourceConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedCollections != nil {
		in, out := &in.ExcludedCollections, &out.ExcludedCollections
		*out = make([]ExcludedCollectionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPreferredMode != nil {
		in, out := &in.SecondaryPreferredMode, &out.SecondaryPreferredMode
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceInitParameters.
func (in *MongoSourceInitParameters) DeepCopy() *MongoSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceObservation) DeepCopyInto(out *MongoSourceObservation) {
	*out = *in
	if in.Collections != nil {
		in, out := &in.Collections, &out.Collections
		*out = make([]CollectionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedCollections != nil {
		in, out := &in.ExcludedCollections, &out.ExcludedCollections
		*out = make([]ExcludedCollectionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPreferredMode != nil {
		in, out := &in.SecondaryPreferredMode, &out.SecondaryPreferredMode
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceObservation.
func (in *MongoSourceObservation) DeepCopy() *MongoSourceObservation {
	if in == nil {
		return nil
	}
	out := new(MongoSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoSourceParameters) DeepCopyInto(out *MongoSourceParameters) {
	*out = *in
	if in.Collections != nil {
		in, out := &in.Collections, &out.Collections
		*out = make([]CollectionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExcludedCollections != nil {
		in, out := &in.ExcludedCollections, &out.ExcludedCollections
		*out = make([]ExcludedCollectionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryPreferredMode != nil {
		in, out := &in.SecondaryPreferredMode, &out.SecondaryPreferredMode
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoSourceParameters.
func (in *MongoSourceParameters) DeepCopy() *MongoSourceParameters {
	if in == nil {
		return nil
	}
	out := new(MongoSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsInitParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsInitParameters) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MongoTargetConnectionConnectionOptionsOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MongoTargetConnectionConnectionOptionsPasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsInitParameters.
func (in *MongoTargetConnectionConnectionOptionsInitParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsObservation) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsObservation) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MongoTargetConnectionConnectionOptionsOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MongoTargetConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsObservation.
func (in *MongoTargetConnectionConnectionOptionsObservation) DeepCopy() *MongoTargetConnectionConnectionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseInitParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsOnPremiseInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsOnPremiseInitParameters.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseInitParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseObservation) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsOnPremiseObservation.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseObservation) DeepCopy() *MongoTargetConnectionConnectionOptionsOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ReplicaSet != nil {
		in, out := &in.ReplicaSet, &out.ReplicaSet
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]ConnectionConnectionOptionsOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsOnPremiseParameters.
func (in *MongoTargetConnectionConnectionOptionsOnPremiseParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsParameters) {
	*out = *in
	if in.AuthSource != nil {
		in, out := &in.AuthSource, &out.AuthSource
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MongoTargetConnectionConnectionOptionsOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MongoTargetConnectionConnectionOptionsPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsParameters.
func (in *MongoTargetConnectionConnectionOptionsParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsPasswordInitParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsPasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsPasswordInitParameters.
func (in *MongoTargetConnectionConnectionOptionsPasswordInitParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsPasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsPasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsPasswordObservation) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsPasswordObservation.
func (in *MongoTargetConnectionConnectionOptionsPasswordObservation) DeepCopy() *MongoTargetConnectionConnectionOptionsPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionConnectionOptionsPasswordParameters) DeepCopyInto(out *MongoTargetConnectionConnectionOptionsPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionConnectionOptionsPasswordParameters.
func (in *MongoTargetConnectionConnectionOptionsPasswordParameters) DeepCopy() *MongoTargetConnectionConnectionOptionsPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionConnectionOptionsPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionInitParameters) DeepCopyInto(out *MongoTargetConnectionInitParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoTargetConnectionConnectionOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionInitParameters.
func (in *MongoTargetConnectionInitParameters) DeepCopy() *MongoTargetConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionObservation) DeepCopyInto(out *MongoTargetConnectionObservation) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoTargetConnectionConnectionOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionObservation.
func (in *MongoTargetConnectionObservation) DeepCopy() *MongoTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetConnectionParameters) DeepCopyInto(out *MongoTargetConnectionParameters) {
	*out = *in
	if in.ConnectionOptions != nil {
		in, out := &in.ConnectionOptions, &out.ConnectionOptions
		*out = make([]MongoTargetConnectionConnectionOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetConnectionParameters.
func (in *MongoTargetConnectionParameters) DeepCopy() *MongoTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetInitParameters) DeepCopyInto(out *MongoTargetInitParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoTargetConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetInitParameters.
func (in *MongoTargetInitParameters) DeepCopy() *MongoTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetObservation) DeepCopyInto(out *MongoTargetObservation) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetObservation.
func (in *MongoTargetObservation) DeepCopy() *MongoTargetObservation {
	if in == nil {
		return nil
	}
	out := new(MongoTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MongoTargetParameters) DeepCopyInto(out *MongoTargetParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MongoTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MongoTargetParameters.
func (in *MongoTargetParameters) DeepCopy() *MongoTargetParameters {
	if in == nil {
		return nil
	}
	out := new(MongoTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionInitParameters) DeepCopyInto(out *MySQLSourceConnectionInitParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLSourceConnectionOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionInitParameters.
func (in *MySQLSourceConnectionInitParameters) DeepCopy() *MySQLSourceConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionObservation) DeepCopyInto(out *MySQLSourceConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLSourceConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionObservation.
func (in *MySQLSourceConnectionObservation) DeepCopy() *MySQLSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseInitParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseInitParameters.
func (in *MySQLSourceConnectionOnPremiseInitParameters) DeepCopy() *MySQLSourceConnectionOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseObservation.
func (in *MySQLSourceConnectionOnPremiseObservation) DeepCopy() *MySQLSourceConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseParameters.
func (in *MySQLSourceConnectionOnPremiseParameters) DeepCopy() *MySQLSourceConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeDisabledInitParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeDisabledObservation.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeDisabledParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeEnabledInitParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeEnabledObservation.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeEnabledParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeInitParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeInitParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeInitParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeObservation.
func (in *MySQLSourceConnectionOnPremiseTLSModeObservation) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *MySQLSourceConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLSourceConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionOnPremiseTLSModeParameters.
func (in *MySQLSourceConnectionOnPremiseTLSModeParameters) DeepCopy() *MySQLSourceConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceConnectionParameters) DeepCopyInto(out *MySQLSourceConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLSourceConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceConnectionParameters.
func (in *MySQLSourceConnectionParameters) DeepCopy() *MySQLSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceInitParameters) DeepCopyInto(out *MySQLSourceInitParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLSourceConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeTablesRegex != nil {
		in, out := &in.ExcludeTablesRegex, &out.ExcludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTablesRegex != nil {
		in, out := &in.IncludeTablesRegex, &out.IncludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]ObjectTransferSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLSourcePasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceInitParameters.
func (in *MySQLSourceInitParameters) DeepCopy() *MySQLSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceObservation) DeepCopyInto(out *MySQLSourceObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.ExcludeTablesRegex != nil {
		in, out := &in.ExcludeTablesRegex, &out.ExcludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTablesRegex != nil {
		in, out := &in.IncludeTablesRegex, &out.IncludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]ObjectTransferSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceObservation.
func (in *MySQLSourceObservation) DeepCopy() *MySQLSourceObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourceParameters) DeepCopyInto(out *MySQLSourceParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeTablesRegex != nil {
		in, out := &in.ExcludeTablesRegex, &out.ExcludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTablesRegex != nil {
		in, out := &in.IncludeTablesRegex, &out.IncludeTablesRegex
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]ObjectTransferSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourceParameters.
func (in *MySQLSourceParameters) DeepCopy() *MySQLSourceParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourcePasswordInitParameters) DeepCopyInto(out *MySQLSourcePasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourcePasswordInitParameters.
func (in *MySQLSourcePasswordInitParameters) DeepCopy() *MySQLSourcePasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourcePasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourcePasswordObservation) DeepCopyInto(out *MySQLSourcePasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourcePasswordObservation.
func (in *MySQLSourcePasswordObservation) DeepCopy() *MySQLSourcePasswordObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLSourcePasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLSourcePasswordParameters) DeepCopyInto(out *MySQLSourcePasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLSourcePasswordParameters.
func (in *MySQLSourcePasswordParameters) DeepCopy() *MySQLSourcePasswordParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLSourcePasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionInitParameters) DeepCopyInto(out *MySQLTargetConnectionInitParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLTargetConnectionOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionInitParameters.
func (in *MySQLTargetConnectionInitParameters) DeepCopy() *MySQLTargetConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionObservation) DeepCopyInto(out *MySQLTargetConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLTargetConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionObservation.
func (in *MySQLTargetConnectionObservation) DeepCopy() *MySQLTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseInitParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseInitParameters.
func (in *MySQLTargetConnectionOnPremiseInitParameters) DeepCopy() *MySQLTargetConnectionOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseObservation.
func (in *MySQLTargetConnectionOnPremiseObservation) DeepCopy() *MySQLTargetConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseParameters.
func (in *MySQLTargetConnectionOnPremiseParameters) DeepCopy() *MySQLTargetConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeDisabledInitParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeDisabledObservation.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeDisabledParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeEnabledInitParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeEnabledObservation.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeEnabledParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeInitParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeInitParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeInitParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeObservation.
func (in *MySQLTargetConnectionOnPremiseTLSModeObservation) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *MySQLTargetConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]MySQLTargetConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionOnPremiseTLSModeParameters.
func (in *MySQLTargetConnectionOnPremiseTLSModeParameters) DeepCopy() *MySQLTargetConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetConnectionParameters) DeepCopyInto(out *MySQLTargetConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]MySQLTargetConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetConnectionParameters.
func (in *MySQLTargetConnectionParameters) DeepCopy() *MySQLTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetInitParameters) DeepCopyInto(out *MySQLTargetInitParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLTargetConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLTargetPasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLMode != nil {
		in, out := &in.SQLMode, &out.SQLMode
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.SkipConstraintChecks != nil {
		in, out := &in.SkipConstraintChecks, &out.SkipConstraintChecks
		*out = new(bool)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetInitParameters.
func (in *MySQLTargetInitParameters) DeepCopy() *MySQLTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetObservation) DeepCopyInto(out *MySQLTargetObservation) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLMode != nil {
		in, out := &in.SQLMode, &out.SQLMode
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.SkipConstraintChecks != nil {
		in, out := &in.SkipConstraintChecks, &out.SkipConstraintChecks
		*out = new(bool)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetObservation.
func (in *MySQLTargetObservation) DeepCopy() *MySQLTargetObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetParameters) DeepCopyInto(out *MySQLTargetParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]MySQLTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]MySQLTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SQLMode != nil {
		in, out := &in.SQLMode, &out.SQLMode
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDatabase != nil {
		in, out := &in.ServiceDatabase, &out.ServiceDatabase
		*out = new(string)
		**out = **in
	}
	if in.SkipConstraintChecks != nil {
		in, out := &in.SkipConstraintChecks, &out.SkipConstraintChecks
		*out = new(bool)
		**out = **in
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetParameters.
func (in *MySQLTargetParameters) DeepCopy() *MySQLTargetParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetPasswordInitParameters) DeepCopyInto(out *MySQLTargetPasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetPasswordInitParameters.
func (in *MySQLTargetPasswordInitParameters) DeepCopy() *MySQLTargetPasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetPasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetPasswordObservation) DeepCopyInto(out *MySQLTargetPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetPasswordObservation.
func (in *MySQLTargetPasswordObservation) DeepCopy() *MySQLTargetPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySQLTargetPasswordParameters) DeepCopyInto(out *MySQLTargetPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySQLTargetPasswordParameters.
func (in *MySQLTargetPasswordParameters) DeepCopy() *MySQLTargetPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(MySQLTargetPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewNameInitParameters) DeepCopyInto(out *NewNameInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameSpace != nil {
		in, out := &in.NameSpace, &out.NameSpace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewNameInitParameters.
func (in *NewNameInitParameters) DeepCopy() *NewNameInitParameters {
	if in == nil {
		return nil
	}
	out := new(NewNameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewNameObservation) DeepCopyInto(out *NewNameObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameSpace != nil {
		in, out := &in.NameSpace, &out.NameSpace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewNameObservation.
func (in *NewNameObservation) DeepCopy() *NewNameObservation {
	if in == nil {
		return nil
	}
	out := new(NewNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewNameParameters) DeepCopyInto(out *NewNameParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameSpace != nil {
		in, out := &in.NameSpace, &out.NameSpace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewNameParameters.
func (in *NewNameParameters) DeepCopy() *NewNameParameters {
	if in == nil {
		return nil
	}
	out := new(NewNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoAuthInitParameters) DeepCopyInto(out *NoAuthInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoAuthInitParameters.
func (in *NoAuthInitParameters) DeepCopy() *NoAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(NoAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoAuthObservation) DeepCopyInto(out *NoAuthObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoAuthObservation.
func (in *NoAuthObservation) DeepCopy() *NoAuthObservation {
	if in == nil {
		return nil
	}
	out := new(NoAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NoAuthParameters) DeepCopyInto(out *NoAuthParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NoAuthParameters.
func (in *NoAuthParameters) DeepCopy() *NoAuthParameters {
	if in == nil {
		return nil
	}
	out := new(NoAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTransferSettingsInitParameters) DeepCopyInto(out *ObjectTransferSettingsInitParameters) {
	*out = *in
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTransferSettingsInitParameters.
func (in *ObjectTransferSettingsInitParameters) DeepCopy() *ObjectTransferSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectTransferSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTransferSettingsObservation) DeepCopyInto(out *ObjectTransferSettingsObservation) {
	*out = *in
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTransferSettingsObservation.
func (in *ObjectTransferSettingsObservation) DeepCopy() *ObjectTransferSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ObjectTransferSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTransferSettingsParameters) DeepCopyInto(out *ObjectTransferSettingsParameters) {
	*out = *in
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTransferSettingsParameters.
func (in *ObjectTransferSettingsParameters) DeepCopy() *ObjectTransferSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ObjectTransferSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseInitParameters) DeepCopyInto(out *OnPremiseInitParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]ShardsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]TLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseInitParameters.
func (in *OnPremiseInitParameters) DeepCopy() *OnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseObservation) DeepCopyInto(out *OnPremiseObservation) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]ShardsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]TLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseObservation.
func (in *OnPremiseObservation) DeepCopy() *OnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseParameters) DeepCopyInto(out *OnPremiseParameters) {
	*out = *in
	if in.HTTPPort != nil {
		in, out := &in.HTTPPort, &out.HTTPPort
		*out = new(float64)
		**out = **in
	}
	if in.NativePort != nil {
		in, out := &in.NativePort, &out.NativePort
		*out = new(float64)
		**out = **in
	}
	if in.Shards != nil {
		in, out := &in.Shards, &out.Shards
		*out = make([]ShardsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]TLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseParameters.
func (in *OnPremiseParameters) DeepCopy() *OnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseShardsInitParameters) DeepCopyInto(out *OnPremiseShardsInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseShardsInitParameters.
func (in *OnPremiseShardsInitParameters) DeepCopy() *OnPremiseShardsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseShardsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseShardsObservation) DeepCopyInto(out *OnPremiseShardsObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseShardsObservation.
func (in *OnPremiseShardsObservation) DeepCopy() *OnPremiseShardsObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseShardsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseShardsParameters) DeepCopyInto(out *OnPremiseShardsParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseShardsParameters.
func (in *OnPremiseShardsParameters) DeepCopy() *OnPremiseShardsParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseShardsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *OnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeDisabledInitParameters.
func (in *OnPremiseTLSModeDisabledInitParameters) DeepCopy() *OnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeDisabledObservation) DeepCopyInto(out *OnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeDisabledObservation.
func (in *OnPremiseTLSModeDisabledObservation) DeepCopy() *OnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeDisabledParameters) DeepCopyInto(out *OnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeDisabledParameters.
func (in *OnPremiseTLSModeDisabledParameters) DeepCopy() *OnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *OnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeEnabledInitParameters.
func (in *OnPremiseTLSModeEnabledInitParameters) DeepCopy() *OnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeEnabledObservation) DeepCopyInto(out *OnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeEnabledObservation.
func (in *OnPremiseTLSModeEnabledObservation) DeepCopy() *OnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeEnabledParameters) DeepCopyInto(out *OnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeEnabledParameters.
func (in *OnPremiseTLSModeEnabledParameters) DeepCopy() *OnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeInitParameters) DeepCopyInto(out *OnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]TLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]TLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeInitParameters.
func (in *OnPremiseTLSModeInitParameters) DeepCopy() *OnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeObservation) DeepCopyInto(out *OnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]TLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]TLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeObservation.
func (in *OnPremiseTLSModeObservation) DeepCopy() *OnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OnPremiseTLSModeParameters) DeepCopyInto(out *OnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]TLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]TLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OnPremiseTLSModeParameters.
func (in *OnPremiseTLSModeParameters) DeepCopy() *OnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(OnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginalNameInitParameters) DeepCopyInto(out *OriginalNameInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameSpace != nil {
		in, out := &in.NameSpace, &out.NameSpace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginalNameInitParameters.
func (in *OriginalNameInitParameters) DeepCopy() *OriginalNameInitParameters {
	if in == nil {
		return nil
	}
	out := new(OriginalNameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginalNameObservation) DeepCopyInto(out *OriginalNameObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameSpace != nil {
		in, out := &in.NameSpace, &out.NameSpace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginalNameObservation.
func (in *OriginalNameObservation) DeepCopy() *OriginalNameObservation {
	if in == nil {
		return nil
	}
	out := new(OriginalNameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OriginalNameParameters) DeepCopyInto(out *OriginalNameParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameSpace != nil {
		in, out := &in.NameSpace, &out.NameSpace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OriginalNameParameters.
func (in *OriginalNameParameters) DeepCopy() *OriginalNameParameters {
	if in == nil {
		return nil
	}
	out := new(OriginalNameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserAuditTrailsV1ParserInitParameters) DeepCopyInto(out *ParserAuditTrailsV1ParserInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserAuditTrailsV1ParserInitParameters.
func (in *ParserAuditTrailsV1ParserInitParameters) DeepCopy() *ParserAuditTrailsV1ParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserAuditTrailsV1ParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserAuditTrailsV1ParserObservation) DeepCopyInto(out *ParserAuditTrailsV1ParserObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserAuditTrailsV1ParserObservation.
func (in *ParserAuditTrailsV1ParserObservation) DeepCopy() *ParserAuditTrailsV1ParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserAuditTrailsV1ParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserAuditTrailsV1ParserParameters) DeepCopyInto(out *ParserAuditTrailsV1ParserParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserAuditTrailsV1ParserParameters.
func (in *ParserAuditTrailsV1ParserParameters) DeepCopy() *ParserAuditTrailsV1ParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserAuditTrailsV1ParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserCloudLoggingParserInitParameters) DeepCopyInto(out *ParserCloudLoggingParserInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserCloudLoggingParserInitParameters.
func (in *ParserCloudLoggingParserInitParameters) DeepCopy() *ParserCloudLoggingParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserCloudLoggingParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserCloudLoggingParserObservation) DeepCopyInto(out *ParserCloudLoggingParserObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserCloudLoggingParserObservation.
func (in *ParserCloudLoggingParserObservation) DeepCopy() *ParserCloudLoggingParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserCloudLoggingParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserCloudLoggingParserParameters) DeepCopyInto(out *ParserCloudLoggingParserParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserCloudLoggingParserParameters.
func (in *ParserCloudLoggingParserParameters) DeepCopy() *ParserCloudLoggingParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserCloudLoggingParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserInitParameters) DeepCopyInto(out *ParserInitParameters) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]AuditTrailsV1ParserInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]CloudLoggingParserInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]JSONParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]TskvParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserInitParameters.
func (in *ParserInitParameters) DeepCopy() *ParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserJSONParserInitParameters) DeepCopyInto(out *ParserJSONParserInitParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]JSONParserDataSchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserJSONParserInitParameters.
func (in *ParserJSONParserInitParameters) DeepCopy() *ParserJSONParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserJSONParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserJSONParserObservation) DeepCopyInto(out *ParserJSONParserObservation) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]JSONParserDataSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserJSONParserObservation.
func (in *ParserJSONParserObservation) DeepCopy() *ParserJSONParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserJSONParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserJSONParserParameters) DeepCopyInto(out *ParserJSONParserParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]JSONParserDataSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserJSONParserParameters.
func (in *ParserJSONParserParameters) DeepCopy() *ParserJSONParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserJSONParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserObservation) DeepCopyInto(out *ParserObservation) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]AuditTrailsV1ParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]CloudLoggingParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]JSONParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]TskvParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserObservation.
func (in *ParserObservation) DeepCopy() *ParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserParameters) DeepCopyInto(out *ParserParameters) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]AuditTrailsV1ParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]CloudLoggingParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]JSONParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]TskvParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserParameters.
func (in *ParserParameters) DeepCopy() *ParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserTskvParserDataSchemaInitParameters) DeepCopyInto(out *ParserTskvParserDataSchemaInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]TskvParserDataSchemaFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserTskvParserDataSchemaInitParameters.
func (in *ParserTskvParserDataSchemaInitParameters) DeepCopy() *ParserTskvParserDataSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserTskvParserDataSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserTskvParserDataSchemaObservation) DeepCopyInto(out *ParserTskvParserDataSchemaObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]TskvParserDataSchemaFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserTskvParserDataSchemaObservation.
func (in *ParserTskvParserDataSchemaObservation) DeepCopy() *ParserTskvParserDataSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(ParserTskvParserDataSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserTskvParserDataSchemaParameters) DeepCopyInto(out *ParserTskvParserDataSchemaParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]TskvParserDataSchemaFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserTskvParserDataSchemaParameters.
func (in *ParserTskvParserDataSchemaParameters) DeepCopy() *ParserTskvParserDataSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(ParserTskvParserDataSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserTskvParserInitParameters) DeepCopyInto(out *ParserTskvParserInitParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]ParserTskvParserDataSchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserTskvParserInitParameters.
func (in *ParserTskvParserInitParameters) DeepCopy() *ParserTskvParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserTskvParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserTskvParserObservation) DeepCopyInto(out *ParserTskvParserObservation) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]ParserTskvParserDataSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserTskvParserObservation.
func (in *ParserTskvParserObservation) DeepCopy() *ParserTskvParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserTskvParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserTskvParserParameters) DeepCopyInto(out *ParserTskvParserParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]ParserTskvParserDataSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserTskvParserParameters.
func (in *ParserTskvParserParameters) DeepCopy() *ParserTskvParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserTskvParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordInitParameters) DeepCopyInto(out *PasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordInitParameters.
func (in *PasswordInitParameters) DeepCopy() *PasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordObservation) DeepCopyInto(out *PasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordObservation.
func (in *PasswordObservation) DeepCopy() *PasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordParameters) DeepCopyInto(out *PasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordParameters.
func (in *PasswordParameters) DeepCopy() *PasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionInitParameters) DeepCopyInto(out *PostgresSourceConnectionInitParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresSourceConnectionOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionInitParameters.
func (in *PostgresSourceConnectionInitParameters) DeepCopy() *PostgresSourceConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionObservation) DeepCopyInto(out *PostgresSourceConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresSourceConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionObservation.
func (in *PostgresSourceConnectionObservation) DeepCopy() *PostgresSourceConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseInitParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseInitParameters.
func (in *PostgresSourceConnectionOnPremiseInitParameters) DeepCopy() *PostgresSourceConnectionOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseObservation.
func (in *PostgresSourceConnectionOnPremiseObservation) DeepCopy() *PostgresSourceConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseParameters.
func (in *PostgresSourceConnectionOnPremiseParameters) DeepCopy() *PostgresSourceConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeDisabledInitParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeDisabledObservation.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeDisabledParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeEnabledInitParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeEnabledObservation.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeEnabledParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeInitParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeInitParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeInitParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeObservation.
func (in *PostgresSourceConnectionOnPremiseTLSModeObservation) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *PostgresSourceConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresSourceConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionOnPremiseTLSModeParameters.
func (in *PostgresSourceConnectionOnPremiseTLSModeParameters) DeepCopy() *PostgresSourceConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceConnectionParameters) DeepCopyInto(out *PostgresSourceConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresSourceConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceConnectionParameters.
func (in *PostgresSourceConnectionParameters) DeepCopy() *PostgresSourceConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceInitParameters) DeepCopyInto(out *PostgresSourceInitParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresSourceConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]PostgresSourceObjectTransferSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresSourcePasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSchema != nil {
		in, out := &in.ServiceSchema, &out.ServiceSchema
		*out = new(string)
		**out = **in
	}
	if in.SlotGigabyteLagLimit != nil {
		in, out := &in.SlotGigabyteLagLimit, &out.SlotGigabyteLagLimit
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceInitParameters.
func (in *PostgresSourceInitParameters) DeepCopy() *PostgresSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceObjectTransferSettingsInitParameters) DeepCopyInto(out *PostgresSourceObjectTransferSettingsInitParameters) {
	*out = *in
	if in.Cast != nil {
		in, out := &in.Cast, &out.Cast
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Constraint != nil {
		in, out := &in.Constraint, &out.Constraint
		*out = new(string)
		**out = **in
	}
	if in.DefaultValues != nil {
		in, out := &in.DefaultValues, &out.DefaultValues
		*out = new(string)
		**out = **in
	}
	if in.FkConstraint != nil {
		in, out := &in.FkConstraint, &out.FkConstraint
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.Sequence != nil {
		in, out := &in.Sequence, &out.Sequence
		*out = new(string)
		**out = **in
	}
	if in.SequenceOwnedBy != nil {
		in, out := &in.SequenceOwnedBy, &out.SequenceOwnedBy
		*out = new(string)
		**out = **in
	}
	if in.SequenceSet != nil {
		in, out := &in.SequenceSet, &out.SequenceSet
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceObjectTransferSettingsInitParameters.
func (in *PostgresSourceObjectTransferSettingsInitParameters) DeepCopy() *PostgresSourceObjectTransferSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceObjectTransferSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceObjectTransferSettingsObservation) DeepCopyInto(out *PostgresSourceObjectTransferSettingsObservation) {
	*out = *in
	if in.Cast != nil {
		in, out := &in.Cast, &out.Cast
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Constraint != nil {
		in, out := &in.Constraint, &out.Constraint
		*out = new(string)
		**out = **in
	}
	if in.DefaultValues != nil {
		in, out := &in.DefaultValues, &out.DefaultValues
		*out = new(string)
		**out = **in
	}
	if in.FkConstraint != nil {
		in, out := &in.FkConstraint, &out.FkConstraint
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.Sequence != nil {
		in, out := &in.Sequence, &out.Sequence
		*out = new(string)
		**out = **in
	}
	if in.SequenceOwnedBy != nil {
		in, out := &in.SequenceOwnedBy, &out.SequenceOwnedBy
		*out = new(string)
		**out = **in
	}
	if in.SequenceSet != nil {
		in, out := &in.SequenceSet, &out.SequenceSet
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceObjectTransferSettingsObservation.
func (in *PostgresSourceObjectTransferSettingsObservation) DeepCopy() *PostgresSourceObjectTransferSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceObjectTransferSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceObjectTransferSettingsParameters) DeepCopyInto(out *PostgresSourceObjectTransferSettingsParameters) {
	*out = *in
	if in.Cast != nil {
		in, out := &in.Cast, &out.Cast
		*out = new(string)
		**out = **in
	}
	if in.Collation != nil {
		in, out := &in.Collation, &out.Collation
		*out = new(string)
		**out = **in
	}
	if in.Constraint != nil {
		in, out := &in.Constraint, &out.Constraint
		*out = new(string)
		**out = **in
	}
	if in.DefaultValues != nil {
		in, out := &in.DefaultValues, &out.DefaultValues
		*out = new(string)
		**out = **in
	}
	if in.FkConstraint != nil {
		in, out := &in.FkConstraint, &out.FkConstraint
		*out = new(string)
		**out = **in
	}
	if in.Function != nil {
		in, out := &in.Function, &out.Function
		*out = new(string)
		**out = **in
	}
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.Sequence != nil {
		in, out := &in.Sequence, &out.Sequence
		*out = new(string)
		**out = **in
	}
	if in.SequenceOwnedBy != nil {
		in, out := &in.SequenceOwnedBy, &out.SequenceOwnedBy
		*out = new(string)
		**out = **in
	}
	if in.SequenceSet != nil {
		in, out := &in.SequenceSet, &out.SequenceSet
		*out = new(string)
		**out = **in
	}
	if in.Table != nil {
		in, out := &in.Table, &out.Table
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceObjectTransferSettingsParameters.
func (in *PostgresSourceObjectTransferSettingsParameters) DeepCopy() *PostgresSourceObjectTransferSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceObjectTransferSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceObservation) DeepCopyInto(out *PostgresSourceObservation) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresSourceConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]PostgresSourceObjectTransferSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceSchema != nil {
		in, out := &in.ServiceSchema, &out.ServiceSchema
		*out = new(string)
		**out = **in
	}
	if in.SlotGigabyteLagLimit != nil {
		in, out := &in.SlotGigabyteLagLimit, &out.SlotGigabyteLagLimit
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceObservation.
func (in *PostgresSourceObservation) DeepCopy() *PostgresSourceObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourceParameters) DeepCopyInto(out *PostgresSourceParameters) {
	*out = *in
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresSourceConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ObjectTransferSettings != nil {
		in, out := &in.ObjectTransferSettings, &out.ObjectTransferSettings
		*out = make([]PostgresSourceObjectTransferSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresSourcePasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSchema != nil {
		in, out := &in.ServiceSchema, &out.ServiceSchema
		*out = new(string)
		**out = **in
	}
	if in.SlotGigabyteLagLimit != nil {
		in, out := &in.SlotGigabyteLagLimit, &out.SlotGigabyteLagLimit
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourceParameters.
func (in *PostgresSourceParameters) DeepCopy() *PostgresSourceParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourcePasswordInitParameters) DeepCopyInto(out *PostgresSourcePasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourcePasswordInitParameters.
func (in *PostgresSourcePasswordInitParameters) DeepCopy() *PostgresSourcePasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourcePasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourcePasswordObservation) DeepCopyInto(out *PostgresSourcePasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourcePasswordObservation.
func (in *PostgresSourcePasswordObservation) DeepCopy() *PostgresSourcePasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresSourcePasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresSourcePasswordParameters) DeepCopyInto(out *PostgresSourcePasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresSourcePasswordParameters.
func (in *PostgresSourcePasswordParameters) DeepCopy() *PostgresSourcePasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresSourcePasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionInitParameters) DeepCopyInto(out *PostgresTargetConnectionInitParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresTargetConnectionOnPremiseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionInitParameters.
func (in *PostgresTargetConnectionInitParameters) DeepCopy() *PostgresTargetConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionObservation) DeepCopyInto(out *PostgresTargetConnectionObservation) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresTargetConnectionOnPremiseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionObservation.
func (in *PostgresTargetConnectionObservation) DeepCopy() *PostgresTargetConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseInitParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseInitParameters.
func (in *PostgresTargetConnectionOnPremiseInitParameters) DeepCopy() *PostgresTargetConnectionOnPremiseInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseObservation.
func (in *PostgresTargetConnectionOnPremiseObservation) DeepCopy() *PostgresTargetConnectionOnPremiseObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TLSMode != nil {
		in, out := &in.TLSMode, &out.TLSMode
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseParameters.
func (in *PostgresTargetConnectionOnPremiseParameters) DeepCopy() *PostgresTargetConnectionOnPremiseParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeDisabledInitParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledInitParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeDisabledObservation.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeDisabledParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeEnabledInitParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledInitParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeEnabledObservation.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeEnabledParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeInitParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeDisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeEnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeInitParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeInitParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeObservation) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeEnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeObservation.
func (in *PostgresTargetConnectionOnPremiseTLSModeObservation) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionOnPremiseTLSModeParameters) DeepCopyInto(out *PostgresTargetConnectionOnPremiseTLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeDisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]PostgresTargetConnectionOnPremiseTLSModeEnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionOnPremiseTLSModeParameters.
func (in *PostgresTargetConnectionOnPremiseTLSModeParameters) DeepCopy() *PostgresTargetConnectionOnPremiseTLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionOnPremiseTLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetConnectionParameters) DeepCopyInto(out *PostgresTargetConnectionParameters) {
	*out = *in
	if in.MdbClusterID != nil {
		in, out := &in.MdbClusterID, &out.MdbClusterID
		*out = new(string)
		**out = **in
	}
	if in.MdbClusterIDRef != nil {
		in, out := &in.MdbClusterIDRef, &out.MdbClusterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.MdbClusterIDSelector != nil {
		in, out := &in.MdbClusterIDSelector, &out.MdbClusterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.OnPremise != nil {
		in, out := &in.OnPremise, &out.OnPremise
		*out = make([]PostgresTargetConnectionOnPremiseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetConnectionParameters.
func (in *PostgresTargetConnectionParameters) DeepCopy() *PostgresTargetConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetInitParameters) DeepCopyInto(out *PostgresTargetInitParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresTargetConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresTargetPasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetInitParameters.
func (in *PostgresTargetInitParameters) DeepCopy() *PostgresTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetObservation) DeepCopyInto(out *PostgresTargetObservation) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresTargetConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetObservation.
func (in *PostgresTargetObservation) DeepCopy() *PostgresTargetObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetParameters) DeepCopyInto(out *PostgresTargetParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Connection != nil {
		in, out := &in.Connection, &out.Connection
		*out = make([]PostgresTargetConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DatabaseRef != nil {
		in, out := &in.DatabaseRef, &out.DatabaseRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatabaseSelector != nil {
		in, out := &in.DatabaseSelector, &out.DatabaseSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PostgresTargetPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroupsRefs != nil {
		in, out := &in.SecurityGroupsRefs, &out.SecurityGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroupsSelector != nil {
		in, out := &in.SecurityGroupsSelector, &out.SecurityGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.UserRef != nil {
		in, out := &in.UserRef, &out.UserRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserSelector != nil {
		in, out := &in.UserSelector, &out.UserSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetParameters.
func (in *PostgresTargetParameters) DeepCopy() *PostgresTargetParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetPasswordInitParameters) DeepCopyInto(out *PostgresTargetPasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetPasswordInitParameters.
func (in *PostgresTargetPasswordInitParameters) DeepCopy() *PostgresTargetPasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetPasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetPasswordObservation) DeepCopyInto(out *PostgresTargetPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetPasswordObservation.
func (in *PostgresTargetPasswordObservation) DeepCopy() *PostgresTargetPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresTargetPasswordParameters) DeepCopyInto(out *PostgresTargetPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresTargetPasswordParameters.
func (in *PostgresTargetPasswordParameters) DeepCopy() *PostgresTargetPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PostgresTargetPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameTablesInitParameters) DeepCopyInto(out *RenameTablesInitParameters) {
	*out = *in
	if in.RenameTables != nil {
		in, out := &in.RenameTables, &out.RenameTables
		*out = make([]RenameTablesRenameTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameTablesInitParameters.
func (in *RenameTablesInitParameters) DeepCopy() *RenameTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RenameTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameTablesObservation) DeepCopyInto(out *RenameTablesObservation) {
	*out = *in
	if in.RenameTables != nil {
		in, out := &in.RenameTables, &out.RenameTables
		*out = make([]RenameTablesRenameTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameTablesObservation.
func (in *RenameTablesObservation) DeepCopy() *RenameTablesObservation {
	if in == nil {
		return nil
	}
	out := new(RenameTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameTablesParameters) DeepCopyInto(out *RenameTablesParameters) {
	*out = *in
	if in.RenameTables != nil {
		in, out := &in.RenameTables, &out.RenameTables
		*out = make([]RenameTablesRenameTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameTablesParameters.
func (in *RenameTablesParameters) DeepCopy() *RenameTablesParameters {
	if in == nil {
		return nil
	}
	out := new(RenameTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameTablesRenameTablesInitParameters) DeepCopyInto(out *RenameTablesRenameTablesInitParameters) {
	*out = *in
	if in.NewName != nil {
		in, out := &in.NewName, &out.NewName
		*out = make([]NewNameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginalName != nil {
		in, out := &in.OriginalName, &out.OriginalName
		*out = make([]OriginalNameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameTablesRenameTablesInitParameters.
func (in *RenameTablesRenameTablesInitParameters) DeepCopy() *RenameTablesRenameTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RenameTablesRenameTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameTablesRenameTablesObservation) DeepCopyInto(out *RenameTablesRenameTablesObservation) {
	*out = *in
	if in.NewName != nil {
		in, out := &in.NewName, &out.NewName
		*out = make([]NewNameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginalName != nil {
		in, out := &in.OriginalName, &out.OriginalName
		*out = make([]OriginalNameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameTablesRenameTablesObservation.
func (in *RenameTablesRenameTablesObservation) DeepCopy() *RenameTablesRenameTablesObservation {
	if in == nil {
		return nil
	}
	out := new(RenameTablesRenameTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RenameTablesRenameTablesParameters) DeepCopyInto(out *RenameTablesRenameTablesParameters) {
	*out = *in
	if in.NewName != nil {
		in, out := &in.NewName, &out.NewName
		*out = make([]NewNameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OriginalName != nil {
		in, out := &in.OriginalName, &out.OriginalName
		*out = make([]OriginalNameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RenameTablesRenameTablesParameters.
func (in *RenameTablesRenameTablesParameters) DeepCopy() *RenameTablesRenameTablesParameters {
	if in == nil {
		return nil
	}
	out := new(RenameTablesRenameTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacePrimaryKeyInitParameters) DeepCopyInto(out *ReplacePrimaryKeyInitParameters) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]ReplacePrimaryKeyTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacePrimaryKeyInitParameters.
func (in *ReplacePrimaryKeyInitParameters) DeepCopy() *ReplacePrimaryKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplacePrimaryKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacePrimaryKeyObservation) DeepCopyInto(out *ReplacePrimaryKeyObservation) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]ReplacePrimaryKeyTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacePrimaryKeyObservation.
func (in *ReplacePrimaryKeyObservation) DeepCopy() *ReplacePrimaryKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ReplacePrimaryKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacePrimaryKeyParameters) DeepCopyInto(out *ReplacePrimaryKeyParameters) {
	*out = *in
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]ReplacePrimaryKeyTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacePrimaryKeyParameters.
func (in *ReplacePrimaryKeyParameters) DeepCopy() *ReplacePrimaryKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ReplacePrimaryKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacePrimaryKeyTablesInitParameters) DeepCopyInto(out *ReplacePrimaryKeyTablesInitParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacePrimaryKeyTablesInitParameters.
func (in *ReplacePrimaryKeyTablesInitParameters) DeepCopy() *ReplacePrimaryKeyTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplacePrimaryKeyTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacePrimaryKeyTablesObservation) DeepCopyInto(out *ReplacePrimaryKeyTablesObservation) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacePrimaryKeyTablesObservation.
func (in *ReplacePrimaryKeyTablesObservation) DeepCopy() *ReplacePrimaryKeyTablesObservation {
	if in == nil {
		return nil
	}
	out := new(ReplacePrimaryKeyTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplacePrimaryKeyTablesParameters) DeepCopyInto(out *ReplacePrimaryKeyTablesParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplacePrimaryKeyTablesParameters.
func (in *ReplacePrimaryKeyTablesParameters) DeepCopy() *ReplacePrimaryKeyTablesParameters {
	if in == nil {
		return nil
	}
	out := new(ReplacePrimaryKeyTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoundRobinInitParameters) DeepCopyInto(out *RoundRobinInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoundRobinInitParameters.
func (in *RoundRobinInitParameters) DeepCopy() *RoundRobinInitParameters {
	if in == nil {
		return nil
	}
	out := new(RoundRobinInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoundRobinObservation) DeepCopyInto(out *RoundRobinObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoundRobinObservation.
func (in *RoundRobinObservation) DeepCopy() *RoundRobinObservation {
	if in == nil {
		return nil
	}
	out := new(RoundRobinObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoundRobinParameters) DeepCopyInto(out *RoundRobinParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoundRobinParameters.
func (in *RoundRobinParameters) DeepCopy() *RoundRobinParameters {
	if in == nil {
		return nil
	}
	out := new(RoundRobinParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeInitParameters) DeepCopyInto(out *RuntimeInitParameters) {
	*out = *in
	if in.YcRuntime != nil {
		in, out := &in.YcRuntime, &out.YcRuntime
		*out = make([]YcRuntimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeInitParameters.
func (in *RuntimeInitParameters) DeepCopy() *RuntimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RuntimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeObservation) DeepCopyInto(out *RuntimeObservation) {
	*out = *in
	if in.YcRuntime != nil {
		in, out := &in.YcRuntime, &out.YcRuntime
		*out = make([]YcRuntimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeObservation.
func (in *RuntimeObservation) DeepCopy() *RuntimeObservation {
	if in == nil {
		return nil
	}
	out := new(RuntimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeParameters) DeepCopyInto(out *RuntimeParameters) {
	*out = *in
	if in.YcRuntime != nil {
		in, out := &in.YcRuntime, &out.YcRuntime
		*out = make([]YcRuntimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeParameters.
func (in *RuntimeParameters) DeepCopy() *RuntimeParameters {
	if in == nil {
		return nil
	}
	out := new(RuntimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslInitParameters) DeepCopyInto(out *SaslInitParameters) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]SaslPasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslInitParameters.
func (in *SaslInitParameters) DeepCopy() *SaslInitParameters {
	if in == nil {
		return nil
	}
	out := new(SaslInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslObservation) DeepCopyInto(out *SaslObservation) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]SaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslObservation.
func (in *SaslObservation) DeepCopy() *SaslObservation {
	if in == nil {
		return nil
	}
	out := new(SaslObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslParameters) DeepCopyInto(out *SaslParameters) {
	*out = *in
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]SaslPasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslParameters.
func (in *SaslParameters) DeepCopy() *SaslParameters {
	if in == nil {
		return nil
	}
	out := new(SaslParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslPasswordInitParameters) DeepCopyInto(out *SaslPasswordInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslPasswordInitParameters.
func (in *SaslPasswordInitParameters) DeepCopy() *SaslPasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(SaslPasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslPasswordObservation) DeepCopyInto(out *SaslPasswordObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslPasswordObservation.
func (in *SaslPasswordObservation) DeepCopy() *SaslPasswordObservation {
	if in == nil {
		return nil
	}
	out := new(SaslPasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SaslPasswordParameters) DeepCopyInto(out *SaslPasswordParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SaslPasswordParameters.
func (in *SaslPasswordParameters) DeepCopy() *SaslPasswordParameters {
	if in == nil {
		return nil
	}
	out := new(SaslPasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerAutoInitParameters) DeepCopyInto(out *SerializerAutoInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerAutoInitParameters.
func (in *SerializerAutoInitParameters) DeepCopy() *SerializerAutoInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerAutoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerAutoObservation) DeepCopyInto(out *SerializerAutoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerAutoObservation.
func (in *SerializerAutoObservation) DeepCopy() *SerializerAutoObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerAutoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerAutoParameters) DeepCopyInto(out *SerializerAutoParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerAutoParameters.
func (in *SerializerAutoParameters) DeepCopy() *SerializerAutoParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerAutoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumInitParameters) DeepCopyInto(out *SerializerDebeziumInitParameters) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumInitParameters.
func (in *SerializerDebeziumInitParameters) DeepCopy() *SerializerDebeziumInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumObservation) DeepCopyInto(out *SerializerDebeziumObservation) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumObservation.
func (in *SerializerDebeziumObservation) DeepCopy() *SerializerDebeziumObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumParameters) DeepCopyInto(out *SerializerDebeziumParameters) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumParameters.
func (in *SerializerDebeziumParameters) DeepCopy() *SerializerDebeziumParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumSerializerParametersInitParameters) DeepCopyInto(out *SerializerDebeziumSerializerParametersInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumSerializerParametersInitParameters.
func (in *SerializerDebeziumSerializerParametersInitParameters) DeepCopy() *SerializerDebeziumSerializerParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumSerializerParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumSerializerParametersObservation) DeepCopyInto(out *SerializerDebeziumSerializerParametersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumSerializerParametersObservation.
func (in *SerializerDebeziumSerializerParametersObservation) DeepCopy() *SerializerDebeziumSerializerParametersObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumSerializerParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerDebeziumSerializerParametersParameters) DeepCopyInto(out *SerializerDebeziumSerializerParametersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerDebeziumSerializerParametersParameters.
func (in *SerializerDebeziumSerializerParametersParameters) DeepCopy() *SerializerDebeziumSerializerParametersParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerDebeziumSerializerParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerInitParameters) DeepCopyInto(out *SerializerInitParameters) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerAutoInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerDebeziumInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerJSONInitParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerInitParameters.
func (in *SerializerInitParameters) DeepCopy() *SerializerInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerJSONInitParameters) DeepCopyInto(out *SerializerJSONInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerJSONInitParameters.
func (in *SerializerJSONInitParameters) DeepCopy() *SerializerJSONInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerJSONInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerJSONObservation) DeepCopyInto(out *SerializerJSONObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerJSONObservation.
func (in *SerializerJSONObservation) DeepCopy() *SerializerJSONObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerJSONObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerJSONParameters) DeepCopyInto(out *SerializerJSONParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerJSONParameters.
func (in *SerializerJSONParameters) DeepCopy() *SerializerJSONParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerJSONParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerObservation) DeepCopyInto(out *SerializerObservation) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerAutoParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerDebeziumObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerJSONParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerObservation.
func (in *SerializerObservation) DeepCopy() *SerializerObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParameters) DeepCopyInto(out *SerializerParameters) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerAutoParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerDebeziumParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerJSONParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParameters.
func (in *SerializerParameters) DeepCopy() *SerializerParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParametersInitParameters) DeepCopyInto(out *SerializerParametersInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParametersInitParameters.
func (in *SerializerParametersInitParameters) DeepCopy() *SerializerParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParametersObservation) DeepCopyInto(out *SerializerParametersObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParametersObservation.
func (in *SerializerParametersObservation) DeepCopy() *SerializerParametersObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerParametersParameters) DeepCopyInto(out *SerializerParametersParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerParametersParameters.
func (in *SerializerParametersParameters) DeepCopy() *SerializerParametersParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerAutoInitParameters) DeepCopyInto(out *SerializerSerializerAutoInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerAutoInitParameters.
func (in *SerializerSerializerAutoInitParameters) DeepCopy() *SerializerSerializerAutoInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerAutoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerAutoObservation) DeepCopyInto(out *SerializerSerializerAutoObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerAutoObservation.
func (in *SerializerSerializerAutoObservation) DeepCopy() *SerializerSerializerAutoObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerAutoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerAutoParameters) DeepCopyInto(out *SerializerSerializerAutoParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerAutoParameters.
func (in *SerializerSerializerAutoParameters) DeepCopy() *SerializerSerializerAutoParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerAutoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerDebeziumInitParameters) DeepCopyInto(out *SerializerSerializerDebeziumInitParameters) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerDebeziumSerializerParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerDebeziumInitParameters.
func (in *SerializerSerializerDebeziumInitParameters) DeepCopy() *SerializerSerializerDebeziumInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerDebeziumInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerDebeziumObservation) DeepCopyInto(out *SerializerSerializerDebeziumObservation) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerDebeziumSerializerParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerDebeziumObservation.
func (in *SerializerSerializerDebeziumObservation) DeepCopy() *SerializerSerializerDebeziumObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerDebeziumObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerDebeziumParameters) DeepCopyInto(out *SerializerSerializerDebeziumParameters) {
	*out = *in
	if in.SerializerParameters != nil {
		in, out := &in.SerializerParameters, &out.SerializerParameters
		*out = make([]SerializerDebeziumSerializerParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerDebeziumParameters.
func (in *SerializerSerializerDebeziumParameters) DeepCopy() *SerializerSerializerDebeziumParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerDebeziumParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerJSONInitParameters) DeepCopyInto(out *SerializerSerializerJSONInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerJSONInitParameters.
func (in *SerializerSerializerJSONInitParameters) DeepCopy() *SerializerSerializerJSONInitParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerJSONInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerJSONObservation) DeepCopyInto(out *SerializerSerializerJSONObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerJSONObservation.
func (in *SerializerSerializerJSONObservation) DeepCopy() *SerializerSerializerJSONObservation {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerJSONObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SerializerSerializerJSONParameters) DeepCopyInto(out *SerializerSerializerJSONParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SerializerSerializerJSONParameters.
func (in *SerializerSerializerJSONParameters) DeepCopy() *SerializerSerializerJSONParameters {
	if in == nil {
		return nil
	}
	out := new(SerializerSerializerJSONParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters) DeepCopyInto(out *SettingsInitParameters) {
	*out = *in
	if in.ClickhouseSource != nil {
		in, out := &in.ClickhouseSource, &out.ClickhouseSource
		*out = make([]ClickhouseSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClickhouseTarget != nil {
		in, out := &in.ClickhouseTarget, &out.ClickhouseTarget
		*out = make([]ClickhouseTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaSource != nil {
		in, out := &in.KafkaSource, &out.KafkaSource
		*out = make([]KafkaSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaTarget != nil {
		in, out := &in.KafkaTarget, &out.KafkaTarget
		*out = make([]KafkaTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetrikaSource != nil {
		in, out := &in.MetrikaSource, &out.MetrikaSource
		*out = make([]MetrikaSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoSource != nil {
		in, out := &in.MongoSource, &out.MongoSource
		*out = make([]MongoSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoTarget != nil {
		in, out := &in.MongoTarget, &out.MongoTarget
		*out = make([]MongoTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLSource != nil {
		in, out := &in.MySQLSource, &out.MySQLSource
		*out = make([]MySQLSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLTarget != nil {
		in, out := &in.MySQLTarget, &out.MySQLTarget
		*out = make([]MySQLTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresSource != nil {
		in, out := &in.PostgresSource, &out.PostgresSource
		*out = make([]PostgresSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresTarget != nil {
		in, out := &in.PostgresTarget, &out.PostgresTarget
		*out = make([]PostgresTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbSource != nil {
		in, out := &in.YdbSource, &out.YdbSource
		*out = make([]YdbSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbTarget != nil {
		in, out := &in.YdbTarget, &out.YdbTarget
		*out = make([]YdbTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdsSource != nil {
		in, out := &in.YdsSource, &out.YdsSource
		*out = make([]YdsSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdsTarget != nil {
		in, out := &in.YdsTarget, &out.YdsTarget
		*out = make([]YdsTargetInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters.
func (in *SettingsInitParameters) DeepCopy() *SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.ClickhouseSource != nil {
		in, out := &in.ClickhouseSource, &out.ClickhouseSource
		*out = make([]ClickhouseSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClickhouseTarget != nil {
		in, out := &in.ClickhouseTarget, &out.ClickhouseTarget
		*out = make([]ClickhouseTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaSource != nil {
		in, out := &in.KafkaSource, &out.KafkaSource
		*out = make([]KafkaSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaTarget != nil {
		in, out := &in.KafkaTarget, &out.KafkaTarget
		*out = make([]KafkaTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetrikaSource != nil {
		in, out := &in.MetrikaSource, &out.MetrikaSource
		*out = make([]MetrikaSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoSource != nil {
		in, out := &in.MongoSource, &out.MongoSource
		*out = make([]MongoSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoTarget != nil {
		in, out := &in.MongoTarget, &out.MongoTarget
		*out = make([]MongoTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLSource != nil {
		in, out := &in.MySQLSource, &out.MySQLSource
		*out = make([]MySQLSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLTarget != nil {
		in, out := &in.MySQLTarget, &out.MySQLTarget
		*out = make([]MySQLTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresSource != nil {
		in, out := &in.PostgresSource, &out.PostgresSource
		*out = make([]PostgresSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresTarget != nil {
		in, out := &in.PostgresTarget, &out.PostgresTarget
		*out = make([]PostgresTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbSource != nil {
		in, out := &in.YdbSource, &out.YdbSource
		*out = make([]YdbSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbTarget != nil {
		in, out := &in.YdbTarget, &out.YdbTarget
		*out = make([]YdbTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdsSource != nil {
		in, out := &in.YdsSource, &out.YdsSource
		*out = make([]YdsSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdsTarget != nil {
		in, out := &in.YdsTarget, &out.YdsTarget
		*out = make([]YdsTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.ClickhouseSource != nil {
		in, out := &in.ClickhouseSource, &out.ClickhouseSource
		*out = make([]ClickhouseSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClickhouseTarget != nil {
		in, out := &in.ClickhouseTarget, &out.ClickhouseTarget
		*out = make([]ClickhouseTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaSource != nil {
		in, out := &in.KafkaSource, &out.KafkaSource
		*out = make([]KafkaSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KafkaTarget != nil {
		in, out := &in.KafkaTarget, &out.KafkaTarget
		*out = make([]KafkaTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MetrikaSource != nil {
		in, out := &in.MetrikaSource, &out.MetrikaSource
		*out = make([]MetrikaSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoSource != nil {
		in, out := &in.MongoSource, &out.MongoSource
		*out = make([]MongoSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoTarget != nil {
		in, out := &in.MongoTarget, &out.MongoTarget
		*out = make([]MongoTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLSource != nil {
		in, out := &in.MySQLSource, &out.MySQLSource
		*out = make([]MySQLSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MySQLTarget != nil {
		in, out := &in.MySQLTarget, &out.MySQLTarget
		*out = make([]MySQLTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresSource != nil {
		in, out := &in.PostgresSource, &out.PostgresSource
		*out = make([]PostgresSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PostgresTarget != nil {
		in, out := &in.PostgresTarget, &out.PostgresTarget
		*out = make([]PostgresTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbSource != nil {
		in, out := &in.YdbSource, &out.YdbSource
		*out = make([]YdbSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdbTarget != nil {
		in, out := &in.YdbTarget, &out.YdbTarget
		*out = make([]YdbTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdsSource != nil {
		in, out := &in.YdsSource, &out.YdsSource
		*out = make([]YdsSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.YdsTarget != nil {
		in, out := &in.YdsTarget, &out.YdsTarget
		*out = make([]YdsTargetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerColumnsInitParameters) DeepCopyInto(out *SharderTransformerColumnsInitParameters) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerColumnsInitParameters.
func (in *SharderTransformerColumnsInitParameters) DeepCopy() *SharderTransformerColumnsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerColumnsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerColumnsObservation) DeepCopyInto(out *SharderTransformerColumnsObservation) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerColumnsObservation.
func (in *SharderTransformerColumnsObservation) DeepCopy() *SharderTransformerColumnsObservation {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerColumnsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerColumnsParameters) DeepCopyInto(out *SharderTransformerColumnsParameters) {
	*out = *in
	if in.ExcludeColumns != nil {
		in, out := &in.ExcludeColumns, &out.ExcludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeColumns != nil {
		in, out := &in.IncludeColumns, &out.IncludeColumns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerColumnsParameters.
func (in *SharderTransformerColumnsParameters) DeepCopy() *SharderTransformerColumnsParameters {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerColumnsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerInitParameters) DeepCopyInto(out *SharderTransformerInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SharderTransformerColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardsCount != nil {
		in, out := &in.ShardsCount, &out.ShardsCount
		*out = new(float64)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SharderTransformerTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerInitParameters.
func (in *SharderTransformerInitParameters) DeepCopy() *SharderTransformerInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerObservation) DeepCopyInto(out *SharderTransformerObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SharderTransformerColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardsCount != nil {
		in, out := &in.ShardsCount, &out.ShardsCount
		*out = new(float64)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SharderTransformerTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerObservation.
func (in *SharderTransformerObservation) DeepCopy() *SharderTransformerObservation {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerParameters) DeepCopyInto(out *SharderTransformerParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]SharderTransformerColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardsCount != nil {
		in, out := &in.ShardsCount, &out.ShardsCount
		*out = new(float64)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]SharderTransformerTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerParameters.
func (in *SharderTransformerParameters) DeepCopy() *SharderTransformerParameters {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerTablesInitParameters) DeepCopyInto(out *SharderTransformerTablesInitParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerTablesInitParameters.
func (in *SharderTransformerTablesInitParameters) DeepCopy() *SharderTransformerTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerTablesObservation) DeepCopyInto(out *SharderTransformerTablesObservation) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerTablesObservation.
func (in *SharderTransformerTablesObservation) DeepCopy() *SharderTransformerTablesObservation {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharderTransformerTablesParameters) DeepCopyInto(out *SharderTransformerTablesParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharderTransformerTablesParameters.
func (in *SharderTransformerTablesParameters) DeepCopy() *SharderTransformerTablesParameters {
	if in == nil {
		return nil
	}
	out := new(SharderTransformerTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingInitParameters) DeepCopyInto(out *ShardingInitParameters) {
	*out = *in
	if in.ColumnValueHash != nil {
		in, out := &in.ColumnValueHash, &out.ColumnValueHash
		*out = make([]ColumnValueHashInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomMapping != nil {
		in, out := &in.CustomMapping, &out.CustomMapping
		*out = make([]CustomMappingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoundRobin != nil {
		in, out := &in.RoundRobin, &out.RoundRobin
		*out = make([]RoundRobinInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.TransferID != nil {
		in, out := &in.TransferID, &out.TransferID
		*out = make([]TransferIDInitParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingInitParameters.
func (in *ShardingInitParameters) DeepCopy() *ShardingInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShardingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingObservation) DeepCopyInto(out *ShardingObservation) {
	*out = *in
	if in.ColumnValueHash != nil {
		in, out := &in.ColumnValueHash, &out.ColumnValueHash
		*out = make([]ColumnValueHashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomMapping != nil {
		in, out := &in.CustomMapping, &out.CustomMapping
		*out = make([]CustomMappingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoundRobin != nil {
		in, out := &in.RoundRobin, &out.RoundRobin
		*out = make([]RoundRobinParameters, len(*in))
		copy(*out, *in)
	}
	if in.TransferID != nil {
		in, out := &in.TransferID, &out.TransferID
		*out = make([]TransferIDParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingObservation.
func (in *ShardingObservation) DeepCopy() *ShardingObservation {
	if in == nil {
		return nil
	}
	out := new(ShardingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardingParameters) DeepCopyInto(out *ShardingParameters) {
	*out = *in
	if in.ColumnValueHash != nil {
		in, out := &in.ColumnValueHash, &out.ColumnValueHash
		*out = make([]ColumnValueHashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomMapping != nil {
		in, out := &in.CustomMapping, &out.CustomMapping
		*out = make([]CustomMappingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoundRobin != nil {
		in, out := &in.RoundRobin, &out.RoundRobin
		*out = make([]RoundRobinParameters, len(*in))
		copy(*out, *in)
	}
	if in.TransferID != nil {
		in, out := &in.TransferID, &out.TransferID
		*out = make([]TransferIDParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardingParameters.
func (in *ShardingParameters) DeepCopy() *ShardingParameters {
	if in == nil {
		return nil
	}
	out := new(ShardingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardsInitParameters) DeepCopyInto(out *ShardsInitParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardsInitParameters.
func (in *ShardsInitParameters) DeepCopy() *ShardsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShardsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardsObservation) DeepCopyInto(out *ShardsObservation) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardsObservation.
func (in *ShardsObservation) DeepCopy() *ShardsObservation {
	if in == nil {
		return nil
	}
	out := new(ShardsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardsParameters) DeepCopyInto(out *ShardsParameters) {
	*out = *in
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardsParameters.
func (in *ShardsParameters) DeepCopy() *ShardsParameters {
	if in == nil {
		return nil
	}
	out := new(ShardsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamsInitParameters) DeepCopyInto(out *StreamsInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamsInitParameters.
func (in *StreamsInitParameters) DeepCopy() *StreamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(StreamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamsObservation) DeepCopyInto(out *StreamsObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamsObservation.
func (in *StreamsObservation) DeepCopy() *StreamsObservation {
	if in == nil {
		return nil
	}
	out := new(StreamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamsParameters) DeepCopyInto(out *StreamsParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamsParameters.
func (in *StreamsParameters) DeepCopy() *StreamsParameters {
	if in == nil {
		return nil
	}
	out := new(StreamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeDisabledInitParameters) DeepCopyInto(out *TLSModeDisabledInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeDisabledInitParameters.
func (in *TLSModeDisabledInitParameters) DeepCopy() *TLSModeDisabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeDisabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeDisabledObservation) DeepCopyInto(out *TLSModeDisabledObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeDisabledObservation.
func (in *TLSModeDisabledObservation) DeepCopy() *TLSModeDisabledObservation {
	if in == nil {
		return nil
	}
	out := new(TLSModeDisabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeDisabledParameters) DeepCopyInto(out *TLSModeDisabledParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeDisabledParameters.
func (in *TLSModeDisabledParameters) DeepCopy() *TLSModeDisabledParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeDisabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeEnabledInitParameters) DeepCopyInto(out *TLSModeEnabledInitParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeEnabledInitParameters.
func (in *TLSModeEnabledInitParameters) DeepCopy() *TLSModeEnabledInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeEnabledInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeEnabledObservation) DeepCopyInto(out *TLSModeEnabledObservation) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeEnabledObservation.
func (in *TLSModeEnabledObservation) DeepCopy() *TLSModeEnabledObservation {
	if in == nil {
		return nil
	}
	out := new(TLSModeEnabledObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeEnabledParameters) DeepCopyInto(out *TLSModeEnabledParameters) {
	*out = *in
	if in.CACertificate != nil {
		in, out := &in.CACertificate, &out.CACertificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeEnabledParameters.
func (in *TLSModeEnabledParameters) DeepCopy() *TLSModeEnabledParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeEnabledParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeInitParameters) DeepCopyInto(out *TLSModeInitParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]DisabledInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]EnabledInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeInitParameters.
func (in *TLSModeInitParameters) DeepCopy() *TLSModeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeObservation) DeepCopyInto(out *TLSModeObservation) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]DisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]EnabledObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeObservation.
func (in *TLSModeObservation) DeepCopy() *TLSModeObservation {
	if in == nil {
		return nil
	}
	out := new(TLSModeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSModeParameters) DeepCopyInto(out *TLSModeParameters) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = make([]DisabledParameters, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = make([]EnabledParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSModeParameters.
func (in *TLSModeParameters) DeepCopy() *TLSModeParameters {
	if in == nil {
		return nil
	}
	out := new(TLSModeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSplitterTransformerInitParameters) DeepCopyInto(out *TableSplitterTransformerInitParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Splitter != nil {
		in, out := &in.Splitter, &out.Splitter
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TableSplitterTransformerTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSplitterTransformerInitParameters.
func (in *TableSplitterTransformerInitParameters) DeepCopy() *TableSplitterTransformerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableSplitterTransformerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSplitterTransformerObservation) DeepCopyInto(out *TableSplitterTransformerObservation) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Splitter != nil {
		in, out := &in.Splitter, &out.Splitter
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TableSplitterTransformerTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSplitterTransformerObservation.
func (in *TableSplitterTransformerObservation) DeepCopy() *TableSplitterTransformerObservation {
	if in == nil {
		return nil
	}
	out := new(TableSplitterTransformerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSplitterTransformerParameters) DeepCopyInto(out *TableSplitterTransformerParameters) {
	*out = *in
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Splitter != nil {
		in, out := &in.Splitter, &out.Splitter
		*out = new(string)
		**out = **in
	}
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]TableSplitterTransformerTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSplitterTransformerParameters.
func (in *TableSplitterTransformerParameters) DeepCopy() *TableSplitterTransformerParameters {
	if in == nil {
		return nil
	}
	out := new(TableSplitterTransformerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSplitterTransformerTablesInitParameters) DeepCopyInto(out *TableSplitterTransformerTablesInitParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSplitterTransformerTablesInitParameters.
func (in *TableSplitterTransformerTablesInitParameters) DeepCopy() *TableSplitterTransformerTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TableSplitterTransformerTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSplitterTransformerTablesObservation) DeepCopyInto(out *TableSplitterTransformerTablesObservation) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSplitterTransformerTablesObservation.
func (in *TableSplitterTransformerTablesObservation) DeepCopy() *TableSplitterTransformerTablesObservation {
	if in == nil {
		return nil
	}
	out := new(TableSplitterTransformerTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSplitterTransformerTablesParameters) DeepCopyInto(out *TableSplitterTransformerTablesParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSplitterTransformerTablesParameters.
func (in *TableSplitterTransformerTablesParameters) DeepCopy() *TableSplitterTransformerTablesParameters {
	if in == nil {
		return nil
	}
	out := new(TableSplitterTransformerTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesInitParameters) DeepCopyInto(out *TablesInitParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesInitParameters.
func (in *TablesInitParameters) DeepCopy() *TablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesObservation) DeepCopyInto(out *TablesObservation) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesObservation.
func (in *TablesObservation) DeepCopy() *TablesObservation {
	if in == nil {
		return nil
	}
	out := new(TablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TablesParameters) DeepCopyInto(out *TablesParameters) {
	*out = *in
	if in.ExcludeTables != nil {
		in, out := &in.ExcludeTables, &out.ExcludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeTables != nil {
		in, out := &in.IncludeTables, &out.IncludeTables
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TablesParameters.
func (in *TablesParameters) DeepCopy() *TablesParameters {
	if in == nil {
		return nil
	}
	out := new(TablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenInitParameters) DeepCopyInto(out *TokenInitParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenInitParameters.
func (in *TokenInitParameters) DeepCopy() *TokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenObservation) DeepCopyInto(out *TokenObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenObservation.
func (in *TokenObservation) DeepCopy() *TokenObservation {
	if in == nil {
		return nil
	}
	out := new(TokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenParameters) DeepCopyInto(out *TokenParameters) {
	*out = *in
	if in.RawSecretRef != nil {
		in, out := &in.RawSecretRef, &out.RawSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenParameters.
func (in *TokenParameters) DeepCopy() *TokenParameters {
	if in == nil {
		return nil
	}
	out := new(TokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicInitParameters) DeepCopyInto(out *TopicInitParameters) {
	*out = *in
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicInitParameters.
func (in *TopicInitParameters) DeepCopy() *TopicInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicObservation) DeepCopyInto(out *TopicObservation) {
	*out = *in
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicObservation.
func (in *TopicObservation) DeepCopy() *TopicObservation {
	if in == nil {
		return nil
	}
	out := new(TopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicParameters) DeepCopyInto(out *TopicParameters) {
	*out = *in
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicParameters.
func (in *TopicParameters) DeepCopy() *TopicParameters {
	if in == nil {
		return nil
	}
	out := new(TopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSettingsInitParameters) DeepCopyInto(out *TopicSettingsInitParameters) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = make([]TopicInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicPrefix != nil {
		in, out := &in.TopicPrefix, &out.TopicPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSettingsInitParameters.
func (in *TopicSettingsInitParameters) DeepCopy() *TopicSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSettingsObservation) DeepCopyInto(out *TopicSettingsObservation) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = make([]TopicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicPrefix != nil {
		in, out := &in.TopicPrefix, &out.TopicPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSettingsObservation.
func (in *TopicSettingsObservation) DeepCopy() *TopicSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicSettingsParameters) DeepCopyInto(out *TopicSettingsParameters) {
	*out = *in
	if in.Topic != nil {
		in, out := &in.Topic, &out.Topic
		*out = make([]TopicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicPrefix != nil {
		in, out := &in.TopicPrefix, &out.TopicPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicSettingsParameters.
func (in *TopicSettingsParameters) DeepCopy() *TopicSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Transfer) DeepCopyInto(out *Transfer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Transfer.
func (in *Transfer) DeepCopy() *Transfer {
	if in == nil {
		return nil
	}
	out := new(Transfer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Transfer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferIDInitParameters) DeepCopyInto(out *TransferIDInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferIDInitParameters.
func (in *TransferIDInitParameters) DeepCopy() *TransferIDInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransferIDInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferIDObservation) DeepCopyInto(out *TransferIDObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferIDObservation.
func (in *TransferIDObservation) DeepCopy() *TransferIDObservation {
	if in == nil {
		return nil
	}
	out := new(TransferIDObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferIDParameters) DeepCopyInto(out *TransferIDParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferIDParameters.
func (in *TransferIDParameters) DeepCopy() *TransferIDParameters {
	if in == nil {
		return nil
	}
	out := new(TransferIDParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferInitParameters) DeepCopyInto(out *TransferInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnCreateActivateMode != nil {
		in, out := &in.OnCreateActivateMode, &out.OnCreateActivateMode
		*out = new(string)
		**out = **in
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = make([]RuntimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceIDRef != nil {
		in, out := &in.SourceIDRef, &out.SourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIDSelector != nil {
		in, out := &in.SourceIDSelector, &out.SourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIDRef != nil {
		in, out := &in.TargetIDRef, &out.TargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetIDSelector != nil {
		in, out := &in.TargetIDSelector, &out.TargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Transformation != nil {
		in, out := &in.Transformation, &out.Transformation
		*out = make([]TransformationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferInitParameters.
func (in *TransferInitParameters) DeepCopy() *TransferInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransferInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferList) DeepCopyInto(out *TransferList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Transfer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferList.
func (in *TransferList) DeepCopy() *TransferList {
	if in == nil {
		return nil
	}
	out := new(TransferList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransferList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferObservation) DeepCopyInto(out *TransferObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnCreateActivateMode != nil {
		in, out := &in.OnCreateActivateMode, &out.OnCreateActivateMode
		*out = new(string)
		**out = **in
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = make([]RuntimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Transformation != nil {
		in, out := &in.Transformation, &out.Transformation
		*out = make([]TransformationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Warning != nil {
		in, out := &in.Warning, &out.Warning
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferObservation.
func (in *TransferObservation) DeepCopy() *TransferObservation {
	if in == nil {
		return nil
	}
	out := new(TransferObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferParameters) DeepCopyInto(out *TransferParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FolderID != nil {
		in, out := &in.FolderID, &out.FolderID
		*out = new(string)
		**out = **in
	}
	if in.FolderIDRef != nil {
		in, out := &in.FolderIDRef, &out.FolderIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FolderIDSelector != nil {
		in, out := &in.FolderIDSelector, &out.FolderIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnCreateActivateMode != nil {
		in, out := &in.OnCreateActivateMode, &out.OnCreateActivateMode
		*out = new(string)
		**out = **in
	}
	if in.Runtime != nil {
		in, out := &in.Runtime, &out.Runtime
		*out = make([]RuntimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceIDRef != nil {
		in, out := &in.SourceIDRef, &out.SourceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceIDSelector != nil {
		in, out := &in.SourceIDSelector, &out.SourceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIDRef != nil {
		in, out := &in.TargetIDRef, &out.TargetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetIDSelector != nil {
		in, out := &in.TargetIDSelector, &out.TargetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Transformation != nil {
		in, out := &in.Transformation, &out.Transformation
		*out = make([]TransformationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferParameters.
func (in *TransferParameters) DeepCopy() *TransferParameters {
	if in == nil {
		return nil
	}
	out := new(TransferParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferSpec) DeepCopyInto(out *TransferSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferSpec.
func (in *TransferSpec) DeepCopy() *TransferSpec {
	if in == nil {
		return nil
	}
	out := new(TransferSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransferStatus) DeepCopyInto(out *TransferStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransferStatus.
func (in *TransferStatus) DeepCopy() *TransferStatus {
	if in == nil {
		return nil
	}
	out := new(TransferStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationInitParameters) DeepCopyInto(out *TransformationInitParameters) {
	*out = *in
	if in.Transformers != nil {
		in, out := &in.Transformers, &out.Transformers
		*out = make([]TransformersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationInitParameters.
func (in *TransformationInitParameters) DeepCopy() *TransformationInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransformationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationObservation) DeepCopyInto(out *TransformationObservation) {
	*out = *in
	if in.Transformers != nil {
		in, out := &in.Transformers, &out.Transformers
		*out = make([]TransformersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationObservation.
func (in *TransformationObservation) DeepCopy() *TransformationObservation {
	if in == nil {
		return nil
	}
	out := new(TransformationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformationParameters) DeepCopyInto(out *TransformationParameters) {
	*out = *in
	if in.Transformers != nil {
		in, out := &in.Transformers, &out.Transformers
		*out = make([]TransformersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformationParameters.
func (in *TransformationParameters) DeepCopy() *TransformationParameters {
	if in == nil {
		return nil
	}
	out := new(TransformationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformerInitParameters) DeepCopyInto(out *TransformerInitParameters) {
	*out = *in
	if in.BufferFlushInterval != nil {
		in, out := &in.BufferFlushInterval, &out.BufferFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = new(string)
		**out = **in
	}
	if in.InvocationTimeout != nil {
		in, out := &in.InvocationTimeout, &out.InvocationTimeout
		*out = new(string)
		**out = **in
	}
	if in.NumberOfRetries != nil {
		in, out := &in.NumberOfRetries, &out.NumberOfRetries
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformerInitParameters.
func (in *TransformerInitParameters) DeepCopy() *TransformerInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransformerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformerObservation) DeepCopyInto(out *TransformerObservation) {
	*out = *in
	if in.BufferFlushInterval != nil {
		in, out := &in.BufferFlushInterval, &out.BufferFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = new(string)
		**out = **in
	}
	if in.InvocationTimeout != nil {
		in, out := &in.InvocationTimeout, &out.InvocationTimeout
		*out = new(string)
		**out = **in
	}
	if in.NumberOfRetries != nil {
		in, out := &in.NumberOfRetries, &out.NumberOfRetries
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformerObservation.
func (in *TransformerObservation) DeepCopy() *TransformerObservation {
	if in == nil {
		return nil
	}
	out := new(TransformerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformerParameters) DeepCopyInto(out *TransformerParameters) {
	*out = *in
	if in.BufferFlushInterval != nil {
		in, out := &in.BufferFlushInterval, &out.BufferFlushInterval
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CloudFunction != nil {
		in, out := &in.CloudFunction, &out.CloudFunction
		*out = new(string)
		**out = **in
	}
	if in.InvocationTimeout != nil {
		in, out := &in.InvocationTimeout, &out.InvocationTimeout
		*out = new(string)
		**out = **in
	}
	if in.NumberOfRetries != nil {
		in, out := &in.NumberOfRetries, &out.NumberOfRetries
		*out = new(float64)
		**out = **in
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformerParameters.
func (in *TransformerParameters) DeepCopy() *TransformerParameters {
	if in == nil {
		return nil
	}
	out := new(TransformerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformersInitParameters) DeepCopyInto(out *TransformersInitParameters) {
	*out = *in
	if in.ConvertToString != nil {
		in, out := &in.ConvertToString, &out.ConvertToString
		*out = make([]ConvertToStringInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterColumns != nil {
		in, out := &in.FilterColumns, &out.FilterColumns
		*out = make([]FilterColumnsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterRows != nil {
		in, out := &in.FilterRows, &out.FilterRows
		*out = make([]FilterRowsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaskField != nil {
		in, out := &in.MaskField, &out.MaskField
		*out = make([]MaskFieldInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RenameTables != nil {
		in, out := &in.RenameTables, &out.RenameTables
		*out = make([]RenameTablesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplacePrimaryKey != nil {
		in, out := &in.ReplacePrimaryKey, &out.ReplacePrimaryKey
		*out = make([]ReplacePrimaryKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharderTransformer != nil {
		in, out := &in.SharderTransformer, &out.SharderTransformer
		*out = make([]SharderTransformerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableSplitterTransformer != nil {
		in, out := &in.TableSplitterTransformer, &out.TableSplitterTransformer
		*out = make([]TableSplitterTransformerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformersInitParameters.
func (in *TransformersInitParameters) DeepCopy() *TransformersInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransformersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformersObservation) DeepCopyInto(out *TransformersObservation) {
	*out = *in
	if in.ConvertToString != nil {
		in, out := &in.ConvertToString, &out.ConvertToString
		*out = make([]ConvertToStringObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterColumns != nil {
		in, out := &in.FilterColumns, &out.FilterColumns
		*out = make([]FilterColumnsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterRows != nil {
		in, out := &in.FilterRows, &out.FilterRows
		*out = make([]FilterRowsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaskField != nil {
		in, out := &in.MaskField, &out.MaskField
		*out = make([]MaskFieldObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RenameTables != nil {
		in, out := &in.RenameTables, &out.RenameTables
		*out = make([]RenameTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplacePrimaryKey != nil {
		in, out := &in.ReplacePrimaryKey, &out.ReplacePrimaryKey
		*out = make([]ReplacePrimaryKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharderTransformer != nil {
		in, out := &in.SharderTransformer, &out.SharderTransformer
		*out = make([]SharderTransformerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableSplitterTransformer != nil {
		in, out := &in.TableSplitterTransformer, &out.TableSplitterTransformer
		*out = make([]TableSplitterTransformerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformersObservation.
func (in *TransformersObservation) DeepCopy() *TransformersObservation {
	if in == nil {
		return nil
	}
	out := new(TransformersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformersParameters) DeepCopyInto(out *TransformersParameters) {
	*out = *in
	if in.ConvertToString != nil {
		in, out := &in.ConvertToString, &out.ConvertToString
		*out = make([]ConvertToStringParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterColumns != nil {
		in, out := &in.FilterColumns, &out.FilterColumns
		*out = make([]FilterColumnsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterRows != nil {
		in, out := &in.FilterRows, &out.FilterRows
		*out = make([]FilterRowsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaskField != nil {
		in, out := &in.MaskField, &out.MaskField
		*out = make([]MaskFieldParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RenameTables != nil {
		in, out := &in.RenameTables, &out.RenameTables
		*out = make([]RenameTablesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReplacePrimaryKey != nil {
		in, out := &in.ReplacePrimaryKey, &out.ReplacePrimaryKey
		*out = make([]ReplacePrimaryKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharderTransformer != nil {
		in, out := &in.SharderTransformer, &out.SharderTransformer
		*out = make([]SharderTransformerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TableSplitterTransformer != nil {
		in, out := &in.TableSplitterTransformer, &out.TableSplitterTransformer
		*out = make([]TableSplitterTransformerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformersParameters.
func (in *TransformersParameters) DeepCopy() *TransformersParameters {
	if in == nil {
		return nil
	}
	out := new(TransformersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaFieldsFieldsInitParameters) DeepCopyInto(out *TskvParserDataSchemaFieldsFieldsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaFieldsFieldsInitParameters.
func (in *TskvParserDataSchemaFieldsFieldsInitParameters) DeepCopy() *TskvParserDataSchemaFieldsFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaFieldsFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaFieldsFieldsObservation) DeepCopyInto(out *TskvParserDataSchemaFieldsFieldsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaFieldsFieldsObservation.
func (in *TskvParserDataSchemaFieldsFieldsObservation) DeepCopy() *TskvParserDataSchemaFieldsFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaFieldsFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaFieldsFieldsParameters) DeepCopyInto(out *TskvParserDataSchemaFieldsFieldsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaFieldsFieldsParameters.
func (in *TskvParserDataSchemaFieldsFieldsParameters) DeepCopy() *TskvParserDataSchemaFieldsFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaFieldsFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaFieldsInitParameters) DeepCopyInto(out *TskvParserDataSchemaFieldsInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]TskvParserDataSchemaFieldsFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaFieldsInitParameters.
func (in *TskvParserDataSchemaFieldsInitParameters) DeepCopy() *TskvParserDataSchemaFieldsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaFieldsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaFieldsObservation) DeepCopyInto(out *TskvParserDataSchemaFieldsObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]TskvParserDataSchemaFieldsFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaFieldsObservation.
func (in *TskvParserDataSchemaFieldsObservation) DeepCopy() *TskvParserDataSchemaFieldsObservation {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaFieldsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaFieldsParameters) DeepCopyInto(out *TskvParserDataSchemaFieldsParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]TskvParserDataSchemaFieldsFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaFieldsParameters.
func (in *TskvParserDataSchemaFieldsParameters) DeepCopy() *TskvParserDataSchemaFieldsParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaFieldsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaInitParameters) DeepCopyInto(out *TskvParserDataSchemaInitParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaInitParameters.
func (in *TskvParserDataSchemaInitParameters) DeepCopy() *TskvParserDataSchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaObservation) DeepCopyInto(out *TskvParserDataSchemaObservation) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaObservation.
func (in *TskvParserDataSchemaObservation) DeepCopy() *TskvParserDataSchemaObservation {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserDataSchemaParameters) DeepCopyInto(out *TskvParserDataSchemaParameters) {
	*out = *in
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]DataSchemaFieldsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JSONFields != nil {
		in, out := &in.JSONFields, &out.JSONFields
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserDataSchemaParameters.
func (in *TskvParserDataSchemaParameters) DeepCopy() *TskvParserDataSchemaParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserDataSchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserInitParameters) DeepCopyInto(out *TskvParserInitParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]TskvParserDataSchemaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserInitParameters.
func (in *TskvParserInitParameters) DeepCopy() *TskvParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserObservation) DeepCopyInto(out *TskvParserObservation) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]TskvParserDataSchemaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserObservation.
func (in *TskvParserObservation) DeepCopy() *TskvParserObservation {
	if in == nil {
		return nil
	}
	out := new(TskvParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TskvParserParameters) DeepCopyInto(out *TskvParserParameters) {
	*out = *in
	if in.AddRestColumn != nil {
		in, out := &in.AddRestColumn, &out.AddRestColumn
		*out = new(bool)
		**out = **in
	}
	if in.DataSchema != nil {
		in, out := &in.DataSchema, &out.DataSchema
		*out = make([]TskvParserDataSchemaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullKeysAllowed != nil {
		in, out := &in.NullKeysAllowed, &out.NullKeysAllowed
		*out = new(bool)
		**out = **in
	}
	if in.UnescapeStringValues != nil {
		in, out := &in.UnescapeStringValues, &out.UnescapeStringValues
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TskvParserParameters.
func (in *TskvParserParameters) DeepCopy() *TskvParserParameters {
	if in == nil {
		return nil
	}
	out := new(TskvParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadShardParamsInitParameters) DeepCopyInto(out *UploadShardParamsInitParameters) {
	*out = *in
	if in.JobCount != nil {
		in, out := &in.JobCount, &out.JobCount
		*out = new(float64)
		**out = **in
	}
	if in.ProcessCount != nil {
		in, out := &in.ProcessCount, &out.ProcessCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadShardParamsInitParameters.
func (in *UploadShardParamsInitParameters) DeepCopy() *UploadShardParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UploadShardParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadShardParamsObservation) DeepCopyInto(out *UploadShardParamsObservation) {
	*out = *in
	if in.JobCount != nil {
		in, out := &in.JobCount, &out.JobCount
		*out = new(float64)
		**out = **in
	}
	if in.ProcessCount != nil {
		in, out := &in.ProcessCount, &out.ProcessCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadShardParamsObservation.
func (in *UploadShardParamsObservation) DeepCopy() *UploadShardParamsObservation {
	if in == nil {
		return nil
	}
	out := new(UploadShardParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UploadShardParamsParameters) DeepCopyInto(out *UploadShardParamsParameters) {
	*out = *in
	if in.JobCount != nil {
		in, out := &in.JobCount, &out.JobCount
		*out = new(float64)
		**out = **in
	}
	if in.ProcessCount != nil {
		in, out := &in.ProcessCount, &out.ProcessCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UploadShardParamsParameters.
func (in *UploadShardParamsParameters) DeepCopy() *UploadShardParamsParameters {
	if in == nil {
		return nil
	}
	out := new(UploadShardParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YcRuntimeInitParameters) DeepCopyInto(out *YcRuntimeInitParameters) {
	*out = *in
	if in.JobCount != nil {
		in, out := &in.JobCount, &out.JobCount
		*out = new(float64)
		**out = **in
	}
	if in.UploadShardParams != nil {
		in, out := &in.UploadShardParams, &out.UploadShardParams
		*out = make([]UploadShardParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YcRuntimeInitParameters.
func (in *YcRuntimeInitParameters) DeepCopy() *YcRuntimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(YcRuntimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YcRuntimeObservation) DeepCopyInto(out *YcRuntimeObservation) {
	*out = *in
	if in.JobCount != nil {
		in, out := &in.JobCount, &out.JobCount
		*out = new(float64)
		**out = **in
	}
	if in.UploadShardParams != nil {
		in, out := &in.UploadShardParams, &out.UploadShardParams
		*out = make([]UploadShardParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YcRuntimeObservation.
func (in *YcRuntimeObservation) DeepCopy() *YcRuntimeObservation {
	if in == nil {
		return nil
	}
	out := new(YcRuntimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YcRuntimeParameters) DeepCopyInto(out *YcRuntimeParameters) {
	*out = *in
	if in.JobCount != nil {
		in, out := &in.JobCount, &out.JobCount
		*out = new(float64)
		**out = **in
	}
	if in.UploadShardParams != nil {
		in, out := &in.UploadShardParams, &out.UploadShardParams
		*out = make([]UploadShardParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YcRuntimeParameters.
func (in *YcRuntimeParameters) DeepCopy() *YcRuntimeParameters {
	if in == nil {
		return nil
	}
	out := new(YcRuntimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbSourceInitParameters) DeepCopyInto(out *YdbSourceInitParameters) {
	*out = *in
	if in.ChangefeedCustomName != nil {
		in, out := &in.ChangefeedCustomName, &out.ChangefeedCustomName
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SaKeyContentSecretRef != nil {
		in, out := &in.SaKeyContentSecretRef, &out.SaKeyContentSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbSourceInitParameters.
func (in *YdbSourceInitParameters) DeepCopy() *YdbSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(YdbSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbSourceObservation) DeepCopyInto(out *YdbSourceObservation) {
	*out = *in
	if in.ChangefeedCustomName != nil {
		in, out := &in.ChangefeedCustomName, &out.ChangefeedCustomName
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbSourceObservation.
func (in *YdbSourceObservation) DeepCopy() *YdbSourceObservation {
	if in == nil {
		return nil
	}
	out := new(YdbSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbSourceParameters) DeepCopyInto(out *YdbSourceParameters) {
	*out = *in
	if in.ChangefeedCustomName != nil {
		in, out := &in.ChangefeedCustomName, &out.ChangefeedCustomName
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SaKeyContentSecretRef != nil {
		in, out := &in.SaKeyContentSecretRef, &out.SaKeyContentSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbSourceParameters.
func (in *YdbSourceParameters) DeepCopy() *YdbSourceParameters {
	if in == nil {
		return nil
	}
	out := new(YdbSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbTargetInitParameters) DeepCopyInto(out *YdbTargetInitParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DefaultCompression != nil {
		in, out := &in.DefaultCompression, &out.DefaultCompression
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.IsTableColumnOriented != nil {
		in, out := &in.IsTableColumnOriented, &out.IsTableColumnOriented
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SaKeyContentSecretRef != nil {
		in, out := &in.SaKeyContentSecretRef, &out.SaKeyContentSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbTargetInitParameters.
func (in *YdbTargetInitParameters) DeepCopy() *YdbTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(YdbTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbTargetObservation) DeepCopyInto(out *YdbTargetObservation) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DefaultCompression != nil {
		in, out := &in.DefaultCompression, &out.DefaultCompression
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.IsTableColumnOriented != nil {
		in, out := &in.IsTableColumnOriented, &out.IsTableColumnOriented
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbTargetObservation.
func (in *YdbTargetObservation) DeepCopy() *YdbTargetObservation {
	if in == nil {
		return nil
	}
	out := new(YdbTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdbTargetParameters) DeepCopyInto(out *YdbTargetParameters) {
	*out = *in
	if in.CleanupPolicy != nil {
		in, out := &in.CleanupPolicy, &out.CleanupPolicy
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.DefaultCompression != nil {
		in, out := &in.DefaultCompression, &out.DefaultCompression
		*out = new(string)
		**out = **in
	}
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(string)
		**out = **in
	}
	if in.IsTableColumnOriented != nil {
		in, out := &in.IsTableColumnOriented, &out.IsTableColumnOriented
		*out = new(bool)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.SaKeyContentSecretRef != nil {
		in, out := &in.SaKeyContentSecretRef, &out.SaKeyContentSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdbTargetParameters.
func (in *YdbTargetParameters) DeepCopy() *YdbTargetParameters {
	if in == nil {
		return nil
	}
	out := new(YdbTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsSourceInitParameters) DeepCopyInto(out *YdsSourceInitParameters) {
	*out = *in
	if in.AllowTTLRewind != nil {
		in, out := &in.AllowTTLRewind, &out.AllowTTLRewind
		*out = new(bool)
		**out = **in
	}
	if in.Consumer != nil {
		in, out := &in.Consumer, &out.Consumer
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]YdsSourceParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SupportedCodecs != nil {
		in, out := &in.SupportedCodecs, &out.SupportedCodecs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsSourceInitParameters.
func (in *YdsSourceInitParameters) DeepCopy() *YdsSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(YdsSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsSourceObservation) DeepCopyInto(out *YdsSourceObservation) {
	*out = *in
	if in.AllowTTLRewind != nil {
		in, out := &in.AllowTTLRewind, &out.AllowTTLRewind
		*out = new(bool)
		**out = **in
	}
	if in.Consumer != nil {
		in, out := &in.Consumer, &out.Consumer
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]YdsSourceParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SupportedCodecs != nil {
		in, out := &in.SupportedCodecs, &out.SupportedCodecs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsSourceObservation.
func (in *YdsSourceObservation) DeepCopy() *YdsSourceObservation {
	if in == nil {
		return nil
	}
	out := new(YdsSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsSourceParameters) DeepCopyInto(out *YdsSourceParameters) {
	*out = *in
	if in.AllowTTLRewind != nil {
		in, out := &in.AllowTTLRewind, &out.AllowTTLRewind
		*out = new(bool)
		**out = **in
	}
	if in.Consumer != nil {
		in, out := &in.Consumer, &out.Consumer
		*out = new(string)
		**out = **in
	}
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]YdsSourceParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SupportedCodecs != nil {
		in, out := &in.SupportedCodecs, &out.SupportedCodecs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsSourceParameters.
func (in *YdsSourceParameters) DeepCopy() *YdsSourceParameters {
	if in == nil {
		return nil
	}
	out := new(YdsSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsSourceParserInitParameters) DeepCopyInto(out *YdsSourceParserInitParameters) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]ParserAuditTrailsV1ParserInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]ParserCloudLoggingParserInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]ParserJSONParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]ParserTskvParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsSourceParserInitParameters.
func (in *YdsSourceParserInitParameters) DeepCopy() *YdsSourceParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(YdsSourceParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsSourceParserObservation) DeepCopyInto(out *YdsSourceParserObservation) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]ParserAuditTrailsV1ParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]ParserCloudLoggingParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]ParserJSONParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]ParserTskvParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsSourceParserObservation.
func (in *YdsSourceParserObservation) DeepCopy() *YdsSourceParserObservation {
	if in == nil {
		return nil
	}
	out := new(YdsSourceParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsSourceParserParameters) DeepCopyInto(out *YdsSourceParserParameters) {
	*out = *in
	if in.AuditTrailsV1Parser != nil {
		in, out := &in.AuditTrailsV1Parser, &out.AuditTrailsV1Parser
		*out = make([]ParserAuditTrailsV1ParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.CloudLoggingParser != nil {
		in, out := &in.CloudLoggingParser, &out.CloudLoggingParser
		*out = make([]ParserCloudLoggingParserParameters, len(*in))
		copy(*out, *in)
	}
	if in.JSONParser != nil {
		in, out := &in.JSONParser, &out.JSONParser
		*out = make([]ParserJSONParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TskvParser != nil {
		in, out := &in.TskvParser, &out.TskvParser
		*out = make([]ParserTskvParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsSourceParserParameters.
func (in *YdsSourceParserParameters) DeepCopy() *YdsSourceParserParameters {
	if in == nil {
		return nil
	}
	out := new(YdsSourceParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsTargetInitParameters) DeepCopyInto(out *YdsTargetInitParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]YdsTargetSerializerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsTargetInitParameters.
func (in *YdsTargetInitParameters) DeepCopy() *YdsTargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(YdsTargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsTargetObservation) DeepCopyInto(out *YdsTargetObservation) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]YdsTargetSerializerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsTargetObservation.
func (in *YdsTargetObservation) DeepCopy() *YdsTargetObservation {
	if in == nil {
		return nil
	}
	out := new(YdsTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsTargetParameters) DeepCopyInto(out *YdsTargetParameters) {
	*out = *in
	if in.Database != nil {
		in, out := &in.Database, &out.Database
		*out = new(string)
		**out = **in
	}
	if in.Endpoint != nil {
		in, out := &in.Endpoint, &out.Endpoint
		*out = new(string)
		**out = **in
	}
	if in.SaveTxOrder != nil {
		in, out := &in.SaveTxOrder, &out.SaveTxOrder
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Serializer != nil {
		in, out := &in.Serializer, &out.Serializer
		*out = make([]YdsTargetSerializerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccountID != nil {
		in, out := &in.ServiceAccountID, &out.ServiceAccountID
		*out = new(string)
		**out = **in
	}
	if in.Stream != nil {
		in, out := &in.Stream, &out.Stream
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsTargetParameters.
func (in *YdsTargetParameters) DeepCopy() *YdsTargetParameters {
	if in == nil {
		return nil
	}
	out := new(YdsTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsTargetSerializerInitParameters) DeepCopyInto(out *YdsTargetSerializerInitParameters) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerSerializerAutoInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerSerializerDebeziumInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerSerializerJSONInitParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsTargetSerializerInitParameters.
func (in *YdsTargetSerializerInitParameters) DeepCopy() *YdsTargetSerializerInitParameters {
	if in == nil {
		return nil
	}
	out := new(YdsTargetSerializerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsTargetSerializerObservation) DeepCopyInto(out *YdsTargetSerializerObservation) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerSerializerAutoParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerSerializerDebeziumObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerSerializerJSONParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsTargetSerializerObservation.
func (in *YdsTargetSerializerObservation) DeepCopy() *YdsTargetSerializerObservation {
	if in == nil {
		return nil
	}
	out := new(YdsTargetSerializerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *YdsTargetSerializerParameters) DeepCopyInto(out *YdsTargetSerializerParameters) {
	*out = *in
	if in.SerializerAuto != nil {
		in, out := &in.SerializerAuto, &out.SerializerAuto
		*out = make([]SerializerSerializerAutoParameters, len(*in))
		copy(*out, *in)
	}
	if in.SerializerDebezium != nil {
		in, out := &in.SerializerDebezium, &out.SerializerDebezium
		*out = make([]SerializerSerializerDebeziumParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SerializerJSON != nil {
		in, out := &in.SerializerJSON, &out.SerializerJSON
		*out = make([]SerializerSerializerJSONParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new YdsTargetSerializerParameters.
func (in *YdsTargetSerializerParameters) DeepCopy() *YdsTargetSerializerParameters {
	if in == nil {
		return nil
	}
	out := new(YdsTargetSerializerParameters)
	in.DeepCopyInto(out)
	return out
}
