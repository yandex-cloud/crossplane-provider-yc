/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DatabaseDedicatedInitParameters struct {

	// (Boolean) Whether public IP addresses should be assigned to the Yandex Database cluster.
	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	AssignPublicIps *bool `json:"assignPublicIps,omitempty" tf:"assign_public_ips,omitempty"`

	// (Boolean) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (Block List, Max: 1) Location for the Yandex Database cluster. (see below for nested schema)
	// Location for the Yandex Database cluster.
	Location []LocationInitParameters `json:"location,omitempty" tf:"location,omitempty"`

	// (String) Location ID for the Yandex Database cluster.
	// Location ID for the Yandex Database cluster.
	LocationID *string `json:"locationId,omitempty" tf:"location_id,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The VPC Network ID of subnets which resource attached to.
	// The `VPC Network ID` of subnets which resource attached to.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Network
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// preset list command.
	// The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`

	// (Block List, Min: 1, Max: 1) Scaling policy for the Yandex Database cluster.
	// Scaling policy for the Yandex Database cluster.
	//
	// ~> Currently, only `fixed_scale` is supported.
	ScalePolicy []ScalePolicyInitParameters `json:"scalePolicy,omitempty" tf:"scale_policy,omitempty"`

	// (Set of String) The list of security groups applied to resource or their components.
	// The list of security groups applied to resource or their components.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// (Number)
	SleepAfter *float64 `json:"sleepAfter,omitempty" tf:"sleep_after,omitempty"`

	// (Block List, Min: 1, Max: 1) A list of storage configuration options for the Yandex Database cluster. (see below for nested schema)
	// A list of storage configuration options for the Yandex Database cluster.
	StorageConfig []StorageConfigInitParameters `json:"storageConfig,omitempty" tf:"storage_config,omitempty"`

	// (Set of String) The list of VPC subnets identifiers which resource is attached.
	// The list of VPC subnets identifiers which resource is attached.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Subnet
	// +listType=set
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// References to Subnet in vpc to populate subnetIds.
	// +kubebuilder:validation:Optional
	SubnetIdsRefs []v1.Reference `json:"subnetIdsRefs,omitempty" tf:"-"`

	// Selector for a list of Subnet in vpc to populate subnetIds.
	// +kubebuilder:validation:Optional
	SubnetIdsSelector *v1.Selector `json:"subnetIdsSelector,omitempty" tf:"-"`
}

type DatabaseDedicatedObservation struct {

	// (Boolean) Whether public IP addresses should be assigned to the Yandex Database cluster.
	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	AssignPublicIps *bool `json:"assignPublicIps,omitempty" tf:"assign_public_ips,omitempty"`

	// (String) The creation timestamp of the resource.
	// The creation timestamp of the resource.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) Full database path of the Yandex Database cluster. Useful for SDK configuration.
	// Full database path of the Yandex Database cluster. Useful for SDK configuration.
	DatabasePath *string `json:"databasePath,omitempty" tf:"database_path,omitempty"`

	// (Boolean) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (Block List, Max: 1) Location for the Yandex Database cluster. (see below for nested schema)
	// Location for the Yandex Database cluster.
	Location []LocationObservation `json:"location,omitempty" tf:"location,omitempty"`

	// (String) Location ID for the Yandex Database cluster.
	// Location ID for the Yandex Database cluster.
	LocationID *string `json:"locationId,omitempty" tf:"location_id,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The VPC Network ID of subnets which resource attached to.
	// The `VPC Network ID` of subnets which resource attached to.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// preset list command.
	// The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`

	// (Block List, Min: 1, Max: 1) Scaling policy for the Yandex Database cluster.
	// Scaling policy for the Yandex Database cluster.
	//
	// ~> Currently, only `fixed_scale` is supported.
	ScalePolicy []ScalePolicyObservation `json:"scalePolicy,omitempty" tf:"scale_policy,omitempty"`

	// (Set of String) The list of security groups applied to resource or their components.
	// The list of security groups applied to resource or their components.
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// (Number)
	SleepAfter *float64 `json:"sleepAfter,omitempty" tf:"sleep_after,omitempty"`

	// (String) Status of the Yandex Database cluster.
	// Status of the Yandex Database cluster.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// (Block List, Min: 1, Max: 1) A list of storage configuration options for the Yandex Database cluster. (see below for nested schema)
	// A list of storage configuration options for the Yandex Database cluster.
	StorageConfig []StorageConfigObservation `json:"storageConfig,omitempty" tf:"storage_config,omitempty"`

	// (Set of String) The list of VPC subnets identifiers which resource is attached.
	// The list of VPC subnets identifiers which resource is attached.
	// +listType=set
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// (Boolean) Whether TLS is enabled for the Yandex Database cluster. Useful for SDK configuration.
	// Whether TLS is enabled for the Yandex Database cluster. Useful for SDK configuration.
	TLSEnabled *bool `json:"tlsEnabled,omitempty" tf:"tls_enabled,omitempty"`

	// (String) API endpoint of the Yandex Database cluster. Useful for SDK configuration.
	// API endpoint of the Yandex Database cluster. Useful for SDK configuration.
	YdbAPIEndpoint *string `json:"ydbApiEndpoint,omitempty" tf:"ydb_api_endpoint,omitempty"`

	// (String) Full endpoint of the Yandex Database cluster.
	// Full endpoint of the Yandex Database cluster.
	YdbFullEndpoint *string `json:"ydbFullEndpoint,omitempty" tf:"ydb_full_endpoint,omitempty"`
}

type DatabaseDedicatedParameters struct {

	// (Boolean) Whether public IP addresses should be assigned to the Yandex Database cluster.
	// Whether public IP addresses should be assigned to the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	AssignPublicIps *bool `json:"assignPublicIps,omitempty" tf:"assign_public_ips,omitempty"`

	// (Boolean) The true value means that resource is protected from accidental deletion.
	// The `true` value means that resource is protected from accidental deletion.
	// +kubebuilder:validation:Optional
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (String) The resource description.
	// The resource description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (Block List, Max: 1) Location for the Yandex Database cluster. (see below for nested schema)
	// Location for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	Location []LocationParameters `json:"location,omitempty" tf:"location,omitempty"`

	// (String) Location ID for the Yandex Database cluster.
	// Location ID for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	LocationID *string `json:"locationId,omitempty" tf:"location_id,omitempty"`

	// (String) The resource name.
	// The resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The VPC Network ID of subnets which resource attached to.
	// The `VPC Network ID` of subnets which resource attached to.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Network
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// preset list command.
	// The Yandex Database cluster preset. Available presets can be obtained via `yc ydb resource-preset list` command.
	// +kubebuilder:validation:Optional
	ResourcePresetID *string `json:"resourcePresetId,omitempty" tf:"resource_preset_id,omitempty"`

	// (Block List, Min: 1, Max: 1) Scaling policy for the Yandex Database cluster.
	// Scaling policy for the Yandex Database cluster.
	//
	// ~> Currently, only `fixed_scale` is supported.
	// +kubebuilder:validation:Optional
	ScalePolicy []ScalePolicyParameters `json:"scalePolicy,omitempty" tf:"scale_policy,omitempty"`

	// (Set of String) The list of security groups applied to resource or their components.
	// The list of security groups applied to resource or their components.
	// +kubebuilder:validation:Optional
	// +listType=set
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	SleepAfter *float64 `json:"sleepAfter,omitempty" tf:"sleep_after,omitempty"`

	// (Block List, Min: 1, Max: 1) A list of storage configuration options for the Yandex Database cluster. (see below for nested schema)
	// A list of storage configuration options for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	StorageConfig []StorageConfigParameters `json:"storageConfig,omitempty" tf:"storage_config,omitempty"`

	// (Set of String) The list of VPC subnets identifiers which resource is attached.
	// The list of VPC subnets identifiers which resource is attached.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/vpc/v1alpha1.Subnet
	// +kubebuilder:validation:Optional
	// +listType=set
	SubnetIds []*string `json:"subnetIds,omitempty" tf:"subnet_ids,omitempty"`

	// References to Subnet in vpc to populate subnetIds.
	// +kubebuilder:validation:Optional
	SubnetIdsRefs []v1.Reference `json:"subnetIdsRefs,omitempty" tf:"-"`

	// Selector for a list of Subnet in vpc to populate subnetIds.
	// +kubebuilder:validation:Optional
	SubnetIdsSelector *v1.Selector `json:"subnetIdsSelector,omitempty" tf:"-"`
}

type FixedScaleInitParameters struct {

	// (Number) Number of instances for the Yandex Database cluster.
	// Number of instances for the Yandex Database cluster.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type FixedScaleObservation struct {

	// (Number) Number of instances for the Yandex Database cluster.
	// Number of instances for the Yandex Database cluster.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type FixedScaleParameters struct {

	// (Number) Number of instances for the Yandex Database cluster.
	// Number of instances for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size" tf:"size,omitempty"`
}

type LocationInitParameters struct {

	// (Block List, Max: 1) Region for the Yandex Database cluster. (see below for nested schema)
	// Region for the Yandex Database cluster.
	Region []RegionInitParameters `json:"region,omitempty" tf:"region,omitempty"`
}

type LocationObservation struct {

	// (Block List, Max: 1) Region for the Yandex Database cluster. (see below for nested schema)
	// Region for the Yandex Database cluster.
	Region []RegionObservation `json:"region,omitempty" tf:"region,omitempty"`
}

type LocationParameters struct {

	// (Block List, Max: 1) Region for the Yandex Database cluster. (see below for nested schema)
	// Region for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	Region []RegionParameters `json:"region,omitempty" tf:"region,omitempty"`
}

type RegionInitParameters struct {

	// (String) The ID of this resource.
	// Region ID for the Yandex Database cluster.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type RegionObservation struct {

	// (String) The ID of this resource.
	// Region ID for the Yandex Database cluster.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type RegionParameters struct {

	// (String) The ID of this resource.
	// Region ID for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`
}

type ScalePolicyInitParameters struct {

	// (Block List, Min: 1, Max: 1) Fixed scaling policy for the Yandex Database cluster. (see below for nested schema)
	// Fixed scaling policy for the Yandex Database cluster.
	FixedScale []FixedScaleInitParameters `json:"fixedScale,omitempty" tf:"fixed_scale,omitempty"`
}

type ScalePolicyObservation struct {

	// (Block List, Min: 1, Max: 1) Fixed scaling policy for the Yandex Database cluster. (see below for nested schema)
	// Fixed scaling policy for the Yandex Database cluster.
	FixedScale []FixedScaleObservation `json:"fixedScale,omitempty" tf:"fixed_scale,omitempty"`
}

type ScalePolicyParameters struct {

	// (Block List, Min: 1, Max: 1) Fixed scaling policy for the Yandex Database cluster. (see below for nested schema)
	// Fixed scaling policy for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	FixedScale []FixedScaleParameters `json:"fixedScale" tf:"fixed_scale,omitempty"`
}

type StorageConfigInitParameters struct {

	// (Number) Amount of storage groups of selected type for the Yandex Database cluster.
	// Amount of storage groups of selected type for the Yandex Database cluster.
	GroupCount *float64 `json:"groupCount,omitempty" tf:"group_count,omitempty"`

	// type list command.
	// Storage type ID for the Yandex Database cluster. Available presets can be obtained via `yc ydb storage-type list` command.
	StorageTypeID *string `json:"storageTypeId,omitempty" tf:"storage_type_id,omitempty"`
}

type StorageConfigObservation struct {

	// (Number) Amount of storage groups of selected type for the Yandex Database cluster.
	// Amount of storage groups of selected type for the Yandex Database cluster.
	GroupCount *float64 `json:"groupCount,omitempty" tf:"group_count,omitempty"`

	// type list command.
	// Storage type ID for the Yandex Database cluster. Available presets can be obtained via `yc ydb storage-type list` command.
	StorageTypeID *string `json:"storageTypeId,omitempty" tf:"storage_type_id,omitempty"`
}

type StorageConfigParameters struct {

	// (Number) Amount of storage groups of selected type for the Yandex Database cluster.
	// Amount of storage groups of selected type for the Yandex Database cluster.
	// +kubebuilder:validation:Optional
	GroupCount *float64 `json:"groupCount" tf:"group_count,omitempty"`

	// type list command.
	// Storage type ID for the Yandex Database cluster. Available presets can be obtained via `yc ydb storage-type list` command.
	// +kubebuilder:validation:Optional
	StorageTypeID *string `json:"storageTypeId" tf:"storage_type_id,omitempty"`
}

// DatabaseDedicatedSpec defines the desired state of DatabaseDedicated
type DatabaseDedicatedSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DatabaseDedicatedParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider DatabaseDedicatedInitParameters `json:"initProvider,omitempty"`
}

// DatabaseDedicatedStatus defines the observed state of DatabaseDedicated.
type DatabaseDedicatedStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DatabaseDedicatedObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// DatabaseDedicated is the Schema for the DatabaseDedicateds API. Manages Yandex Database dedicated cluster.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type DatabaseDedicated struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resourcePresetId) || (has(self.initProvider) && has(self.initProvider.resourcePresetId))",message="spec.forProvider.resourcePresetId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.scalePolicy) || (has(self.initProvider) && has(self.initProvider.scalePolicy))",message="spec.forProvider.scalePolicy is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageConfig) || (has(self.initProvider) && has(self.initProvider.storageConfig))",message="spec.forProvider.storageConfig is a required parameter"
	Spec   DatabaseDedicatedSpec   `json:"spec"`
	Status DatabaseDedicatedStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DatabaseDedicatedList contains a list of DatabaseDedicateds
type DatabaseDedicatedList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DatabaseDedicated `json:"items"`
}

// Repository type metadata.
var (
	DatabaseDedicated_Kind             = "DatabaseDedicated"
	DatabaseDedicated_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: DatabaseDedicated_Kind}.String()
	DatabaseDedicated_KindAPIVersion   = DatabaseDedicated_Kind + "." + CRDGroupVersion.String()
	DatabaseDedicated_GroupVersionKind = CRDGroupVersion.WithKind(DatabaseDedicated_Kind)
)

func init() {
	SchemeBuilder.Register(&DatabaseDedicated{}, &DatabaseDedicatedList{})
}
