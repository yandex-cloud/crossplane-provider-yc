/*
Copyright 2022 YANDEX LLC
This is modified version of the software, made by the Crossplane Authors
and available at: https://github.com/crossplane-contrib/provider-jet-template

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FilesystemInitParameters struct {

	// (Number) Block size of the filesystem, specified in bytes.
	// Block size of the filesystem, specified in bytes.
	BlockSize *float64 `json:"blockSize,omitempty" tf:"block_size,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Size of the filesystem, specified in GB.
	// Size of the filesystem, specified in GB.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// hdd is set by default.
	// Type of filesystem to create. Type `network-hdd` is set by default.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type FilesystemObservation struct {

	// (Number) Block size of the filesystem, specified in bytes.
	// Block size of the filesystem, specified in bytes.
	BlockSize *float64 `json:"blockSize,omitempty" tf:"block_size,omitempty"`

	// (String) The creation timestamp of the resource.
	// The creation timestamp of the resource.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// (String) The resource description.
	// The resource description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The resource name.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Size of the filesystem, specified in GB.
	// Size of the filesystem, specified in GB.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// (String) The status of the filesystem.
	// The status of the filesystem.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// hdd is set by default.
	// Type of filesystem to create. Type `network-hdd` is set by default.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

type FilesystemParameters struct {

	// (Number) Block size of the filesystem, specified in bytes.
	// Block size of the filesystem, specified in bytes.
	// +kubebuilder:validation:Optional
	BlockSize *float64 `json:"blockSize,omitempty" tf:"block_size,omitempty"`

	// (String) The resource description.
	// The resource description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// id is used.
	// The folder identifier that resource belongs to. If it is not provided, the default provider `folder-id` is used.
	// +crossplane:generate:reference:type=github.com/yandex-cloud/crossplane-provider-yc/apis/resourcemanager/v1alpha1.Folder
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// Reference to a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDRef *v1.Reference `json:"folderIdRef,omitempty" tf:"-"`

	// Selector for a Folder in resourcemanager to populate folderId.
	// +kubebuilder:validation:Optional
	FolderIDSelector *v1.Selector `json:"folderIdSelector,omitempty" tf:"-"`

	// (Map of String) A set of key/value label pairs which assigned to resource.
	// A set of key/value label pairs which assigned to resource.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The resource name.
	// The resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Size of the filesystem, specified in GB.
	// Size of the filesystem, specified in GB.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// hdd is set by default.
	// Type of filesystem to create. Type `network-hdd` is set by default.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
	// The [availability zone](https://yandex.cloud/docs/overview/concepts/geo-scope) where resource is located. If it is not provided, the default provider zone will be used.
	// +kubebuilder:validation:Optional
	Zone *string `json:"zone,omitempty" tf:"zone,omitempty"`
}

// FilesystemSpec defines the desired state of Filesystem
type FilesystemSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FilesystemParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FilesystemInitParameters `json:"initProvider,omitempty"`
}

// FilesystemStatus defines the observed state of Filesystem.
type FilesystemStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FilesystemObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Filesystem is the Schema for the Filesystems API. File storage is a virtual file system that can be attached to multiple Compute Cloud VMs in the same availability zone.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,yandex-cloud}
type Filesystem struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FilesystemSpec   `json:"spec"`
	Status            FilesystemStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FilesystemList contains a list of Filesystems
type FilesystemList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Filesystem `json:"items"`
}

// Repository type metadata.
var (
	Filesystem_Kind             = "Filesystem"
	Filesystem_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Filesystem_Kind}.String()
	Filesystem_KindAPIVersion   = Filesystem_Kind + "." + CRDGroupVersion.String()
	Filesystem_GroupVersionKind = CRDGroupVersion.WithKind(Filesystem_Kind)
)

func init() {
	SchemeBuilder.Register(&Filesystem{}, &FilesystemList{})
}
