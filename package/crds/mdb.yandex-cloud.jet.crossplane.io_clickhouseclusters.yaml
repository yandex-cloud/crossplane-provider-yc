---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: clickhouseclusters.mdb.yandex-cloud.jet.crossplane.io
spec:
  group: mdb.yandex-cloud.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - yandex-cloud
    kind: ClickhouseCluster
    listKind: ClickhouseClusterList
    plural: clickhouseclusters
    singular: clickhousecluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClickhouseCluster is the Schema for the ClickhouseClusters API.
          Manages a ClickHouse cluster within Yandex.Cloud.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClickhouseClusterSpec defines the desired state of ClickhouseCluster
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  access:
                    description: Access policy to the ClickHouse cluster. The structure
                      is documented below.
                    items:
                      properties:
                        dataLens:
                          description: Allow access for DataLens. Can be either true
                            or false.
                          type: boolean
                        dataTransfer:
                          description: Allow access for DataTransfer. Can be either
                            true or false.
                          type: boolean
                        metrika:
                          description: Allow access for Yandex.Metrika. Can be either
                            true or false.
                          type: boolean
                        serverless:
                          description: Allow access for Serverless. Can be either
                            true or false.
                          type: boolean
                        webSql:
                          description: Allow access for Web SQL. Can be either true
                            or false.
                          type: boolean
                        yandexQuery:
                          description: Allow access for YandexQuery. Can be either
                            true or false.
                          type: boolean
                      type: object
                    type: array
                  adminPasswordSecretRef:
                    description: A password used to authorize as user admin when sql_user_management
                      enabled.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  backupRetainPeriodDays:
                    description: The period in days during which backups are stored.
                    type: number
                  backupWindowStart:
                    description: Time to start the daily backup, in the UTC timezone.
                      The structure is documented below.
                    items:
                      properties:
                        hours:
                          description: The hour at which backup will be started.
                          type: number
                        minutes:
                          description: The minute at which backup will be started.
                          type: number
                      type: object
                    type: array
                  clickhouse:
                    description: Configuration of the ClickHouse subcluster. The structure
                      is documented below.
                    items:
                      properties:
                        config:
                          description: Main ClickHouse cluster configuration.
                          items:
                            properties:
                              asynchronousInsertLogEnabled:
                                type: boolean
                              asynchronousInsertLogRetentionSize:
                                type: number
                              asynchronousInsertLogRetentionTime:
                                type: number
                              asynchronousMetricLogEnabled:
                                type: boolean
                              asynchronousMetricLogRetentionSize:
                                type: number
                              asynchronousMetricLogRetentionTime:
                                type: number
                              backgroundBufferFlushSchedulePoolSize:
                                type: number
                              backgroundCommonPoolSize:
                                type: number
                              backgroundDistributedSchedulePoolSize:
                                type: number
                              backgroundFetchesPoolSize:
                                type: number
                              backgroundMergesMutationsConcurrencyRatio:
                                type: number
                              backgroundMessageBrokerSchedulePoolSize:
                                type: number
                              backgroundMovePoolSize:
                                type: number
                              backgroundPoolSize:
                                type: number
                              backgroundSchedulePoolSize:
                                type: number
                              compression:
                                description: Data compression configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    level:
                                      description: Compression level for ZSTD method.
                                      type: number
                                    method:
                                      description: 'Method: Compression method. Two
                                        methods are available: LZ4 and zstd.'
                                      type: string
                                    minPartSize:
                                      description: 'Min part size: Minimum size (in
                                        bytes) of a data part in a table. ClickHouse
                                        only applies the rule to tables with data
                                        parts greater than or equal to the Min part
                                        size value.'
                                      type: number
                                    minPartSizeRatio:
                                      description: 'Min part size ratio: Minimum table
                                        part size to total table size ratio. ClickHouse
                                        only applies the rule to tables in which this
                                        ratio is greater than or equal to the Min
                                        part size ratio value.'
                                      type: number
                                  type: object
                                type: array
                              defaultDatabase:
                                description: A database of the ClickHouse cluster.
                                  The structure is documented below.
                                type: string
                              dictionariesLazyLoad:
                                type: boolean
                              geobaseEnabled:
                                type: boolean
                              geobaseUri:
                                type: string
                              graphiteRollup:
                                description: Graphite rollup configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    pathColumnName:
                                      description: 'The name of the column storing
                                        the metric name (Graphite sensor). Default
                                        value: Path.'
                                      type: string
                                    pattern:
                                      description: Set of thinning rules.
                                      items:
                                        properties:
                                          function:
                                            description: Aggregation function name.
                                            type: string
                                          regexp:
                                            description: Regular expression that the
                                              metric name must match.
                                            type: string
                                          retention:
                                            description: Retain parameters.
                                            items:
                                              properties:
                                                age:
                                                  description: Minimum data age in
                                                    seconds.
                                                  type: number
                                                precision:
                                                  description: Accuracy of determining
                                                    the age of the data in seconds.
                                                  type: number
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    timeColumnName:
                                      description: 'The name of the column storing
                                        the time of measuring the metric. Default
                                        value: Time.'
                                      type: string
                                    valueColumnName:
                                      description: 'The name of the column storing
                                        the value of the metric at the time set in
                                        time_column_name. Default value: Value.'
                                      type: string
                                    versionColumnName:
                                      description: 'The name of the column storing
                                        the version of the metric. Default value:
                                        Timestamp.'
                                      type: string
                                  type: object
                                type: array
                              kafka:
                                description: Kafka connection configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    autoOffsetReset:
                                      description: 'Action to take when there is no
                                        initial offset in offset store or the desired
                                        offset is out of range: ''smallest'',''earliest''
                                        - automatically reset the offset to the smallest
                                        offset, ''largest'',''latest'' - automatically
                                        reset the offset to the largest offset, ''error''
                                        - trigger an error (ERR__AUTO_OFFSET_RESET)
                                        which is retrieved by consuming messages and
                                        checking ''message->err''.'
                                      type: string
                                    debug:
                                      description: A comma-separated list of debug
                                        contexts to enable.
                                      type: string
                                    enableSslCertificateVerification:
                                      description: enable verification of SSL certificates.
                                      type: boolean
                                    maxPollIntervalMs:
                                      description: Maximum allowed time between calls
                                        to consume messages (e.g., rd_kafka_consumer_poll())
                                        for high-level consumers. If this interval
                                        is exceeded the consumer is considered failed
                                        and the group will rebalance in order to reassign
                                        the partitions to another consumer group member.
                                      type: number
                                    saslMechanism:
                                      description: SASL mechanism used in kafka authentication.
                                      type: string
                                    saslPasswordSecretRef:
                                      description: User password on kafka server.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    saslUsername:
                                      description: Username on kafka server.
                                      type: string
                                    securityProtocol:
                                      description: Security protocol used to connect
                                        to kafka server.
                                      type: string
                                    sessionTimeoutMs:
                                      description: Client group session and failure
                                        detection timeout. The consumer sends periodic
                                        heartbeats (heartbeat.interval.ms) to indicate
                                        its liveness to the broker. If no hearts are
                                        received by the broker for a group member
                                        within the session timeout, the broker will
                                        remove the consumer from the group and trigger
                                        a rebalance.
                                      type: number
                                  type: object
                                type: array
                              kafkaTopic:
                                description: Kafka topic connection configuration.
                                  The structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    settings:
                                      description: Custom settings for user. The list
                                        is documented below.
                                      items:
                                        properties:
                                          autoOffsetReset:
                                            description: 'Action to take when there
                                              is no initial offset in offset store
                                              or the desired offset is out of range:
                                              ''smallest'',''earliest'' - automatically
                                              reset the offset to the smallest offset,
                                              ''largest'',''latest'' - automatically
                                              reset the offset to the largest offset,
                                              ''error'' - trigger an error (ERR__AUTO_OFFSET_RESET)
                                              which is retrieved by consuming messages
                                              and checking ''message->err''.'
                                            type: string
                                          debug:
                                            description: A comma-separated list of
                                              debug contexts to enable.
                                            type: string
                                          enableSslCertificateVerification:
                                            description: enable verification of SSL
                                              certificates.
                                            type: boolean
                                          maxPollIntervalMs:
                                            description: Maximum allowed time between
                                              calls to consume messages (e.g., rd_kafka_consumer_poll())
                                              for high-level consumers. If this interval
                                              is exceeded the consumer is considered
                                              failed and the group will rebalance
                                              in order to reassign the partitions
                                              to another consumer group member.
                                            type: number
                                          saslMechanism:
                                            description: SASL mechanism used in kafka
                                              authentication.
                                            type: string
                                          saslPasswordSecretRef:
                                            description: User password on kafka server.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: Name of the secret.
                                                type: string
                                              namespace:
                                                description: Namespace of the secret.
                                                type: string
                                            required:
                                            - key
                                            - name
                                            - namespace
                                            type: object
                                          saslUsername:
                                            description: Username on kafka server.
                                            type: string
                                          securityProtocol:
                                            description: Security protocol used to
                                              connect to kafka server.
                                            type: string
                                          sessionTimeoutMs:
                                            description: Client group session and
                                              failure detection timeout. The consumer
                                              sends periodic heartbeats (heartbeat.interval.ms)
                                              to indicate its liveness to the broker.
                                              If no hearts are received by the broker
                                              for a group member within the session
                                              timeout, the broker will remove the
                                              consumer from the group and trigger
                                              a rebalance.
                                            type: number
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              keepAliveTimeout:
                                type: number
                              logLevel:
                                description: ClickHouse server parameters. For more
                                  information, see the official documentation.
                                type: string
                              markCacheSize:
                                type: number
                              maxConcurrentQueries:
                                type: number
                              maxConnections:
                                type: number
                              maxPartitionSizeToDrop:
                                type: number
                              maxTableSizeToDrop:
                                type: number
                              mergeTree:
                                description: MergeTree engine configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    allowRemoteFsZeroCopyReplication:
                                      description: When this setting has a value greater
                                        than zero only a single replica starts the
                                        merge immediately if merged part on shared
                                        storage and allow_remote_fs_zero_copy_replication
                                        is enabled.
                                      type: boolean
                                    checkSampleColumnIsCorrect:
                                      description: 'Enables the check at table creation,
                                        that the data type of a column for sampling
                                        or sampling expression is correct. The data
                                        type must be one of unsigned integer types:
                                        UInt8, UInt16, UInt32, UInt64. Default value:
                                        true.'
                                      type: boolean
                                    cleanupDelayPeriod:
                                      description: Minimum period to clean old queue
                                        logs, blocks hashes and parts.
                                      type: number
                                    inactivePartsToDelayInsert:
                                      description: If the number of inactive parts
                                        in a single partition in the table at least
                                        that many the inactive_parts_to_delay_insert
                                        value, an INSERT artificially slows down.
                                        It is useful when a server fails to clean
                                        up parts quickly enough.
                                      type: number
                                    inactivePartsToThrowInsert:
                                      description: If the number of inactive parts
                                        in a single partition more than the inactive_parts_to_throw_insert
                                        value, INSERT is interrupted with the "Too
                                        many inactive parts (N). Parts cleaning are
                                        processing significantly slower than inserts"
                                        exception.
                                      type: number
                                    maxAvgPartSizeForTooManyParts:
                                      description: The too many parts check according
                                        to parts_to_delay_insert and parts_to_throw_insert
                                        will be active only if the average part size
                                        (in the relevant partition) is not larger
                                        than the specified threshold. If it is larger
                                        than the specified threshold, the INSERTs
                                        will be neither delayed or rejected. This
                                        allows to have hundreds of terabytes in a
                                        single table on a single server if the parts
                                        are successfully merged to larger parts. This
                                        does not affect the thresholds on inactive
                                        parts or total parts.
                                      type: number
                                    maxBytesToMergeAtMaxSpaceInPool:
                                      description: The maximum total parts size (in
                                        bytes) to be merged into one part, if there
                                        are enough resources available. max_bytes_to_merge_at_max_space_in_pool
                                        -- roughly corresponds to the maximum possible
                                        part size created by an automatic background
                                        merge.
                                      type: number
                                    maxBytesToMergeAtMinSpaceInPool:
                                      description: 'Max bytes to merge at min space
                                        in pool: Maximum total size of a data part
                                        to merge when the number of free threads in
                                        the background pool is minimum.'
                                      type: number
                                    maxCleanupDelayPeriod:
                                      description: 'Maximum period to clean old queue
                                        logs, blocks hashes and parts. Default value:
                                        300 seconds.'
                                      type: number
                                    maxMergeSelectingSleepMs:
                                      description: 'Maximum sleep time for merge selecting,
                                        a lower setting will trigger selecting tasks
                                        in background_schedule_pool frequently which
                                        result in large amount of requests to zookeeper
                                        in large-scale clusters. Default value: 60000
                                        milliseconds (60 seconds).'
                                      type: number
                                    maxNumberOfMergesWithTtlInPool:
                                      description: When there is more than specified
                                        number of merges with TTL entries in pool,
                                        do not assign new merge with TTL.
                                      type: number
                                    maxPartsInTotal:
                                      description: Maximum number of parts in all
                                        partitions.
                                      type: number
                                    maxReplicatedMergesInQueue:
                                      description: 'Max replicated merges in queue:
                                        Maximum number of merge tasks that can be
                                        in the ReplicatedMergeTree queue at the same
                                        time.'
                                      type: number
                                    mergeMaxBlockSize:
                                      description: 'The number of rows that are read
                                        from the merged parts into memory. Default
                                        value: 8192.'
                                      type: number
                                    mergeSelectingSleepMs:
                                      description: Sleep time for merge selecting
                                        when no part is selected. A lower setting
                                        triggers selecting tasks in background_schedule_pool
                                        frequently, which results in a large number
                                        of requests to ClickHouse Keeper in large-scale
                                        clusters.
                                      type: number
                                    mergeWithRecompressionTtlTimeout:
                                      description: 'Minimum delay in seconds before
                                        repeating a merge with recompression TTL.
                                        Default value: 14400 seconds (4 hours).'
                                      type: number
                                    mergeWithTtlTimeout:
                                      description: 'Minimum delay in seconds before
                                        repeating a merge with delete TTL. Default
                                        value: 14400 seconds (4 hours).'
                                      type: number
                                    minAgeToForceMergeOnPartitionOnly:
                                      description: Whether min_age_to_force_merge_seconds
                                        should be applied only on the entire partition
                                        and not on subset.
                                      type: boolean
                                    minAgeToForceMergeSeconds:
                                      description: Merge parts if every part in the
                                        range is older than the value of min_age_to_force_merge_seconds.
                                      type: number
                                    minBytesForWidePart:
                                      description: Minimum number of bytes in a data
                                        part that can be stored in Wide format. You
                                        can set one, both or none of these settings.
                                      type: number
                                    minRowsForWidePart:
                                      description: Minimum number of rows in a data
                                        part that can be stored in Wide format. You
                                        can set one, both or none of these settings.
                                      type: number
                                    numberOfFreeEntriesInPoolToExecuteMutation:
                                      description: 'When there is less than specified
                                        number of free entries in pool, do not execute
                                        part mutations. This is to leave free threads
                                        for regular merges and avoid "Too many parts".
                                        Default value: 20.'
                                      type: number
                                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge:
                                      description: 'Number of free entries in pool
                                        to lower max size of merge: Threshold value
                                        of free entries in the pool. If the number
                                        of entries in the pool falls below this value,
                                        ClickHouse reduces the maximum size of a data
                                        part to merge. This helps handle small merges
                                        faster, rather than filling the pool with
                                        lengthy merges.'
                                      type: number
                                    partsToDelayInsert:
                                      description: 'Parts to delay insert: Number
                                        of active data parts in a table, on exceeding
                                        which ClickHouse starts artificially reduce
                                        the rate of inserting data into the table.'
                                      type: number
                                    partsToThrowInsert:
                                      description: 'Parts to throw insert: Threshold
                                        value of active data parts in a table, on
                                        exceeding which ClickHouse throws the ''Too
                                        many parts ...'' exception.'
                                      type: number
                                    replicatedDeduplicationWindow:
                                      description: 'Replicated deduplication window:
                                        Number of recent hash blocks that ZooKeeper
                                        will store (the old ones will be deleted).'
                                      type: number
                                    replicatedDeduplicationWindowSeconds:
                                      description: 'Replicated deduplication window
                                        seconds: Time during which ZooKeeper stores
                                        the hash blocks (the old ones wil be deleted).'
                                      type: number
                                    ttlOnlyDropParts:
                                      description: Enables zero-copy replication when
                                        a replica is located on a remote filesystem.
                                      type: boolean
                                  type: object
                                type: array
                              metricLogEnabled:
                                type: boolean
                              metricLogRetentionSize:
                                type: number
                              metricLogRetentionTime:
                                type: number
                              opentelemetrySpanLogEnabled:
                                type: boolean
                              opentelemetrySpanLogRetentionSize:
                                type: number
                              opentelemetrySpanLogRetentionTime:
                                type: number
                              partLogRetentionSize:
                                type: number
                              partLogRetentionTime:
                                type: number
                              queryCache:
                                description: Query cache configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    maxEntries:
                                      description: 'The maximum number of SELECT query
                                        results stored in the cache. Default value:
                                        1024.'
                                      type: number
                                    maxEntrySizeInBytes:
                                      description: 'The maximum size in bytes SELECT
                                        query results may have to be saved in the
                                        cache. Default value: 1048576 (1 MiB).'
                                      type: number
                                    maxEntrySizeInRows:
                                      description: 'The maximum number of rows SELECT
                                        query results may have to be saved in the
                                        cache. Default value: 30000000 (30 mil).'
                                      type: number
                                    maxSizeInBytes:
                                      description: 'The maximum cache size in bytes.
                                        0 means the query cache is disabled. Default
                                        value: 1073741824 (1 GiB).'
                                      type: number
                                  type: object
                                type: array
                              queryLogRetentionSize:
                                type: number
                              queryLogRetentionTime:
                                type: number
                              queryMaskingRules:
                                description: Query masking rules configuration. The
                                  structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    regexp:
                                      description: Regular expression that the metric
                                        name must match.
                                      type: string
                                    replace:
                                      description: 'Substitution string for sensitive
                                        data. Default value: six asterisks.'
                                      type: string
                                  type: object
                                type: array
                              queryThreadLogEnabled:
                                type: boolean
                              queryThreadLogRetentionSize:
                                type: number
                              queryThreadLogRetentionTime:
                                type: number
                              queryViewsLogEnabled:
                                type: boolean
                              queryViewsLogRetentionSize:
                                type: number
                              queryViewsLogRetentionTime:
                                type: number
                              rabbitmq:
                                description: RabbitMQ connection configuration. The
                                  structure is documented below.
                                items:
                                  properties:
                                    passwordSecretRef:
                                      description: The password of the user.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    username:
                                      description: RabbitMQ username.
                                      type: string
                                    vhost:
                                      description: 'RabbitMQ vhost. Default: ”.'
                                      type: string
                                  type: object
                                type: array
                              sessionLogEnabled:
                                type: boolean
                              sessionLogRetentionSize:
                                type: number
                              sessionLogRetentionTime:
                                type: number
                              textLogEnabled:
                                type: boolean
                              textLogLevel:
                                type: string
                              textLogRetentionSize:
                                type: number
                              textLogRetentionTime:
                                type: number
                              timezone:
                                type: string
                              totalMemoryProfilerStep:
                                type: number
                              traceLogEnabled:
                                type: boolean
                              traceLogRetentionSize:
                                type: number
                              traceLogRetentionTime:
                                type: number
                              uncompressedCacheSize:
                                type: number
                              zookeeperLogEnabled:
                                type: boolean
                              zookeeperLogRetentionSize:
                                type: number
                              zookeeperLogRetentionTime:
                                type: number
                            type: object
                          type: array
                        resources:
                          description: Resources allocated to hosts of the ClickHouse
                            subcluster. The structure is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  cloudStorage:
                    description: Minimum data age in seconds.
                    items:
                      properties:
                        dataCacheEnabled:
                          description: Enables temporary storage in the cluster repository
                            of data requested from the object repository.
                          type: boolean
                        dataCacheMaxSize:
                          description: Defines the maximum amount of memory (in bytes)
                            allocated in the cluster storage for temporary storage
                            of data requested from the object storage.
                          type: number
                        enabled:
                          description: Whether to use Yandex Object Storage for storing
                            ClickHouse data. Can be either true or false.
                          type: boolean
                        moveFactor:
                          description: Sets the minimum free space ratio in the cluster
                            storage. If the free space is lower than this value, the
                            data is transferred to Yandex Object Storage. Acceptable
                            values are 0 to 1, inclusive.
                          type: number
                        preferNotToMerge:
                          description: Disables merging of data parts in Yandex Object
                            Storage.
                          type: boolean
                      type: object
                    type: array
                  clusterId:
                    type: string
                  copySchemaOnNewHosts:
                    description: Whether to copy schema on new ClickHouse hosts.
                    type: boolean
                  database:
                    description: A database of the ClickHouse cluster. The structure
                      is documented below.
                    items:
                      properties:
                        name:
                          description: The name of the database.
                          type: string
                      type: object
                    type: array
                  deletionProtection:
                    description: Inhibits deletion of the cluster. Can be either true
                      or false.
                    type: boolean
                  description:
                    description: Description of the ClickHouse cluster.
                    type: string
                  embeddedKeeper:
                    description: Whether to use ClickHouse Keeper as a coordination
                      system and place it on the same hosts with ClickHouse. If not,
                      it's used ZooKeeper with placement on separate hosts.
                    type: boolean
                  environment:
                    description: Deployment environment of the ClickHouse cluster.
                      Can be either PRESTABLE or PRODUCTION.
                    type: string
                  folderId:
                    description: The ID of the folder that the resource belongs to.
                      If it is not provided, the default provider folder is used.
                    type: string
                  folderIdRef:
                    description: Reference to a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderIdSelector:
                    description: Selector for a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  formatSchema:
                    description: A set of protobuf or capnproto format schemas. The
                      structure is documented below.
                    items:
                      properties:
                        name:
                          description: The name of the format schema.
                          type: string
                        type:
                          description: Type of the format schema.
                          type: string
                        uri:
                          description: Format schema file URL. You can only use format
                            schemas stored in Yandex Object Storage.
                          type: string
                      type: object
                    type: array
                  host:
                    description: A host of the ClickHouse cluster. The structure is
                      documented below.
                    items:
                      properties:
                        assignPublicIp:
                          description: Sets whether the host should get a public IP
                            address on creation. Can be either true or false.
                          type: boolean
                        shardName:
                          description: The name of the shard to which the host belongs.
                          type: string
                        subnetId:
                          description: The ID of the subnet, to which the host belongs.
                            The subnet must be a part of the network to which the
                            cluster belongs.
                          type: string
                        subnetIdRef:
                          description: Reference to a Subnet in vpc to populate subnetId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        subnetIdSelector:
                          description: Selector for a Subnet in vpc to populate subnetId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        type:
                          description: The type of the host to be deployed. Can be
                            either CLICKHOUSE or ZOOKEEPER.
                          type: string
                        zone:
                          description: The availability zone where the ClickHouse
                            host will be created. For more information see the official
                            documentation.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the ClickHouse
                      cluster.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    items:
                      properties:
                        day:
                          description: 'Day of week for maintenance window if window
                            type is weekly. Possible values: MON, TUE, WED, THU, FRI,
                            SAT, SUN.'
                          type: string
                        hour:
                          description: Hour of day in UTC time zone (1-24) for maintenance
                            window if window type is weekly.
                          type: number
                        type:
                          description: Type of maintenance window. Can be either ANYTIME
                            or WEEKLY. A day and hour of window need to be specified
                            with weekly window.
                          type: string
                      type: object
                    type: array
                  mlModel:
                    description: A group of machine learning models. The structure
                      is documented below
                    items:
                      properties:
                        name:
                          description: The name of the ml model.
                          type: string
                        type:
                          description: Type of the model.
                          type: string
                        uri:
                          description: Model file URL. You can only use models stored
                            in Yandex Object Storage.
                          type: string
                      type: object
                    type: array
                  name:
                    description: Name of the ClickHouse cluster. Provided by the client
                      when the cluster is created.
                    type: string
                  networkId:
                    description: ID of the network, to which the ClickHouse cluster
                      belongs.
                    type: string
                  networkIdRef:
                    description: Reference to a Network in vpc to populate networkId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkIdSelector:
                    description: Selector for a Network in vpc to populate networkId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  securityGroupIds:
                    description: A set of ids of security groups assigned to hosts
                      of the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  serviceAccountId:
                    description: ID of the service account used for access to Yandex
                      Object Storage.
                    type: string
                  serviceAccountIdRef:
                    description: Reference to a ServiceAccount in iam to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountIdSelector:
                    description: Selector for a ServiceAccount in iam to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  shard:
                    items:
                      properties:
                        name:
                          description: The name of shard.
                          type: string
                        resources:
                          description: Resources allocated to host of the shard. The
                            resources specified for the shard takes precedence over
                            the resources specified for the cluster. The structure
                            is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                        weight:
                          description: The weight of shard.
                          type: number
                      type: object
                    type: array
                  shardGroup:
                    description: A group of clickhouse shards. The structure is documented
                      below.
                    items:
                      properties:
                        description:
                          description: Description of the shard group.
                          type: string
                        name:
                          description: The name of the shard group, used as cluster
                            name in Distributed tables.
                          type: string
                        shardNames:
                          description: List of shards names that belong to the shard
                            group.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  sqlDatabaseManagement:
                    description: Grants admin user database management permission.
                    type: boolean
                  sqlUserManagement:
                    description: Enables admin user with user management permission.
                    type: boolean
                  user:
                    description: A user of the ClickHouse cluster. The structure is
                      documented below.
                    items:
                      properties:
                        name:
                          description: The name of the user.
                          type: string
                        passwordSecretRef:
                          description: The password of the user.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        permission:
                          description: Set of permissions granted to the user. The
                            structure is documented below.
                          items:
                            properties:
                              databaseName:
                                description: The name of the database that the permission
                                  grants access to.
                                type: string
                            type: object
                          type: array
                        quota:
                          description: Set of user quotas. The structure is documented
                            below.
                          items:
                            properties:
                              errors:
                                description: The number of queries that threw exception.
                                type: number
                              executionTime:
                                description: The total query execution time, in milliseconds
                                  (wall time).
                                type: number
                              intervalDuration:
                                description: Duration of interval for quota in milliseconds.
                                type: number
                              queries:
                                description: The total number of queries.
                                type: number
                              readRows:
                                description: The total number of source rows read
                                  from tables for running the query, on all remote
                                  servers.
                                type: number
                              resultRows:
                                description: The total number of rows given as the
                                  result.
                                type: number
                            type: object
                          type: array
                        settings:
                          description: Custom settings for user. The list is documented
                            below.
                          items:
                            properties:
                              addHttpCorsHeader:
                                description: Include CORS headers in HTTP responces.
                                type: boolean
                              allowDdl:
                                description: Allows or denies DDL queries.
                                type: boolean
                              allowIntrospectionFunctions:
                                description: Enables introspections functions for
                                  query profiling.
                                type: boolean
                              allowSuspiciousLowCardinalityTypes:
                                description: Allows specifying LowCardinality modifier
                                  for types of small fixed size (8 or less) in CREATE
                                  TABLE statements. Enabling this may increase merge
                                  times and memory consumption.
                                type: boolean
                              anyJoinDistinctRightTableKeys:
                                description: enables legacy ClickHouse server behaviour
                                  in ANY INNER|LEFT JOIN operations.
                                type: boolean
                              asyncInsert:
                                description: Enables asynchronous inserts. Disabled
                                  by default.
                                type: boolean
                              asyncInsertBusyTimeout:
                                description: 'The maximum timeout in milliseconds
                                  since the first INSERT query before inserting collected
                                  data. If the parameter is set to 0, the timeout
                                  is disabled. Default value: 200.'
                                type: number
                              asyncInsertMaxDataSize:
                                description: 'The maximum size of the unparsed data
                                  in bytes collected per query before being inserted.
                                  If the parameter is set to 0, asynchronous insertions
                                  are disabled. Default value: 100000.'
                                type: number
                              asyncInsertStaleTimeout:
                                description: The maximum timeout in milliseconds since
                                  the last INSERT query before dumping collected data.
                                  If enabled, the settings prolongs the async_insert_busy_timeout
                                  with every INSERT query as long as async_insert_max_data_size
                                  is not exceeded.
                                type: number
                              asyncInsertThreads:
                                description: 'The maximum number of threads for background
                                  data parsing and insertion. If the parameter is
                                  set to 0, asynchronous insertions are disabled.
                                  Default value: 16.'
                                type: number
                              cancelHttpReadonlyQueriesOnClientClose:
                                description: 'Cancels HTTP read-only queries (e.g.
                                  SELECT) when a client closes the connection without
                                  waiting for the response. Default value: false.'
                                type: boolean
                              compile:
                                description: Enable compilation of queries.
                                type: boolean
                              compileExpressions:
                                description: Turn on expression compilation.
                                type: boolean
                              connectTimeout:
                                description: Connect timeout in milliseconds on the
                                  socket used for communicating with the client.
                                type: number
                              connectTimeoutWithFailover:
                                description: 'The timeout in milliseconds for connecting
                                  to a remote server for a Distributed table engine,
                                  if the ‘shard’ and ‘replica’ sections are used in
                                  the cluster definition. If unsuccessful, several
                                  attempts are made to connect to various replicas.
                                  Default value: 50.'
                                type: number
                              countDistinctImplementation:
                                description: Specifies which of the uniq* functions
                                  should be used to perform the COUNT(DISTINCT …)
                                  construction.
                                type: string
                              dateTimeInputFormat:
                                description: 'Allows choosing a parser of the text
                                  representation of date and time, one of: best_effort,
                                  basic, best_effort_us. Default value: basic. Cloud
                                  default value: best_effort.'
                                type: string
                              dateTimeOutputFormat:
                                description: 'Allows choosing different output formats
                                  of the text representation of date and time, one
                                  of: simple, iso, unix_timestamp. Default value:
                                  simple.'
                                type: string
                              deduplicateBlocksInDependentMaterializedViews:
                                description: Enables or disables the deduplication
                                  check for materialized views that receive data from
                                  Replicated* tables.
                                type: boolean
                              distinctOverflowMode:
                                description: 'Sets behaviour on overflow when using
                                  DISTINCT. Possible values:'
                                type: string
                              distributedAggregationMemoryEfficient:
                                description: Determine the behavior of distributed
                                  subqueries.
                                type: boolean
                              distributedDdlTaskTimeout:
                                description: Timeout for DDL queries, in milliseconds.
                                type: number
                              distributedProductMode:
                                description: Changes the behaviour of distributed
                                  subqueries.
                                type: string
                              emptyResultForAggregationByEmptySet:
                                description: Allows to retunr empty result.
                                type: boolean
                              enableHttpCompression:
                                description: Enables or disables data compression
                                  in the response to an HTTP request.
                                type: boolean
                              fallbackToStaleReplicasForDistributedQueries:
                                description: Forces a query to an out-of-date replica
                                  if updated data is not available.
                                type: boolean
                              flattenNested:
                                description: Sets the data format of a nested columns.
                                type: boolean
                              forceIndexByDate:
                                description: Disables query execution if the index
                                  can’t be used by date.
                                type: boolean
                              forcePrimaryKey:
                                description: Disables query execution if indexing
                                  by the primary key is not possible.
                                type: boolean
                              formatRegexp:
                                description: Regular expression (for Regexp format).
                                type: string
                              formatRegexpSkipUnmatched:
                                description: Skip lines unmatched by regular expression.
                                type: boolean
                              groupByOverflowMode:
                                description: 'Sets behaviour on overflow while GROUP
                                  BY operation. Possible values:'
                                type: string
                              groupByTwoLevelThreshold:
                                description: Sets the threshold of the number of keys,
                                  after that the two-level aggregation should be used.
                                type: number
                              groupByTwoLevelThresholdBytes:
                                description: Sets the threshold of the number of bytes,
                                  after that the two-level aggregation should be used.
                                type: number
                              hedgedConnectionTimeoutMs:
                                description: 'Connection timeout for establishing
                                  connection with replica for Hedged requests. Default
                                  value: 50 milliseconds.'
                                type: number
                              httpConnectionTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              httpHeadersProgressInterval:
                                description: Sets minimal interval between notifications
                                  about request process in HTTP header X-ClickHouse-Progress.
                                type: number
                              httpReceiveTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              httpSendTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              idleConnectionTimeout:
                                description: 'Timeout to close idle TCP connections
                                  after specified number of seconds. Default value:
                                  3600 seconds.'
                                type: number
                              inputFormatDefaultsForOmittedFields:
                                description: When performing INSERT queries, replace
                                  omitted input column values with default values
                                  of the respective columns.
                                type: boolean
                              inputFormatImportNestedJson:
                                description: Enables or disables the insertion of
                                  JSON data with nested objects.
                                type: boolean
                              inputFormatNullAsDefault:
                                description: Enables or disables the initialization
                                  of NULL fields with default values, if data type
                                  of these fields is not nullable.
                                type: boolean
                              inputFormatParallelParsing:
                                description: Enables or disables order-preserving
                                  parallel parsing of data formats. Supported only
                                  for TSV, TKSV, CSV and JSONEachRow formats.
                                type: boolean
                              inputFormatValuesInterpretExpressions:
                                description: Enables or disables the full SQL parser
                                  if the fast stream parser can’t parse the data.
                                type: boolean
                              inputFormatWithNamesUseHeader:
                                description: Enables or disables checking the column
                                  order when inserting data.
                                type: boolean
                              insertKeeperMaxRetries:
                                description: The setting sets the maximum number of
                                  retries for ClickHouse Keeper (or ZooKeeper) requests
                                  during insert into replicated MergeTree. Only Keeper
                                  requests which failed due to network error, Keeper
                                  session timeout, or request timeout are considered
                                  for retries.
                                type: number
                              insertNullAsDefault:
                                description: 'Enables the insertion of default values
                                  instead of NULL into columns with not nullable data
                                  type. Default value: true.'
                                type: boolean
                              insertQuorum:
                                description: Enables the quorum writes.
                                type: number
                              insertQuorumParallel:
                                description: Enables or disables parallelism for quorum
                                  INSERT queries.
                                type: boolean
                              insertQuorumTimeout:
                                description: Write to a quorum timeout in milliseconds.
                                type: number
                              joinAlgorithm:
                                description: 'Specifies which JOIN algorithm is used.
                                  Possible values:'
                                items:
                                  type: string
                                type: array
                              joinOverflowMode:
                                description: 'Sets behaviour on overflow in JOIN.
                                  Possible values:'
                                type: string
                              joinUseNulls:
                                description: Sets the type of JOIN behaviour. When
                                  merging tables, empty cells may appear. ClickHouse
                                  fills them differently based on this setting.
                                type: boolean
                              joinedSubqueryRequiresAlias:
                                description: Require aliases for subselects and table
                                  functions in FROM that more than one table is present.
                                type: boolean
                              loadBalancing:
                                description: 'Specifies the algorithm of replicas
                                  selection that is used for distributed query processing,
                                  one of: random, nearest_hostname, in_order, first_or_random,
                                  round_robin. Default value: random.'
                                type: string
                              localFilesystemReadMethod:
                                description: 'Method of reading data from local filesystem.
                                  Possible values:'
                                type: string
                              logQueryThreads:
                                description: 'Setting up query threads logging. Query
                                  threads log into the system.query_thread_log table.
                                  This setting has effect only when log_queries is
                                  true. Queries’ threads run by ClickHouse with this
                                  setup are logged according to the rules in the query_thread_log
                                  server configuration parameter. Default value: true.'
                                type: boolean
                              lowCardinalityAllowInNativeFormat:
                                description: Allows or restricts using the LowCardinality
                                  data type with the Native format.
                                type: boolean
                              maxAstDepth:
                                description: Maximum abstract syntax tree depth.
                                type: number
                              maxAstElements:
                                description: Maximum abstract syntax tree elements.
                                type: number
                              maxBlockSize:
                                description: A recommendation for what size of the
                                  block (in a count of rows) to load from tables.
                                type: number
                              maxBytesBeforeExternalGroupBy:
                                description: Limit in bytes for using memoru for GROUP
                                  BY before using swap on disk.
                                type: number
                              maxBytesBeforeExternalSort:
                                description: This setting is equivalent of the max_bytes_before_external_group_by
                                  setting, except for it is for sort operation (ORDER
                                  BY), not aggregation.
                                type: number
                              maxBytesInDistinct:
                                description: Limits the maximum size of a hash table
                                  in bytes (uncompressed data) when using DISTINCT.
                                type: number
                              maxBytesInJoin:
                                description: Limit on maximum size of the hash table
                                  for JOIN, in bytes.
                                type: number
                              maxBytesInSet:
                                description: Limit on the number of bytes in the set
                                  resulting from the execution of the IN section.
                                type: number
                              maxBytesToRead:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be read from a table when running
                                  a query.
                                type: number
                              maxBytesToSort:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be read from a table for sorting.
                                type: number
                              maxBytesToTransfer:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be passed to a remote server or saved
                                  in a temporary table when using GLOBAL IN.
                                type: number
                              maxColumnsToRead:
                                description: Limits the maximum number of columns
                                  that can be read from a table in a single query.
                                type: number
                              maxConcurrentQueriesForUser:
                                description: 'The maximum number of concurrent requests
                                  per user. Default value: 0 (no limit).'
                                type: number
                              maxExecutionTime:
                                description: Limits the maximum query execution time
                                  in milliseconds.
                                type: number
                              maxExpandedAstElements:
                                description: Maximum abstract syntax tree depth after
                                  after expansion of aliases.
                                type: number
                              maxFinalThreads:
                                description: Sets the maximum number of parallel threads
                                  for the SELECT query data read phase with the FINAL
                                  modifier.
                                type: number
                              maxHttpGetRedirects:
                                description: Limits the maximum number of HTTP GET
                                  redirect hops for URL-engine tables.
                                type: number
                              maxInsertBlockSize:
                                description: The size of blocks (in a count of rows)
                                  to form for insertion into a table.
                                type: number
                              maxInsertThreads:
                                description: 'The maximum number of threads to execute
                                  the INSERT SELECT query. Default value: 0.'
                                type: number
                              maxMemoryUsage:
                                description: Limits the maximum memory usage (in bytes)
                                  for processing queries on a single server.
                                type: number
                              maxMemoryUsageForUser:
                                description: Limits the maximum memory usage (in bytes)
                                  for processing of user's queries on a single server.
                                type: number
                              maxNetworkBandwidth:
                                description: Limits the speed of the data exchange
                                  over the network in bytes per second.
                                type: number
                              maxNetworkBandwidthForUser:
                                description: Limits the speed of the data exchange
                                  over the network in bytes per second.
                                type: number
                              maxParserDepth:
                                description: Limits maximum recursion depth in the
                                  recursive descent parser. Allows controlling the
                                  stack size. Zero means unlimited.
                                type: number
                              maxQuerySize:
                                description: The maximum part of a query that can
                                  be taken to RAM for parsing with the SQL parser.
                                type: number
                              maxReadBufferSize:
                                description: The maximum size of the buffer to read
                                  from the filesystem.
                                type: number
                              maxReplicaDelayForDistributedQueries:
                                description: Disables lagging replicas for distributed
                                  queries.
                                type: number
                              maxResultBytes:
                                description: Limits the number of bytes in the result.
                                type: number
                              maxResultRows:
                                description: Limits the number of rows in the result.
                                type: number
                              maxRowsInDistinct:
                                description: Limits the maximum number of different
                                  rows when using DISTINCT.
                                type: number
                              maxRowsInJoin:
                                description: Limit on maximum size of the hash table
                                  for JOIN, in rows.
                                type: number
                              maxRowsInSet:
                                description: Limit on the number of rows in the set
                                  resulting from the execution of the IN section.
                                type: number
                              maxRowsToGroupBy:
                                description: Limits the maximum number of unique keys
                                  received from aggregation function.
                                type: number
                              maxRowsToRead:
                                description: Limits the maximum number of rows that
                                  can be read from a table when running a query.
                                type: number
                              maxRowsToSort:
                                description: Limits the maximum number of rows that
                                  can be read from a table for sorting.
                                type: number
                              maxRowsToTransfer:
                                description: Limits the maximum number of rows that
                                  can be passed to a remote server or saved in a temporary
                                  table when using GLOBAL IN.
                                type: number
                              maxTemporaryColumns:
                                description: Limits the maximum number of temporary
                                  columns that must be kept in RAM at the same time
                                  when running a query, including constant columns.
                                type: number
                              maxTemporaryDataOnDiskSizeForQuery:
                                description: The maximum amount of data consumed by
                                  temporary files on disk in bytes for all concurrently
                                  running queries. Zero means unlimited.
                                type: number
                              maxTemporaryDataOnDiskSizeForUser:
                                description: The maximum amount of data consumed by
                                  temporary files on disk in bytes for all concurrently
                                  running user queries. Zero means unlimited.
                                type: number
                              maxTemporaryNonConstColumns:
                                description: Limits the maximum number of temporary
                                  columns that must be kept in RAM at the same time
                                  when running a query, excluding constant columns.
                                type: number
                              maxThreads:
                                description: The maximum number of query processing
                                  threads, excluding threads for retrieving data from
                                  remote servers.
                                type: number
                              memoryOvercommitRatioDenominator:
                                description: It represents soft memory limit in case
                                  when hard limit is reached on user level. This value
                                  is used to compute overcommit ratio for the query.
                                  Zero means skip the query.
                                type: number
                              memoryOvercommitRatioDenominatorForUser:
                                description: It represents soft memory limit in case
                                  when hard limit is reached on global level. This
                                  value is used to compute overcommit ratio for the
                                  query. Zero means skip the query.
                                type: number
                              memoryProfilerSampleProbability:
                                description: 'Collect random allocations and deallocations
                                  and write them into system.trace_log with ''MemorySample''
                                  trace_type. The probability is for every alloc/free
                                  regardless to the size of the allocation. Possible
                                  values: from 0 to 1. Default: 0.'
                                type: number
                              memoryProfilerStep:
                                description: 'Memory profiler step (in bytes). If
                                  the next query step requires more memory than this
                                  parameter specifies, the memory profiler collects
                                  the allocating stack trace. Values lower than a
                                  few megabytes slow down query processing. Default
                                  value: 4194304 (4 MB). Zero means disabled memory
                                  profiler.'
                                type: number
                              memoryUsageOvercommitMaxWaitMicroseconds:
                                description: Maximum time thread will wait for memory
                                  to be freed in the case of memory overcommit on
                                  a user level. If the timeout is reached and memory
                                  is not freed, an exception is thrown.
                                type: number
                              mergeTreeMaxBytesToUseCache:
                                description: If ClickHouse should read more than merge_tree_max_bytes_to_use_cache
                                  bytes in one query, it doesn’t use the cache of
                                  uncompressed blocks.
                                type: number
                              mergeTreeMaxRowsToUseCache:
                                description: If ClickHouse should read more than merge_tree_max_rows_to_use_cache
                                  rows in one query, it doesn’t use the cache of uncompressed
                                  blocks.
                                type: number
                              mergeTreeMinBytesForConcurrentRead:
                                description: If the number of bytes to read from one
                                  file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read,
                                  then ClickHouse tries to concurrently read from
                                  this file in several threads.
                                type: number
                              mergeTreeMinRowsForConcurrentRead:
                                description: If the number of rows to be read from
                                  a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read
                                  then ClickHouse tries to perform a concurrent reading
                                  from this file on several threads.
                                type: number
                              minBytesToUseDirectIo:
                                description: The minimum data volume required for
                                  using direct I/O access to the storage disk.
                                type: number
                              minCountToCompile:
                                description: How many times to potentially use a compiled
                                  chunk of code before running compilation.
                                type: number
                              minCountToCompileExpression:
                                description: A query waits for expression compilation
                                  process to complete prior to continuing execution.
                                type: number
                              minExecutionSpeed:
                                description: Minimal execution speed in rows per second.
                                type: number
                              minExecutionSpeedBytes:
                                description: Minimal execution speed in bytes per
                                  second.
                                type: number
                              minInsertBlockSizeBytes:
                                description: Sets the minimum number of bytes in the
                                  block which can be inserted into a table by an INSERT
                                  query.
                                type: number
                              minInsertBlockSizeRows:
                                description: Sets the minimum number of rows in the
                                  block which can be inserted into a table by an INSERT
                                  query.
                                type: number
                              outputFormatJsonQuote64BitIntegers:
                                description: If the value is true, integers appear
                                  in quotes when using JSON* Int64 and UInt64 formats
                                  (for compatibility with most JavaScript implementations);
                                  otherwise, integers are output without the quotes.
                                type: boolean
                              outputFormatJsonQuoteDenormals:
                                description: Enables +nan, -nan, +inf, -inf outputs
                                  in JSON output format.
                                type: boolean
                              preferLocalhostReplica:
                                description: 'Enables/disables preferable using the
                                  localhost replica when processing distributed queries.
                                  Default value: true.'
                                type: boolean
                              priority:
                                description: Query priority.
                                type: number
                              quotaMode:
                                description: Quota accounting mode.
                                type: string
                              readOverflowMode:
                                description: 'Sets behaviour on overflow while read.
                                  Possible values:'
                                type: string
                              readonly:
                                description: Restricts permissions for reading data,
                                  write data and change settings queries.
                                type: number
                              receiveTimeout:
                                description: Receive timeout in milliseconds on the
                                  socket used for communicating with the client.
                                type: number
                              remoteFilesystemReadMethod:
                                description: 'Method of reading data from remote filesystem,
                                  one of: read, threadpool.'
                                type: string
                              replicationAlterPartitionsSync:
                                description: For ALTER ... ATTACH|DETACH|DROP queries,
                                  you can use the replication_alter_partitions_sync
                                  setting to set up waiting.
                                type: number
                              resultOverflowMode:
                                description: 'Sets behaviour on overflow in result.
                                  Possible values:'
                                type: string
                              selectSequentialConsistency:
                                description: Enables or disables sequential consistency
                                  for SELECT queries.
                                type: boolean
                              sendProgressInHttpHeaders:
                                description: Enables or disables X-ClickHouse-Progress
                                  HTTP response headers in clickhouse-server responses.
                                type: boolean
                              sendTimeout:
                                description: Send timeout in milliseconds on the socket
                                  used for communicating with the client.
                                type: number
                              setOverflowMode:
                                description: 'Sets behaviour on overflow in the set
                                  resulting. Possible values:'
                                type: string
                              skipUnavailableShards:
                                description: Enables or disables silently skipping
                                  of unavailable shards.
                                type: boolean
                              sortOverflowMode:
                                description: 'Sets behaviour on overflow while sort.
                                  Possible values:'
                                type: string
                              timeoutBeforeCheckingExecutionSpeed:
                                description: Timeout (in seconds) between checks of
                                  execution speed. It is checked that execution speed
                                  is not less that specified in min_execution_speed
                                  parameter. Must be at least 1000.
                                type: number
                              timeoutOverflowMode:
                                description: 'Sets behaviour on overflow. Possible
                                  values:'
                                type: string
                              transferOverflowMode:
                                description: 'Sets behaviour on overflow. Possible
                                  values:'
                                type: string
                              transformNullIn:
                                description: Enables equality of NULL values for IN
                                  operator.
                                type: boolean
                              useHedgedRequests:
                                description: 'Enables hedged requests logic for remote
                                  queries. It allows to establish many connections
                                  with different replicas for query. New connection
                                  is enabled in case existent connection(s) with replica(s)
                                  were not established within hedged_connection_timeout
                                  or no data was received within receive_data_timeout.
                                  Query uses the first connection which send non empty
                                  progress packet (or data packet, if allow_changing_replica_until_first_data_packet);
                                  other connections are cancelled. Queries with max_parallel_replicas
                                  > 1 are supported. Default value: true.'
                                type: boolean
                              useUncompressedCache:
                                description: Whether to use a cache of uncompressed
                                  blocks.
                                type: boolean
                              waitForAsyncInsert:
                                description: Enables waiting for processing of asynchronous
                                  insertion. If enabled, server returns OK only after
                                  the data is inserted.
                                type: boolean
                              waitForAsyncInsertTimeout:
                                description: The timeout (in seconds) for waiting
                                  for processing of asynchronous insertion. Value
                                  must be at least 1000 (1 second).
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  version:
                    description: Version of the ClickHouse server software.
                    type: string
                  zookeeper:
                    description: Configuration of the ZooKeeper subcluster. The structure
                      is documented below.
                    items:
                      properties:
                        resources:
                          description: Resources allocated to hosts of the ZooKeeper
                            subcluster. The structure is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  access:
                    description: Access policy to the ClickHouse cluster. The structure
                      is documented below.
                    items:
                      properties:
                        dataLens:
                          description: Allow access for DataLens. Can be either true
                            or false.
                          type: boolean
                        dataTransfer:
                          description: Allow access for DataTransfer. Can be either
                            true or false.
                          type: boolean
                        metrika:
                          description: Allow access for Yandex.Metrika. Can be either
                            true or false.
                          type: boolean
                        serverless:
                          description: Allow access for Serverless. Can be either
                            true or false.
                          type: boolean
                        webSql:
                          description: Allow access for Web SQL. Can be either true
                            or false.
                          type: boolean
                        yandexQuery:
                          description: Allow access for YandexQuery. Can be either
                            true or false.
                          type: boolean
                      type: object
                    type: array
                  adminPasswordSecretRef:
                    description: A password used to authorize as user admin when sql_user_management
                      enabled.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  backupRetainPeriodDays:
                    description: The period in days during which backups are stored.
                    type: number
                  backupWindowStart:
                    description: Time to start the daily backup, in the UTC timezone.
                      The structure is documented below.
                    items:
                      properties:
                        hours:
                          description: The hour at which backup will be started.
                          type: number
                        minutes:
                          description: The minute at which backup will be started.
                          type: number
                      type: object
                    type: array
                  clickhouse:
                    description: Configuration of the ClickHouse subcluster. The structure
                      is documented below.
                    items:
                      properties:
                        config:
                          description: Main ClickHouse cluster configuration.
                          items:
                            properties:
                              asynchronousInsertLogEnabled:
                                type: boolean
                              asynchronousInsertLogRetentionSize:
                                type: number
                              asynchronousInsertLogRetentionTime:
                                type: number
                              asynchronousMetricLogEnabled:
                                type: boolean
                              asynchronousMetricLogRetentionSize:
                                type: number
                              asynchronousMetricLogRetentionTime:
                                type: number
                              backgroundBufferFlushSchedulePoolSize:
                                type: number
                              backgroundCommonPoolSize:
                                type: number
                              backgroundDistributedSchedulePoolSize:
                                type: number
                              backgroundFetchesPoolSize:
                                type: number
                              backgroundMergesMutationsConcurrencyRatio:
                                type: number
                              backgroundMessageBrokerSchedulePoolSize:
                                type: number
                              backgroundMovePoolSize:
                                type: number
                              backgroundPoolSize:
                                type: number
                              backgroundSchedulePoolSize:
                                type: number
                              compression:
                                description: Data compression configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    level:
                                      description: Compression level for ZSTD method.
                                      type: number
                                    method:
                                      description: 'Method: Compression method. Two
                                        methods are available: LZ4 and zstd.'
                                      type: string
                                    minPartSize:
                                      description: 'Min part size: Minimum size (in
                                        bytes) of a data part in a table. ClickHouse
                                        only applies the rule to tables with data
                                        parts greater than or equal to the Min part
                                        size value.'
                                      type: number
                                    minPartSizeRatio:
                                      description: 'Min part size ratio: Minimum table
                                        part size to total table size ratio. ClickHouse
                                        only applies the rule to tables in which this
                                        ratio is greater than or equal to the Min
                                        part size ratio value.'
                                      type: number
                                  type: object
                                type: array
                              defaultDatabase:
                                description: A database of the ClickHouse cluster.
                                  The structure is documented below.
                                type: string
                              dictionariesLazyLoad:
                                type: boolean
                              geobaseEnabled:
                                type: boolean
                              geobaseUri:
                                type: string
                              graphiteRollup:
                                description: Graphite rollup configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    pathColumnName:
                                      description: 'The name of the column storing
                                        the metric name (Graphite sensor). Default
                                        value: Path.'
                                      type: string
                                    pattern:
                                      description: Set of thinning rules.
                                      items:
                                        properties:
                                          function:
                                            description: Aggregation function name.
                                            type: string
                                          regexp:
                                            description: Regular expression that the
                                              metric name must match.
                                            type: string
                                          retention:
                                            description: Retain parameters.
                                            items:
                                              properties:
                                                age:
                                                  description: Minimum data age in
                                                    seconds.
                                                  type: number
                                                precision:
                                                  description: Accuracy of determining
                                                    the age of the data in seconds.
                                                  type: number
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    timeColumnName:
                                      description: 'The name of the column storing
                                        the time of measuring the metric. Default
                                        value: Time.'
                                      type: string
                                    valueColumnName:
                                      description: 'The name of the column storing
                                        the value of the metric at the time set in
                                        time_column_name. Default value: Value.'
                                      type: string
                                    versionColumnName:
                                      description: 'The name of the column storing
                                        the version of the metric. Default value:
                                        Timestamp.'
                                      type: string
                                  type: object
                                type: array
                              kafka:
                                description: Kafka connection configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    autoOffsetReset:
                                      description: 'Action to take when there is no
                                        initial offset in offset store or the desired
                                        offset is out of range: ''smallest'',''earliest''
                                        - automatically reset the offset to the smallest
                                        offset, ''largest'',''latest'' - automatically
                                        reset the offset to the largest offset, ''error''
                                        - trigger an error (ERR__AUTO_OFFSET_RESET)
                                        which is retrieved by consuming messages and
                                        checking ''message->err''.'
                                      type: string
                                    debug:
                                      description: A comma-separated list of debug
                                        contexts to enable.
                                      type: string
                                    enableSslCertificateVerification:
                                      description: enable verification of SSL certificates.
                                      type: boolean
                                    maxPollIntervalMs:
                                      description: Maximum allowed time between calls
                                        to consume messages (e.g., rd_kafka_consumer_poll())
                                        for high-level consumers. If this interval
                                        is exceeded the consumer is considered failed
                                        and the group will rebalance in order to reassign
                                        the partitions to another consumer group member.
                                      type: number
                                    saslMechanism:
                                      description: SASL mechanism used in kafka authentication.
                                      type: string
                                    saslPasswordSecretRef:
                                      description: User password on kafka server.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    saslUsername:
                                      description: Username on kafka server.
                                      type: string
                                    securityProtocol:
                                      description: Security protocol used to connect
                                        to kafka server.
                                      type: string
                                    sessionTimeoutMs:
                                      description: Client group session and failure
                                        detection timeout. The consumer sends periodic
                                        heartbeats (heartbeat.interval.ms) to indicate
                                        its liveness to the broker. If no hearts are
                                        received by the broker for a group member
                                        within the session timeout, the broker will
                                        remove the consumer from the group and trigger
                                        a rebalance.
                                      type: number
                                  type: object
                                type: array
                              kafkaTopic:
                                description: Kafka topic connection configuration.
                                  The structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    settings:
                                      description: Custom settings for user. The list
                                        is documented below.
                                      items:
                                        properties:
                                          autoOffsetReset:
                                            description: 'Action to take when there
                                              is no initial offset in offset store
                                              or the desired offset is out of range:
                                              ''smallest'',''earliest'' - automatically
                                              reset the offset to the smallest offset,
                                              ''largest'',''latest'' - automatically
                                              reset the offset to the largest offset,
                                              ''error'' - trigger an error (ERR__AUTO_OFFSET_RESET)
                                              which is retrieved by consuming messages
                                              and checking ''message->err''.'
                                            type: string
                                          debug:
                                            description: A comma-separated list of
                                              debug contexts to enable.
                                            type: string
                                          enableSslCertificateVerification:
                                            description: enable verification of SSL
                                              certificates.
                                            type: boolean
                                          maxPollIntervalMs:
                                            description: Maximum allowed time between
                                              calls to consume messages (e.g., rd_kafka_consumer_poll())
                                              for high-level consumers. If this interval
                                              is exceeded the consumer is considered
                                              failed and the group will rebalance
                                              in order to reassign the partitions
                                              to another consumer group member.
                                            type: number
                                          saslMechanism:
                                            description: SASL mechanism used in kafka
                                              authentication.
                                            type: string
                                          saslPasswordSecretRef:
                                            description: User password on kafka server.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: Name of the secret.
                                                type: string
                                              namespace:
                                                description: Namespace of the secret.
                                                type: string
                                            required:
                                            - key
                                            - name
                                            - namespace
                                            type: object
                                          saslUsername:
                                            description: Username on kafka server.
                                            type: string
                                          securityProtocol:
                                            description: Security protocol used to
                                              connect to kafka server.
                                            type: string
                                          sessionTimeoutMs:
                                            description: Client group session and
                                              failure detection timeout. The consumer
                                              sends periodic heartbeats (heartbeat.interval.ms)
                                              to indicate its liveness to the broker.
                                              If no hearts are received by the broker
                                              for a group member within the session
                                              timeout, the broker will remove the
                                              consumer from the group and trigger
                                              a rebalance.
                                            type: number
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              keepAliveTimeout:
                                type: number
                              logLevel:
                                description: ClickHouse server parameters. For more
                                  information, see the official documentation.
                                type: string
                              markCacheSize:
                                type: number
                              maxConcurrentQueries:
                                type: number
                              maxConnections:
                                type: number
                              maxPartitionSizeToDrop:
                                type: number
                              maxTableSizeToDrop:
                                type: number
                              mergeTree:
                                description: MergeTree engine configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    allowRemoteFsZeroCopyReplication:
                                      description: When this setting has a value greater
                                        than zero only a single replica starts the
                                        merge immediately if merged part on shared
                                        storage and allow_remote_fs_zero_copy_replication
                                        is enabled.
                                      type: boolean
                                    checkSampleColumnIsCorrect:
                                      description: 'Enables the check at table creation,
                                        that the data type of a column for sampling
                                        or sampling expression is correct. The data
                                        type must be one of unsigned integer types:
                                        UInt8, UInt16, UInt32, UInt64. Default value:
                                        true.'
                                      type: boolean
                                    cleanupDelayPeriod:
                                      description: Minimum period to clean old queue
                                        logs, blocks hashes and parts.
                                      type: number
                                    inactivePartsToDelayInsert:
                                      description: If the number of inactive parts
                                        in a single partition in the table at least
                                        that many the inactive_parts_to_delay_insert
                                        value, an INSERT artificially slows down.
                                        It is useful when a server fails to clean
                                        up parts quickly enough.
                                      type: number
                                    inactivePartsToThrowInsert:
                                      description: If the number of inactive parts
                                        in a single partition more than the inactive_parts_to_throw_insert
                                        value, INSERT is interrupted with the "Too
                                        many inactive parts (N). Parts cleaning are
                                        processing significantly slower than inserts"
                                        exception.
                                      type: number
                                    maxAvgPartSizeForTooManyParts:
                                      description: The too many parts check according
                                        to parts_to_delay_insert and parts_to_throw_insert
                                        will be active only if the average part size
                                        (in the relevant partition) is not larger
                                        than the specified threshold. If it is larger
                                        than the specified threshold, the INSERTs
                                        will be neither delayed or rejected. This
                                        allows to have hundreds of terabytes in a
                                        single table on a single server if the parts
                                        are successfully merged to larger parts. This
                                        does not affect the thresholds on inactive
                                        parts or total parts.
                                      type: number
                                    maxBytesToMergeAtMaxSpaceInPool:
                                      description: The maximum total parts size (in
                                        bytes) to be merged into one part, if there
                                        are enough resources available. max_bytes_to_merge_at_max_space_in_pool
                                        -- roughly corresponds to the maximum possible
                                        part size created by an automatic background
                                        merge.
                                      type: number
                                    maxBytesToMergeAtMinSpaceInPool:
                                      description: 'Max bytes to merge at min space
                                        in pool: Maximum total size of a data part
                                        to merge when the number of free threads in
                                        the background pool is minimum.'
                                      type: number
                                    maxCleanupDelayPeriod:
                                      description: 'Maximum period to clean old queue
                                        logs, blocks hashes and parts. Default value:
                                        300 seconds.'
                                      type: number
                                    maxMergeSelectingSleepMs:
                                      description: 'Maximum sleep time for merge selecting,
                                        a lower setting will trigger selecting tasks
                                        in background_schedule_pool frequently which
                                        result in large amount of requests to zookeeper
                                        in large-scale clusters. Default value: 60000
                                        milliseconds (60 seconds).'
                                      type: number
                                    maxNumberOfMergesWithTtlInPool:
                                      description: When there is more than specified
                                        number of merges with TTL entries in pool,
                                        do not assign new merge with TTL.
                                      type: number
                                    maxPartsInTotal:
                                      description: Maximum number of parts in all
                                        partitions.
                                      type: number
                                    maxReplicatedMergesInQueue:
                                      description: 'Max replicated merges in queue:
                                        Maximum number of merge tasks that can be
                                        in the ReplicatedMergeTree queue at the same
                                        time.'
                                      type: number
                                    mergeMaxBlockSize:
                                      description: 'The number of rows that are read
                                        from the merged parts into memory. Default
                                        value: 8192.'
                                      type: number
                                    mergeSelectingSleepMs:
                                      description: Sleep time for merge selecting
                                        when no part is selected. A lower setting
                                        triggers selecting tasks in background_schedule_pool
                                        frequently, which results in a large number
                                        of requests to ClickHouse Keeper in large-scale
                                        clusters.
                                      type: number
                                    mergeWithRecompressionTtlTimeout:
                                      description: 'Minimum delay in seconds before
                                        repeating a merge with recompression TTL.
                                        Default value: 14400 seconds (4 hours).'
                                      type: number
                                    mergeWithTtlTimeout:
                                      description: 'Minimum delay in seconds before
                                        repeating a merge with delete TTL. Default
                                        value: 14400 seconds (4 hours).'
                                      type: number
                                    minAgeToForceMergeOnPartitionOnly:
                                      description: Whether min_age_to_force_merge_seconds
                                        should be applied only on the entire partition
                                        and not on subset.
                                      type: boolean
                                    minAgeToForceMergeSeconds:
                                      description: Merge parts if every part in the
                                        range is older than the value of min_age_to_force_merge_seconds.
                                      type: number
                                    minBytesForWidePart:
                                      description: Minimum number of bytes in a data
                                        part that can be stored in Wide format. You
                                        can set one, both or none of these settings.
                                      type: number
                                    minRowsForWidePart:
                                      description: Minimum number of rows in a data
                                        part that can be stored in Wide format. You
                                        can set one, both or none of these settings.
                                      type: number
                                    numberOfFreeEntriesInPoolToExecuteMutation:
                                      description: 'When there is less than specified
                                        number of free entries in pool, do not execute
                                        part mutations. This is to leave free threads
                                        for regular merges and avoid "Too many parts".
                                        Default value: 20.'
                                      type: number
                                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge:
                                      description: 'Number of free entries in pool
                                        to lower max size of merge: Threshold value
                                        of free entries in the pool. If the number
                                        of entries in the pool falls below this value,
                                        ClickHouse reduces the maximum size of a data
                                        part to merge. This helps handle small merges
                                        faster, rather than filling the pool with
                                        lengthy merges.'
                                      type: number
                                    partsToDelayInsert:
                                      description: 'Parts to delay insert: Number
                                        of active data parts in a table, on exceeding
                                        which ClickHouse starts artificially reduce
                                        the rate of inserting data into the table.'
                                      type: number
                                    partsToThrowInsert:
                                      description: 'Parts to throw insert: Threshold
                                        value of active data parts in a table, on
                                        exceeding which ClickHouse throws the ''Too
                                        many parts ...'' exception.'
                                      type: number
                                    replicatedDeduplicationWindow:
                                      description: 'Replicated deduplication window:
                                        Number of recent hash blocks that ZooKeeper
                                        will store (the old ones will be deleted).'
                                      type: number
                                    replicatedDeduplicationWindowSeconds:
                                      description: 'Replicated deduplication window
                                        seconds: Time during which ZooKeeper stores
                                        the hash blocks (the old ones wil be deleted).'
                                      type: number
                                    ttlOnlyDropParts:
                                      description: Enables zero-copy replication when
                                        a replica is located on a remote filesystem.
                                      type: boolean
                                  type: object
                                type: array
                              metricLogEnabled:
                                type: boolean
                              metricLogRetentionSize:
                                type: number
                              metricLogRetentionTime:
                                type: number
                              opentelemetrySpanLogEnabled:
                                type: boolean
                              opentelemetrySpanLogRetentionSize:
                                type: number
                              opentelemetrySpanLogRetentionTime:
                                type: number
                              partLogRetentionSize:
                                type: number
                              partLogRetentionTime:
                                type: number
                              queryCache:
                                description: Query cache configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    maxEntries:
                                      description: 'The maximum number of SELECT query
                                        results stored in the cache. Default value:
                                        1024.'
                                      type: number
                                    maxEntrySizeInBytes:
                                      description: 'The maximum size in bytes SELECT
                                        query results may have to be saved in the
                                        cache. Default value: 1048576 (1 MiB).'
                                      type: number
                                    maxEntrySizeInRows:
                                      description: 'The maximum number of rows SELECT
                                        query results may have to be saved in the
                                        cache. Default value: 30000000 (30 mil).'
                                      type: number
                                    maxSizeInBytes:
                                      description: 'The maximum cache size in bytes.
                                        0 means the query cache is disabled. Default
                                        value: 1073741824 (1 GiB).'
                                      type: number
                                  type: object
                                type: array
                              queryLogRetentionSize:
                                type: number
                              queryLogRetentionTime:
                                type: number
                              queryMaskingRules:
                                description: Query masking rules configuration. The
                                  structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    regexp:
                                      description: Regular expression that the metric
                                        name must match.
                                      type: string
                                    replace:
                                      description: 'Substitution string for sensitive
                                        data. Default value: six asterisks.'
                                      type: string
                                  type: object
                                type: array
                              queryThreadLogEnabled:
                                type: boolean
                              queryThreadLogRetentionSize:
                                type: number
                              queryThreadLogRetentionTime:
                                type: number
                              queryViewsLogEnabled:
                                type: boolean
                              queryViewsLogRetentionSize:
                                type: number
                              queryViewsLogRetentionTime:
                                type: number
                              rabbitmq:
                                description: RabbitMQ connection configuration. The
                                  structure is documented below.
                                items:
                                  properties:
                                    passwordSecretRef:
                                      description: The password of the user.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                      - key
                                      - name
                                      - namespace
                                      type: object
                                    username:
                                      description: RabbitMQ username.
                                      type: string
                                    vhost:
                                      description: 'RabbitMQ vhost. Default: ”.'
                                      type: string
                                  type: object
                                type: array
                              sessionLogEnabled:
                                type: boolean
                              sessionLogRetentionSize:
                                type: number
                              sessionLogRetentionTime:
                                type: number
                              textLogEnabled:
                                type: boolean
                              textLogLevel:
                                type: string
                              textLogRetentionSize:
                                type: number
                              textLogRetentionTime:
                                type: number
                              timezone:
                                type: string
                              totalMemoryProfilerStep:
                                type: number
                              traceLogEnabled:
                                type: boolean
                              traceLogRetentionSize:
                                type: number
                              traceLogRetentionTime:
                                type: number
                              uncompressedCacheSize:
                                type: number
                              zookeeperLogEnabled:
                                type: boolean
                              zookeeperLogRetentionSize:
                                type: number
                              zookeeperLogRetentionTime:
                                type: number
                            type: object
                          type: array
                        resources:
                          description: Resources allocated to hosts of the ClickHouse
                            subcluster. The structure is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  cloudStorage:
                    description: Minimum data age in seconds.
                    items:
                      properties:
                        dataCacheEnabled:
                          description: Enables temporary storage in the cluster repository
                            of data requested from the object repository.
                          type: boolean
                        dataCacheMaxSize:
                          description: Defines the maximum amount of memory (in bytes)
                            allocated in the cluster storage for temporary storage
                            of data requested from the object storage.
                          type: number
                        enabled:
                          description: Whether to use Yandex Object Storage for storing
                            ClickHouse data. Can be either true or false.
                          type: boolean
                        moveFactor:
                          description: Sets the minimum free space ratio in the cluster
                            storage. If the free space is lower than this value, the
                            data is transferred to Yandex Object Storage. Acceptable
                            values are 0 to 1, inclusive.
                          type: number
                        preferNotToMerge:
                          description: Disables merging of data parts in Yandex Object
                            Storage.
                          type: boolean
                      type: object
                    type: array
                  clusterId:
                    type: string
                  copySchemaOnNewHosts:
                    description: Whether to copy schema on new ClickHouse hosts.
                    type: boolean
                  database:
                    description: A database of the ClickHouse cluster. The structure
                      is documented below.
                    items:
                      properties:
                        name:
                          description: The name of the database.
                          type: string
                      type: object
                    type: array
                  deletionProtection:
                    description: Inhibits deletion of the cluster. Can be either true
                      or false.
                    type: boolean
                  description:
                    description: Description of the ClickHouse cluster.
                    type: string
                  embeddedKeeper:
                    description: Whether to use ClickHouse Keeper as a coordination
                      system and place it on the same hosts with ClickHouse. If not,
                      it's used ZooKeeper with placement on separate hosts.
                    type: boolean
                  environment:
                    description: Deployment environment of the ClickHouse cluster.
                      Can be either PRESTABLE or PRODUCTION.
                    type: string
                  folderId:
                    description: The ID of the folder that the resource belongs to.
                      If it is not provided, the default provider folder is used.
                    type: string
                  folderIdRef:
                    description: Reference to a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderIdSelector:
                    description: Selector for a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  formatSchema:
                    description: A set of protobuf or capnproto format schemas. The
                      structure is documented below.
                    items:
                      properties:
                        name:
                          description: The name of the format schema.
                          type: string
                        type:
                          description: Type of the format schema.
                          type: string
                        uri:
                          description: Format schema file URL. You can only use format
                            schemas stored in Yandex Object Storage.
                          type: string
                      type: object
                    type: array
                  host:
                    description: A host of the ClickHouse cluster. The structure is
                      documented below.
                    items:
                      properties:
                        assignPublicIp:
                          description: Sets whether the host should get a public IP
                            address on creation. Can be either true or false.
                          type: boolean
                        shardName:
                          description: The name of the shard to which the host belongs.
                          type: string
                        subnetId:
                          description: The ID of the subnet, to which the host belongs.
                            The subnet must be a part of the network to which the
                            cluster belongs.
                          type: string
                        subnetIdRef:
                          description: Reference to a Subnet in vpc to populate subnetId.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        subnetIdSelector:
                          description: Selector for a Subnet in vpc to populate subnetId.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        type:
                          description: The type of the host to be deployed. Can be
                            either CLICKHOUSE or ZOOKEEPER.
                          type: string
                        zone:
                          description: The availability zone where the ClickHouse
                            host will be created. For more information see the official
                            documentation.
                          type: string
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the ClickHouse
                      cluster.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    items:
                      properties:
                        day:
                          description: 'Day of week for maintenance window if window
                            type is weekly. Possible values: MON, TUE, WED, THU, FRI,
                            SAT, SUN.'
                          type: string
                        hour:
                          description: Hour of day in UTC time zone (1-24) for maintenance
                            window if window type is weekly.
                          type: number
                        type:
                          description: Type of maintenance window. Can be either ANYTIME
                            or WEEKLY. A day and hour of window need to be specified
                            with weekly window.
                          type: string
                      type: object
                    type: array
                  mlModel:
                    description: A group of machine learning models. The structure
                      is documented below
                    items:
                      properties:
                        name:
                          description: The name of the ml model.
                          type: string
                        type:
                          description: Type of the model.
                          type: string
                        uri:
                          description: Model file URL. You can only use models stored
                            in Yandex Object Storage.
                          type: string
                      type: object
                    type: array
                  name:
                    description: Name of the ClickHouse cluster. Provided by the client
                      when the cluster is created.
                    type: string
                  networkId:
                    description: ID of the network, to which the ClickHouse cluster
                      belongs.
                    type: string
                  networkIdRef:
                    description: Reference to a Network in vpc to populate networkId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkIdSelector:
                    description: Selector for a Network in vpc to populate networkId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  securityGroupIds:
                    description: A set of ids of security groups assigned to hosts
                      of the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  serviceAccountId:
                    description: ID of the service account used for access to Yandex
                      Object Storage.
                    type: string
                  serviceAccountIdRef:
                    description: Reference to a ServiceAccount in iam to populate
                      serviceAccountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountIdSelector:
                    description: Selector for a ServiceAccount in iam to populate
                      serviceAccountId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  shard:
                    items:
                      properties:
                        name:
                          description: The name of shard.
                          type: string
                        resources:
                          description: Resources allocated to host of the shard. The
                            resources specified for the shard takes precedence over
                            the resources specified for the cluster. The structure
                            is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                        weight:
                          description: The weight of shard.
                          type: number
                      type: object
                    type: array
                  shardGroup:
                    description: A group of clickhouse shards. The structure is documented
                      below.
                    items:
                      properties:
                        description:
                          description: Description of the shard group.
                          type: string
                        name:
                          description: The name of the shard group, used as cluster
                            name in Distributed tables.
                          type: string
                        shardNames:
                          description: List of shards names that belong to the shard
                            group.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  sqlDatabaseManagement:
                    description: Grants admin user database management permission.
                    type: boolean
                  sqlUserManagement:
                    description: Enables admin user with user management permission.
                    type: boolean
                  user:
                    description: A user of the ClickHouse cluster. The structure is
                      documented below.
                    items:
                      properties:
                        name:
                          description: The name of the user.
                          type: string
                        passwordSecretRef:
                          description: The password of the user.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        permission:
                          description: Set of permissions granted to the user. The
                            structure is documented below.
                          items:
                            properties:
                              databaseName:
                                description: The name of the database that the permission
                                  grants access to.
                                type: string
                            type: object
                          type: array
                        quota:
                          description: Set of user quotas. The structure is documented
                            below.
                          items:
                            properties:
                              errors:
                                description: The number of queries that threw exception.
                                type: number
                              executionTime:
                                description: The total query execution time, in milliseconds
                                  (wall time).
                                type: number
                              intervalDuration:
                                description: Duration of interval for quota in milliseconds.
                                type: number
                              queries:
                                description: The total number of queries.
                                type: number
                              readRows:
                                description: The total number of source rows read
                                  from tables for running the query, on all remote
                                  servers.
                                type: number
                              resultRows:
                                description: The total number of rows given as the
                                  result.
                                type: number
                            type: object
                          type: array
                        settings:
                          description: Custom settings for user. The list is documented
                            below.
                          items:
                            properties:
                              addHttpCorsHeader:
                                description: Include CORS headers in HTTP responces.
                                type: boolean
                              allowDdl:
                                description: Allows or denies DDL queries.
                                type: boolean
                              allowIntrospectionFunctions:
                                description: Enables introspections functions for
                                  query profiling.
                                type: boolean
                              allowSuspiciousLowCardinalityTypes:
                                description: Allows specifying LowCardinality modifier
                                  for types of small fixed size (8 or less) in CREATE
                                  TABLE statements. Enabling this may increase merge
                                  times and memory consumption.
                                type: boolean
                              anyJoinDistinctRightTableKeys:
                                description: enables legacy ClickHouse server behaviour
                                  in ANY INNER|LEFT JOIN operations.
                                type: boolean
                              asyncInsert:
                                description: Enables asynchronous inserts. Disabled
                                  by default.
                                type: boolean
                              asyncInsertBusyTimeout:
                                description: 'The maximum timeout in milliseconds
                                  since the first INSERT query before inserting collected
                                  data. If the parameter is set to 0, the timeout
                                  is disabled. Default value: 200.'
                                type: number
                              asyncInsertMaxDataSize:
                                description: 'The maximum size of the unparsed data
                                  in bytes collected per query before being inserted.
                                  If the parameter is set to 0, asynchronous insertions
                                  are disabled. Default value: 100000.'
                                type: number
                              asyncInsertStaleTimeout:
                                description: The maximum timeout in milliseconds since
                                  the last INSERT query before dumping collected data.
                                  If enabled, the settings prolongs the async_insert_busy_timeout
                                  with every INSERT query as long as async_insert_max_data_size
                                  is not exceeded.
                                type: number
                              asyncInsertThreads:
                                description: 'The maximum number of threads for background
                                  data parsing and insertion. If the parameter is
                                  set to 0, asynchronous insertions are disabled.
                                  Default value: 16.'
                                type: number
                              cancelHttpReadonlyQueriesOnClientClose:
                                description: 'Cancels HTTP read-only queries (e.g.
                                  SELECT) when a client closes the connection without
                                  waiting for the response. Default value: false.'
                                type: boolean
                              compile:
                                description: Enable compilation of queries.
                                type: boolean
                              compileExpressions:
                                description: Turn on expression compilation.
                                type: boolean
                              connectTimeout:
                                description: Connect timeout in milliseconds on the
                                  socket used for communicating with the client.
                                type: number
                              connectTimeoutWithFailover:
                                description: 'The timeout in milliseconds for connecting
                                  to a remote server for a Distributed table engine,
                                  if the ‘shard’ and ‘replica’ sections are used in
                                  the cluster definition. If unsuccessful, several
                                  attempts are made to connect to various replicas.
                                  Default value: 50.'
                                type: number
                              countDistinctImplementation:
                                description: Specifies which of the uniq* functions
                                  should be used to perform the COUNT(DISTINCT …)
                                  construction.
                                type: string
                              dateTimeInputFormat:
                                description: 'Allows choosing a parser of the text
                                  representation of date and time, one of: best_effort,
                                  basic, best_effort_us. Default value: basic. Cloud
                                  default value: best_effort.'
                                type: string
                              dateTimeOutputFormat:
                                description: 'Allows choosing different output formats
                                  of the text representation of date and time, one
                                  of: simple, iso, unix_timestamp. Default value:
                                  simple.'
                                type: string
                              deduplicateBlocksInDependentMaterializedViews:
                                description: Enables or disables the deduplication
                                  check for materialized views that receive data from
                                  Replicated* tables.
                                type: boolean
                              distinctOverflowMode:
                                description: 'Sets behaviour on overflow when using
                                  DISTINCT. Possible values:'
                                type: string
                              distributedAggregationMemoryEfficient:
                                description: Determine the behavior of distributed
                                  subqueries.
                                type: boolean
                              distributedDdlTaskTimeout:
                                description: Timeout for DDL queries, in milliseconds.
                                type: number
                              distributedProductMode:
                                description: Changes the behaviour of distributed
                                  subqueries.
                                type: string
                              emptyResultForAggregationByEmptySet:
                                description: Allows to retunr empty result.
                                type: boolean
                              enableHttpCompression:
                                description: Enables or disables data compression
                                  in the response to an HTTP request.
                                type: boolean
                              fallbackToStaleReplicasForDistributedQueries:
                                description: Forces a query to an out-of-date replica
                                  if updated data is not available.
                                type: boolean
                              flattenNested:
                                description: Sets the data format of a nested columns.
                                type: boolean
                              forceIndexByDate:
                                description: Disables query execution if the index
                                  can’t be used by date.
                                type: boolean
                              forcePrimaryKey:
                                description: Disables query execution if indexing
                                  by the primary key is not possible.
                                type: boolean
                              formatRegexp:
                                description: Regular expression (for Regexp format).
                                type: string
                              formatRegexpSkipUnmatched:
                                description: Skip lines unmatched by regular expression.
                                type: boolean
                              groupByOverflowMode:
                                description: 'Sets behaviour on overflow while GROUP
                                  BY operation. Possible values:'
                                type: string
                              groupByTwoLevelThreshold:
                                description: Sets the threshold of the number of keys,
                                  after that the two-level aggregation should be used.
                                type: number
                              groupByTwoLevelThresholdBytes:
                                description: Sets the threshold of the number of bytes,
                                  after that the two-level aggregation should be used.
                                type: number
                              hedgedConnectionTimeoutMs:
                                description: 'Connection timeout for establishing
                                  connection with replica for Hedged requests. Default
                                  value: 50 milliseconds.'
                                type: number
                              httpConnectionTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              httpHeadersProgressInterval:
                                description: Sets minimal interval between notifications
                                  about request process in HTTP header X-ClickHouse-Progress.
                                type: number
                              httpReceiveTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              httpSendTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              idleConnectionTimeout:
                                description: 'Timeout to close idle TCP connections
                                  after specified number of seconds. Default value:
                                  3600 seconds.'
                                type: number
                              inputFormatDefaultsForOmittedFields:
                                description: When performing INSERT queries, replace
                                  omitted input column values with default values
                                  of the respective columns.
                                type: boolean
                              inputFormatImportNestedJson:
                                description: Enables or disables the insertion of
                                  JSON data with nested objects.
                                type: boolean
                              inputFormatNullAsDefault:
                                description: Enables or disables the initialization
                                  of NULL fields with default values, if data type
                                  of these fields is not nullable.
                                type: boolean
                              inputFormatParallelParsing:
                                description: Enables or disables order-preserving
                                  parallel parsing of data formats. Supported only
                                  for TSV, TKSV, CSV and JSONEachRow formats.
                                type: boolean
                              inputFormatValuesInterpretExpressions:
                                description: Enables or disables the full SQL parser
                                  if the fast stream parser can’t parse the data.
                                type: boolean
                              inputFormatWithNamesUseHeader:
                                description: Enables or disables checking the column
                                  order when inserting data.
                                type: boolean
                              insertKeeperMaxRetries:
                                description: The setting sets the maximum number of
                                  retries for ClickHouse Keeper (or ZooKeeper) requests
                                  during insert into replicated MergeTree. Only Keeper
                                  requests which failed due to network error, Keeper
                                  session timeout, or request timeout are considered
                                  for retries.
                                type: number
                              insertNullAsDefault:
                                description: 'Enables the insertion of default values
                                  instead of NULL into columns with not nullable data
                                  type. Default value: true.'
                                type: boolean
                              insertQuorum:
                                description: Enables the quorum writes.
                                type: number
                              insertQuorumParallel:
                                description: Enables or disables parallelism for quorum
                                  INSERT queries.
                                type: boolean
                              insertQuorumTimeout:
                                description: Write to a quorum timeout in milliseconds.
                                type: number
                              joinAlgorithm:
                                description: 'Specifies which JOIN algorithm is used.
                                  Possible values:'
                                items:
                                  type: string
                                type: array
                              joinOverflowMode:
                                description: 'Sets behaviour on overflow in JOIN.
                                  Possible values:'
                                type: string
                              joinUseNulls:
                                description: Sets the type of JOIN behaviour. When
                                  merging tables, empty cells may appear. ClickHouse
                                  fills them differently based on this setting.
                                type: boolean
                              joinedSubqueryRequiresAlias:
                                description: Require aliases for subselects and table
                                  functions in FROM that more than one table is present.
                                type: boolean
                              loadBalancing:
                                description: 'Specifies the algorithm of replicas
                                  selection that is used for distributed query processing,
                                  one of: random, nearest_hostname, in_order, first_or_random,
                                  round_robin. Default value: random.'
                                type: string
                              localFilesystemReadMethod:
                                description: 'Method of reading data from local filesystem.
                                  Possible values:'
                                type: string
                              logQueryThreads:
                                description: 'Setting up query threads logging. Query
                                  threads log into the system.query_thread_log table.
                                  This setting has effect only when log_queries is
                                  true. Queries’ threads run by ClickHouse with this
                                  setup are logged according to the rules in the query_thread_log
                                  server configuration parameter. Default value: true.'
                                type: boolean
                              lowCardinalityAllowInNativeFormat:
                                description: Allows or restricts using the LowCardinality
                                  data type with the Native format.
                                type: boolean
                              maxAstDepth:
                                description: Maximum abstract syntax tree depth.
                                type: number
                              maxAstElements:
                                description: Maximum abstract syntax tree elements.
                                type: number
                              maxBlockSize:
                                description: A recommendation for what size of the
                                  block (in a count of rows) to load from tables.
                                type: number
                              maxBytesBeforeExternalGroupBy:
                                description: Limit in bytes for using memoru for GROUP
                                  BY before using swap on disk.
                                type: number
                              maxBytesBeforeExternalSort:
                                description: This setting is equivalent of the max_bytes_before_external_group_by
                                  setting, except for it is for sort operation (ORDER
                                  BY), not aggregation.
                                type: number
                              maxBytesInDistinct:
                                description: Limits the maximum size of a hash table
                                  in bytes (uncompressed data) when using DISTINCT.
                                type: number
                              maxBytesInJoin:
                                description: Limit on maximum size of the hash table
                                  for JOIN, in bytes.
                                type: number
                              maxBytesInSet:
                                description: Limit on the number of bytes in the set
                                  resulting from the execution of the IN section.
                                type: number
                              maxBytesToRead:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be read from a table when running
                                  a query.
                                type: number
                              maxBytesToSort:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be read from a table for sorting.
                                type: number
                              maxBytesToTransfer:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be passed to a remote server or saved
                                  in a temporary table when using GLOBAL IN.
                                type: number
                              maxColumnsToRead:
                                description: Limits the maximum number of columns
                                  that can be read from a table in a single query.
                                type: number
                              maxConcurrentQueriesForUser:
                                description: 'The maximum number of concurrent requests
                                  per user. Default value: 0 (no limit).'
                                type: number
                              maxExecutionTime:
                                description: Limits the maximum query execution time
                                  in milliseconds.
                                type: number
                              maxExpandedAstElements:
                                description: Maximum abstract syntax tree depth after
                                  after expansion of aliases.
                                type: number
                              maxFinalThreads:
                                description: Sets the maximum number of parallel threads
                                  for the SELECT query data read phase with the FINAL
                                  modifier.
                                type: number
                              maxHttpGetRedirects:
                                description: Limits the maximum number of HTTP GET
                                  redirect hops for URL-engine tables.
                                type: number
                              maxInsertBlockSize:
                                description: The size of blocks (in a count of rows)
                                  to form for insertion into a table.
                                type: number
                              maxInsertThreads:
                                description: 'The maximum number of threads to execute
                                  the INSERT SELECT query. Default value: 0.'
                                type: number
                              maxMemoryUsage:
                                description: Limits the maximum memory usage (in bytes)
                                  for processing queries on a single server.
                                type: number
                              maxMemoryUsageForUser:
                                description: Limits the maximum memory usage (in bytes)
                                  for processing of user's queries on a single server.
                                type: number
                              maxNetworkBandwidth:
                                description: Limits the speed of the data exchange
                                  over the network in bytes per second.
                                type: number
                              maxNetworkBandwidthForUser:
                                description: Limits the speed of the data exchange
                                  over the network in bytes per second.
                                type: number
                              maxParserDepth:
                                description: Limits maximum recursion depth in the
                                  recursive descent parser. Allows controlling the
                                  stack size. Zero means unlimited.
                                type: number
                              maxQuerySize:
                                description: The maximum part of a query that can
                                  be taken to RAM for parsing with the SQL parser.
                                type: number
                              maxReadBufferSize:
                                description: The maximum size of the buffer to read
                                  from the filesystem.
                                type: number
                              maxReplicaDelayForDistributedQueries:
                                description: Disables lagging replicas for distributed
                                  queries.
                                type: number
                              maxResultBytes:
                                description: Limits the number of bytes in the result.
                                type: number
                              maxResultRows:
                                description: Limits the number of rows in the result.
                                type: number
                              maxRowsInDistinct:
                                description: Limits the maximum number of different
                                  rows when using DISTINCT.
                                type: number
                              maxRowsInJoin:
                                description: Limit on maximum size of the hash table
                                  for JOIN, in rows.
                                type: number
                              maxRowsInSet:
                                description: Limit on the number of rows in the set
                                  resulting from the execution of the IN section.
                                type: number
                              maxRowsToGroupBy:
                                description: Limits the maximum number of unique keys
                                  received from aggregation function.
                                type: number
                              maxRowsToRead:
                                description: Limits the maximum number of rows that
                                  can be read from a table when running a query.
                                type: number
                              maxRowsToSort:
                                description: Limits the maximum number of rows that
                                  can be read from a table for sorting.
                                type: number
                              maxRowsToTransfer:
                                description: Limits the maximum number of rows that
                                  can be passed to a remote server or saved in a temporary
                                  table when using GLOBAL IN.
                                type: number
                              maxTemporaryColumns:
                                description: Limits the maximum number of temporary
                                  columns that must be kept in RAM at the same time
                                  when running a query, including constant columns.
                                type: number
                              maxTemporaryDataOnDiskSizeForQuery:
                                description: The maximum amount of data consumed by
                                  temporary files on disk in bytes for all concurrently
                                  running queries. Zero means unlimited.
                                type: number
                              maxTemporaryDataOnDiskSizeForUser:
                                description: The maximum amount of data consumed by
                                  temporary files on disk in bytes for all concurrently
                                  running user queries. Zero means unlimited.
                                type: number
                              maxTemporaryNonConstColumns:
                                description: Limits the maximum number of temporary
                                  columns that must be kept in RAM at the same time
                                  when running a query, excluding constant columns.
                                type: number
                              maxThreads:
                                description: The maximum number of query processing
                                  threads, excluding threads for retrieving data from
                                  remote servers.
                                type: number
                              memoryOvercommitRatioDenominator:
                                description: It represents soft memory limit in case
                                  when hard limit is reached on user level. This value
                                  is used to compute overcommit ratio for the query.
                                  Zero means skip the query.
                                type: number
                              memoryOvercommitRatioDenominatorForUser:
                                description: It represents soft memory limit in case
                                  when hard limit is reached on global level. This
                                  value is used to compute overcommit ratio for the
                                  query. Zero means skip the query.
                                type: number
                              memoryProfilerSampleProbability:
                                description: 'Collect random allocations and deallocations
                                  and write them into system.trace_log with ''MemorySample''
                                  trace_type. The probability is for every alloc/free
                                  regardless to the size of the allocation. Possible
                                  values: from 0 to 1. Default: 0.'
                                type: number
                              memoryProfilerStep:
                                description: 'Memory profiler step (in bytes). If
                                  the next query step requires more memory than this
                                  parameter specifies, the memory profiler collects
                                  the allocating stack trace. Values lower than a
                                  few megabytes slow down query processing. Default
                                  value: 4194304 (4 MB). Zero means disabled memory
                                  profiler.'
                                type: number
                              memoryUsageOvercommitMaxWaitMicroseconds:
                                description: Maximum time thread will wait for memory
                                  to be freed in the case of memory overcommit on
                                  a user level. If the timeout is reached and memory
                                  is not freed, an exception is thrown.
                                type: number
                              mergeTreeMaxBytesToUseCache:
                                description: If ClickHouse should read more than merge_tree_max_bytes_to_use_cache
                                  bytes in one query, it doesn’t use the cache of
                                  uncompressed blocks.
                                type: number
                              mergeTreeMaxRowsToUseCache:
                                description: If ClickHouse should read more than merge_tree_max_rows_to_use_cache
                                  rows in one query, it doesn’t use the cache of uncompressed
                                  blocks.
                                type: number
                              mergeTreeMinBytesForConcurrentRead:
                                description: If the number of bytes to read from one
                                  file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read,
                                  then ClickHouse tries to concurrently read from
                                  this file in several threads.
                                type: number
                              mergeTreeMinRowsForConcurrentRead:
                                description: If the number of rows to be read from
                                  a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read
                                  then ClickHouse tries to perform a concurrent reading
                                  from this file on several threads.
                                type: number
                              minBytesToUseDirectIo:
                                description: The minimum data volume required for
                                  using direct I/O access to the storage disk.
                                type: number
                              minCountToCompile:
                                description: How many times to potentially use a compiled
                                  chunk of code before running compilation.
                                type: number
                              minCountToCompileExpression:
                                description: A query waits for expression compilation
                                  process to complete prior to continuing execution.
                                type: number
                              minExecutionSpeed:
                                description: Minimal execution speed in rows per second.
                                type: number
                              minExecutionSpeedBytes:
                                description: Minimal execution speed in bytes per
                                  second.
                                type: number
                              minInsertBlockSizeBytes:
                                description: Sets the minimum number of bytes in the
                                  block which can be inserted into a table by an INSERT
                                  query.
                                type: number
                              minInsertBlockSizeRows:
                                description: Sets the minimum number of rows in the
                                  block which can be inserted into a table by an INSERT
                                  query.
                                type: number
                              outputFormatJsonQuote64BitIntegers:
                                description: If the value is true, integers appear
                                  in quotes when using JSON* Int64 and UInt64 formats
                                  (for compatibility with most JavaScript implementations);
                                  otherwise, integers are output without the quotes.
                                type: boolean
                              outputFormatJsonQuoteDenormals:
                                description: Enables +nan, -nan, +inf, -inf outputs
                                  in JSON output format.
                                type: boolean
                              preferLocalhostReplica:
                                description: 'Enables/disables preferable using the
                                  localhost replica when processing distributed queries.
                                  Default value: true.'
                                type: boolean
                              priority:
                                description: Query priority.
                                type: number
                              quotaMode:
                                description: Quota accounting mode.
                                type: string
                              readOverflowMode:
                                description: 'Sets behaviour on overflow while read.
                                  Possible values:'
                                type: string
                              readonly:
                                description: Restricts permissions for reading data,
                                  write data and change settings queries.
                                type: number
                              receiveTimeout:
                                description: Receive timeout in milliseconds on the
                                  socket used for communicating with the client.
                                type: number
                              remoteFilesystemReadMethod:
                                description: 'Method of reading data from remote filesystem,
                                  one of: read, threadpool.'
                                type: string
                              replicationAlterPartitionsSync:
                                description: For ALTER ... ATTACH|DETACH|DROP queries,
                                  you can use the replication_alter_partitions_sync
                                  setting to set up waiting.
                                type: number
                              resultOverflowMode:
                                description: 'Sets behaviour on overflow in result.
                                  Possible values:'
                                type: string
                              selectSequentialConsistency:
                                description: Enables or disables sequential consistency
                                  for SELECT queries.
                                type: boolean
                              sendProgressInHttpHeaders:
                                description: Enables or disables X-ClickHouse-Progress
                                  HTTP response headers in clickhouse-server responses.
                                type: boolean
                              sendTimeout:
                                description: Send timeout in milliseconds on the socket
                                  used for communicating with the client.
                                type: number
                              setOverflowMode:
                                description: 'Sets behaviour on overflow in the set
                                  resulting. Possible values:'
                                type: string
                              skipUnavailableShards:
                                description: Enables or disables silently skipping
                                  of unavailable shards.
                                type: boolean
                              sortOverflowMode:
                                description: 'Sets behaviour on overflow while sort.
                                  Possible values:'
                                type: string
                              timeoutBeforeCheckingExecutionSpeed:
                                description: Timeout (in seconds) between checks of
                                  execution speed. It is checked that execution speed
                                  is not less that specified in min_execution_speed
                                  parameter. Must be at least 1000.
                                type: number
                              timeoutOverflowMode:
                                description: 'Sets behaviour on overflow. Possible
                                  values:'
                                type: string
                              transferOverflowMode:
                                description: 'Sets behaviour on overflow. Possible
                                  values:'
                                type: string
                              transformNullIn:
                                description: Enables equality of NULL values for IN
                                  operator.
                                type: boolean
                              useHedgedRequests:
                                description: 'Enables hedged requests logic for remote
                                  queries. It allows to establish many connections
                                  with different replicas for query. New connection
                                  is enabled in case existent connection(s) with replica(s)
                                  were not established within hedged_connection_timeout
                                  or no data was received within receive_data_timeout.
                                  Query uses the first connection which send non empty
                                  progress packet (or data packet, if allow_changing_replica_until_first_data_packet);
                                  other connections are cancelled. Queries with max_parallel_replicas
                                  > 1 are supported. Default value: true.'
                                type: boolean
                              useUncompressedCache:
                                description: Whether to use a cache of uncompressed
                                  blocks.
                                type: boolean
                              waitForAsyncInsert:
                                description: Enables waiting for processing of asynchronous
                                  insertion. If enabled, server returns OK only after
                                  the data is inserted.
                                type: boolean
                              waitForAsyncInsertTimeout:
                                description: The timeout (in seconds) for waiting
                                  for processing of asynchronous insertion. Value
                                  must be at least 1000 (1 second).
                                type: number
                            type: object
                          type: array
                      required:
                      - passwordSecretRef
                      type: object
                    type: array
                  version:
                    description: Version of the ClickHouse server software.
                    type: string
                  zookeeper:
                    description: Configuration of the ZooKeeper subcluster. The structure
                      is documented below.
                    items:
                      properties:
                        resources:
                          description: Resources allocated to hosts of the ZooKeeper
                            subcluster. The structure is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.environment is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.environment)
                || (has(self.initProvider) && has(self.initProvider.environment))'
            - message: spec.forProvider.host is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.host)
                || (has(self.initProvider) && has(self.initProvider.host))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: ClickhouseClusterStatus defines the observed state of ClickhouseCluster.
            properties:
              atProvider:
                properties:
                  access:
                    description: Access policy to the ClickHouse cluster. The structure
                      is documented below.
                    items:
                      properties:
                        dataLens:
                          description: Allow access for DataLens. Can be either true
                            or false.
                          type: boolean
                        dataTransfer:
                          description: Allow access for DataTransfer. Can be either
                            true or false.
                          type: boolean
                        metrika:
                          description: Allow access for Yandex.Metrika. Can be either
                            true or false.
                          type: boolean
                        serverless:
                          description: Allow access for Serverless. Can be either
                            true or false.
                          type: boolean
                        webSql:
                          description: Allow access for Web SQL. Can be either true
                            or false.
                          type: boolean
                        yandexQuery:
                          description: Allow access for YandexQuery. Can be either
                            true or false.
                          type: boolean
                      type: object
                    type: array
                  backupRetainPeriodDays:
                    description: The period in days during which backups are stored.
                    type: number
                  backupWindowStart:
                    description: Time to start the daily backup, in the UTC timezone.
                      The structure is documented below.
                    items:
                      properties:
                        hours:
                          description: The hour at which backup will be started.
                          type: number
                        minutes:
                          description: The minute at which backup will be started.
                          type: number
                      type: object
                    type: array
                  clickhouse:
                    description: Configuration of the ClickHouse subcluster. The structure
                      is documented below.
                    items:
                      properties:
                        config:
                          description: Main ClickHouse cluster configuration.
                          items:
                            properties:
                              asynchronousInsertLogEnabled:
                                type: boolean
                              asynchronousInsertLogRetentionSize:
                                type: number
                              asynchronousInsertLogRetentionTime:
                                type: number
                              asynchronousMetricLogEnabled:
                                type: boolean
                              asynchronousMetricLogRetentionSize:
                                type: number
                              asynchronousMetricLogRetentionTime:
                                type: number
                              backgroundBufferFlushSchedulePoolSize:
                                type: number
                              backgroundCommonPoolSize:
                                type: number
                              backgroundDistributedSchedulePoolSize:
                                type: number
                              backgroundFetchesPoolSize:
                                type: number
                              backgroundMergesMutationsConcurrencyRatio:
                                type: number
                              backgroundMessageBrokerSchedulePoolSize:
                                type: number
                              backgroundMovePoolSize:
                                type: number
                              backgroundPoolSize:
                                type: number
                              backgroundSchedulePoolSize:
                                type: number
                              compression:
                                description: Data compression configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    level:
                                      description: Compression level for ZSTD method.
                                      type: number
                                    method:
                                      description: 'Method: Compression method. Two
                                        methods are available: LZ4 and zstd.'
                                      type: string
                                    minPartSize:
                                      description: 'Min part size: Minimum size (in
                                        bytes) of a data part in a table. ClickHouse
                                        only applies the rule to tables with data
                                        parts greater than or equal to the Min part
                                        size value.'
                                      type: number
                                    minPartSizeRatio:
                                      description: 'Min part size ratio: Minimum table
                                        part size to total table size ratio. ClickHouse
                                        only applies the rule to tables in which this
                                        ratio is greater than or equal to the Min
                                        part size ratio value.'
                                      type: number
                                  type: object
                                type: array
                              defaultDatabase:
                                description: A database of the ClickHouse cluster.
                                  The structure is documented below.
                                type: string
                              dictionariesLazyLoad:
                                type: boolean
                              geobaseEnabled:
                                type: boolean
                              geobaseUri:
                                type: string
                              graphiteRollup:
                                description: Graphite rollup configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    pathColumnName:
                                      description: 'The name of the column storing
                                        the metric name (Graphite sensor). Default
                                        value: Path.'
                                      type: string
                                    pattern:
                                      description: Set of thinning rules.
                                      items:
                                        properties:
                                          function:
                                            description: Aggregation function name.
                                            type: string
                                          regexp:
                                            description: Regular expression that the
                                              metric name must match.
                                            type: string
                                          retention:
                                            description: Retain parameters.
                                            items:
                                              properties:
                                                age:
                                                  description: Minimum data age in
                                                    seconds.
                                                  type: number
                                                precision:
                                                  description: Accuracy of determining
                                                    the age of the data in seconds.
                                                  type: number
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                    timeColumnName:
                                      description: 'The name of the column storing
                                        the time of measuring the metric. Default
                                        value: Time.'
                                      type: string
                                    valueColumnName:
                                      description: 'The name of the column storing
                                        the value of the metric at the time set in
                                        time_column_name. Default value: Value.'
                                      type: string
                                    versionColumnName:
                                      description: 'The name of the column storing
                                        the version of the metric. Default value:
                                        Timestamp.'
                                      type: string
                                  type: object
                                type: array
                              kafka:
                                description: Kafka connection configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    autoOffsetReset:
                                      description: 'Action to take when there is no
                                        initial offset in offset store or the desired
                                        offset is out of range: ''smallest'',''earliest''
                                        - automatically reset the offset to the smallest
                                        offset, ''largest'',''latest'' - automatically
                                        reset the offset to the largest offset, ''error''
                                        - trigger an error (ERR__AUTO_OFFSET_RESET)
                                        which is retrieved by consuming messages and
                                        checking ''message->err''.'
                                      type: string
                                    debug:
                                      description: A comma-separated list of debug
                                        contexts to enable.
                                      type: string
                                    enableSslCertificateVerification:
                                      description: enable verification of SSL certificates.
                                      type: boolean
                                    maxPollIntervalMs:
                                      description: Maximum allowed time between calls
                                        to consume messages (e.g., rd_kafka_consumer_poll())
                                        for high-level consumers. If this interval
                                        is exceeded the consumer is considered failed
                                        and the group will rebalance in order to reassign
                                        the partitions to another consumer group member.
                                      type: number
                                    saslMechanism:
                                      description: SASL mechanism used in kafka authentication.
                                      type: string
                                    saslUsername:
                                      description: Username on kafka server.
                                      type: string
                                    securityProtocol:
                                      description: Security protocol used to connect
                                        to kafka server.
                                      type: string
                                    sessionTimeoutMs:
                                      description: Client group session and failure
                                        detection timeout. The consumer sends periodic
                                        heartbeats (heartbeat.interval.ms) to indicate
                                        its liveness to the broker. If no hearts are
                                        received by the broker for a group member
                                        within the session timeout, the broker will
                                        remove the consumer from the group and trigger
                                        a rebalance.
                                      type: number
                                  type: object
                                type: array
                              kafkaTopic:
                                description: Kafka topic connection configuration.
                                  The structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    settings:
                                      description: Custom settings for user. The list
                                        is documented below.
                                      items:
                                        properties:
                                          autoOffsetReset:
                                            description: 'Action to take when there
                                              is no initial offset in offset store
                                              or the desired offset is out of range:
                                              ''smallest'',''earliest'' - automatically
                                              reset the offset to the smallest offset,
                                              ''largest'',''latest'' - automatically
                                              reset the offset to the largest offset,
                                              ''error'' - trigger an error (ERR__AUTO_OFFSET_RESET)
                                              which is retrieved by consuming messages
                                              and checking ''message->err''.'
                                            type: string
                                          debug:
                                            description: A comma-separated list of
                                              debug contexts to enable.
                                            type: string
                                          enableSslCertificateVerification:
                                            description: enable verification of SSL
                                              certificates.
                                            type: boolean
                                          maxPollIntervalMs:
                                            description: Maximum allowed time between
                                              calls to consume messages (e.g., rd_kafka_consumer_poll())
                                              for high-level consumers. If this interval
                                              is exceeded the consumer is considered
                                              failed and the group will rebalance
                                              in order to reassign the partitions
                                              to another consumer group member.
                                            type: number
                                          saslMechanism:
                                            description: SASL mechanism used in kafka
                                              authentication.
                                            type: string
                                          saslUsername:
                                            description: Username on kafka server.
                                            type: string
                                          securityProtocol:
                                            description: Security protocol used to
                                              connect to kafka server.
                                            type: string
                                          sessionTimeoutMs:
                                            description: Client group session and
                                              failure detection timeout. The consumer
                                              sends periodic heartbeats (heartbeat.interval.ms)
                                              to indicate its liveness to the broker.
                                              If no hearts are received by the broker
                                              for a group member within the session
                                              timeout, the broker will remove the
                                              consumer from the group and trigger
                                              a rebalance.
                                            type: number
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              keepAliveTimeout:
                                type: number
                              logLevel:
                                description: ClickHouse server parameters. For more
                                  information, see the official documentation.
                                type: string
                              markCacheSize:
                                type: number
                              maxConcurrentQueries:
                                type: number
                              maxConnections:
                                type: number
                              maxPartitionSizeToDrop:
                                type: number
                              maxTableSizeToDrop:
                                type: number
                              mergeTree:
                                description: MergeTree engine configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    allowRemoteFsZeroCopyReplication:
                                      description: When this setting has a value greater
                                        than zero only a single replica starts the
                                        merge immediately if merged part on shared
                                        storage and allow_remote_fs_zero_copy_replication
                                        is enabled.
                                      type: boolean
                                    checkSampleColumnIsCorrect:
                                      description: 'Enables the check at table creation,
                                        that the data type of a column for sampling
                                        or sampling expression is correct. The data
                                        type must be one of unsigned integer types:
                                        UInt8, UInt16, UInt32, UInt64. Default value:
                                        true.'
                                      type: boolean
                                    cleanupDelayPeriod:
                                      description: Minimum period to clean old queue
                                        logs, blocks hashes and parts.
                                      type: number
                                    inactivePartsToDelayInsert:
                                      description: If the number of inactive parts
                                        in a single partition in the table at least
                                        that many the inactive_parts_to_delay_insert
                                        value, an INSERT artificially slows down.
                                        It is useful when a server fails to clean
                                        up parts quickly enough.
                                      type: number
                                    inactivePartsToThrowInsert:
                                      description: If the number of inactive parts
                                        in a single partition more than the inactive_parts_to_throw_insert
                                        value, INSERT is interrupted with the "Too
                                        many inactive parts (N). Parts cleaning are
                                        processing significantly slower than inserts"
                                        exception.
                                      type: number
                                    maxAvgPartSizeForTooManyParts:
                                      description: The too many parts check according
                                        to parts_to_delay_insert and parts_to_throw_insert
                                        will be active only if the average part size
                                        (in the relevant partition) is not larger
                                        than the specified threshold. If it is larger
                                        than the specified threshold, the INSERTs
                                        will be neither delayed or rejected. This
                                        allows to have hundreds of terabytes in a
                                        single table on a single server if the parts
                                        are successfully merged to larger parts. This
                                        does not affect the thresholds on inactive
                                        parts or total parts.
                                      type: number
                                    maxBytesToMergeAtMaxSpaceInPool:
                                      description: The maximum total parts size (in
                                        bytes) to be merged into one part, if there
                                        are enough resources available. max_bytes_to_merge_at_max_space_in_pool
                                        -- roughly corresponds to the maximum possible
                                        part size created by an automatic background
                                        merge.
                                      type: number
                                    maxBytesToMergeAtMinSpaceInPool:
                                      description: 'Max bytes to merge at min space
                                        in pool: Maximum total size of a data part
                                        to merge when the number of free threads in
                                        the background pool is minimum.'
                                      type: number
                                    maxCleanupDelayPeriod:
                                      description: 'Maximum period to clean old queue
                                        logs, blocks hashes and parts. Default value:
                                        300 seconds.'
                                      type: number
                                    maxMergeSelectingSleepMs:
                                      description: 'Maximum sleep time for merge selecting,
                                        a lower setting will trigger selecting tasks
                                        in background_schedule_pool frequently which
                                        result in large amount of requests to zookeeper
                                        in large-scale clusters. Default value: 60000
                                        milliseconds (60 seconds).'
                                      type: number
                                    maxNumberOfMergesWithTtlInPool:
                                      description: When there is more than specified
                                        number of merges with TTL entries in pool,
                                        do not assign new merge with TTL.
                                      type: number
                                    maxPartsInTotal:
                                      description: Maximum number of parts in all
                                        partitions.
                                      type: number
                                    maxReplicatedMergesInQueue:
                                      description: 'Max replicated merges in queue:
                                        Maximum number of merge tasks that can be
                                        in the ReplicatedMergeTree queue at the same
                                        time.'
                                      type: number
                                    mergeMaxBlockSize:
                                      description: 'The number of rows that are read
                                        from the merged parts into memory. Default
                                        value: 8192.'
                                      type: number
                                    mergeSelectingSleepMs:
                                      description: Sleep time for merge selecting
                                        when no part is selected. A lower setting
                                        triggers selecting tasks in background_schedule_pool
                                        frequently, which results in a large number
                                        of requests to ClickHouse Keeper in large-scale
                                        clusters.
                                      type: number
                                    mergeWithRecompressionTtlTimeout:
                                      description: 'Minimum delay in seconds before
                                        repeating a merge with recompression TTL.
                                        Default value: 14400 seconds (4 hours).'
                                      type: number
                                    mergeWithTtlTimeout:
                                      description: 'Minimum delay in seconds before
                                        repeating a merge with delete TTL. Default
                                        value: 14400 seconds (4 hours).'
                                      type: number
                                    minAgeToForceMergeOnPartitionOnly:
                                      description: Whether min_age_to_force_merge_seconds
                                        should be applied only on the entire partition
                                        and not on subset.
                                      type: boolean
                                    minAgeToForceMergeSeconds:
                                      description: Merge parts if every part in the
                                        range is older than the value of min_age_to_force_merge_seconds.
                                      type: number
                                    minBytesForWidePart:
                                      description: Minimum number of bytes in a data
                                        part that can be stored in Wide format. You
                                        can set one, both or none of these settings.
                                      type: number
                                    minRowsForWidePart:
                                      description: Minimum number of rows in a data
                                        part that can be stored in Wide format. You
                                        can set one, both or none of these settings.
                                      type: number
                                    numberOfFreeEntriesInPoolToExecuteMutation:
                                      description: 'When there is less than specified
                                        number of free entries in pool, do not execute
                                        part mutations. This is to leave free threads
                                        for regular merges and avoid "Too many parts".
                                        Default value: 20.'
                                      type: number
                                    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge:
                                      description: 'Number of free entries in pool
                                        to lower max size of merge: Threshold value
                                        of free entries in the pool. If the number
                                        of entries in the pool falls below this value,
                                        ClickHouse reduces the maximum size of a data
                                        part to merge. This helps handle small merges
                                        faster, rather than filling the pool with
                                        lengthy merges.'
                                      type: number
                                    partsToDelayInsert:
                                      description: 'Parts to delay insert: Number
                                        of active data parts in a table, on exceeding
                                        which ClickHouse starts artificially reduce
                                        the rate of inserting data into the table.'
                                      type: number
                                    partsToThrowInsert:
                                      description: 'Parts to throw insert: Threshold
                                        value of active data parts in a table, on
                                        exceeding which ClickHouse throws the ''Too
                                        many parts ...'' exception.'
                                      type: number
                                    replicatedDeduplicationWindow:
                                      description: 'Replicated deduplication window:
                                        Number of recent hash blocks that ZooKeeper
                                        will store (the old ones will be deleted).'
                                      type: number
                                    replicatedDeduplicationWindowSeconds:
                                      description: 'Replicated deduplication window
                                        seconds: Time during which ZooKeeper stores
                                        the hash blocks (the old ones wil be deleted).'
                                      type: number
                                    ttlOnlyDropParts:
                                      description: Enables zero-copy replication when
                                        a replica is located on a remote filesystem.
                                      type: boolean
                                  type: object
                                type: array
                              metricLogEnabled:
                                type: boolean
                              metricLogRetentionSize:
                                type: number
                              metricLogRetentionTime:
                                type: number
                              opentelemetrySpanLogEnabled:
                                type: boolean
                              opentelemetrySpanLogRetentionSize:
                                type: number
                              opentelemetrySpanLogRetentionTime:
                                type: number
                              partLogRetentionSize:
                                type: number
                              partLogRetentionTime:
                                type: number
                              queryCache:
                                description: Query cache configuration. The structure
                                  is documented below.
                                items:
                                  properties:
                                    maxEntries:
                                      description: 'The maximum number of SELECT query
                                        results stored in the cache. Default value:
                                        1024.'
                                      type: number
                                    maxEntrySizeInBytes:
                                      description: 'The maximum size in bytes SELECT
                                        query results may have to be saved in the
                                        cache. Default value: 1048576 (1 MiB).'
                                      type: number
                                    maxEntrySizeInRows:
                                      description: 'The maximum number of rows SELECT
                                        query results may have to be saved in the
                                        cache. Default value: 30000000 (30 mil).'
                                      type: number
                                    maxSizeInBytes:
                                      description: 'The maximum cache size in bytes.
                                        0 means the query cache is disabled. Default
                                        value: 1073741824 (1 GiB).'
                                      type: number
                                  type: object
                                type: array
                              queryLogRetentionSize:
                                type: number
                              queryLogRetentionTime:
                                type: number
                              queryMaskingRules:
                                description: Query masking rules configuration. The
                                  structure is documented below.
                                items:
                                  properties:
                                    name:
                                      description: The name of the user.
                                      type: string
                                    regexp:
                                      description: Regular expression that the metric
                                        name must match.
                                      type: string
                                    replace:
                                      description: 'Substitution string for sensitive
                                        data. Default value: six asterisks.'
                                      type: string
                                  type: object
                                type: array
                              queryThreadLogEnabled:
                                type: boolean
                              queryThreadLogRetentionSize:
                                type: number
                              queryThreadLogRetentionTime:
                                type: number
                              queryViewsLogEnabled:
                                type: boolean
                              queryViewsLogRetentionSize:
                                type: number
                              queryViewsLogRetentionTime:
                                type: number
                              rabbitmq:
                                description: RabbitMQ connection configuration. The
                                  structure is documented below.
                                items:
                                  properties:
                                    username:
                                      description: RabbitMQ username.
                                      type: string
                                    vhost:
                                      description: 'RabbitMQ vhost. Default: ”.'
                                      type: string
                                  type: object
                                type: array
                              sessionLogEnabled:
                                type: boolean
                              sessionLogRetentionSize:
                                type: number
                              sessionLogRetentionTime:
                                type: number
                              textLogEnabled:
                                type: boolean
                              textLogLevel:
                                type: string
                              textLogRetentionSize:
                                type: number
                              textLogRetentionTime:
                                type: number
                              timezone:
                                type: string
                              totalMemoryProfilerStep:
                                type: number
                              traceLogEnabled:
                                type: boolean
                              traceLogRetentionSize:
                                type: number
                              traceLogRetentionTime:
                                type: number
                              uncompressedCacheSize:
                                type: number
                              zookeeperLogEnabled:
                                type: boolean
                              zookeeperLogRetentionSize:
                                type: number
                              zookeeperLogRetentionTime:
                                type: number
                            type: object
                          type: array
                        resources:
                          description: Resources allocated to hosts of the ClickHouse
                            subcluster. The structure is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  cloudStorage:
                    description: Minimum data age in seconds.
                    items:
                      properties:
                        dataCacheEnabled:
                          description: Enables temporary storage in the cluster repository
                            of data requested from the object repository.
                          type: boolean
                        dataCacheMaxSize:
                          description: Defines the maximum amount of memory (in bytes)
                            allocated in the cluster storage for temporary storage
                            of data requested from the object storage.
                          type: number
                        enabled:
                          description: Whether to use Yandex Object Storage for storing
                            ClickHouse data. Can be either true or false.
                          type: boolean
                        moveFactor:
                          description: Sets the minimum free space ratio in the cluster
                            storage. If the free space is lower than this value, the
                            data is transferred to Yandex Object Storage. Acceptable
                            values are 0 to 1, inclusive.
                          type: number
                        preferNotToMerge:
                          description: Disables merging of data parts in Yandex Object
                            Storage.
                          type: boolean
                      type: object
                    type: array
                  clusterId:
                    type: string
                  copySchemaOnNewHosts:
                    description: Whether to copy schema on new ClickHouse hosts.
                    type: boolean
                  createdAt:
                    description: Timestamp of cluster creation.
                    type: string
                  database:
                    description: A database of the ClickHouse cluster. The structure
                      is documented below.
                    items:
                      properties:
                        name:
                          description: The name of the database.
                          type: string
                      type: object
                    type: array
                  deletionProtection:
                    description: Inhibits deletion of the cluster. Can be either true
                      or false.
                    type: boolean
                  description:
                    description: Description of the ClickHouse cluster.
                    type: string
                  embeddedKeeper:
                    description: Whether to use ClickHouse Keeper as a coordination
                      system and place it on the same hosts with ClickHouse. If not,
                      it's used ZooKeeper with placement on separate hosts.
                    type: boolean
                  environment:
                    description: Deployment environment of the ClickHouse cluster.
                      Can be either PRESTABLE or PRODUCTION.
                    type: string
                  folderId:
                    description: The ID of the folder that the resource belongs to.
                      If it is not provided, the default provider folder is used.
                    type: string
                  formatSchema:
                    description: A set of protobuf or capnproto format schemas. The
                      structure is documented below.
                    items:
                      properties:
                        name:
                          description: The name of the format schema.
                          type: string
                        type:
                          description: Type of the format schema.
                          type: string
                        uri:
                          description: Format schema file URL. You can only use format
                            schemas stored in Yandex Object Storage.
                          type: string
                      type: object
                    type: array
                  health:
                    description: Aggregated health of the cluster. Can be ALIVE, DEGRADED,
                      DEAD or HEALTH_UNKNOWN. For more information see health field
                      of JSON representation in the official documentation.
                    type: string
                  host:
                    description: A host of the ClickHouse cluster. The structure is
                      documented below.
                    items:
                      properties:
                        assignPublicIp:
                          description: Sets whether the host should get a public IP
                            address on creation. Can be either true or false.
                          type: boolean
                        fqdn:
                          description: (Computed) The fully qualified domain name
                            of the host.
                          type: string
                        shardName:
                          description: The name of the shard to which the host belongs.
                          type: string
                        subnetId:
                          description: The ID of the subnet, to which the host belongs.
                            The subnet must be a part of the network to which the
                            cluster belongs.
                          type: string
                        type:
                          description: The type of the host to be deployed. Can be
                            either CLICKHOUSE or ZOOKEEPER.
                          type: string
                        zone:
                          description: The availability zone where the ClickHouse
                            host will be created. For more information see the official
                            documentation.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the ClickHouse
                      cluster.
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    items:
                      properties:
                        day:
                          description: 'Day of week for maintenance window if window
                            type is weekly. Possible values: MON, TUE, WED, THU, FRI,
                            SAT, SUN.'
                          type: string
                        hour:
                          description: Hour of day in UTC time zone (1-24) for maintenance
                            window if window type is weekly.
                          type: number
                        type:
                          description: Type of maintenance window. Can be either ANYTIME
                            or WEEKLY. A day and hour of window need to be specified
                            with weekly window.
                          type: string
                      type: object
                    type: array
                  mlModel:
                    description: A group of machine learning models. The structure
                      is documented below
                    items:
                      properties:
                        name:
                          description: The name of the ml model.
                          type: string
                        type:
                          description: Type of the model.
                          type: string
                        uri:
                          description: Model file URL. You can only use models stored
                            in Yandex Object Storage.
                          type: string
                      type: object
                    type: array
                  name:
                    description: Name of the ClickHouse cluster. Provided by the client
                      when the cluster is created.
                    type: string
                  networkId:
                    description: ID of the network, to which the ClickHouse cluster
                      belongs.
                    type: string
                  securityGroupIds:
                    description: A set of ids of security groups assigned to hosts
                      of the cluster.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  serviceAccountId:
                    description: ID of the service account used for access to Yandex
                      Object Storage.
                    type: string
                  shard:
                    items:
                      properties:
                        name:
                          description: The name of shard.
                          type: string
                        resources:
                          description: Resources allocated to host of the shard. The
                            resources specified for the shard takes precedence over
                            the resources specified for the cluster. The structure
                            is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                        weight:
                          description: The weight of shard.
                          type: number
                      type: object
                    type: array
                  shardGroup:
                    description: A group of clickhouse shards. The structure is documented
                      below.
                    items:
                      properties:
                        description:
                          description: Description of the shard group.
                          type: string
                        name:
                          description: The name of the shard group, used as cluster
                            name in Distributed tables.
                          type: string
                        shardNames:
                          description: List of shards names that belong to the shard
                            group.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  sqlDatabaseManagement:
                    description: Grants admin user database management permission.
                    type: boolean
                  sqlUserManagement:
                    description: Enables admin user with user management permission.
                    type: boolean
                  status:
                    description: Status of the cluster. Can be CREATING, STARTING,
                      RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
                      For more information see status field of JSON representation
                      in the official documentation.
                    type: string
                  user:
                    description: A user of the ClickHouse cluster. The structure is
                      documented below.
                    items:
                      properties:
                        name:
                          description: The name of the user.
                          type: string
                        permission:
                          description: Set of permissions granted to the user. The
                            structure is documented below.
                          items:
                            properties:
                              databaseName:
                                description: The name of the database that the permission
                                  grants access to.
                                type: string
                            type: object
                          type: array
                        quota:
                          description: Set of user quotas. The structure is documented
                            below.
                          items:
                            properties:
                              errors:
                                description: The number of queries that threw exception.
                                type: number
                              executionTime:
                                description: The total query execution time, in milliseconds
                                  (wall time).
                                type: number
                              intervalDuration:
                                description: Duration of interval for quota in milliseconds.
                                type: number
                              queries:
                                description: The total number of queries.
                                type: number
                              readRows:
                                description: The total number of source rows read
                                  from tables for running the query, on all remote
                                  servers.
                                type: number
                              resultRows:
                                description: The total number of rows given as the
                                  result.
                                type: number
                            type: object
                          type: array
                        settings:
                          description: Custom settings for user. The list is documented
                            below.
                          items:
                            properties:
                              addHttpCorsHeader:
                                description: Include CORS headers in HTTP responces.
                                type: boolean
                              allowDdl:
                                description: Allows or denies DDL queries.
                                type: boolean
                              allowIntrospectionFunctions:
                                description: Enables introspections functions for
                                  query profiling.
                                type: boolean
                              allowSuspiciousLowCardinalityTypes:
                                description: Allows specifying LowCardinality modifier
                                  for types of small fixed size (8 or less) in CREATE
                                  TABLE statements. Enabling this may increase merge
                                  times and memory consumption.
                                type: boolean
                              anyJoinDistinctRightTableKeys:
                                description: enables legacy ClickHouse server behaviour
                                  in ANY INNER|LEFT JOIN operations.
                                type: boolean
                              asyncInsert:
                                description: Enables asynchronous inserts. Disabled
                                  by default.
                                type: boolean
                              asyncInsertBusyTimeout:
                                description: 'The maximum timeout in milliseconds
                                  since the first INSERT query before inserting collected
                                  data. If the parameter is set to 0, the timeout
                                  is disabled. Default value: 200.'
                                type: number
                              asyncInsertMaxDataSize:
                                description: 'The maximum size of the unparsed data
                                  in bytes collected per query before being inserted.
                                  If the parameter is set to 0, asynchronous insertions
                                  are disabled. Default value: 100000.'
                                type: number
                              asyncInsertStaleTimeout:
                                description: The maximum timeout in milliseconds since
                                  the last INSERT query before dumping collected data.
                                  If enabled, the settings prolongs the async_insert_busy_timeout
                                  with every INSERT query as long as async_insert_max_data_size
                                  is not exceeded.
                                type: number
                              asyncInsertThreads:
                                description: 'The maximum number of threads for background
                                  data parsing and insertion. If the parameter is
                                  set to 0, asynchronous insertions are disabled.
                                  Default value: 16.'
                                type: number
                              cancelHttpReadonlyQueriesOnClientClose:
                                description: 'Cancels HTTP read-only queries (e.g.
                                  SELECT) when a client closes the connection without
                                  waiting for the response. Default value: false.'
                                type: boolean
                              compile:
                                description: Enable compilation of queries.
                                type: boolean
                              compileExpressions:
                                description: Turn on expression compilation.
                                type: boolean
                              connectTimeout:
                                description: Connect timeout in milliseconds on the
                                  socket used for communicating with the client.
                                type: number
                              connectTimeoutWithFailover:
                                description: 'The timeout in milliseconds for connecting
                                  to a remote server for a Distributed table engine,
                                  if the ‘shard’ and ‘replica’ sections are used in
                                  the cluster definition. If unsuccessful, several
                                  attempts are made to connect to various replicas.
                                  Default value: 50.'
                                type: number
                              countDistinctImplementation:
                                description: Specifies which of the uniq* functions
                                  should be used to perform the COUNT(DISTINCT …)
                                  construction.
                                type: string
                              dateTimeInputFormat:
                                description: 'Allows choosing a parser of the text
                                  representation of date and time, one of: best_effort,
                                  basic, best_effort_us. Default value: basic. Cloud
                                  default value: best_effort.'
                                type: string
                              dateTimeOutputFormat:
                                description: 'Allows choosing different output formats
                                  of the text representation of date and time, one
                                  of: simple, iso, unix_timestamp. Default value:
                                  simple.'
                                type: string
                              deduplicateBlocksInDependentMaterializedViews:
                                description: Enables or disables the deduplication
                                  check for materialized views that receive data from
                                  Replicated* tables.
                                type: boolean
                              distinctOverflowMode:
                                description: 'Sets behaviour on overflow when using
                                  DISTINCT. Possible values:'
                                type: string
                              distributedAggregationMemoryEfficient:
                                description: Determine the behavior of distributed
                                  subqueries.
                                type: boolean
                              distributedDdlTaskTimeout:
                                description: Timeout for DDL queries, in milliseconds.
                                type: number
                              distributedProductMode:
                                description: Changes the behaviour of distributed
                                  subqueries.
                                type: string
                              emptyResultForAggregationByEmptySet:
                                description: Allows to retunr empty result.
                                type: boolean
                              enableHttpCompression:
                                description: Enables or disables data compression
                                  in the response to an HTTP request.
                                type: boolean
                              fallbackToStaleReplicasForDistributedQueries:
                                description: Forces a query to an out-of-date replica
                                  if updated data is not available.
                                type: boolean
                              flattenNested:
                                description: Sets the data format of a nested columns.
                                type: boolean
                              forceIndexByDate:
                                description: Disables query execution if the index
                                  can’t be used by date.
                                type: boolean
                              forcePrimaryKey:
                                description: Disables query execution if indexing
                                  by the primary key is not possible.
                                type: boolean
                              formatRegexp:
                                description: Regular expression (for Regexp format).
                                type: string
                              formatRegexpSkipUnmatched:
                                description: Skip lines unmatched by regular expression.
                                type: boolean
                              groupByOverflowMode:
                                description: 'Sets behaviour on overflow while GROUP
                                  BY operation. Possible values:'
                                type: string
                              groupByTwoLevelThreshold:
                                description: Sets the threshold of the number of keys,
                                  after that the two-level aggregation should be used.
                                type: number
                              groupByTwoLevelThresholdBytes:
                                description: Sets the threshold of the number of bytes,
                                  after that the two-level aggregation should be used.
                                type: number
                              hedgedConnectionTimeoutMs:
                                description: 'Connection timeout for establishing
                                  connection with replica for Hedged requests. Default
                                  value: 50 milliseconds.'
                                type: number
                              httpConnectionTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              httpHeadersProgressInterval:
                                description: Sets minimal interval between notifications
                                  about request process in HTTP header X-ClickHouse-Progress.
                                type: number
                              httpReceiveTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              httpSendTimeout:
                                description: Timeout for HTTP connection in milliseconds.
                                type: number
                              idleConnectionTimeout:
                                description: 'Timeout to close idle TCP connections
                                  after specified number of seconds. Default value:
                                  3600 seconds.'
                                type: number
                              inputFormatDefaultsForOmittedFields:
                                description: When performing INSERT queries, replace
                                  omitted input column values with default values
                                  of the respective columns.
                                type: boolean
                              inputFormatImportNestedJson:
                                description: Enables or disables the insertion of
                                  JSON data with nested objects.
                                type: boolean
                              inputFormatNullAsDefault:
                                description: Enables or disables the initialization
                                  of NULL fields with default values, if data type
                                  of these fields is not nullable.
                                type: boolean
                              inputFormatParallelParsing:
                                description: Enables or disables order-preserving
                                  parallel parsing of data formats. Supported only
                                  for TSV, TKSV, CSV and JSONEachRow formats.
                                type: boolean
                              inputFormatValuesInterpretExpressions:
                                description: Enables or disables the full SQL parser
                                  if the fast stream parser can’t parse the data.
                                type: boolean
                              inputFormatWithNamesUseHeader:
                                description: Enables or disables checking the column
                                  order when inserting data.
                                type: boolean
                              insertKeeperMaxRetries:
                                description: The setting sets the maximum number of
                                  retries for ClickHouse Keeper (or ZooKeeper) requests
                                  during insert into replicated MergeTree. Only Keeper
                                  requests which failed due to network error, Keeper
                                  session timeout, or request timeout are considered
                                  for retries.
                                type: number
                              insertNullAsDefault:
                                description: 'Enables the insertion of default values
                                  instead of NULL into columns with not nullable data
                                  type. Default value: true.'
                                type: boolean
                              insertQuorum:
                                description: Enables the quorum writes.
                                type: number
                              insertQuorumParallel:
                                description: Enables or disables parallelism for quorum
                                  INSERT queries.
                                type: boolean
                              insertQuorumTimeout:
                                description: Write to a quorum timeout in milliseconds.
                                type: number
                              joinAlgorithm:
                                description: 'Specifies which JOIN algorithm is used.
                                  Possible values:'
                                items:
                                  type: string
                                type: array
                              joinOverflowMode:
                                description: 'Sets behaviour on overflow in JOIN.
                                  Possible values:'
                                type: string
                              joinUseNulls:
                                description: Sets the type of JOIN behaviour. When
                                  merging tables, empty cells may appear. ClickHouse
                                  fills them differently based on this setting.
                                type: boolean
                              joinedSubqueryRequiresAlias:
                                description: Require aliases for subselects and table
                                  functions in FROM that more than one table is present.
                                type: boolean
                              loadBalancing:
                                description: 'Specifies the algorithm of replicas
                                  selection that is used for distributed query processing,
                                  one of: random, nearest_hostname, in_order, first_or_random,
                                  round_robin. Default value: random.'
                                type: string
                              localFilesystemReadMethod:
                                description: 'Method of reading data from local filesystem.
                                  Possible values:'
                                type: string
                              logQueryThreads:
                                description: 'Setting up query threads logging. Query
                                  threads log into the system.query_thread_log table.
                                  This setting has effect only when log_queries is
                                  true. Queries’ threads run by ClickHouse with this
                                  setup are logged according to the rules in the query_thread_log
                                  server configuration parameter. Default value: true.'
                                type: boolean
                              lowCardinalityAllowInNativeFormat:
                                description: Allows or restricts using the LowCardinality
                                  data type with the Native format.
                                type: boolean
                              maxAstDepth:
                                description: Maximum abstract syntax tree depth.
                                type: number
                              maxAstElements:
                                description: Maximum abstract syntax tree elements.
                                type: number
                              maxBlockSize:
                                description: A recommendation for what size of the
                                  block (in a count of rows) to load from tables.
                                type: number
                              maxBytesBeforeExternalGroupBy:
                                description: Limit in bytes for using memoru for GROUP
                                  BY before using swap on disk.
                                type: number
                              maxBytesBeforeExternalSort:
                                description: This setting is equivalent of the max_bytes_before_external_group_by
                                  setting, except for it is for sort operation (ORDER
                                  BY), not aggregation.
                                type: number
                              maxBytesInDistinct:
                                description: Limits the maximum size of a hash table
                                  in bytes (uncompressed data) when using DISTINCT.
                                type: number
                              maxBytesInJoin:
                                description: Limit on maximum size of the hash table
                                  for JOIN, in bytes.
                                type: number
                              maxBytesInSet:
                                description: Limit on the number of bytes in the set
                                  resulting from the execution of the IN section.
                                type: number
                              maxBytesToRead:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be read from a table when running
                                  a query.
                                type: number
                              maxBytesToSort:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be read from a table for sorting.
                                type: number
                              maxBytesToTransfer:
                                description: Limits the maximum number of bytes (uncompressed
                                  data) that can be passed to a remote server or saved
                                  in a temporary table when using GLOBAL IN.
                                type: number
                              maxColumnsToRead:
                                description: Limits the maximum number of columns
                                  that can be read from a table in a single query.
                                type: number
                              maxConcurrentQueriesForUser:
                                description: 'The maximum number of concurrent requests
                                  per user. Default value: 0 (no limit).'
                                type: number
                              maxExecutionTime:
                                description: Limits the maximum query execution time
                                  in milliseconds.
                                type: number
                              maxExpandedAstElements:
                                description: Maximum abstract syntax tree depth after
                                  after expansion of aliases.
                                type: number
                              maxFinalThreads:
                                description: Sets the maximum number of parallel threads
                                  for the SELECT query data read phase with the FINAL
                                  modifier.
                                type: number
                              maxHttpGetRedirects:
                                description: Limits the maximum number of HTTP GET
                                  redirect hops for URL-engine tables.
                                type: number
                              maxInsertBlockSize:
                                description: The size of blocks (in a count of rows)
                                  to form for insertion into a table.
                                type: number
                              maxInsertThreads:
                                description: 'The maximum number of threads to execute
                                  the INSERT SELECT query. Default value: 0.'
                                type: number
                              maxMemoryUsage:
                                description: Limits the maximum memory usage (in bytes)
                                  for processing queries on a single server.
                                type: number
                              maxMemoryUsageForUser:
                                description: Limits the maximum memory usage (in bytes)
                                  for processing of user's queries on a single server.
                                type: number
                              maxNetworkBandwidth:
                                description: Limits the speed of the data exchange
                                  over the network in bytes per second.
                                type: number
                              maxNetworkBandwidthForUser:
                                description: Limits the speed of the data exchange
                                  over the network in bytes per second.
                                type: number
                              maxParserDepth:
                                description: Limits maximum recursion depth in the
                                  recursive descent parser. Allows controlling the
                                  stack size. Zero means unlimited.
                                type: number
                              maxQuerySize:
                                description: The maximum part of a query that can
                                  be taken to RAM for parsing with the SQL parser.
                                type: number
                              maxReadBufferSize:
                                description: The maximum size of the buffer to read
                                  from the filesystem.
                                type: number
                              maxReplicaDelayForDistributedQueries:
                                description: Disables lagging replicas for distributed
                                  queries.
                                type: number
                              maxResultBytes:
                                description: Limits the number of bytes in the result.
                                type: number
                              maxResultRows:
                                description: Limits the number of rows in the result.
                                type: number
                              maxRowsInDistinct:
                                description: Limits the maximum number of different
                                  rows when using DISTINCT.
                                type: number
                              maxRowsInJoin:
                                description: Limit on maximum size of the hash table
                                  for JOIN, in rows.
                                type: number
                              maxRowsInSet:
                                description: Limit on the number of rows in the set
                                  resulting from the execution of the IN section.
                                type: number
                              maxRowsToGroupBy:
                                description: Limits the maximum number of unique keys
                                  received from aggregation function.
                                type: number
                              maxRowsToRead:
                                description: Limits the maximum number of rows that
                                  can be read from a table when running a query.
                                type: number
                              maxRowsToSort:
                                description: Limits the maximum number of rows that
                                  can be read from a table for sorting.
                                type: number
                              maxRowsToTransfer:
                                description: Limits the maximum number of rows that
                                  can be passed to a remote server or saved in a temporary
                                  table when using GLOBAL IN.
                                type: number
                              maxTemporaryColumns:
                                description: Limits the maximum number of temporary
                                  columns that must be kept in RAM at the same time
                                  when running a query, including constant columns.
                                type: number
                              maxTemporaryDataOnDiskSizeForQuery:
                                description: The maximum amount of data consumed by
                                  temporary files on disk in bytes for all concurrently
                                  running queries. Zero means unlimited.
                                type: number
                              maxTemporaryDataOnDiskSizeForUser:
                                description: The maximum amount of data consumed by
                                  temporary files on disk in bytes for all concurrently
                                  running user queries. Zero means unlimited.
                                type: number
                              maxTemporaryNonConstColumns:
                                description: Limits the maximum number of temporary
                                  columns that must be kept in RAM at the same time
                                  when running a query, excluding constant columns.
                                type: number
                              maxThreads:
                                description: The maximum number of query processing
                                  threads, excluding threads for retrieving data from
                                  remote servers.
                                type: number
                              memoryOvercommitRatioDenominator:
                                description: It represents soft memory limit in case
                                  when hard limit is reached on user level. This value
                                  is used to compute overcommit ratio for the query.
                                  Zero means skip the query.
                                type: number
                              memoryOvercommitRatioDenominatorForUser:
                                description: It represents soft memory limit in case
                                  when hard limit is reached on global level. This
                                  value is used to compute overcommit ratio for the
                                  query. Zero means skip the query.
                                type: number
                              memoryProfilerSampleProbability:
                                description: 'Collect random allocations and deallocations
                                  and write them into system.trace_log with ''MemorySample''
                                  trace_type. The probability is for every alloc/free
                                  regardless to the size of the allocation. Possible
                                  values: from 0 to 1. Default: 0.'
                                type: number
                              memoryProfilerStep:
                                description: 'Memory profiler step (in bytes). If
                                  the next query step requires more memory than this
                                  parameter specifies, the memory profiler collects
                                  the allocating stack trace. Values lower than a
                                  few megabytes slow down query processing. Default
                                  value: 4194304 (4 MB). Zero means disabled memory
                                  profiler.'
                                type: number
                              memoryUsageOvercommitMaxWaitMicroseconds:
                                description: Maximum time thread will wait for memory
                                  to be freed in the case of memory overcommit on
                                  a user level. If the timeout is reached and memory
                                  is not freed, an exception is thrown.
                                type: number
                              mergeTreeMaxBytesToUseCache:
                                description: If ClickHouse should read more than merge_tree_max_bytes_to_use_cache
                                  bytes in one query, it doesn’t use the cache of
                                  uncompressed blocks.
                                type: number
                              mergeTreeMaxRowsToUseCache:
                                description: If ClickHouse should read more than merge_tree_max_rows_to_use_cache
                                  rows in one query, it doesn’t use the cache of uncompressed
                                  blocks.
                                type: number
                              mergeTreeMinBytesForConcurrentRead:
                                description: If the number of bytes to read from one
                                  file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read,
                                  then ClickHouse tries to concurrently read from
                                  this file in several threads.
                                type: number
                              mergeTreeMinRowsForConcurrentRead:
                                description: If the number of rows to be read from
                                  a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read
                                  then ClickHouse tries to perform a concurrent reading
                                  from this file on several threads.
                                type: number
                              minBytesToUseDirectIo:
                                description: The minimum data volume required for
                                  using direct I/O access to the storage disk.
                                type: number
                              minCountToCompile:
                                description: How many times to potentially use a compiled
                                  chunk of code before running compilation.
                                type: number
                              minCountToCompileExpression:
                                description: A query waits for expression compilation
                                  process to complete prior to continuing execution.
                                type: number
                              minExecutionSpeed:
                                description: Minimal execution speed in rows per second.
                                type: number
                              minExecutionSpeedBytes:
                                description: Minimal execution speed in bytes per
                                  second.
                                type: number
                              minInsertBlockSizeBytes:
                                description: Sets the minimum number of bytes in the
                                  block which can be inserted into a table by an INSERT
                                  query.
                                type: number
                              minInsertBlockSizeRows:
                                description: Sets the minimum number of rows in the
                                  block which can be inserted into a table by an INSERT
                                  query.
                                type: number
                              outputFormatJsonQuote64BitIntegers:
                                description: If the value is true, integers appear
                                  in quotes when using JSON* Int64 and UInt64 formats
                                  (for compatibility with most JavaScript implementations);
                                  otherwise, integers are output without the quotes.
                                type: boolean
                              outputFormatJsonQuoteDenormals:
                                description: Enables +nan, -nan, +inf, -inf outputs
                                  in JSON output format.
                                type: boolean
                              preferLocalhostReplica:
                                description: 'Enables/disables preferable using the
                                  localhost replica when processing distributed queries.
                                  Default value: true.'
                                type: boolean
                              priority:
                                description: Query priority.
                                type: number
                              quotaMode:
                                description: Quota accounting mode.
                                type: string
                              readOverflowMode:
                                description: 'Sets behaviour on overflow while read.
                                  Possible values:'
                                type: string
                              readonly:
                                description: Restricts permissions for reading data,
                                  write data and change settings queries.
                                type: number
                              receiveTimeout:
                                description: Receive timeout in milliseconds on the
                                  socket used for communicating with the client.
                                type: number
                              remoteFilesystemReadMethod:
                                description: 'Method of reading data from remote filesystem,
                                  one of: read, threadpool.'
                                type: string
                              replicationAlterPartitionsSync:
                                description: For ALTER ... ATTACH|DETACH|DROP queries,
                                  you can use the replication_alter_partitions_sync
                                  setting to set up waiting.
                                type: number
                              resultOverflowMode:
                                description: 'Sets behaviour on overflow in result.
                                  Possible values:'
                                type: string
                              selectSequentialConsistency:
                                description: Enables or disables sequential consistency
                                  for SELECT queries.
                                type: boolean
                              sendProgressInHttpHeaders:
                                description: Enables or disables X-ClickHouse-Progress
                                  HTTP response headers in clickhouse-server responses.
                                type: boolean
                              sendTimeout:
                                description: Send timeout in milliseconds on the socket
                                  used for communicating with the client.
                                type: number
                              setOverflowMode:
                                description: 'Sets behaviour on overflow in the set
                                  resulting. Possible values:'
                                type: string
                              skipUnavailableShards:
                                description: Enables or disables silently skipping
                                  of unavailable shards.
                                type: boolean
                              sortOverflowMode:
                                description: 'Sets behaviour on overflow while sort.
                                  Possible values:'
                                type: string
                              timeoutBeforeCheckingExecutionSpeed:
                                description: Timeout (in seconds) between checks of
                                  execution speed. It is checked that execution speed
                                  is not less that specified in min_execution_speed
                                  parameter. Must be at least 1000.
                                type: number
                              timeoutOverflowMode:
                                description: 'Sets behaviour on overflow. Possible
                                  values:'
                                type: string
                              transferOverflowMode:
                                description: 'Sets behaviour on overflow. Possible
                                  values:'
                                type: string
                              transformNullIn:
                                description: Enables equality of NULL values for IN
                                  operator.
                                type: boolean
                              useHedgedRequests:
                                description: 'Enables hedged requests logic for remote
                                  queries. It allows to establish many connections
                                  with different replicas for query. New connection
                                  is enabled in case existent connection(s) with replica(s)
                                  were not established within hedged_connection_timeout
                                  or no data was received within receive_data_timeout.
                                  Query uses the first connection which send non empty
                                  progress packet (or data packet, if allow_changing_replica_until_first_data_packet);
                                  other connections are cancelled. Queries with max_parallel_replicas
                                  > 1 are supported. Default value: true.'
                                type: boolean
                              useUncompressedCache:
                                description: Whether to use a cache of uncompressed
                                  blocks.
                                type: boolean
                              waitForAsyncInsert:
                                description: Enables waiting for processing of asynchronous
                                  insertion. If enabled, server returns OK only after
                                  the data is inserted.
                                type: boolean
                              waitForAsyncInsertTimeout:
                                description: The timeout (in seconds) for waiting
                                  for processing of asynchronous insertion. Value
                                  must be at least 1000 (1 second).
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  version:
                    description: Version of the ClickHouse server software.
                    type: string
                  zookeeper:
                    description: Configuration of the ZooKeeper subcluster. The structure
                      is documented below.
                    items:
                      properties:
                        resources:
                          description: Resources allocated to hosts of the ZooKeeper
                            subcluster. The structure is documented below.
                          items:
                            properties:
                              diskSize:
                                description: Volume of the storage available to a
                                  ZooKeeper host, in gigabytes.
                                type: number
                              diskTypeId:
                                description: Type of the storage of ZooKeeper hosts.
                                  For more information see the official documentation.
                                type: string
                              resourcePresetId:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
