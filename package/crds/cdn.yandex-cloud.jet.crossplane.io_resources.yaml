---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: resources.cdn.yandex-cloud.jet.crossplane.io
spec:
  group: cdn.yandex-cloud.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - yandex-cloud
    kind: Resource
    listKind: ResourceList
    plural: resources
    singular: resource
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Resource is the Schema for the Resources API. Allows management
          of a Yandex.Cloud CDN Resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourceSpec defines the desired state of Resource
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  active:
                    description: Flag to create Resource either in active or disabled
                      state. True - the content from CDN is available to clients.
                    type: boolean
                  cname:
                    description: CDN endpoint CNAME, must be unique among resources.
                    type: string
                  folderId:
                    type: string
                  folderIdRef:
                    description: Reference to a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderIdSelector:
                    description: Selector for a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  options:
                    description: CDN Resource settings and options to tune CDN edge
                      behavior.
                    items:
                      properties:
                        allowedHttpMethods:
                          description: 'HTTP methods for your CDN content. By default
                            the following methods are allowed: GET, HEAD, POST, PUT,
                            PATCH, DELETE, OPTIONS. In case some methods are not allowed
                            to the user, they will get the 405 (Method Not Allowed)
                            response. If the method is not supported, the user gets
                            the 501 (Not Implemented) response.'
                          items:
                            type: string
                          type: array
                        browserCacheSettings:
                          description: 'set up a cache period for the end-users browser.
                            Content will be cached due to origin settings. If there
                            are no cache settings on your origin, the content will
                            not be cached. The list of HTTP response codes that can
                            be cached in browsers: 200, 201, 204, 206, 301, 302, 303,
                            304, 307, 308. Other response codes will not be cached.
                            The default value is 4 days.'
                          type: number
                        cacheHttpHeaders:
                          description: list HTTP headers that must be included in
                            responses to clients.
                          items:
                            type: string
                          type: array
                        cors:
                          description: parameter that lets browsers get access to
                            selected resources from a domain different to a domain
                            from which the request is received.
                          items:
                            type: string
                          type: array
                        customHostHeader:
                          description: custom value for the Host header. Your server
                            must be able to process requests with the chosen header.
                          type: string
                        customServerName:
                          description: wildcard additional CNAME. If a resource has
                            a wildcard additional CNAME, you can use your own certificate
                            for content delivery via HTTPS. Read-only.
                          type: string
                        disableCache:
                          description: setup a cache status.
                          type: boolean
                        disableProxyForceRanges:
                          description: disabling proxy force ranges.
                          type: boolean
                        edgeCacheSettings:
                          description: content will be cached according to origin
                            cache settings. The value applies for a response with
                            codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308
                            if an origin server does not have caching HTTP headers.
                            Responses with other codes will not be cached.
                          type: number
                        enableIpUrlSigning:
                          description: enable access limiting by IP addresses, option
                            available only with setting secure_key.
                          type: boolean
                        fetchedCompressed:
                          description: option helps you to reduce the bandwidth between
                            origin and CDN servers. Also, content delivery speed becomes
                            higher because of reducing the time for compressing files
                            in a CDN.
                          type: boolean
                        forwardHostHeader:
                          description: choose the Forward Host header option if is
                            important to send in the request to the Origin the same
                            Host header as was sent in the request to CDN server.
                          type: boolean
                        gzipOn:
                          description: GZip compression at CDN servers reduces file
                            size by 70% and can be as high as 90%.
                          type: boolean
                        ignoreCookie:
                          description: set for ignoring cookie.
                          type: boolean
                        ignoreQueryParams:
                          description: files with different query parameters are cached
                            as objects with the same key regardless of the parameter
                            value. selected by default.
                          type: boolean
                        ipAddressAcl:
                          items:
                            properties:
                              exceptedValues:
                                description: the list of specified IP addresses to
                                  be allowed or denied depending on acl policy type.
                                items:
                                  type: string
                                type: array
                              policyType:
                                description: the policy type for ip_address_acl option,
                                  one of "allow" or "deny" values.
                                type: string
                            type: object
                          type: array
                        proxyCacheMethodsSet:
                          description: allows caching for GET, HEAD and POST requests.
                          type: boolean
                        queryParamsBlacklist:
                          description: files with the specified query parameters are
                            cached as objects with the same key, files with other
                            parameters are cached as objects with different keys.
                          items:
                            type: string
                          type: array
                        queryParamsWhitelist:
                          description: files with the specified query parameters are
                            cached as objects with different keys, files with other
                            parameters are cached as objects with the same key.
                          items:
                            type: string
                          type: array
                        redirectHttpToHttps:
                          description: set up a redirect from HTTP to HTTPS.
                          type: boolean
                        redirectHttpsToHttp:
                          description: set up a redirect from HTTPS to HTTP.
                          type: boolean
                        secureKey:
                          description: set secure key for url encoding to protect
                            contect and limit access by IP addresses and time limits.
                          type: string
                        slice:
                          description: files larger than 10 MB will be requested and
                            cached in parts (no larger than 10 MB each part). It reduces
                            time to first byte. The origin must support HTTP Range
                            requests.
                          type: boolean
                        staticRequestHeaders:
                          additionalProperties:
                            type: string
                          description: set up custom headers that CDN servers will
                            send in requests to origins.
                          type: object
                          x-kubernetes-map-type: granular
                        staticResponseHeaders:
                          additionalProperties:
                            type: string
                          description: set up custom headers that CDN servers will
                            send in response to clients.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  originGroupId:
                    type: number
                  originGroupIdRef:
                    description: Reference to a OriginGroup to populate originGroupId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  originGroupIdSelector:
                    description: Selector for a OriginGroup to populate originGroupId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  originGroupName:
                    type: string
                  originProtocol:
                    type: string
                  secondaryHostnames:
                    description: list of secondary hostname strings.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  sslCertificate:
                    description: SSL certificate of CDN resource.
                    items:
                      properties:
                        certificateManagerId:
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                  updatedAt:
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  active:
                    description: Flag to create Resource either in active or disabled
                      state. True - the content from CDN is available to clients.
                    type: boolean
                  cname:
                    description: CDN endpoint CNAME, must be unique among resources.
                    type: string
                  folderId:
                    type: string
                  folderIdRef:
                    description: Reference to a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderIdSelector:
                    description: Selector for a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  options:
                    description: CDN Resource settings and options to tune CDN edge
                      behavior.
                    items:
                      properties:
                        allowedHttpMethods:
                          description: 'HTTP methods for your CDN content. By default
                            the following methods are allowed: GET, HEAD, POST, PUT,
                            PATCH, DELETE, OPTIONS. In case some methods are not allowed
                            to the user, they will get the 405 (Method Not Allowed)
                            response. If the method is not supported, the user gets
                            the 501 (Not Implemented) response.'
                          items:
                            type: string
                          type: array
                        browserCacheSettings:
                          description: 'set up a cache period for the end-users browser.
                            Content will be cached due to origin settings. If there
                            are no cache settings on your origin, the content will
                            not be cached. The list of HTTP response codes that can
                            be cached in browsers: 200, 201, 204, 206, 301, 302, 303,
                            304, 307, 308. Other response codes will not be cached.
                            The default value is 4 days.'
                          type: number
                        cacheHttpHeaders:
                          description: list HTTP headers that must be included in
                            responses to clients.
                          items:
                            type: string
                          type: array
                        cors:
                          description: parameter that lets browsers get access to
                            selected resources from a domain different to a domain
                            from which the request is received.
                          items:
                            type: string
                          type: array
                        customHostHeader:
                          description: custom value for the Host header. Your server
                            must be able to process requests with the chosen header.
                          type: string
                        customServerName:
                          description: wildcard additional CNAME. If a resource has
                            a wildcard additional CNAME, you can use your own certificate
                            for content delivery via HTTPS. Read-only.
                          type: string
                        disableCache:
                          description: setup a cache status.
                          type: boolean
                        disableProxyForceRanges:
                          description: disabling proxy force ranges.
                          type: boolean
                        edgeCacheSettings:
                          description: content will be cached according to origin
                            cache settings. The value applies for a response with
                            codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308
                            if an origin server does not have caching HTTP headers.
                            Responses with other codes will not be cached.
                          type: number
                        enableIpUrlSigning:
                          description: enable access limiting by IP addresses, option
                            available only with setting secure_key.
                          type: boolean
                        fetchedCompressed:
                          description: option helps you to reduce the bandwidth between
                            origin and CDN servers. Also, content delivery speed becomes
                            higher because of reducing the time for compressing files
                            in a CDN.
                          type: boolean
                        forwardHostHeader:
                          description: choose the Forward Host header option if is
                            important to send in the request to the Origin the same
                            Host header as was sent in the request to CDN server.
                          type: boolean
                        gzipOn:
                          description: GZip compression at CDN servers reduces file
                            size by 70% and can be as high as 90%.
                          type: boolean
                        ignoreCookie:
                          description: set for ignoring cookie.
                          type: boolean
                        ignoreQueryParams:
                          description: files with different query parameters are cached
                            as objects with the same key regardless of the parameter
                            value. selected by default.
                          type: boolean
                        ipAddressAcl:
                          items:
                            properties:
                              exceptedValues:
                                description: the list of specified IP addresses to
                                  be allowed or denied depending on acl policy type.
                                items:
                                  type: string
                                type: array
                              policyType:
                                description: the policy type for ip_address_acl option,
                                  one of "allow" or "deny" values.
                                type: string
                            type: object
                          type: array
                        proxyCacheMethodsSet:
                          description: allows caching for GET, HEAD and POST requests.
                          type: boolean
                        queryParamsBlacklist:
                          description: files with the specified query parameters are
                            cached as objects with the same key, files with other
                            parameters are cached as objects with different keys.
                          items:
                            type: string
                          type: array
                        queryParamsWhitelist:
                          description: files with the specified query parameters are
                            cached as objects with different keys, files with other
                            parameters are cached as objects with the same key.
                          items:
                            type: string
                          type: array
                        redirectHttpToHttps:
                          description: set up a redirect from HTTP to HTTPS.
                          type: boolean
                        redirectHttpsToHttp:
                          description: set up a redirect from HTTPS to HTTP.
                          type: boolean
                        secureKey:
                          description: set secure key for url encoding to protect
                            contect and limit access by IP addresses and time limits.
                          type: string
                        slice:
                          description: files larger than 10 MB will be requested and
                            cached in parts (no larger than 10 MB each part). It reduces
                            time to first byte. The origin must support HTTP Range
                            requests.
                          type: boolean
                        staticRequestHeaders:
                          additionalProperties:
                            type: string
                          description: set up custom headers that CDN servers will
                            send in requests to origins.
                          type: object
                          x-kubernetes-map-type: granular
                        staticResponseHeaders:
                          additionalProperties:
                            type: string
                          description: set up custom headers that CDN servers will
                            send in response to clients.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  originGroupId:
                    type: number
                  originGroupIdRef:
                    description: Reference to a OriginGroup to populate originGroupId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  originGroupIdSelector:
                    description: Selector for a OriginGroup to populate originGroupId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  originGroupName:
                    type: string
                  originProtocol:
                    type: string
                  secondaryHostnames:
                    description: list of secondary hostname strings.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  sslCertificate:
                    description: SSL certificate of CDN resource.
                    items:
                      properties:
                        certificateManagerId:
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                  updatedAt:
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ResourceStatus defines the observed state of Resource.
            properties:
              atProvider:
                properties:
                  active:
                    description: Flag to create Resource either in active or disabled
                      state. True - the content from CDN is available to clients.
                    type: boolean
                  cname:
                    description: CDN endpoint CNAME, must be unique among resources.
                    type: string
                  createdAt:
                    description: Creation timestamp of the IoT Core Device
                    type: string
                  folderId:
                    type: string
                  id:
                    type: string
                  options:
                    description: CDN Resource settings and options to tune CDN edge
                      behavior.
                    items:
                      properties:
                        allowedHttpMethods:
                          description: 'HTTP methods for your CDN content. By default
                            the following methods are allowed: GET, HEAD, POST, PUT,
                            PATCH, DELETE, OPTIONS. In case some methods are not allowed
                            to the user, they will get the 405 (Method Not Allowed)
                            response. If the method is not supported, the user gets
                            the 501 (Not Implemented) response.'
                          items:
                            type: string
                          type: array
                        browserCacheSettings:
                          description: 'set up a cache period for the end-users browser.
                            Content will be cached due to origin settings. If there
                            are no cache settings on your origin, the content will
                            not be cached. The list of HTTP response codes that can
                            be cached in browsers: 200, 201, 204, 206, 301, 302, 303,
                            304, 307, 308. Other response codes will not be cached.
                            The default value is 4 days.'
                          type: number
                        cacheHttpHeaders:
                          description: list HTTP headers that must be included in
                            responses to clients.
                          items:
                            type: string
                          type: array
                        cors:
                          description: parameter that lets browsers get access to
                            selected resources from a domain different to a domain
                            from which the request is received.
                          items:
                            type: string
                          type: array
                        customHostHeader:
                          description: custom value for the Host header. Your server
                            must be able to process requests with the chosen header.
                          type: string
                        customServerName:
                          description: wildcard additional CNAME. If a resource has
                            a wildcard additional CNAME, you can use your own certificate
                            for content delivery via HTTPS. Read-only.
                          type: string
                        disableCache:
                          description: setup a cache status.
                          type: boolean
                        disableProxyForceRanges:
                          description: disabling proxy force ranges.
                          type: boolean
                        edgeCacheSettings:
                          description: content will be cached according to origin
                            cache settings. The value applies for a response with
                            codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308
                            if an origin server does not have caching HTTP headers.
                            Responses with other codes will not be cached.
                          type: number
                        enableIpUrlSigning:
                          description: enable access limiting by IP addresses, option
                            available only with setting secure_key.
                          type: boolean
                        fetchedCompressed:
                          description: option helps you to reduce the bandwidth between
                            origin and CDN servers. Also, content delivery speed becomes
                            higher because of reducing the time for compressing files
                            in a CDN.
                          type: boolean
                        forwardHostHeader:
                          description: choose the Forward Host header option if is
                            important to send in the request to the Origin the same
                            Host header as was sent in the request to CDN server.
                          type: boolean
                        gzipOn:
                          description: GZip compression at CDN servers reduces file
                            size by 70% and can be as high as 90%.
                          type: boolean
                        ignoreCookie:
                          description: set for ignoring cookie.
                          type: boolean
                        ignoreQueryParams:
                          description: files with different query parameters are cached
                            as objects with the same key regardless of the parameter
                            value. selected by default.
                          type: boolean
                        ipAddressAcl:
                          items:
                            properties:
                              exceptedValues:
                                description: the list of specified IP addresses to
                                  be allowed or denied depending on acl policy type.
                                items:
                                  type: string
                                type: array
                              policyType:
                                description: the policy type for ip_address_acl option,
                                  one of "allow" or "deny" values.
                                type: string
                            type: object
                          type: array
                        proxyCacheMethodsSet:
                          description: allows caching for GET, HEAD and POST requests.
                          type: boolean
                        queryParamsBlacklist:
                          description: files with the specified query parameters are
                            cached as objects with the same key, files with other
                            parameters are cached as objects with different keys.
                          items:
                            type: string
                          type: array
                        queryParamsWhitelist:
                          description: files with the specified query parameters are
                            cached as objects with different keys, files with other
                            parameters are cached as objects with the same key.
                          items:
                            type: string
                          type: array
                        redirectHttpToHttps:
                          description: set up a redirect from HTTP to HTTPS.
                          type: boolean
                        redirectHttpsToHttp:
                          description: set up a redirect from HTTPS to HTTP.
                          type: boolean
                        secureKey:
                          description: set secure key for url encoding to protect
                            contect and limit access by IP addresses and time limits.
                          type: string
                        slice:
                          description: files larger than 10 MB will be requested and
                            cached in parts (no larger than 10 MB each part). It reduces
                            time to first byte. The origin must support HTTP Range
                            requests.
                          type: boolean
                        staticRequestHeaders:
                          additionalProperties:
                            type: string
                          description: set up custom headers that CDN servers will
                            send in requests to origins.
                          type: object
                          x-kubernetes-map-type: granular
                        staticResponseHeaders:
                          additionalProperties:
                            type: string
                          description: set up custom headers that CDN servers will
                            send in response to clients.
                          type: object
                          x-kubernetes-map-type: granular
                      type: object
                    type: array
                  originGroupId:
                    type: number
                  originGroupName:
                    type: string
                  originProtocol:
                    type: string
                  providerCname:
                    description: provider CNAME of CDN resource, computed value for
                      read and update operations.
                    type: string
                  secondaryHostnames:
                    description: list of secondary hostname strings.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  sslCertificate:
                    description: SSL certificate of CDN resource.
                    items:
                      properties:
                        certificateManagerId:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                  updatedAt:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
