---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: backendgroups.alb.yandex-cloud.jet.crossplane.io
spec:
  group: alb.yandex-cloud.jet.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - yandex-cloud
    kind: BackendGroup
    listKind: BackendGroupList
    plural: backendgroups
    singular: backendgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackendGroup is the Schema for the BackendGroups API. An application
          load balancer distributes the load across cloud resources that are combined
          into a backend group.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BackendGroupSpec defines the desired state of BackendGroup
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: Description of the backend group.
                    type: string
                  folderId:
                    description: Folder that the resource belongs to. If value is
                      omitted, the default provider folder is used.
                    type: string
                  folderIdRef:
                    description: Reference to a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderIdSelector:
                    description: Selector for a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  grpcBackend:
                    description: Grpc backend specification that will be used by the
                      ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        targetGroupIdsRefs:
                          description: References to TargetGroup to populate targetGroupIds.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        targetGroupIdsSelector:
                          description: Selector for a list of TargetGroup to populate
                            targetGroupIds.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                  httpBackend:
                    description: Http backend specification that will be used by the
                      ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        http2:
                          description: Enables HTTP2 for upstream requests. If not
                            set, HTTP 1.1 will be used by default.
                          type: boolean
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        storageBucket:
                          type: string
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        targetGroupIdsRefs:
                          description: References to TargetGroup to populate targetGroupIds.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        targetGroupIdsSelector:
                          description: Selector for a list of TargetGroup to populate
                            targetGroupIds.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to assign to this backend group.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: Name of the Backend Group.
                    type: string
                  sessionAffinity:
                    description: Session affinity mode determines how incoming requests
                      are grouped into one session. Structure is documented below.
                    items:
                      properties:
                        connection:
                          description: |-
                            Requests received from the same IP are combined into a session. Stream backend groups only support session affinity by client IP address. Structure is documented below.
                            IP address affinity
                          items:
                            properties:
                              sourceIp:
                                description: |-
                                  Source IP address to use with affinity.
                                  Use source IP address
                                type: boolean
                            type: object
                          type: array
                        cookie:
                          description: |-
                            Requests with the same cookie value and the specified file name are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
                            Cookie affinity
                          items:
                            properties:
                              name:
                                description: |-
                                  Name of the backend.
                                  Name of the HTTP cookie
                                type: string
                              ttl:
                                description: |-
                                  TTL for the cookie (if not set, session cookie will be used)
                                  TTL for the cookie (if not set, session cookie will be used)
                                type: string
                            type: object
                          type: array
                        header:
                          description: |-
                            Requests with the same value of the specified HTTP header, such as with user authentication data, are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
                            Request header affinity
                          items:
                            properties:
                              headerName:
                                description: |-
                                  The name of the request header that will be used with affinity.
                                  The name of the request header that will be used
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  streamBackend:
                    description: Stream backend specification that will be used by
                      the ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        enableProxyProtocol:
                          type: boolean
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        targetGroupIdsRefs:
                          description: References to TargetGroup to populate targetGroupIds.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        targetGroupIdsSelector:
                          description: Selector for a list of TargetGroup to populate
                            targetGroupIds.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  description:
                    description: Description of the backend group.
                    type: string
                  folderId:
                    description: Folder that the resource belongs to. If value is
                      omitted, the default provider folder is used.
                    type: string
                  folderIdRef:
                    description: Reference to a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  folderIdSelector:
                    description: Selector for a Folder in resourcemanager to populate
                      folderId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  grpcBackend:
                    description: Grpc backend specification that will be used by the
                      ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        targetGroupIdsRefs:
                          description: References to TargetGroup to populate targetGroupIds.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        targetGroupIdsSelector:
                          description: Selector for a list of TargetGroup to populate
                            targetGroupIds.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                  httpBackend:
                    description: Http backend specification that will be used by the
                      ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        http2:
                          description: Enables HTTP2 for upstream requests. If not
                            set, HTTP 1.1 will be used by default.
                          type: boolean
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        storageBucket:
                          type: string
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        targetGroupIdsRefs:
                          description: References to TargetGroup to populate targetGroupIds.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        targetGroupIdsSelector:
                          description: Selector for a list of TargetGroup to populate
                            targetGroupIds.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to assign to this backend group.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: Name of the Backend Group.
                    type: string
                  sessionAffinity:
                    description: Session affinity mode determines how incoming requests
                      are grouped into one session. Structure is documented below.
                    items:
                      properties:
                        connection:
                          description: |-
                            Requests received from the same IP are combined into a session. Stream backend groups only support session affinity by client IP address. Structure is documented below.
                            IP address affinity
                          items:
                            properties:
                              sourceIp:
                                description: |-
                                  Source IP address to use with affinity.
                                  Use source IP address
                                type: boolean
                            type: object
                          type: array
                        cookie:
                          description: |-
                            Requests with the same cookie value and the specified file name are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
                            Cookie affinity
                          items:
                            properties:
                              name:
                                description: |-
                                  Name of the backend.
                                  Name of the HTTP cookie
                                type: string
                              ttl:
                                description: |-
                                  TTL for the cookie (if not set, session cookie will be used)
                                  TTL for the cookie (if not set, session cookie will be used)
                                type: string
                            type: object
                          type: array
                        header:
                          description: |-
                            Requests with the same value of the specified HTTP header, such as with user authentication data, are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
                            Request header affinity
                          items:
                            properties:
                              headerName:
                                description: |-
                                  The name of the request header that will be used with affinity.
                                  The name of the request header that will be used
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  streamBackend:
                    description: Stream backend specification that will be used by
                      the ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        enableProxyProtocol:
                          type: boolean
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        targetGroupIdsRefs:
                          description: References to TargetGroup to populate targetGroupIds.
                          items:
                            description: A Reference to a named object.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: |-
                                      Resolution specifies whether resolution of this reference is required.
                                      The default is 'Required', which means the reconcile will fail if the
                                      reference cannot be resolved. 'Optional' means this reference will be
                                      a no-op if it cannot be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: |-
                                      Resolve specifies when this reference should be resolved. The default
                                      is 'IfNotPresent', which will attempt to resolve the reference only when
                                      the corresponding field is not present. Use 'Always' to resolve the
                                      reference on every reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        targetGroupIdsSelector:
                          description: Selector for a list of TargetGroup to populate
                            targetGroupIds.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BackendGroupStatus defines the observed state of BackendGroup.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: The backend group creation timestamp.
                    type: string
                  description:
                    description: Description of the backend group.
                    type: string
                  folderId:
                    description: Folder that the resource belongs to. If value is
                      omitted, the default provider folder is used.
                    type: string
                  grpcBackend:
                    description: Grpc backend specification that will be used by the
                      ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                  httpBackend:
                    description: Http backend specification that will be used by the
                      ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        http2:
                          description: Enables HTTP2 for upstream requests. If not
                            set, HTTP 1.1 will be used by default.
                          type: boolean
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        storageBucket:
                          type: string
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                  id:
                    description: The ID of the backend group.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to assign to this backend group.
                    type: object
                    x-kubernetes-map-type: granular
                  name:
                    description: Name of the Backend Group.
                    type: string
                  sessionAffinity:
                    description: Session affinity mode determines how incoming requests
                      are grouped into one session. Structure is documented below.
                    items:
                      properties:
                        connection:
                          description: |-
                            Requests received from the same IP are combined into a session. Stream backend groups only support session affinity by client IP address. Structure is documented below.
                            IP address affinity
                          items:
                            properties:
                              sourceIp:
                                description: |-
                                  Source IP address to use with affinity.
                                  Use source IP address
                                type: boolean
                            type: object
                          type: array
                        cookie:
                          description: |-
                            Requests with the same cookie value and the specified file name are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
                            Cookie affinity
                          items:
                            properties:
                              name:
                                description: |-
                                  Name of the backend.
                                  Name of the HTTP cookie
                                type: string
                              ttl:
                                description: |-
                                  TTL for the cookie (if not set, session cookie will be used)
                                  TTL for the cookie (if not set, session cookie will be used)
                                type: string
                            type: object
                          type: array
                        header:
                          description: |-
                            Requests with the same value of the specified HTTP header, such as with user authentication data, are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
                            Request header affinity
                          items:
                            properties:
                              headerName:
                                description: |-
                                  The name of the request header that will be used with affinity.
                                  The name of the request header that will be used
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  streamBackend:
                    description: Stream backend specification that will be used by
                      the ALB Backend Group. Structure is documented below.
                    items:
                      properties:
                        enableProxyProtocol:
                          type: boolean
                        healthcheck:
                          description: Healthcheck specification that will be used
                            by this backend. Structure is documented below.
                          items:
                            properties:
                              grpcHealthcheck:
                                description: Grpc Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    serviceName:
                                      description: Service name for grpc.health.v1.HealthCheckRequest
                                        message.
                                      type: string
                                  type: object
                                type: array
                              healthcheckPort:
                                description: Optional alternative port for health
                                  checking.
                                type: number
                              healthyThreshold:
                                description: Number of consecutive successful health
                                  checks required to promote endpoint into the healthy
                                  state. 0 means 1. Note that during startup, only
                                  a single successful health check is required to
                                  mark a host healthy.
                                type: number
                              httpHealthcheck:
                                description: Http Healthcheck specification that will
                                  be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    host:
                                      description: '"Host" HTTP header value.'
                                      type: string
                                    http2:
                                      description: If set, health checks will use
                                        HTTP2.
                                      type: boolean
                                    path:
                                      description: HTTP path.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval between health checks.
                                type: string
                              intervalJitterPercent:
                                description: An optional jitter amount as a percentage
                                  of interval. If specified, during every interval
                                  value of (interval_ms * interval_jitter_percent
                                  / 100) will be added to the wait time.
                                type: number
                              streamHealthcheck:
                                description: Stream Healthcheck specification that
                                  will be used by this healthcheck. Structure is documented
                                  below.
                                items:
                                  properties:
                                    receive:
                                      description: Data that must be contained in
                                        the messages received from targets for a successful
                                        health check. If not specified, no messages
                                        are expected from targets, and those that
                                        are received are not checked.
                                      type: string
                                    send:
                                      description: Message sent to targets during
                                        TCP data transfer. If not specified, no data
                                        is sent to the target.
                                      type: string
                                  type: object
                                type: array
                              timeout:
                                description: Time to wait for a health check response.
                                type: string
                              unhealthyThreshold:
                                description: Number of consecutive failed health checks
                                  required to demote endpoint into the unhealthy state.
                                  0 means 1. Note that for HTTP health checks, a single
                                  503 immediately makes endpoint unhealthy.
                                type: number
                            type: object
                          type: array
                        loadBalancingConfig:
                          description: Load Balancing Config specification that will
                            be used by this backend. Structure is documented below.
                          items:
                            properties:
                              localityAwareRoutingPercent:
                                description: Percent of traffic to be sent to the
                                  same availability zone. The rest will be equally
                                  divided between other zones.
                                type: number
                              mode:
                                description: 'Load balancing mode for the backend.
                                  Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST",
                                  "MAGLEV_HASH".'
                                type: string
                              panicThreshold:
                                description: If percentage of healthy hosts in the
                                  backend is lower than panic_threshold, traffic will
                                  be routed to all backends no matter what the health
                                  status is. This helps to avoid healthy backends
                                  overloading when everything is bad. Zero means no
                                  panic threshold.
                                type: number
                              strictLocality:
                                description: If set, will route requests only to the
                                  same availability zone. Balancer won't know about
                                  endpoints in other zones.
                                type: boolean
                            type: object
                          type: array
                        name:
                          description: Name of the backend.
                          type: string
                        port:
                          description: Port for incoming traffic.
                          type: number
                        targetGroupIds:
                          description: References target groups for the backend.
                          items:
                            type: string
                          type: array
                        tls:
                          description: Tls specification that will be used by this
                            backend. Structure is documented below.
                          items:
                            properties:
                              sni:
                                description: SNI string for TLS connections.
                                type: string
                              validationContext:
                                items:
                                  properties:
                                    trustedCaBytes:
                                      description: PEM-encoded trusted CA certificate
                                        chain.
                                      type: string
                                    trustedCaId:
                                      description: Trusted CA certificate ID in the
                                        Certificate Manager.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        weight:
                          description: Weight of the backend. Traffic will be split
                            between backends of the same BackendGroup according to
                            their weights.
                          type: number
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
