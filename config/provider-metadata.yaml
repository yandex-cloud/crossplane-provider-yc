name: yandex-cloud/yandex
resources:
    yandex_alb_backend_group:
        subCategory: unknown
        description: An application load balancer distributes the load across cloud resources that are combined into a backend group.
        name: yandex_alb_backend_group
        title: yandex_alb_backend_group
        examples:
            - name: test-backend-group
              manifest: |-
                {
                  "http_backend": [
                    {
                      "healthcheck": [
                        {
                          "http_healthcheck": [
                            {
                              "path": "/"
                            }
                          ],
                          "interval": "1s",
                          "timeout": "1s"
                        }
                      ],
                      "http2": "true",
                      "load_balancing_config": [
                        {
                          "panic_threshold": 50
                        }
                      ],
                      "name": "test-http-backend",
                      "port": 8080,
                      "target_group_ids": [
                        "${yandex_alb_target_group.test-target-group.id}"
                      ],
                      "tls": [
                        {
                          "sni": "backend-domain.internal"
                        }
                      ],
                      "weight": 1
                    }
                  ],
                  "name": "my-backend-group",
                  "session_affinity": [
                    {
                      "connection": [
                        {
                          "source_ip": "127.0.0.1"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            cookie.name: '- (Required) Name of the HTTP cookie to use with affinity.'
            cookie.ttl: '- (Optional) TTL for the cookie (if not set, session cookie will be used)'
            create: '- Default is 5 minute.'
            created_at: '- The backend group creation timestamp.'
            delete: '- Default is 5 minute.'
            description: '- (Optional) Description of the backend group.'
            folder_id: '- (Optional) Folder that the resource belongs to. If value is omitted, the default provider folder is used.'
            grpc_backend: '- (Optional) Grpc backend specification that will be used by the ALB Backend Group. Structure is documented below.'
            grpc_backend.healthcheck: '- (Optional) Healthcheck specification that will be used by this backend. Structure is documented below.'
            grpc_backend.load_balancing_config: '- (Optional) Load Balancing Config specification that will be used by this backend. Structure is documented below.'
            grpc_backend.name: '- (Required) Name of the backend.'
            grpc_backend.port: '- (Optional) Port for incoming traffic.'
            grpc_backend.target_group_ids: '- (Required) References target groups for the backend.'
            grpc_backend.tls: '- (Optional) Tls specification that will be used by this backend. Structure is documented below.'
            grpc_backend.tls.sni: '- (Optional) SNI string for TLS connections.'
            grpc_backend.tls.validation_context.0.trusted_ca_bytes: '- (Optional) PEM-encoded trusted CA certificate chain.'
            grpc_backend.tls.validation_context.0.trusted_ca_id: '- (Optional) Trusted CA certificate ID in the Certificate Manager.'
            grpc_backend.weight: '- (Optional) Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.'
            grpc_healthcheck.service_name: '- (Optional) Service name for grpc.health.v1.HealthCheckRequest message.'
            header.header_name: '- (Required) The name of the request header that will be used with affinity.'
            healthcheck.grpc_healthcheck: '- (Optional) Grpc Healthcheck specification that will be used by this healthcheck. Structure is documented below.'
            healthcheck.healthcheck_port: '- (Optional) Optional alternative port for health checking.'
            healthcheck.healthy_threshold: '- (Optional) Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.'
            healthcheck.http_healthcheck: '- (Optional) Http Healthcheck specification that will be used by this healthcheck. Structure is documented below.'
            healthcheck.interval: '- (Required) Interval between health checks.'
            healthcheck.interval_jitter_percent: '- (Optional) An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * interval_jitter_percent / 100) will be added to the wait time.'
            healthcheck.stream_healthcheck: '- (Optional) Stream Healthcheck specification that will be used by this healthcheck. Structure is documented below.'
            healthcheck.stream_healthcheck.receive: '- (Optional) Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.'
            healthcheck.stream_healthcheck.send: '- (Optional) Message sent to targets during TCP data transfer.  If not specified, no data is sent to the target.'
            healthcheck.timeout: '- (Required) Time to wait for a health check response.'
            healthcheck.unhealthy_threshold: '- (Optional) Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.'
            http_backend: '- (Optional) Http backend specification that will be used by the ALB Backend Group. Structure is documented below.'
            http_backend.healthcheck: '- (Optional) Healthcheck specification that will be used by this backend. Structure is documented below.'
            http_backend.http2: '- (Optional) Enables HTTP2 for upstream requests. If not set, HTTP 1.1 will be used by default.'
            http_backend.load_balancing_config: '- (Optional) Load Balancing Config specification that will be used by this backend. Structure is documented below.'
            http_backend.name: '- (Required) Name of the backend.'
            http_backend.port: '- (Optional) Port for incoming traffic.'
            http_backend.target_group_ids: '- (Required) References target groups for the backend.'
            http_backend.tls: '- (Optional) Tls specification that will be used by this backend. Structure is documented below.'
            http_backend.weight: '- (Optional) Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.'
            http_healthcheck.host: '- (Optional) "Host" HTTP header value.'
            http_healthcheck.http2: '- (Optional) If set, health checks will use HTTP2.'
            http_healthcheck.path: '- (Required) HTTP path.'
            id: '- The ID of the backend group.'
            labels: '- (Optional) Labels to assign to this backend group.'
            load_balancing_config.locality_aware_routing_percent: '- (Optional) Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.'
            load_balancing_config.mode: '- (Optional) Load balancing mode for the backend. Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST", "MAGLEV_HASH".'
            load_balancing_config.panic_threshold: '- (Optional) If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading  when everything is bad. Zero means no panic threshold.'
            load_balancing_config.strict_locality: '- (Optional) If set, will route requests only to the same availability zone. Balancer won''t know about endpoints in other zones.'
            name: '- (Optional) Name of the Backend Group.'
            session_affinity: '- (Optional) Session affinity mode determines how incoming requests are grouped into one session. Structure is documented below.'
            session_affinity.connection: '- (Optional) Requests received from the same IP are combined into a session. Stream backend groups only support session affinity by client IP address. Structure is documented below.'
            session_affinity.connection.source_ip: '- (Optional) Source IP address to use with affinity.'
            session_affinity.cookie: '- (Optional) Requests with the same cookie value and the specified file name are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.'
            session_affinity.header: '- (Optional) Requests with the same value of the specified HTTP header, such as with user authentication data, are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.'
            stream_backend: '- (Optional) Stream backend specification that will be used by the ALB Backend Group. Structure is documented below.'
            stream_backend.healthcheck: '- (Optional) Healthcheck specification that will be used by this backend. Structure is documented below.'
            stream_backend.load_balancing_config: '- (Optional) Load Balancing Config specification that will be used by this backend. Structure is documented below.'
            stream_backend.name: '- (Required) Name of the backend.'
            stream_backend.port: '- (Optional) Port for incoming traffic.'
            stream_backend.target_group_ids: '- (Required) References target groups for the backend.'
            stream_backend.tls: '- (Optional) Tls specification that will be used by this backend. Structure is documented below.'
            stream_backend.weight: '- (Optional) Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.'
            update: '- Default is 5 minute.'
        importStatements: []
    yandex_alb_http_router:
        subCategory: unknown
        description: The HTTP router defines the routing rules for HTTP requests to backend groups.
        name: yandex_alb_http_router
        title: yandex_alb_http_router
        examples:
            - name: tf-router
              manifest: |-
                {
                  "labels": [
                    {
                      "empty-label": "s",
                      "tf-label": "tf-label-value"
                    }
                  ],
                  "name": "my-http-router"
                }
        argumentDocs:
            create: '- Default is 5 minute.'
            created_at: '- The HTTP Router creation timestamp.'
            delete: '- Default is 5 minute.'
            description: |-
                - (Optional) An optional description of the HTTP Router. Provide this property when
                you create the resource.
            folder_id: |-
                - (Optional) The ID of the folder to which the resource belongs.
                If omitted, the provider folder is used.
            id: '- The ID of the HTTP Router.'
            labels: '- (Optional) Labels to assign to this HTTP Router. A list of key/value pairs.'
            name: '- (Optional) Name of the HTTP Router. Provided by the client when the HTTP Router is created.'
            update: '- Default is 5 minute.'
        importStatements: []
    yandex_alb_load_balancer:
        subCategory: unknown
        description: A Load Balancer is used for receiving incoming traffic and transmitting it to the backend endpoints specified in the ALB Target Groups.
        name: yandex_alb_load_balancer
        title: yandex_alb_load_balancer
        examples:
            - name: test-balancer
              manifest: |-
                {
                  "allocation_policy": [
                    {
                      "location": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.test-subnet.id}",
                          "zone_id": "ru-central1-a"
                        }
                      ]
                    }
                  ],
                  "listener": [
                    {
                      "endpoint": [
                        {
                          "address": [
                            {
                              "external_ipv4_address": [
                                {}
                              ]
                            }
                          ],
                          "ports": [
                            8080
                          ]
                        }
                      ],
                      "http": [
                        {
                          "handler": [
                            {
                              "http_router_id": "${yandex_alb_http_router.test-router.id}"
                            }
                          ]
                        }
                      ],
                      "name": "my-listener"
                    }
                  ],
                  "log_options": [
                    {
                      "discard_rule": [
                        {
                          "discard_percent": 75,
                          "http_code_intervals": [
                            "2XX"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "my-load-balancer",
                  "network_id": "${yandex_vpc_network.test-network.id}"
                }
              references:
                allocation_policy.location.subnet_id: yandex_vpc_subnet.test-subnet.id
                listener.http.handler.http_router_id: yandex_alb_http_router.test-router.id
                network_id: yandex_vpc_network.test-network.id
        argumentDocs:
            address.external_ipv4_address: '- (Optional) External IPv4 address. The structure is documented below.'
            address.external_ipv6_address: '- (Optional) External IPv6 address. The structure is documented below.'
            address.internal_ipv4_address: '- (Optional) Internal IPv4 address. The structure is documented below.'
            allocation_policy: '- (Required) Allocation zones for the Load Balancer instance. The structure is documented below.'
            allocation_policy.location: '- (Required) Unique set of locations. The structure is documented below.'
            allocation_policy.location.disable_traffic: '- (Optional) If set, will disable all L7 instances in the zone for request handling.'
            allocation_policy.location.subnet_id: '- (Required) ID of the subnet that location is located at.'
            allocation_policy.location.zone_id: '- (Required) ID of the zone that location is located at.'
            create: '- Default is 10 minute.'
            created_at: '- The Load Balancer creation timestamp.'
            default_handler.certificate_ids: |-
                - (Required) Certificate IDs in the Certificate Manager. Multiple TLS certificates can be associated
                with the same context to allow both RSA and ECDSA certificates. Only the first certificate of each type will be used.
            default_handler.http_handler: '- (Required) HTTP handler resource. The structure is documented below.'
            default_handler.stream_handler: '- (Required) Stream handler resource. The structure is documented below.'
            delete: '- Default is 10 minute.'
            description: '- (Optional) An optional description of the Load Balancer.'
            discard_rule.grpc_codes: (Optional) list of grpc codes by name, e.g, ["NOT_FOUND", "RESOURCE_EXHAUSTED"]
            discard_rule.http_code_intervals: (Optional) list of http code intervals 1XX-5XX or ALL
            discard_rule.http_codes: (Optional) list of http codes 100-599
            endpoint.address: '- (Required) One or more addresses to listen on. The structure is documented below.'
            endpoint.ports: '- (Required) One or more ports to listen on.'
            external_ipv4_address.address: '- (Optional) Provided by the client or computed automatically.'
            external_ipv6_address.address: '- (Optional) Provided by the client or computed automatically.'
            folder_id: '- (Optional) The ID of the folder to which the resource belongs. If omitted, the provider folder is used.'
            http.handler: '- (Optional) HTTP handler that sets plaintext HTTP router. The structure is documented below.'
            http.redirects: '- (Optional) Shortcut for adding http -> https redirects. The structure is documented below.'
            http_handler.allow_http10: '- (Optional) If set, will enable only HTTP1 protocol with HTTP1.0 support.'
            http_handler.http_router_id: '- (Optional) HTTP router id.'
            http_handler.http2_options: '- (Optional) If set, will enable HTTP2 protocol for the handler. The structure is documented below.'
            http_handler.rewrite_request_id: '- (Optional) When unset, will preserve the incoming x-request-id header, otherwise would rewrite it with a new value.'
            http2_options.max_concurrent_streams: '- (Optional) Maximum number of concurrent streams.'
            id: '- The ID of the Load Balancer.'
            internal_ipv4_address.address: '- (Optional) Provided by the client or computed automatically.'
            internal_ipv4_address.subnet_id: '- (Required) Provided by the client or computed automatically.'
            labels: '- (Optional) Labels to assign to this Load Balancer. A list of key/value pairs.'
            listener: '- (Optional) List of listeners for the Load Balancer. The structure is documented below.'
            listener.endpoint: '- (Required) Network endpoints (addresses and ports) of the listener. The structure is documented below.'
            listener.http: '- (Optional) HTTP listener resource. The structure is documented below.'
            listener.name: '- (Required) name of the listener.'
            listener.stream: '- (Optional) Stream listener resource. The structure is documented below.'
            listener.tls: '- (Optional) TLS listener resource. The structure is documented below.'
            log_group_id: '- Cloud log group used by the Load Balancer to store access logs.'
            log_options: '- (Optional) Cloud Logging settings. The structure is documented below.'
            log_options.disable: (Optional) Set to true to disable Cloud Logging for the balancer
            log_options.discard_rule: (Optional) List of rules to discard a fraction of logs. The structure is documented below.
            log_options.log_group_id: (Optional) Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.
            name: '- (Optional) Name of the Load Balancer. Provided by the client when the Load Balancer is created.'
            network_id: '- (Required) ID of the network that the Load Balancer is located at.'
            redirects.http_to_https: '- (Optional) If set redirects all unencrypted HTTP requests to the same URI with scheme changed to https.'
            region_id: '- (Optional) ID of the region that the Load Balancer is located at.'
            security_group_ids: '- (Optional) A list of ID''s of security groups attached to the Load Balancer.'
            sni_handler.handler: '- (Required) TLS handler resource. The structure is documented below.'
            sni_handler.name: '- (Required) name of SNI match.'
            sni_handler.server_names: '- (Required) A set of server names.'
            status: '- Status of the Load Balancer.'
            stream.handler: '- (Optional) Stream handler that sets plaintext Stream backend group. The structure is documented below.'
            stream_handler.backend_group_id: '- (Optional) Backend group id.'
            tls.default_handler: '- (Required) TLS handler resource. The structure is documented below.'
            tls.sni_handler: '- (Optional) SNI match resource. The structure is documented below.'
            update: '- Default is 10 minute.'
        importStatements: []
    yandex_alb_target_group:
        subCategory: unknown
        description: An application load balancer distributes the load across cloud resources that are combined into a target group.
        name: yandex_alb_target_group
        title: yandex_alb_target_group
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "my-target-group",
                  "target": [
                    {
                      "ip_address": "${yandex_compute_instance.my-instance-1.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    },
                    {
                      "ip_address": "${yandex_compute_instance.my-instance-2.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    }
                  ]
                }
        argumentDocs:
            create: '- Default is 5 minute.'
            created_at: '- The target group creation timestamp.'
            delete: '- Default is 5 minute.'
            description: |-
                - (Optional) An optional description of the target group. Provide this property when
                you create the resource.
            folder_id: |-
                - (Optional) The ID of the folder to which the resource belongs.
                If omitted, the provider folder is used.
            id: '- The ID of the target group.'
            labels: '- (Optional) Labels to assign to this target group. A list of key/value pairs.'
            name: '- (Optional) Name of the target group. Provided by the client when the target group is created.'
            target: '- (Optional) A Target resource. The structure is documented below.'
            target.ip_address: '- (Required) IP address of the target.'
            target.subnet_id: |-
                - (Required) ID of the subnet that targets are connected to.
                All targets in the target group must be connected to the same subnet within a single availability zone.
            update: '- Default is 5 minute.'
        importStatements: []
    yandex_alb_virtual_host:
        subCategory: unknown
        description: Virtual hosts combine routes belonging to the same set of domains.
        name: yandex_alb_virtual_host
        title: yandex_alb_virtual_host
        examples:
            - name: my-virtual-host
              manifest: |-
                {
                  "http_router_id": "${yandex_alb_http_router.my-router.id}",
                  "name": "my-virtual-host",
                  "route": [
                    {
                      "http_route": [
                        {
                          "http_route_action": [
                            {
                              "backend_group_id": "${yandex_alb_backend_group.my-bg.id}",
                              "timeout": "3s"
                            }
                          ]
                        }
                      ],
                      "name": "my-route"
                    }
                  ]
                }
              references:
                http_router_id: yandex_alb_http_router.my-router.id
                route.http_route.http_route_action.backend_group_id: yandex_alb_backend_group.my-bg.id
        argumentDocs:
            authority: |-
                - (Optional) A list of domains (host/authority header) that will be matched to this virtual host. Wildcard
                hosts are supported in the form of '.foo.com' or '-bar.foo.com'. If not specified, all domains will be matched.
            create: '- Default is 5 minute.'
            delete: '- Default is 5 minute.'
            direct_response_action.body: '- (Optional) Response body text.'
            direct_response_action.status: '- (Optional) HTTP response status. Should be between 100 and 599.'
            grpc_match.fqmn: '- (Optional) If not set, all services/methods are assumed. The structure is documented below.'
            grpc_route.grpc_match: '- (Optional) Checks "/" prefix by default. The structure is documented below.'
            grpc_route.grpc_route_action: '- (Optional) GRPC route action resource. The structure is documented below.'
            grpc_route.grpc_status_response_action: '- (Required) GRPC status response action resource. The structure is documented below.'
            grpc_route_action.auto_host_rewrite: '- (Optional) If set, will automatically rewrite host.'
            grpc_route_action.backend_group_id: '- (Required) Backend group to route requests.'
            grpc_route_action.host_rewrite: '- (Optional) Host rewrite specifier.'
            grpc_route_action.idle_timeout: |-
                - (Optional) Specifies the idle timeout (time without any data transfer for the active request) for the
                route. It is useful for streaming scenarios - one should set idle_timeout to something meaningful and max_timeout
                to the maximum time the stream is allowed to be alive. If not specified, there is no
                per-route idle timeout.
            grpc_route_action.max_timeout: |-
                - (Optional) Lower timeout may be specified by the client (using grpc-timeout header). If not set, default is
                60 seconds.
            grpc_status_response_action.status: |-
                - (Optional) The status of the response. Supported values are: ok, invalid_argumet, not_found,
                permission_denied, unauthenticated, unimplemented, internal, unavailable.
            http_match.http_method: '- (Optional) List of methods(strings).'
            http_match.path: '- (Optional) If not set, ''/'' is assumed. The structure is documented below.'
            http_route.direct_response_action: '- (Required) Direct response action resource. The structure is documented below.'
            http_route.http_match: '- (Optional) Checks "/" prefix by default. The structure is documented below.'
            http_route.http_route_action: '- (Optional) HTTP route action resource. The structure is documented below.'
            http_route.redirect_action: '- (Optional) Redirect action resource. The structure is documented below.'
            http_route_action.auto_host_rewrite: '- (Optional) If set, will automatically rewrite host.'
            http_route_action.backend_group_id: '- (Required) Backend group to route requests.'
            http_route_action.host_rewrite: '- (Optional) Host rewrite specifier.'
            http_route_action.idle_timeout: |-
                - (Optional) Specifies the idle timeout (time without any data transfer for the active request) for the
                route. It is useful for streaming scenarios (i.e. long-polling, server-sent events) - one should set idle_timeout to
                something meaningful and timeout to the maximum time the stream is allowed to be alive. If not specified, there is no
                per-route idle timeout.
            http_route_action.prefix_rewrite: '- (Optional) If not empty, matched path prefix will be replaced by this value.'
            http_route_action.timeout: |-
                - (Optional) Specifies the request timeout (overall time request processing is allowed to take) for the
                route. If not set, default is 60 seconds.
            http_route_action.upgrade_types: |-
                - (Optional) List of upgrade types. Only specified upgrade types will be allowed. For example,
                "websocket".
            http_router_id: '- (Required) The ID of the HTTP router to which the virtual host belongs.'
            id: '- The ID of the virtual host.'
            modify_request_headers: |-
                - (Optional) Apply the following modifications to the request
                headers. The structure is documented below.
            modify_request_headers.append: '- (Optional) Append string to the header value.'
            modify_request_headers.name: '- (Required) name of the header to modify.'
            modify_request_headers.remove: '- (Optional) If set, remove the header.'
            modify_request_headers.replace: |-
                - (Optional) New value for a header. Header values support the following
                formatters.
            modify_response_headers: |-
                - (Optional) Apply the following modifications to the response
                headers. The structure is documented below.
            name: '- (Required) Name of the virtual host. Provided by the client when the virtual host is created.'
            path.exact: '- (Optional) Match exactly.'
            path.prefix: '- (Optional) Match prefix.'
            path.regex: '- (Optional) Match regex.'
            redirect_action.remove query: '- (Optional) If set, remove query part.'
            redirect_action.replace_host: '- (Optional) Replaces hostname.'
            redirect_action.replace_path: '- (Optional) Replace path.'
            redirect_action.replace_port: '- (Optional) Replaces port.'
            redirect_action.replace_prefix: "- (Optional) Replace only matched prefix. Example: match:{ prefix_match: \"/some\" } \nredirect: { replace_prefix: \"/other\" }  will redirect \"/something\" to \"/otherthing\"."
            redirect_action.replace_scheme: |-
                - (Optional) Replaces scheme. If the original scheme is http or https, will also remove the
                80 or 443 port, if present.
            redirect_action.response_code: |-
                - (Optional) The HTTP status code to use in the redirect response. Supported values are:
                moved_permanently, found, see_other, temporary_redirect, permanent_redirect.
            route: |-
                - (Optional) A Route resource. Routes are matched in-order. Be careful when adding them to the end. For instance, having
                http '/' match first makes all other routes unused. The structure is documented below.
            route.grpc_route: '- (Optional) GRPC route resource. The structure is documented below.'
            route.http_route: '- (Optional) HTTP route resource. The structure is documented below.'
            route.name: '- (Required) name of the route.'
            route_options: '- (Optional) Route options for the virtual host. The structure is documented below.'
            route_options.rbac: '- (Optional) RBAC configuration.'
            route_options.security_profile_id: '- (Optional) SWS profile ID.'
            update: '- Default is 5 minute.'
        importStatements: []
    yandex_api_gateway:
        subCategory: unknown
        description: Allows management of a Yandex Cloud API Gateway.
        name: yandex_api_gateway
        title: yandex_api_gateway
        examples:
            - name: test-api-gateway
              manifest: |-
                {
                  "canary": [
                    {
                      "variables": {
                        "installation": "dev"
                      },
                      "weight": 20
                    }
                  ],
                  "connectivity": [
                    {
                      "network_id": "\u003cdynamic network id\u003e"
                    }
                  ],
                  "custom_domains": [
                    {
                      "certificate_id": "\u003ccertificate_id_from_cert_manager\u003e",
                      "fqdn": "test.example.com"
                    }
                  ],
                  "description": "any description",
                  "execution_timeout": "300",
                  "labels": {
                    "empty-label": "",
                    "label": "label"
                  },
                  "log_options": [
                    {
                      "log_group_id": "\u003clog group id\u003e",
                      "min_level": "ERROR"
                    }
                  ],
                  "name": "some_name",
                  "spec": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Test API\nx-yc-apigateway:\n  variables:\n    installation:\n      default: \"prod\"\n      enum:\n       - \"prod\"\n       - \"dev\"\npaths:\n  /hello:\n    get:\n      summary: Say hello\n      operationId: hello\n      parameters:\n        - name: user\n          in: query\n          description: User name to appear in greetings\n          required: false\n          schema:\n            type: string\n            default: 'world'\n      responses:\n        '200':\n          description: Greeting\n          content:\n            'text/plain':\n              schema:\n                type: \"string\"\n      x-yc-apigateway-integration:\n        type: dummy\n        http_code: 200\n        http_headers:\n          'Content-Type': \"text/plain\"\n        content:\n          'text/plain': \"Hello again, {user} from ${apigw.installation} release!\\n\"\n",
                  "variables": {
                    "installation": "prod"
                  }
                }
        argumentDocs:
            canary: '- (Optional) Canary release settings of gateway.'
            canary.0.variables: '- A list of values for variables in gateway specification of canary release.'
            canary.0.weight: '- Percentage of requests, which will be processed by canary release.'
            connectivity: '- (Optional) Gateway connectivity. If specified the gateway will be attached to specified network.'
            connectivity.0.network_id: '- Network the gateway will have access to. It''s essential to specify network with subnets in all availability zones.'
            created_at: '- Creation timestamp of the Yandex Cloud API Gateway.'
            custom_domains: '- (Optional) Set of custom domains to be attached to Yandex API Gateway.'
            description: '- (Optional) Description of the Yandex Cloud API Gateway.'
            disabled: '- Is logging from API Gateway disabled'
            domain: '- Default domain for the Yandex API Gateway. Generated at creation time.'
            execution_timeout: '- Execution timeout in seconds for the Yandex Cloud API Gateway.'
            folder_id: '- (Optional) Folder ID for the Yandex Cloud API Gateway. If it is not provided, the default provider folder is used.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Yandex Cloud API Gateway.'
            log_group_id: '- Log entries are written to specified log group'
            log_options: '- Options for logging from Yandex Cloud API Gateway.'
            loggroup_id: '- ID of the log group for the Yandex API Gateway.'
            min_level: '- Minimum log entry level'
            name: (Required) - Yandex Cloud API Gateway name used to define API Gateway.
            spec: '- (Required) OpenAPI specification for Yandex API Gateway.'
            status: '- Status of the Yandex API Gateway.'
            user_domains: '- (DEPRECATED, use custom_domains instead) Set of user domains attached to Yandex API Gateway.'
            variables: '- (Optional) A set of values for variables in gateway specification.'
        importStatements: []
    yandex_audit_trails_trail:
        subCategory: unknown
        description: Manages a trail resource.
        name: yandex_audit_trails_trail
        title: yandex_audit_trails_trail
        examples:
            - name: basic_trail
              manifest: |-
                {
                  "description": "Some trail description",
                  "filter": [
                    {
                      "event_filters": [
                        {
                          "categories": [
                            {
                              "plane": "DATA_PLANE",
                              "type": "WRITE"
                            }
                          ],
                          "path_filter": [
                            {
                              "any_filter": [
                                {
                                  "resource_id": "home-folder",
                                  "resource_type": "resource-manager.folder"
                                }
                              ]
                            }
                          ],
                          "service": "storage"
                        },
                        {
                          "categories": [
                            {
                              "plane": "DATA_PLANE",
                              "type": "READ"
                            }
                          ],
                          "path_filter": [
                            {
                              "some_filter": [
                                {
                                  "any_filters": [
                                    {
                                      "resource_id": "vpc-net-id-1",
                                      "resource_type": "vpc.network"
                                    },
                                    {
                                      "resource_id": "vpc-net-id-2",
                                      "resource_type": "vpc.network"
                                    }
                                  ],
                                  "resource_id": "home-folder",
                                  "resource_type": "resource-manager.folder"
                                }
                              ]
                            }
                          ],
                          "service": "dns"
                        }
                      ],
                      "path_filter": [
                        {
                          "any_filter": [
                            {
                              "resource_id": "home-folder",
                              "resource_type": "resource-manager.folder"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "folder_id": "home-folder",
                  "labels": {
                    "key": "value"
                  },
                  "logging_destination": [
                    {
                      "log_group_id": "some-log-group"
                    }
                  ],
                  "name": "a-trail",
                  "service_account_id": "trail-service-account"
                }
            - name: basic_trail
              manifest: |-
                {
                  "data_stream_destination": [
                    {
                      "database_id": "some-database",
                      "stream_name": "some-stream"
                    }
                  ],
                  "description": "Some trail description",
                  "filter": [
                    {
                      "event_filters": [
                        {
                          "categories": [
                            {
                              "plane": "DATA_PLANE",
                              "type": "WRITE"
                            }
                          ],
                          "path_filter": [
                            {
                              "any_filter": [
                                {
                                  "resource_id": "some-organization",
                                  "resource_type": "organization-manager.organization"
                                }
                              ]
                            }
                          ],
                          "service": "storage"
                        },
                        {
                          "categories": [
                            {
                              "plane": "DATA_PLANE",
                              "type": "READ"
                            }
                          ],
                          "path_filter": [
                            {
                              "any_filter": [
                                {
                                  "resource_id": "some-organization",
                                  "resource_type": "organization-manager.organization"
                                }
                              ]
                            }
                          ],
                          "service": "dns"
                        }
                      ],
                      "path_filter": [
                        {
                          "any_filter": [
                            {
                              "resource_id": "some-organization",
                              "resource_type": "organization-manager.organization"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "folder_id": "home-folder",
                  "labels": {
                    "key": "value"
                  },
                  "name": "a-trail",
                  "service_account_id": "trail-service-account"
                }
            - name: basic_trail
              manifest: |-
                {
                  "description": "Some trail description",
                  "filter": [
                    {
                      "event_filters": [
                        {
                          "categories": [
                            {
                              "plane": "DATA_PLANE",
                              "type": "WRITE"
                            }
                          ],
                          "path_filter": [
                            {
                              "any_filter": [
                                {
                                  "resource_id": "home-folder",
                                  "resource_type": "resource-manager.folder"
                                }
                              ]
                            }
                          ],
                          "service": "mdb.postgresql"
                        }
                      ],
                      "path_filter": [
                        {
                          "any_filter": [
                            {
                              "resource_id": "home-folder",
                              "resource_type": "resource-manager.folder"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "folder_id": "home-folder",
                  "labels": {
                    "key": "value"
                  },
                  "name": "a-trail",
                  "service_account_id": "trail-service-account",
                  "storage_destination": [
                    {
                      "bucket_name": "some-bucket",
                      "object_prefix": "some-prefix"
                    }
                  ]
                }
        argumentDocs:
            any_filter: '- Structure describing that events will be gathered from all cloud resources that belong to the parent resource. Mutually exclusive with some_filter.'
            any_filters: '- (Required) List of child resources from which events will be gathered'
            bucket_name: '- (Required) Name of the destination bucket'
            categories: '- (Required) List of structures describing categories of gathered data plane events'
            create: '- Default 5 minutes.'
            data_stream_destination: '- Structure describing destination data stream of the trail. Mutually exclusive with logging_destination and storage_destination.'
            database_id: '- (Required) ID of the YDB hosting the destination data stream.'
            delete: '- Default 5 minutes.'
            description: '- (Optional) Description of the trail.'
            event_filters: '- Structure describing filtering process for the service-specific data plane events'
            filter: '- Structure describing event filtering process for the trail.'
            folder_id: '- (Required) ID of the folder to which the trail belongs.'
            labels: '- (Optional) Labels defined by the user.'
            log_group_id: '- (Required) ID of the destination Cloud Logging Group'
            logging_destination: '- Structure describing destination log group of the trail. Mutually exclusive with storage_destination and data_stream_destination.'
            name: '- (Required) Name of the trail.'
            object_prefix: '- (Optional) Additional prefix of the uploaded objects. If not specified, objects will be uploaded with prefix equal to trail_id'
            path_filter: '- (Optional) Structure describing filtering process for default control plane events. If omitted, the trail will not deliver this category'
            plane: '- (Required) Type of the event by its relation to the cloud resource model. Possible values: CONTROL_PLANE/DATA_PLANE'
            resource_id: '- (Required) ID of the parent resource.'
            resource_type: '- (Required) Resource type of the parent resource.'
            service: '- (Required) ID of the service which events will be gathered'
            service_account_id: '- (Required) ID of the IAM service account that is used by the trail.'
            some_filter: '- Structure describing that events will be gathered from some of the cloud resources that belong to the parent resource. Mutually exclusive with any_filter.'
            status: '- Status of this trail.'
            storage_destination: '- Structure describing destination bucket of the trail. Mutually exclusive with logging_destination and data_stream_destination.'
            stream_name: '- (Required) Name of the YDS stream belonging to the specified YDB.'
            trail_id: '- ID of the trail resource.'
            type: '- (Required) Type of the event by its operation effect on the resource. Possible values: READ/WRITE'
            update: '- Default 5 minutes.'
        importStatements: []
    yandex_backup_policy:
        subCategory: unknown
        description: Allows management of Yandex.Cloud Backup Policy.
        name: yandex_backup_policy
        title: yandex_backup_policy
        examples:
            - name: basic_policy
              manifest: |-
                {
                  "name": "basic policy",
                  "reattempts": [
                    {}
                  ],
                  "retention": [
                    {
                      "after_backup": false
                    }
                  ],
                  "scheduling": [
                    {
                      "enabled": false,
                      "execute_by_interval": 86400
                    }
                  ],
                  "vm_snapshot_reattempts": [
                    {}
                  ]
                }
            - name: my_policy
              manifest: |-
                {
                  "archive_name": "[Machine Name]-[Plan ID]-[Unique ID]a",
                  "cbt": "USE_IF_ENABLED",
                  "compression": "NORMAL",
                  "fast_backup_enabled": true,
                  "format": "AUTO",
                  "multi_volume_snapshotting_enabled": true,
                  "name": "example_name",
                  "performance_window_enabled": true,
                  "preserve_file_security_settings": true,
                  "quiesce_snapshotting_enabled": true,
                  "reattempts": [
                    {
                      "enabled": true,
                      "interval": "1m",
                      "max_attempts": 10
                    }
                  ],
                  "retention": [
                    {
                      "after_backup": false,
                      "rules": [
                        {
                          "max_age": "365d",
                          "repeat_period": []
                        }
                      ]
                    }
                  ],
                  "scheduling": [
                    {
                      "enabled": false,
                      "execute_by_time": [
                        {
                          "include_last_day_of_month": true,
                          "monthdays": [],
                          "months": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9,
                            10,
                            11,
                            12
                          ],
                          "repeat_at": [
                            "04:10"
                          ],
                          "repeat_every": "30m",
                          "type": "MONTHLY",
                          "weekdays": []
                        }
                      ],
                      "max_parallel_backups": 0,
                      "random_max_delay": "30m",
                      "scheme": "ALWAYS_INCREMENTAL",
                      "weekly_backup_day": "MONDAY"
                    }
                  ],
                  "silent_mode_enabled": true,
                  "splitting_bytes": "9223372036854775807",
                  "vm_snapshot_reattempts": [
                    {
                      "enabled": true,
                      "interval": "1m",
                      "max_attempts": 10
                    }
                  ],
                  "vss_provider": "NATIVE"
                }
        argumentDocs:
            M: — months
            after_backup: — Defines whether retention rule applies after creating backup or before.
            archive_name: '(Optional. Default: [Machine Name]-[Plan ID]-[Unique ID]a) — The name of generated archives.'
            cbt: |-
                (Optional. Default: DO_NOT_USE) — Configuration of Changed Block Tracking.
                Available values are: "USE_IF_ENABLED", "ENABLED_AND_USE", "DO_NOT_USE".
            compression: |-
                (Optional. Default: NORMAL) — Archive compression level. Affects CPU.
                Available values: "NORMAL", "HIGH", "MAX", "OFF".
            d: — days
            enabled: '(Optional. Default: true) — Enable flag'
            execute_by_interval: |-
                (Optional) — Perform backup by interval, since last backup of the host. Maximum value is: 9999 days.
                See interval_type for available values. Exactly on of options should be set: execute_by_interval or execute_by_time.
            execute_by_time: '(Optional) — Perform backup periodically at specific time. Exactly on of options should be set: execute_by_interval or execute_by_time.'
            format: |-
                (Optional. Default: AUTO) — Format of the backup. It's strongly recommend to leave this option empty or "AUTO".
                Available values: "AUTO", "VERSION_11", "VERSION_12".
            h: — hours
            include_last_day_of_month: |-
                (Optional. Default: false) — If true, schedule will be applied on the last day of month.
                See day_type for available values.
            interval: '(Optional. Default: "5m") — Retry interval. See interval_type for available values'
            m: — minutes
            max_age: (Conflicts with max_count) — Deletes backups that older than max_age. Exactly one of max_count or max_age should be set.
            max_attempts: '(Optional, Default: 5) — Maximum number of attempts before throwing an error'
            max_count: (Conflicts with max_age) — Deletes backups if it's count exceeds max_count. Exactly one of max_count or max_age should be set.
            max_parallel_backups: '(Optional. Default: 0) — Maximum number of backup processes allowed to run in parallel. 0 for unlimited.'
            monthdays: '(Optional. Default: []) — List of days when schedule applies. Used in "MONTHLY" type.'
            multi_volume_snapshotting_enabled: '(Optional. Default: true) — If true, snapshots of multiple volumes will be taken simultaneously.'
            name: (Required) — Name of the policy
            performance_window_enabled: '(Optional. Default: false) — Time windows for performance limitations of backup.'
            preserve_file_security_settings: '(Optional. Default: true) — Preserves file security settings. It''s better to set this option to true.'
            quiesce_snapshotting_enabled: '(Optional. Default: false) — If true, a quiesced snapshot of the virtual machine will be taken.'
            random_max_delay: |-
                (Optional. Default: 30m) — Configuration of the random delay between the execution of parallel tasks.
                See interval_type for available values.
            reattempts: |-
                (Required) — Amount of reattempts that should be performed while trying to make backup at the host.
                This attribute consists of the following parameters:
            repeat_at: '(Optional. Default: []) — List of time in format "HH:MM" (24-hours format), when the schedule applies.'
            repeat_every: (Optional) — Frequency of backup repetition. See interval_type for available values.
            retention: |-
                (Required) — Retention policy for backups. Allows to setup backups lifecycle.
                This attribute consists of the following parameters:
            s: — seconds
            scheduling: (Required) — Schedule settings for creating backups on the host.
            scheme: |-
                (Optional. Default: ALWAYS_INCREMENTAL) — Scheme of the backups.
                Available values are: "ALWAYS_INCREMENTAL", "ALWAYS_FULL", "WEEKLY_FULL_DAILY_INCREMENTAL", 'WEEKLY_INCREMENTAL".
            silent_mode_enabled: '(Optional. Default: true) — if true, a user interaction will be avoided when possible.'
            splitting_bytes: (Optional. Default 9223372036854775807) — determines the size to split backups. It's better to leave this option unchanged.
            type: '(Required) — Type of the scheduling. Available values are: "HOURLY", "DAILY", "WEEKLY", "MONTHLY".'
            vm_snapshot_reattempts: |-
                (Requied) — Amount of reattempts that should be performed while trying to make snapshot.
                This attribute consists of the following parameters:
            vss_provider: |-
                (Optional. Default: NATIVE) — Settings for the volume shadow copy service.
                Available values are: "NATIVE", "TARGET_SYSTEM_DEFINED"
            w: — weekdays
            weekdays: '(Optional. Default: []) — List of weekdays when the backup will be applied. Used in "WEEKLY" type.'
            weekly_backup_day: |-
                (Optional. Default: MONDAY) — A day of week to start weekly backups.
                See day_type for available values.
        importStatements: []
    yandex_billing_cloud_binding:
        subCategory: unknown
        description: Bind cloud to billing account.
        name: yandex_billing_cloud_binding
        title: yandex_billing_cloud_binding
        examples:
            - name: foo
              manifest: |-
                {
                  "billing_account_id": "foo-ba-id",
                  "cloud_id": "foo-cloud-id"
                }
        argumentDocs:
            billing_account_id: '- (Required) ID of billing account to bind cloud to.'
            cloud_id: '- (Required) ID of cloud to bind.'
        importStatements: []
    yandex_cdn_origin_group:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud CDN Origin Groups.
        name: yandex_cdn_origin_group
        title: yandex_cdn_origin_group
        examples:
            - name: my_group
              manifest: |-
                {
                  "name": "My Origin group",
                  "origin": [
                    {
                      "source": "ya.ru"
                    },
                    {
                      "source": "yandex.ru"
                    },
                    {
                      "source": "goo.gl"
                    },
                    {
                      "backup": false,
                      "source": "amazon.com"
                    }
                  ],
                  "use_next": true
                }
        argumentDocs:
            create: '- Default is 5 minutes.'
            created_at: '- Creation timestamp of the IoT Core Device'
            delete: '- Default is 5 minutes.'
            name: (Required) - CDN Origin Group name used to define device.
            origins: '- A set of available origins, an origins group must contain at least one enabled origin with fields:'
            update: '- Default is 5 minutes.'
            use_next: (Optional) - If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
        importStatements: []
    yandex_cdn_resource:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud CDN Resource.
        name: yandex_cdn_resource
        title: yandex_cdn_resource
        examples:
            - name: my_resource
              manifest: |-
                {
                  "active": false,
                  "cname": "cdn1.yandex-example.ru",
                  "options": [
                    {
                      "edge_cache_settings": 345600,
                      "ignore_cookie": true,
                      "static_request_headers": {
                        "is-from-cdn": "yes"
                      },
                      "static_response_headers": {
                        "is-cdn": "yes"
                      }
                    }
                  ],
                  "origin_group_id": "${yandex_cdn_origin_group.foo_cdn_group_by_id.id}",
                  "origin_protocol": "https",
                  "secondary_hostnames": [
                    "cdn-example-1.yandex.ru",
                    "cdn-example-2.yandex.ru"
                  ]
                }
              references:
                origin_group_id: yandex_cdn_origin_group.foo_cdn_group_by_id.id
        argumentDocs:
            active: (Optional) - Flag to create Resource either in active or disabled state. True - the content from CDN is available to clients.
            allowed_http_methods: '- HTTP methods for your CDN content. By default the following methods are allowed: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS. In case some methods are not allowed to the user, they will get the 405 (Method Not Allowed) response. If the method is not supported, the user gets the 501 (Not Implemented) response.'
            browser_cache_settings: '- set up a cache period for the end-users browser. Content will be cached due to origin settings. If there are no cache settings on your origin, the content will not be cached. The list of HTTP response codes that can be cached in browsers: 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Other response codes will not be cached. The default value is 4 days.'
            cache_http_headers: '- list HTTP headers that must be included in responses to clients.'
            cname: (Required) - CDN endpoint CNAME, must be unique among resources.
            cors: '- parameter that lets browsers get access to selected resources from a domain different to a domain from which the request is received.'
            create: '- Default is 5 minutes.'
            created_at: '- Creation timestamp of the IoT Core Device'
            custom_host_header: '- custom value for the Host header. Your server must be able to process requests with the chosen header.'
            custom_server_name: '- wildcard additional CNAME. If a resource has a wildcard additional CNAME, you can use your own certificate for content delivery via HTTPS. Read-only.'
            delete: '- Default is 5 minutes.'
            disable_cache: '- setup a cache status.'
            disable_proxy_force_ranges: '- disabling proxy force ranges.'
            edge_cache_settings: '- content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers. Responses with other codes will not be cached.'
            enable_ip_url_signing: '-  enable access limiting by IP addresses, option available only with setting secure_key.'
            fetched_compressed: '- option helps you to reduce the bandwidth between origin and CDN servers. Also, content delivery speed becomes higher because of reducing the time for compressing files in a CDN.'
            forward_host_header: '- choose the Forward Host header option if is important to send in the request to the Origin the same Host header as was sent in the request to CDN server.'
            gzip_on: '- GZip compression at CDN servers reduces file size by 70% and can be as high as 90%.'
            ignore_cookie: '- set for ignoring cookie.'
            ignore_query_params: '- files with different query parameters are cached as objects with the same key regardless of the parameter value. selected by default.'
            ip_address_acl.excepted_values: '- the list of specified IP addresses to be allowed or denied depending on acl policy type.'
            ip_address_acl.policy_type: '- the policy type for ip_address_acl option, one of "allow" or "deny" values.'
            options: (Optional) - CDN Resource settings and options to tune CDN edge behavior.
            provider_cname: (Optional) - provider CNAME of CDN resource, computed value for read and update operations.
            proxy_cache_methods_set: '- allows caching for GET, HEAD and POST requests.'
            query_params_blacklist: '- files with the specified query parameters are cached as objects with the same key, files with other parameters are cached as objects with different keys.'
            query_params_whitelist: '- files with the specified query parameters are cached as objects with different keys, files with other parameters are cached as objects with the same key.'
            redirect_http_to_https: '- set up a redirect from HTTP to HTTPS.'
            redirect_https_to_http: '- set up a redirect from HTTPS to HTTP.'
            secondary_hostnames: (Optional) - list of secondary hostname strings.
            secure_key: '- set secure key for url encoding to protect contect and limit access by IP addresses and time limits.'
            slice: '- files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte. The origin must support HTTP Range requests.'
            ssl_certificate: (Optional) - SSL certificate of CDN resource.
            stale: '-  list of errors which instruct CDN servers to serve stale content to clients.'
            static_request_headers: '- set up custom headers that CDN servers will send in requests to origins.'
            static_response_headers: '- set up custom headers that CDN servers will send in response to clients.'
            update: '- Default is 5 minutes.'
        importStatements: []
    yandex_cm_certificate:
        subCategory: unknown
        description: A TLS certificate signed by a certification authority confirming that it belongs to the owner of the domain name.
        name: yandex_cm_certificate
        title: yandex_cm_certificate
        examples:
            - name: example
              manifest: |-
                {
                  "domains": [
                    "example.com"
                  ],
                  "managed": [
                    {
                      "challenge_type": "DNS_CNAME"
                    }
                  ],
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "domains": [
                    "one.example.com",
                    "two.example.com"
                  ],
                  "managed": [
                    {
                      "challenge_count": 2,
                      "challenge_type": "DNS_CNAME"
                    }
                  ],
                  "name": "example"
                }
              dependencies:
                yandex_dns_recordset.example: |-
                    {
                      "count": "${yandex_cm_certificate.example.managed[0].challenge_count}",
                      "data": [
                        "${yandex_cm_certificate.example.challenges[count.index].dns_value}"
                      ],
                      "name": "${yandex_cm_certificate.example.challenges[count.index].dns_name}",
                      "ttl": 60,
                      "type": "${yandex_cm_certificate.example.challenges[count.index].dns_type}",
                      "zone_id": "example-zone-id"
                    }
            - name: example
              manifest: |-
                {
                  "domains": [
                    "example.com",
                    "*.example.com"
                  ],
                  "managed": [
                    {
                      "challenge_count": 1,
                      "challenge_type": "DNS_CNAME"
                    }
                  ],
                  "name": "example"
                }
              dependencies:
                yandex_dns_recordset.example: |-
                    {
                      "count": "${yandex_cm_certificate.example.managed[0].challenge_count}",
                      "data": [
                        "${yandex_cm_certificate.example.challenges[count.index].dns_value}"
                      ],
                      "name": "${yandex_cm_certificate.example.challenges[count.index].dns_name}",
                      "ttl": 60,
                      "type": "${yandex_cm_certificate.example.challenges[count.index].dns_type}",
                      "zone_id": "example-zone-id"
                    }
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "self_managed": [
                    {
                      "certificate": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- \n -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                      "private_key": "-----BEGIN RSA PRIVATE KEY----- ... -----END RSA PRIVATE KEY-----"
                    }
                  ]
                }
        argumentDocs:
            challenges: '- Array of challenges. Structure is documented below.'
            challenges.created_at: '- Time the challenge was created.'
            challenges.dns_name: '- DNS record name (only for DNS challenge).'
            challenges.dns_type: '- DNS record type: "TXT" or "CNAME" (only for DNS challenge).'
            challenges.dns_value: '- DNS record value (only for DNS challenge).'
            challenges.domain: '- Validated domain.'
            challenges.http_content: '- The content that should be made accessible with the given http_url (only for HTTP challenge).'
            challenges.http_url: '- URL where the challenge content http_content should be placed (only for HTTP challenge).'
            challenges.message: '- Current status message.'
            challenges.type: '- Challenge type "DNS" or "HTTP".'
            challenges.updated_at: '- Last time the challenge was updated.'
            create: '- Default is 1 minute.'
            created_at: '- Certificate create timestamp.'
            delete: '- Default is 1 minute.'
            description: '- (Optional) Certificate description.'
            domains: '- (Optional) Domains for this certificate. Should be specified for managed certificates.'
            folder_id: '- (Optional) Folder that the resource belongs to. If value is omitted, the default provider folder is used.'
            id: '- Certificate Id.'
            issued_at: '- Certificate issue timestamp.'
            issuer: '- Certificate issuer.'
            labels: '- (Optional) Labels to assign to this certificate.'
            managed: '- (Optional) Managed specification. Structure is documented below.'
            managed.challenge_count: |-
                - (Optional). Expected number of challenge count needed to validate certificate.
                Resource creation will fail if the specified value does not match the actual number of challenges received from issue provider.
                This argument is helpful for safe automatic resource creation for passing challenges for multi-domain certificates.
            managed.challenge_type: '- (Required) Domain owner-check method. Possible values:'
            name: '- (Optional) Certificate name.'
            not_after: '- Certificate end valid period.'
            not_before: '- Certificate start valid period.'
            read: '- Default is 1 minute.'
            self_managed: '- (Optional) Self-managed specification. Structure is documented below.'
            self_managed.certificate: '- (Required) Certificate with chain.'
            self_managed.private_key: '- (Optional) Private key of certificate.'
            self_managed.private_key_lockbox_secret: '- (Optional) Lockbox secret specification for getting private key. Structure is documented below.'
            self_managed.private_key_lockbox_secret.id: '- (Required) Lockbox secret Id.'
            self_managed.private_key_lockbox_secret.key: '- (Required) Key of the Lockbox secret, the value of which contains the private key of the certificate.'
            serial: '- Certificate serial number.'
            status: '- Certificate status: "VALIDATING", "INVALID",  "ISSUED", "REVOKED", "RENEWING" or "RENEWAL_FAILED".'
            subject: '- Certificate subject.'
            type: '- Certificate type: "MANAGED" or "IMPORTED".'
            update: '- Default is 1 minute.'
            updated_at: '- Certificate update timestamp.'
        importStatements: []
    yandex_compute_disk:
        subCategory: unknown
        description: Persistent disks are durable storage devices that function similarly to the physical disks in a desktop or a server.
        name: yandex_compute_disk
        title: yandex_compute_disk
        examples:
            - name: default
              manifest: |-
                {
                  "image_id": "ubuntu-16.04-v20180727",
                  "labels": {
                    "environment": "test"
                  },
                  "name": "disk-name",
                  "type": "network-ssd",
                  "zone": "ru-central1-a"
                }
            - name: nr
              manifest: |-
                {
                  "disk_placement_policy": [
                    {
                      "disk_placement_group_id": "${yandex_compute_disk_placement_group.this.id}"
                    }
                  ],
                  "name": "non-replicated-disk-name",
                  "size": 93,
                  "type": "network-ssd-nonreplicated",
                  "zone": "ru-central1-b"
                }
              references:
                disk_placement_policy.disk_placement_group_id: yandex_compute_disk_placement_group.this.id
              dependencies:
                yandex_compute_disk_placement_group.this: |-
                    {
                      "zone": "ru-central1-b"
                    }
        argumentDocs:
            block_size: '- (Optional) Block size of the disk, specified in bytes.'
            create: '- Default is 5 minutes.'
            created_at: '- Creation timestamp of the disk.'
            delete: '- Default is 5 minutes.'
            description: |-
                -
                (Optional) Description of the disk. Provide this property when
                you create a resource.
            disk_placement_policy: '- (Optional) Disk placement policy configuration. The structure is documented below.'
            disk_placement_policy.disk_placement_group_id: '- (Required) Specifies Disk Placement Group id.'
            folder_id: |-
                -
                (Optional) The ID of the folder that the disk belongs to.
                If it is not provided, the default provider folder is used.
            image_id: '-  (Optional) The source image to use for disk creation.'
            labels: |-
                -
                (Optional)
                Labels to assign to this disk. A list of key/value pairs.
            name: |-
                -
                (Optional)
                Name of the disk. Provide this property when
                you create a resource.
            size: |-
                -
                (Optional)
                Size of the persistent disk, specified in GB. You can specify this
                field when creating a persistent disk using the image_id or snapshot_id
                parameter, or specify it alone to create an empty persistent disk.
                If you specify this field along with image_id or snapshot_id,
                the size value must not be less than the size of the source image
                or the size of the snapshot.
            snapshot_id: '- (Optional) The source snapshot to use for disk creation.'
            status: '- The status of the disk.'
            type: '- (Optional) Type of disk to create. Provide this when creating a disk.'
            update: '- Default is 5 minutes.'
            zone: |-
                -
                (Optional)
                Availability zone where the disk will reside.
        importStatements: []
    yandex_compute_disk_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Disk.
        name: yandex_compute_disk_iam_binding
        title: yandex_compute_disk_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "disk_id": "${data.yandex_compute_disk.disk1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              dependencies:
                yandex_compute_disk.disk1: |-
                    {
                      "image_id": "ubuntu-16.04-v20180727",
                      "labels": {
                        "environment": "test"
                      },
                      "name": "disk-name",
                      "type": "network-ssd",
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            disk_id: '- (Required) ID of the disk to attach the policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_disk_iam_binding can be used per role.
        importStatements: []
    yandex_compute_disk_placement_group:
        subCategory: unknown
        description: Manages a Disk Placement Group resource.
        name: yandex_compute_disk_placement_group
        title: yandex_compute_disk_placement_group
        examples:
            - name: group1
              manifest: |-
                {
                  "description": "my description",
                  "folder_id": "abc*********123",
                  "name": "test-pg"
                }
        argumentDocs:
            create: '- Default is 1 minute.'
            delete: '- Default is 1 minute.'
            description: '- (Optional) A description of the Disk Placement Group.'
            folder_id: '- (Optional) Folder that the resource belongs to. If value is omitted, the default provider folder is used.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Disk Placement Group.'
            name: '- (Optional) The name of the Disk Placement Group.'
            status: '- Status of the Disk Placement Group.'
            update: '- Default is 1 minute.'
            zone: '- ID of the zone where the Disk Placement Group resides.'
        importStatements: []
    yandex_compute_disk_placement_group_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Disk Placement Group.
        name: yandex_compute_disk_placement_group_iam_binding
        title: yandex_compute_disk_placement_group_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "disk_placement_group_id": "${data.yandex_compute_disk_placement_group.group1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              dependencies:
                yandex_compute_disk_placement_group.group1: |-
                    {
                      "description": "my description",
                      "folder_id": "abc*********123",
                      "name": "test-pg"
                    }
        argumentDocs:
            disk_placement_group_id: '- (Required) ID of the disk placement group to attach the policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_disk_placement_group_iam_binding can be used per role.
        importStatements: []
    yandex_compute_filesystem:
        subCategory: unknown
        description: File storage is a virtual file system that can be attached to multiple Compute Cloud VMs in the same availability zone.
        name: yandex_compute_filesystem
        title: yandex_compute_filesystem
        examples:
            - name: default
              manifest: |-
                {
                  "labels": {
                    "environment": "test"
                  },
                  "name": "fs-name",
                  "size": 10,
                  "type": "network-ssd",
                  "zone": "ru-central1-a"
                }
        argumentDocs:
            block_size: '- (Optional) Block size of the filesystem, specified in bytes.'
            create: '- Default is 5 minutes.'
            created_at: '- Creation timestamp of the filesystem.'
            delete: '- Default is 5 minutes.'
            description: '- (Optional) Description of the filesystem. Provide this property when you create a resource.'
            folder_id: |-
                - (Optional) The ID of the folder that the filesystem belongs to. If it is not provided, the default
                provider folder is used.
            labels: |-
                - (Optional) Labels to assign to this filesystem. A list of key/value pairs. For details about the concept,
                see documentation.
            name: '- (Optional) Name of the filesystem. Provide this property when you create a resource.'
            size: '- (Optional) Size of the filesystem, specified in GB.'
            status: '- The status of the filesystem.'
            type: '- (Optional) Type of filesystem to create. Type network-hdd is set by default.'
            update: '- Default is 5 minutes.'
            zone: '- (Optional) Availability zone where the filesystem will reside.'
        importStatements: []
    yandex_compute_filesystem_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Filesystem.
        name: yandex_compute_filesystem_iam_binding
        title: yandex_compute_filesystem_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "filesystem_id": "${data.yandex_compute_filesystem.fs1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              dependencies:
                yandex_compute_filesystem.fs1: |-
                    {
                      "labels": {
                        "environment": "test"
                      },
                      "name": "fs-name",
                      "size": 10,
                      "type": "network-ssd",
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            filesystem_id: '- (Required) ID of the filesystem to attach the policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_filesystem_iam_binding can be used per role.
        importStatements: []
    yandex_compute_gpu_cluster:
        subCategory: unknown
        description: GPU Cluster connects multiple Compute GPU Instances in the same availability zone with high-speed low-latency network.
        name: yandex_compute_gpu_cluster
        title: yandex_compute_gpu_cluster
        examples:
            - name: default
              manifest: |-
                {
                  "interconnect_type": "infiniband",
                  "labels": {
                    "environment": "test"
                  },
                  "name": "gpu-cluster-name",
                  "zone": "ru-central1-a"
                }
        argumentDocs:
            create: '- Default is 5 minutes.'
            created_at: '- Creation timestamp of the GPU cluster.'
            delete: '- Default is 5 minutes.'
            description: '- (Optional) Description of the GPU cluster. Provide this property when you create a resource.'
            folder_id: |-
                - (Optional) The ID of the folder that the GPU cluster belongs to. If it is not provided, the default
                provider folder is used.
            interconnect_type: |-
                - (Optional) Type of interconnect between nodes to use in GPU cluster. Type infiniband is set by default,
                and it is the only one available at the moment.
            labels: |-
                - (Optional) Labels to assign to this GPU cluster. A list of key/value pairs. For details about the concept,
                see documentation.
            name: '- (Optional) Name of the GPU cluster. Provide this property when you create a resource.'
            status: '- The status of the GPU cluster.'
            update: '- Default is 5 minutes.'
            zone: '- (Optional) Availability zone where the GPU cluster will reside.'
        importStatements: []
    yandex_compute_gpu_cluster_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a GPU Cluster.
        name: yandex_compute_gpu_cluster_iam_binding
        title: yandex_compute_gpu_cluster_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "gpu_cluster_id": "${data.yandex_compute_gpu_cluster.cluster1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              dependencies:
                yandex_compute_gpu_cluster.cluster1: |-
                    {
                      "interconnect_type": "infiniband",
                      "labels": {
                        "environment": "test"
                      },
                      "name": "gpu-cluster-name",
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            gpu_cluster_id: '- (Required) ID of the gpu cluster to attach the policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_gpu_cluster_iam_binding can be used per role.
        importStatements: []
    yandex_compute_image:
        subCategory: unknown
        description: Creates a VM image for the Yandex Compute service from an existing tarball.
        name: yandex_compute_image
        title: yandex_compute_image
        examples:
            - name: foo-image
              manifest: |-
                {
                  "name": "my-custom-image",
                  "source_url": "https://storage.yandexcloud.net/lucky-images/kube-it.img"
                }
              dependencies:
                yandex_compute_instance.vm: |-
                    {
                      "boot_disk": [
                        {
                          "initialize_params": [
                            {
                              "image_id": "${yandex_compute_image.foo-image.id}"
                            }
                          ]
                        }
                      ],
                      "name": "vm-from-custom-image"
                    }
        argumentDocs:
            create: '- Default 5 minutes'
            created_at: '- Creation timestamp of the image.'
            delete: '- Default 5 minutes'
            description: |-
                - (Optional) An optional description of the image. Provide this property when
                you create a resource.
            family: '- (Optional) The name of the image family to which this image belongs.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) A set of key/value label pairs to assign to the image.'
            min_disk_size: '- (Optional) Minimum size in GB of the disk that will be created from this image.'
            name: '- (Optional) Name of the disk.'
            os_type: '- (Optional) Operating system type that is contained in the image. Possible values: "LINUX", "WINDOWS".'
            pooled: '- (Optional) Optimize the image to create a disk.'
            product_ids: |-
                - (Optional) License IDs that indicate which licenses are
                attached to this image.
            size: '- The size of the image, specified in GB.'
            source_disk: |-
                - (Optional) The ID of a disk to use as the source of the
                image. Changing this ID forces a new resource to be created.
            source_family: |-
                - (Optional) The name of the family to use as the source of the new image.
                The ID of the latest image is taken from the "standard-images" folder. Changing the family forces
                a new resource to be created.
            source_image: |-
                - (Optional) The ID of an existing image to use as the source of the
                image. Changing this ID forces a new resource to be created.
            source_snapshot: |-
                - (Optional) The ID of a snapshot to use as the source of the
                image. Changing this ID forces a new resource to be created.
            source_url: |-
                - (Optional) The URL to use as the source of the
                image. Changing this URL forces a new resource to be created.
            status: '- The status of the image.'
            update: '- Default 5 minutes'
        importStatements: []
    yandex_compute_image_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for an image.
        name: yandex_compute_image_iam_binding
        title: yandex_compute_image_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "image_id": "${data.yandex_compute_image.image1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              dependencies:
                yandex_compute_image.image1: |-
                    {
                      "name": "my-custom-image",
                      "source_url": "https://storage.yandexcloud.net/lucky-images/kube-it.img"
                    }
        argumentDocs:
            image_id: '- (Required) ID of the image to attach the policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_image_iam_binding can be used per role.
        importStatements: []
    yandex_compute_instance:
        subCategory: unknown
        description: Manages a VM instance resource.
        name: yandex_compute_instance
        title: yandex_compute_instance
        examples:
            - name: default
              manifest: |-
                {
                  "boot_disk": [
                    {
                      "disk_id": "${yandex_compute_disk.boot-disk.id}"
                    }
                  ],
                  "metadata": {
                    "foo": "bar",
                    "ssh-keys": "ubuntu:${file(\"~/.ssh/id_rsa.pub\")}"
                  },
                  "name": "test",
                  "network_interface": [
                    {
                      "index": 1,
                      "subnet_id": "${yandex_vpc_subnet.foo.id}"
                    }
                  ],
                  "platform_id": "standard-v1",
                  "resources": [
                    {
                      "cores": 2,
                      "memory": 4
                    }
                  ],
                  "zone": "ru-central1-a"
                }
              references:
                boot_disk.disk_id: yandex_compute_disk.boot-disk.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            allow_stopping_for_update: |-
                - (Optional) If true, allows Terraform to stop the instance in order to update its properties.
                If you try to update a property that requires stopping the instance without setting this field, the update will fail.
            boot_disk: '- (Required) The boot disk for the instance. The structure is documented below.'
            boot_disk.auto_delete: |-
                - (Optional) Defines whether the disk will be auto-deleted when the instance
                is deleted. The default value is True.
            boot_disk.device_name: '- (Optional) Name that can be used to access an attached disk.'
            boot_disk.disk_id: |-
                - (Optional) The ID of the existing disk (such as those managed by
                yandex_compute_disk) to attach as a boot disk.
            boot_disk.initialize_params: |-
                - (Optional) Parameters for a new disk that will be created
                alongside the new instance. Either initialize_params or disk_id must be set. The structure is documented below.
            boot_disk.mode: '- (Optional) Type of access to the disk resource. By default, a disk is attached in READ_WRITE mode.'
            create: '- Default 5 minutes'
            created_at: '- Creation timestamp of the instance.'
            delete: '- Default 5 minutes'
            description: '- (Optional) Description of the instance.'
            dns_record.dns_zone_id: '- (Optional) DNS zone ID (if not set, private zone used).'
            dns_record.fqdn: '- (Required) DNS record FQDN (must have a dot at the end).'
            dns_record.ptr: '- (Optional) When set to true, also create a PTR DNS record.'
            dns_record.ttl: '- (Optional) DNS record TTL. in seconds'
            filesystem: '- (Optional) List of filesystems that are attached to the instance. Structure is documented below.'
            filesystem.device_name: '- (Optional) Name of the device representing the filesystem on the instance.'
            filesystem.filesystem_id: '- (Required) ID of the filesystem that should be attached.'
            filesystem.mode: |-
                - (Optional) Mode of access to the filesystem that should be attached. By default, filesystem is attached
                in READ_WRITE mode.
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            fqdn: '- The fully qualified DNS name of this instance.'
            gpu_cluster_id: '- (Optional) ID of the GPU cluster to attach this instance to. The GPU cluster must exist in the same zone as the instance.'
            host_affinity_rules.key: '- (Required) Affinity label or one of reserved values - yc.hostId, yc.hostGroupId.'
            host_affinity_rules.op: '- (Required) Affinity action. The only value supported is IN.'
            host_affinity_rules.value: '- (Required) List of values (host IDs or host group IDs).'
            hostname: |-
                - (Optional) Host name for the instance. This field is used to generate the instance fqdn value.
                The host name must be unique within the network and region. If not specified, the host name will be equal
                to id of the instance and fqdn will be <id>.auto.internal.
                Otherwise FQDN will be <hostname>.<region_id>.internal.
            initialize_params.block_size: '- (Optional) Block size of the disk, specified in bytes.'
            initialize_params.description: '- (Optional) Description of the boot disk.'
            initialize_params.image_id: '- (Optional) A disk image to initialize this disk from.'
            initialize_params.name: '- (Optional) Name of the boot disk.'
            initialize_params.size: '- (Optional) Size of the disk in GB.'
            initialize_params.snapshot_id: '- (Optional) A snapshot to initialize this disk from.'
            initialize_params.type: '- (Optional) Disk type.'
            ipv6_dns_record.dns_zone_id: '- (Optional) DNS zone ID (if not set, private zone used).'
            ipv6_dns_record.fqdn: '- (Required) DNS record FQDN (must have a dot at the end).'
            ipv6_dns_record.ptr: '- (Optional) When set to true, also create a PTR DNS record.'
            ipv6_dns_record.ttl: '- (Optional) DNS record TTL. in seconds'
            labels: '- (Optional) A set of key/value label pairs to assign to the instance.'
            local_disk: '- (Optional) List of local disks that are attached to the instance. Structure is documented below.'
            local_disk.device_name: '- The name of the local disk device.'
            local_disk.size_bytes: '- (Required) Size of the disk, specified in bytes.'
            maintenance_grace_period: '- (Optional) Time between notification via metadata service and maintenance. E.g., 60s.'
            maintenance_policy: '- (Optional) Behaviour on maintenance events. The default is unspecified. Values: unspecified, migrate, restart.'
            metadata: |-
                - (Optional) Metadata key/value pairs to make available from
                within the instance.
            metadata_options: '- (Optional) Options allow user to configure access to instance''s metadata'
            name: '- (Optional) Resource name.'
            nat_dns_record.dns_zone_id: '- (Optional) DNS zone ID (if not set, private zone used).'
            nat_dns_record.fqdn: '- (Required) DNS record FQDN (must have a dot at the end).'
            nat_dns_record.ptr: '- (Optional) When set to true, also create a PTR DNS record.'
            nat_dns_record.ttl: '- (Optional) DNS record TTL. in seconds'
            network_acceleration_type: '- (Optional) Type of network acceleration. The default is standard. Values: standard, software_accelerated'
            network_interface: |-
                - (Required) Networks to attach to the instance. This can
                be specified multiple times. The structure is documented below.
            network_interface.0.ip_address: '- The internal IP address of the instance.'
            network_interface.0.nat_ip_address: '- The external IP address of the instance.'
            network_interface.dns_record: '- (Optional) List of configurations for creating ipv4 DNS records. The structure is documented below.'
            network_interface.index: |-
                - (Optional) Index of network interface, will be calculated automatically for instance create or update operations
                if not specified. Required for attach/detach operations.
            network_interface.ip_address: |-
                - (Optional) The private IP address to assign to the instance. If
                empty, the address will be automatically assigned from the specified subnet.
            network_interface.ipv4: '- (Optional) Allocate an IPv4 address for the interface. The default value is true.'
            network_interface.ipv6: |-
                - (Optional) If true, allocate an IPv6 address for the interface.
                The address will be automatically assigned from the specified subnet.
            network_interface.ipv6_address: '- (Optional) The private IPv6 address to assign to the instance.'
            network_interface.ipv6_dns_record: '- (Optional) List of configurations for creating ipv6 DNS records. The structure is documented below.'
            network_interface.nat: '- (Optional) Provide a public address, for instance, to access the internet over NAT.'
            network_interface.nat_dns_record: '- (Optional) List of configurations for creating ipv4 NAT DNS records. The structure is documented below.'
            network_interface.nat_ip_address: '- (Optional) Provide a public address, for instance, to access the internet over NAT. Address should be already reserved in web UI.'
            network_interface.security_group_ids: '- (Optional) Security group ids for network interface.'
            network_interface.subnet_id: |-
                - (Required) ID of the subnet to attach this
                interface to. The subnet must exist in the same zone where this instance will be
                created.
            placement_policy: '- (Optional) The placement policy configuration. The structure is documented below.'
            placement_policy.host_affinity_rules: '- (Optional) List of host affinity rules. The structure is documented below.'
            placement_policy.placement_group_id: '- (Optional) Specifies the id of the Placement Group to assign to the instance.'
            platform_id: '- (Optional) The type of virtual machine to create. The default is ''standard-v1''.'
            resources: '- (Required) Compute resources that are allocated for the instance. The structure is documented below.'
            resources.core_fraction: '- (Optional) If provided, specifies baseline performance for a core as a percent.'
            resources.cores: '- (Required) CPU cores for the instance.'
            resources.gpus: '- (Optional) If provided, specifies the number of GPU devices for the instance'
            resources.memory: '- (Required) Memory size in GB.'
            scheduling_policy: '- (Optional) Scheduling policy configuration. The structure is documented below.'
            scheduling_policy.preemptible: '- (Optional) Specifies if the instance is preemptible. Defaults to false.'
            secondary_disk: |-
                - (Optional) A set of disks to attach to the instance. The structure is documented below.
                Note: The allow_stopping_for_update property must be set to true in order to update this structure.
            secondary_disk.auto_delete: |-
                - (Optional) Whether the disk is auto-deleted when the instance
                is deleted. The default value is false.
            secondary_disk.device_name: |-
                - (Optional) Name that can be used to access an attached disk
                under /dev/disk/by-id/.
            secondary_disk.disk_id: '- (Required) ID of the disk that is attached to the instance.'
            secondary_disk.mode: '- (Optional) Type of access to the disk resource. By default, a disk is attached in READ_WRITE mode.'
            service_account_id: '- (Optional) ID of the service account authorized for this instance.'
            status: '- The status of this instance.'
            update: '- Default 5 minutes'
            zone: |-
                - (Optional) The availability zone where the virtual machine will be created. If it is not provided,
                the default provider folder is used.
        importStatements: []
    yandex_compute_instance_group:
        subCategory: unknown
        description: Manages an Instance group resource.
        name: yandex_compute_instance_group
        title: yandex_compute_instance_group
        examples:
            - name: group1
              manifest: |-
                {
                  "allocation_policy": [
                    {
                      "zones": [
                        "ru-central1-a"
                      ]
                    }
                  ],
                  "deletion_protection": true,
                  "deploy_policy": [
                    {
                      "max_creating": 2,
                      "max_deleting": 2,
                      "max_expansion": 2,
                      "max_unavailable": 2
                    }
                  ],
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "instance_template": [
                    {
                      "boot_disk": [
                        {
                          "initialize_params": [
                            {
                              "image_id": "${data.yandex_compute_image.ubuntu.id}",
                              "size": 4
                            }
                          ],
                          "mode": "READ_WRITE"
                        }
                      ],
                      "labels": {
                        "label1": "label1-value",
                        "label2": "label2-value"
                      },
                      "metadata": {
                        "foo": "bar",
                        "ssh-keys": "ubuntu:${file(\"~/.ssh/id_rsa.pub\")}"
                      },
                      "network_interface": [
                        {
                          "network_id": "${yandex_vpc_network.my-inst-group-network.id}",
                          "subnet_ids": [
                            "${yandex_vpc_subnet.my-inst-group-subnet.id}"
                          ]
                        }
                      ],
                      "network_settings": [
                        {
                          "type": "STANDARD"
                        }
                      ],
                      "platform_id": "standard-v1",
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 2
                        }
                      ]
                    }
                  ],
                  "name": "test-ig",
                  "scale_policy": [
                    {
                      "fixed_scale": [
                        {
                          "size": 3
                        }
                      ]
                    }
                  ],
                  "service_account_id": "${yandex_iam_service_account.test_account.id}",
                  "variables": {
                    "test_key1": "test_value1",
                    "test_key2": "test_value2"
                  }
                }
        argumentDocs:
            allocation_policy: '- (Required) The allocation policy of the instance group by zone and region. The structure is documented below.'
            allocation_policy.instance_tags_pool: '- (Optional) Array of availability zone IDs with list of instance tags.'
            allocation_policy.zones: '- (Required) A list of availability zones.'
            application_load_balancer: '- (Optional) Application Load balancing (L7) specifications. The structure is documented below.'
            application_load_balancer.ignore_health_checks: '- (Optional) Do not wait load balancer health checks.'
            application_load_balancer.max_opening_traffic_duration: '- (Optional) Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.'
            application_load_balancer.target_group_description: '- (Optional) A description of the target group.'
            application_load_balancer.target_group_labels: '- (Optional) A set of key/value label pairs.'
            application_load_balancer.target_group_name: '- (Optional) The name of the target group.'
            auto_scale.cpu_utilization_target: '- (Required) Target CPU load level.'
            auto_scale.custom_rule: '- (Optional) A list of custom rules. The structure is documented below.'
            auto_scale.initial_size: '- (Required) The initial number of instances in the instance group.'
            auto_scale.max_size: '- (Optional) The maximum number of virtual machines in the group.'
            auto_scale.measurement_duration: |-
                - (Required) The amount of time, in seconds, that metrics are averaged for.
                If the average value at the end of the interval is higher than the cpu_utilization_target,
                the instance group will increase the number of virtual machines in the group.
            auto_scale.min_zone_size: '- (Optional) The minimum number of virtual machines in a single availability zone.'
            auto_scale.stabilization_duration: |-
                - (Optional) The minimum time interval, in seconds, to monitor the load before
                an instance group can reduce the number of virtual machines in the group. During this time, the group
                will not decrease even if the average load falls below the value of cpu_utilization_target.
            auto_scale.warmup_duration: |-
                - (Optional) The warm-up time of the virtual machine, in seconds. During this time,
                traffic is fed to the virtual machine, but load metrics are not taken into account.
            boot_disk.device_name: '- (Optional) This value can be used to reference the device under /dev/disk/by-id/.'
            boot_disk.initialize_params: '- (Required) Parameters for creating a disk alongside the instance. The structure is documented below.'
            boot_disk.mode: '- (Optional) The access mode to the disk resource. By default a disk is attached in READ_WRITE mode.'
            boot_disk.name: '- When set can be later used to change DiskSpec of actual disk.'
            create: '- Default 30 minutes'
            created_at: '- The instance group creation timestamp.'
            custom_rule.folder_id: '- (Optional) Folder ID of custom metric in Yandex Monitoring that should be used for scaling.'
            custom_rule.labels: '- (Optional) A map of labels of metric.'
            custom_rule.metric_name: '- (Required) The name of metric.'
            custom_rule.metric_type: '- (Required) Metric type, GAUGE or COUNTER.'
            custom_rule.rule_type: |-
                - (Required) Rule type: UTILIZATION - This type means that the metric applies to one instance.
                First, Instance Groups calculates the average metric value for each instance,
                then averages the values for instances in one availability zone.
                This type of metric must have the instance_id label. WORKLOAD - This type means that the metric applies to instances in one availability zone.
                This type of metric must have the zone_id label.
            custom_rule.service: '- (Optional) Service of custom metric in Yandex Monitoring that should be used for scaling.'
            custom_rule.target: '- (Required) Target metric value level.'
            delete: '- Default 30 minutes'
            deletion_protection: '- (Optional) Flag that protects the instance group from accidental deletion.'
            deploy_policy: '- (Required) The deployment policy of the instance group. The structure is documented below.'
            deploy_policy.max_creating: '- (Optional) The maximum number of instances that can be created at the same time.'
            deploy_policy.max_deleting: '- (Optional) The maximum number of instances that can be deleted at the same time.'
            deploy_policy.max_expansion: |-
                - (Required) The maximum number of instances that can be temporarily allocated above the group's target size
                during the update process.
            deploy_policy.max_unavailable: |-
                - (Required) The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
                during the update process.
            deploy_policy.startup_duration: |-
                - (Optional) The amount of time in seconds to allow for an instance to start.
                Instance will be considered up and running (and start receiving traffic) only after the startup_duration
                has elapsed and all health checks are passed.
            deploy_policy.strategy: |-
                - (Optional) Affects the lifecycle of the instance during deployment. If set to proactive (default), Instance Groups
                can forcefully stop a running instance. If opportunistic, Instance Groups does not stop a running instance. Instead,
                it will wait until the instance stops itself or becomes unhealthy.
            description: '- (Optional) A description of the instance group.'
            dns_record.dns_zone_id: '- (Optional) DNS zone id (if not set, private zone used).'
            dns_record.fqdn: '- (Required) DNS record fqdn (must have dot at the end).'
            dns_record.ptr: '- (Optional) When set to true, also create PTR DNS record. ---'
            dns_record.ttl: '- (Optional) DNS record TTL.'
            filesystem.device_name: '- (Optional) Name of the device representing the filesystem on the instance.'
            filesystem.filesystem_id: '- (Required) ID of the filesystem that should be attached.'
            filesystem.mode: |-
                - (Optional) Mode of access to the filesystem that should be attached. By default, filesystem is attached
                in READ_WRITE mode.
            fixed_scale.size: '- (Required) The number of instances in the instance group.'
            folder_id: '- (Required) The ID of the folder that the resources belong to.'
            health_check: '- (Optional) Health check specifications. The structure is documented below.'
            health_check.healthy_threshold: '- (Optional) The number of successful health checks before the managed instance is declared healthy.'
            health_check.http_options: '- (Optional) HTTP check options. The structure is documented below.'
            health_check.interval: '- (Optional) The interval to wait between health checks in seconds.'
            health_check.tcp_options: '- (Optional) TCP check options. The structure is documented below.'
            health_check.timeout: '- (Optional) The length of time to wait for a response before the health check times out in seconds.'
            health_check.unhealthy_threshold: '- (Optional) The number of failed health checks before the managed instance is declared unhealthy.'
            http_options.path: '- (Required) The URL path used for health check requests.'
            http_options.port: '- (Required) The port used for HTTP health checks.'
            id: '- The ID of the instance group.'
            initialize_params.description: '- (Optional) A description of the boot disk.'
            initialize_params.image_id: '- (Optional) The disk image to initialize this disk from.'
            initialize_params.size: '- (Optional) The size of the disk in GB.'
            initialize_params.snapshot_id: '- (Optional) The snapshot to initialize this disk from.'
            initialize_params.type: '- (Optional) The disk type.'
            instance_tags_pool.tags: '- (Required) List of tags for instances in zone.'
            instance_tags_pool.zone: '- (Required) Availability zone.'
            instance_template: '- (Required) The template for creating new instances. The structure is documented below.'
            instance_template.boot_disk: '- (Required) Boot disk specifications for the instance. The structure is documented below.'
            instance_template.description: '- (Optional) A description of the instance.'
            instance_template.filesystem: '- (Optional) List of filesystems to attach to the instance. The structure is documented below.'
            instance_template.hostname: |-
                - (Optional) Hostname template for the instance.
                This field is used to generate the FQDN value of instance.
                The hostname must be unique within the network and region.
                If not specified, the hostname will be equal to id of the instance
                and FQDN will be <id>.auto.internal. Otherwise FQDN will be <hostname>.<region_id>.internal.
                In order to be unique it must contain at least on of instance unique placeholders:
                {instance.short_id}
                {instance.index}
                combination of {instance.zone_id} and {instance.index_in_zone}
                Example: my-instance-{instance.index}
                If not set, name value will be used
                It may also contain another placeholders, see metadata doc for full list.
            instance_template.labels: '- (Optional) A set of key/value label pairs to assign to the instance.'
            instance_template.metadata: '- (Optional) A set of metadata key/value pairs to make available from within the instance.'
            instance_template.metadata_options: '- (Optional) Options allow user to configure access to managed instances metadata'
            instance_template.name: |-
                - (Optional) Name template of the instance.
                In order to be unique it must contain at least one of instance unique placeholders:
                {instance.short_id}
                {instance.index}
                combination of {instance.zone_id} and {instance.index_in_zone}
                Example: my-instance-{instance.index}
                If not set, default is used: {instance_group.id}-{instance.short_id}
                It may also contain another placeholders, see metadata doc for full list.
            instance_template.network_interface: '- (Required) Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.'
            instance_template.network_settings: '- (Optional) Network acceleration type for instance. The structure is documented below.'
            instance_template.placement_policy: '- (Optional) The placement policy configuration. The structure is documented below.'
            instance_template.platform_id: '- (Optional) The ID of the hardware platform configuration for the instance. The default is ''standard-v1''.'
            instance_template.resources: '- (Required) Compute resource specifications for the instance. The structure is documented below.'
            instance_template.scheduling_policy: '- (Optional) The scheduling policy configuration. The structure is documented below.'
            instance_template.secondary_disk: '- (Optional) A list of disks to attach to the instance. The structure is documented below.'
            instance_template.service_account_id: '- (Optional) The ID of the service account authorized for this instance.'
            instances.fqdn: '- The Fully Qualified Domain Name.'
            instances.instance_id: '- The ID of the instance.'
            instances.name: '- The name of the managed instance.'
            instances.network_interface: '- An array with the network interfaces attached to the managed instance.'
            instances.network_interface.index: '- The index of the network interface as generated by the server.'
            instances.network_interface.ip_address: '- The private IP address to assign to the instance. If empty, the address is automatically assigned from the specified subnet.'
            instances.network_interface.ipv4: '- True if IPv4 address allocated for the network interface.'
            instances.network_interface.mac_address: '- The MAC address assigned to the network interface.'
            instances.network_interface.nat: '- The instance''s public address for accessing the internet over NAT.'
            instances.network_interface.nat_ip_address: '- The public IP address of the instance.'
            instances.network_interface.nat_ip_version: '- The IP version for the public address.'
            instances.network_interface.subnet_id: '- The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.'
            instances.status: '- The status of the instance.'
            instances.status_message: '- The status message of the instance.'
            instances.zone_id: '- The ID of the availability zone where the instance resides.'
            ipv6_dns_record.dns_zone_id: '- (Optional) DNS zone id (if not set, private zone used).'
            ipv6_dns_record.fqdn: '- (Required) DNS record fqdn (must have dot at the end).'
            ipv6_dns_record.ptr: '- (Optional) When set to true, also create PTR DNS record.'
            ipv6_dns_record.ttl: '- (Optional) DNS record TTL.'
            labels: '- (Optional) A set of key/value label pairs to assign to the instance group.'
            load_balancer: '- (Optional) Load balancing specifications. The structure is documented below.'
            load_balancer.0.status_message: '- The status message of the target group.'
            load_balancer.0.target_group_id: '- The ID of the target group.'
            load_balancer.ignore_health_checks: '- (Optional) Do not wait load balancer health checks.'
            load_balancer.max_opening_traffic_duration: '- (Optional) Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.'
            load_balancer.target_group_description: '- (Optional) A description of the target group.'
            load_balancer.target_group_labels: '- (Optional) A set of key/value label pairs.'
            load_balancer.target_group_name: '- (Optional) The name of the target group.'
            max_checking_health_duration: '- (Optional) Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.'
            name: '- (Optional) The name of the instance group.'
            nat_dns_record.dns_zone_id: '- (Optional) DNS zone id (if not set, private zone used).'
            nat_dns_record.fqdn: '- (Required) DNS record fqdn (must have dot at the end).'
            nat_dns_record.ptr: '- (Optional) When set to true, also create PTR DNS record.'
            nat_dns_record.ttl: '- (Optional) DNS record TTL.'
            network_interface.dns_record: '- (Optional) List of dns records.  The structure is documented below.'
            network_interface.ip_address: '- (Optional) Manual set static IP address.'
            network_interface.ipv6_address: '- (Optional) Manual set static IPv6 address.'
            network_interface.ipv6_dns_record: '- (Optional) List of ipv6 dns records.  The structure is documented below.'
            network_interface.nat: '- (Optional) Flag for using NAT.'
            network_interface.nat_dns_record: '- (Optional) List of nat dns records.  The structure is documented below.'
            network_interface.nat_ip_address: '- (Optional) A public address that can be used to access the internet over NAT. Use variables to set.'
            network_interface.network_id: '- (Optional) The ID of the network.'
            network_interface.security_group_ids: '- (Optional) Security group ids for network interface.'
            network_interface.subnet_ids: '- (Optional) The ID of the subnets to attach this interface to.'
            network_settings.type: '- (Optional) Network acceleration type. By default a network is in STANDARD mode.'
            placement_policy.placement_group_id: '- (Optional) Specifies the id of the Placement Group to assign to the instances.'
            resources.core_fraction: '- (Optional) If provided, specifies baseline core performance as a percent.'
            resources.cores: '- (Required) The number of CPU cores for the instance.'
            resources.memory: '- (Required) The memory size in GB.'
            scale_policy: '- (Required) The scaling policy of the instance group. The structure is documented below.'
            scale_policy.auto_scale: '- (Optional) The auto scaling policy of the instance group. The structure is documented below.'
            scale_policy.fixed_scale: '- (Optional) The fixed scaling policy of the instance group. The structure is documented below.'
            scale_policy.test_auto_scale: '- (Optional) The test auto scaling policy of the instance group. Use it to test how the auto scale works. The structure is documented below.'
            scheduling_policy.preemptible: '- (Optional) Specifies if the instance is preemptible. Defaults to false.'
            secondary_disk.device_name: '- (Optional) This value can be used to reference the device under /dev/disk/by-id/.'
            secondary_disk.disk_id: '- (Optional) ID of the existing disk. To set use variables.'
            secondary_disk.initialize_params: '- (Optional) Parameters used for creating a disk alongside the instance. The structure is documented below.'
            secondary_disk.mode: '- (Optional) The access mode to the disk resource. By default a disk is attached in READ_WRITE mode.'
            secondary_disk.name: '- (Optional) When set can be later used to change DiskSpec of actual disk.'
            service_account_id: '- (Required) The ID of the service account authorized for this instance group.'
            tcp_options.port: '- (Required) The port used for TCP health checks.'
            test_auto_scale.cpu_utilization_target: '- (Required) Target CPU load level.'
            test_auto_scale.custom_rule: '- (Optional) A list of custom rules. The structure is documented below.'
            test_auto_scale.initial_size: '- (Required) The initial number of instances in the instance group.'
            test_auto_scale.max_size: '- (Optional) The maximum number of virtual machines in the group.'
            test_auto_scale.measurement_duration: |-
                - (Required) The amount of time, in seconds, that metrics are averaged for.
                If the average value at the end of the interval is higher than the cpu_utilization_target,
                the instance group will increase the number of virtual machines in the group.
            test_auto_scale.min_zone_size: '- (Optional) The minimum number of virtual machines in a single availability zone.'
            test_auto_scale.stabilization_duration: |-
                - (Optional) The minimum time interval, in seconds, to monitor the load before
                an instance group can reduce the number of virtual machines in the group. During this time, the group
                will not decrease even if the average load falls below the value of cpu_utilization_target.
            test_auto_scale.warmup_duration: |-
                - (Optional) The warm-up time of the virtual machine, in seconds. During this time,
                traffic is fed to the virtual machine, but load metrics are not taken into account.
            update: '- Default 30 minutes'
            variables: '- (Optional) A set of key/value  variables pairs to assign to the instance group.'
        importStatements: []
    yandex_compute_instance_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for an instance.
        name: yandex_compute_instance_iam_binding
        title: yandex_compute_instance_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "instance_id": "${data.yandex_compute_instance.instance1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              dependencies:
                yandex_compute_instance.instance1: |-
                    {
                      "boot_disk": [
                        {
                          "disk_id": "${yandex_compute_disk.boot-disk.id}"
                        }
                      ],
                      "metadata": {
                        "foo": "bar",
                        "ssh-keys": "ubuntu:${file(\"~/.ssh/id_rsa.pub\")}"
                      },
                      "name": "test",
                      "network_interface": [
                        {
                          "index": 1,
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        }
                      ],
                      "platform_id": "standard-v1",
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 4
                        }
                      ],
                      "zone": "ru-central1-a"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            instance_id: '- (Required) ID of the instance to attach the policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_instance_iam_binding can be used per role.
        importStatements: []
    yandex_compute_placement_group:
        subCategory: unknown
        description: Manages a Placement group resource.
        name: yandex_compute_placement_group
        title: yandex_compute_placement_group
        examples:
            - name: group1
              manifest: |-
                {
                  "description": "my description",
                  "folder_id": "abc*********123",
                  "name": "test-pg"
                }
        argumentDocs:
            create: '- Default is 1 minute.'
            delete: '- Default is 1 minute.'
            description: '- (Optional) A description of the Placement Group.'
            folder_id: '- (Optional) Folder that the resource belongs to. If value is omitted, the default provider folder is used.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Placement Group.'
            name: '- (Optional) The name of the Placement Group.'
            placement_strategy_partitions: '- A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with placement_strategy_spread).'
            placement_strategy_spread: '- A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with placement_strategy_partitions).'
            update: '- Default is 1 minute.'
        importStatements: []
    yandex_compute_placement_group_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Placement Group.
        name: yandex_compute_placement_group_iam_binding
        title: yandex_compute_placement_group_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "placement_group_id": "${data.yandex_compute_placement_group.pg1.id}",
                  "role": "editor"
                }
              dependencies:
                yandex_compute_placement_group.pg1: |-
                    {
                      "description": "my description",
                      "folder_id": "abc*********123",
                      "name": "test-pg"
                    }
        argumentDocs:
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            placement_group_id: '- (Required) ID of the placement group to attach the policy to.'
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_placement_group_iam_binding can be used per role.
        importStatements: []
    yandex_compute_snapshot:
        subCategory: unknown
        description: Creates a new snapshot of a disk.
        name: yandex_compute_snapshot
        title: yandex_compute_snapshot
        examples:
            - name: default
              manifest: |-
                {
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "test-snapshot",
                  "source_disk_id": "test_disk_id"
                }
        argumentDocs:
            create: '- Default 20 minutes'
            created_at: '- Creation timestamp of the snapshot.'
            delete: '- Default 20 minutes'
            description: '- (Optional) Description of the resource.'
            disk_size: '- Size of the disk when the snapshot was created, specified in GB.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) A set of key/value label pairs to assign to the snapshot.'
            name: '- (Optional) A name for the resource.'
            source_disk_id: '- (Required) ID of the disk to create a snapshot from.'
            storage_size: '- Size of the snapshot, specified in GB.'
            update: '- Default 20 minutes'
        importStatements: []
    yandex_compute_snapshot_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Snapshot.
        name: yandex_compute_snapshot_iam_binding
        title: yandex_compute_snapshot_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor",
                  "snapshot_id": "${data.yandex_compute_snapshot.snapshot1.id}"
                }
              dependencies:
                yandex_compute_snapshot.snapshot1: |-
                    {
                      "labels": {
                        "my-label": "my-label-value"
                      },
                      "name": "test-snapshot",
                      "source_disk_id": "test_disk_id"
                    }
        argumentDocs:
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_snapshot_iam_binding can be used per role.
            snapshot_id: '- (Required) ID of the snapshot to attach the policy to.'
        importStatements: []
    yandex_compute_snapshot_schedule:
        subCategory: unknown
        description: Creates a new snapshot schedule.
        name: yandex_compute_snapshot_schedule
        title: yandex_compute_snapshot_schedule
        examples:
            - name: default
              manifest: |-
                {
                  "disk_ids": [
                    "test_disk_id",
                    "another_test_disk_id"
                  ],
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "my-name",
                  "schedule_policy": [
                    {
                      "expression": "0 0 * * *"
                    }
                  ],
                  "snapshot_count": 1,
                  "snapshot_spec": [
                    {
                      "description": "snapshot-description",
                      "labels": {
                        "snapshot-label": "my-snapshot-label-value"
                      }
                    }
                  ]
                }
            - name: default
              manifest: |-
                {
                  "disk_ids": [
                    "test_disk_id",
                    "another_test_disk_id"
                  ],
                  "retention_period": "12h",
                  "schedule_policy": [
                    {
                      "expression": "0 0 * * *"
                    }
                  ],
                  "snapshot_spec": [
                    {
                      "description": "retention-snapshot"
                    }
                  ]
                }
        argumentDocs:
            create: '- Default 5 minutes'
            created_at: '- Creation timestamp of the snapshot schedule.'
            delete: '- Default 5 minutes'
            description: '- (Optional) Description of the resource.'
            disk_ids: '- (Optional) IDs of the disk for snapshot schedule.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) A set of key/value label pairs to assign to the snapshot schedule.'
            name: '- (Optional) A name for the resource.'
            retention_period: '- (Optional) Time duration applied to snapshots created by this snapshot schedule. This is a signed sequence of decimal numbers, each with optional fraction and a unit suffix. Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h". Examples: "300ms", "1.5h" or "2h45m".'
            schedule_policy: '- (Required) Schedule policy of the snapshot schedule.'
            schedule_policy.expression: '- (Required) Cron expression to schedule snapshots (in cron format "* * * * *").'
            schedule_policy.start_at: '- (Optional) Time to start the snapshot schedule (in format RFC3339 "2006-01-02T15:04:05Z07:00"). If empty current time will be used. Unlike an expression that specifies regularity rules, the start_at parameter determines from what point these rules will be applied.'
            snapshot_count: '- (Optional) Maximum number of snapshots for every disk of the snapshot schedule.'
            snapshot_spec: '- (Optional) Additional attributes for snapshots created by this snapshot schedule.'
            snapshot_spec.description: '- (Optional) Description to assign to snapshots created by this snapshot schedule.'
            snapshot_spec.labels: '- (Optional) A set of key/value label pairs to assign to snapshots created by this snapshot schedule.'
            status: '- The status of the snapshot schedule.'
            update: '- Default 5 minutes'
        importStatements: []
    yandex_compute_snapshot_schedule_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Snapshot Schedule.
        name: yandex_compute_snapshot_schedule_iam_binding
        title: yandex_compute_snapshot_schedule_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor",
                  "snapshot_schedule_id": "${data.yandex_compute_snapshot_schedule.schedule1.id}"
                }
              dependencies:
                yandex_compute_snapshot_schedule.schedule1: |-
                    {
                      "disk_ids": [
                        "test_disk_id",
                        "another_test_disk_id"
                      ],
                      "retention_period": "12h",
                      "schedule_policy": [
                        {
                          "expression": "0 0 * * *"
                        }
                      ],
                      "snapshot_spec": [
                        {
                          "description": "retention-snapshot"
                        }
                      ]
                    }
        argumentDocs:
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_compute_snapshot_schedule_iam_binding can be used per role.
            snapshot_schedule_id: '- (Required) ID of the snapshot schedule to attach the policy to.'
        importStatements: []
    yandex_container_registry:
        subCategory: unknown
        description: Creates a new container registry.
        name: yandex_container_registry
        title: yandex_container_registry
        examples:
            - name: default
              manifest: |-
                {
                  "folder_id": "test_folder_id",
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "test-registry"
                }
        argumentDocs:
            created_at: '- Creation timestamp of the registry.'
            folder_id: '- (Optional) Folder that the resource belongs to. If value is omitted, the default provider folder is used.'
            labels: '- (Optional) A set of key/value label pairs to assign to the registry.'
            name: '- (Optional) A name of the registry.'
            status: '- Status of the registry.'
        importStatements: []
    yandex_container_registry_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_container_registry_iam_binding
        title: yandex_container_registry_iam_binding
        examples:
            - name: puller
              manifest: |-
                {
                  "members": [
                    "system:allUsers"
                  ],
                  "registry_id": "${yandex_container_registry.your-registry.id}",
                  "role": "container-registry.images.puller"
                }
              references:
                registry_id: yandex_container_registry.your-registry.id
              dependencies:
                yandex_container_registry.your-registry: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "registry-name"
                    }
        argumentDocs:
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            registry_id: '- (Required) The Yandex Container Registry ID to apply a binding to.'
            role: '- (Required) The role that should be applied. See roles.'
        importStatements: []
    yandex_container_registry_ip_permission:
        subCategory: unknown
        description: Creates a new Container Registry IP Permission.
        name: yandex_container_registry_ip_permission
        title: yandex_container_registry_ip_permission
        examples:
            - name: my_ip_permission
              manifest: |-
                {
                  "pull": [
                    "10.1.0.0/16",
                    "10.5.0/16"
                  ],
                  "push": [
                    "10.1.0.0/16",
                    "10.2.0.0/16",
                    "10.3.0.0/16"
                  ],
                  "registry_id": "${yandex_container_registry.my_registry.id}"
                }
              references:
                registry_id: yandex_container_registry.my_registry.id
              dependencies:
                yandex_container_registry.my_registry: |-
                    {
                      "name": "test-registry"
                    }
        argumentDocs:
            pull: '- List of configured CIDRs, from which pull is allowed.'
            push: '- List of configured CIDRs, from which push is allowed.'
            registry_id: '- (Required) The ID of the registry that ip restrictions applied to.'
        importStatements: []
    yandex_container_repository:
        subCategory: unknown
        description: Creates a new container repository.
        name: yandex_container_repository
        title: yandex_container_repository
        examples:
            - name: my-repository
              manifest: |-
                {
                  "name": "${yandex_container_registry.my-registry.id}/test-repository"
                }
              dependencies:
                yandex_container_registry.my-registry: |-
                    {
                      "name": "test-registry"
                    }
        argumentDocs:
            name: '- A name of the repository. The name of the repository should start with id of a container registry and match the name of the images that will be pushed in the repository.'
        importStatements: []
    yandex_container_repository_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_container_repository_iam_binding
        title: yandex_container_repository_iam_binding
        examples:
            - name: puller
              manifest: |-
                {
                  "members": [
                    "system:allUsers"
                  ],
                  "repository_id": "${yandex_container_repository.repo-1.id}",
                  "role": "container-registry.images.puller"
                }
              references:
                repository_id: yandex_container_repository.repo-1.id
              dependencies:
                yandex_container_registry.your-registry: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "registry-name"
                    }
                yandex_container_repository.repo-1: |-
                    {
                      "name": "${yandex_container_registry.your-registry.id}/repo-1"
                    }
            - name: pusher
              manifest: |-
                {
                  "members": [
                    "serviceAccount:your-service-account-id"
                  ],
                  "repository_id": "${yandex_container_repository.repo-2.id}",
                  "role": "container-registry.images.pusher"
                }
              references:
                repository_id: yandex_container_repository.repo-2.id
              dependencies:
                yandex_container_registry.your-registry: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "registry-name"
                    }
                yandex_container_repository.repo-1: |-
                    {
                      "name": "${yandex_container_registry.your-registry.id}/repo-1"
                    }
        argumentDocs:
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            repository_id: '- (Required) The Yandex Container Repository ID to apply a binding to.'
            role: '- (Required) The role that should be applied. See roles.'
        importStatements: []
    yandex_container_repository_lifecycle_policy:
        subCategory: unknown
        description: Creates a new container repository lifecycle policy.
        name: yandex_container_repository_lifecycle_policy
        title: yandex_container_repository_lifecycle_policy
        examples:
            - name: my_lifecycle_policy
              manifest: |-
                {
                  "name": "test-lifecycle-policy-name",
                  "repository_id": "${yandex_container_repository.my_repository.id}",
                  "rule": [
                    {
                      "description": "my description",
                      "retained_top": 1,
                      "tag_regexp": ".*",
                      "untagged": true
                    }
                  ],
                  "status": "active"
                }
              references:
                repository_id: yandex_container_repository.my_repository.id
              dependencies:
                yandex_container_registry.my_registry: |-
                    {
                      "name": "test-registry"
                    }
                yandex_container_repository.my_repository: |-
                    {
                      "name": "${yandex_container_registry.my_registry.id}/test-repository"
                    }
        argumentDocs:
            created_at: '- Creation timestamp of the instance.'
            description: '- (Optional) Description of the lifecycle policy.'
            name: '- (Optional) Lifecycle policy name.'
            repository_id: '- (Required) The ID of the repository that the resource belongs to.'
            rule.description: '- (Optional) Description of the lifecycle policy.'
            rule.expire_period: '- (Optional) The period of time that must pass after creating a image for it to suit the automatic deletion criteria. It must be a multiple of 24 hours.'
            rule.retained_top: '- (Optional) The number of images to be retained even if the expire_period already expired.'
            rule.tag_regexp: '- (Optional) Tag to specify a filter as a regular expression. For example .* - all images with tags.'
            rule.untagged: '- (Optional) If enabled, rules apply to untagged Docker images.'
            status: '- (Required) The status of lifecycle policy. Must be active or disabled.'
        importStatements: []
    yandex_dataproc_cluster:
        subCategory: unknown
        description: Manages a Data Proc cluster within Yandex.Cloud.
        name: yandex_dataproc_cluster
        title: yandex_dataproc_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "bucket": "${yandex_storage_bucket.foo.bucket}",
                  "cluster_config": [
                    {
                      "hadoop": [
                        {
                          "initialization_action": [
                            {
                              "args": [
                                "arg1",
                                "arg2"
                              ],
                              "uri": "s3a://yandex_storage_bucket.foo.bucket/scripts/script.sh"
                            }
                          ],
                          "properties": {
                            "yarn:yarn.resourcemanager.am.max-attempts": 5
                          },
                          "services": [
                            "HDFS",
                            "YARN",
                            "SPARK",
                            "TEZ",
                            "MAPREDUCE",
                            "HIVE"
                          ],
                          "ssh_public_keys": [
                            "${file(\"~/.ssh/id_rsa.pub\")}"
                          ]
                        }
                      ],
                      "subcluster_spec": [
                        {
                          "hosts_count": 1,
                          "name": "main",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "MASTERNODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        },
                        {
                          "hosts_count": 2,
                          "name": "data",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "DATANODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        },
                        {
                          "hosts_count": 2,
                          "name": "compute",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "COMPUTENODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        },
                        {
                          "autoscaling_config": [
                            {
                              "decommission_timeout": 60,
                              "max_hosts_count": 10,
                              "measurement_duration": 60,
                              "preemptible": false,
                              "stabilization_duration": 120,
                              "warmup_duration": 60
                            }
                          ],
                          "hosts_count": 2,
                          "name": "compute_autoscaling",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "COMPUTENODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        }
                      ]
                    }
                  ],
                  "depends_on": [
                    "${yandex_resourcemanager_folder_iam_binding.dataproc}"
                  ],
                  "description": "Dataproc Cluster created by Terraform",
                  "labels": {
                    "created_by": "terraform"
                  },
                  "name": "dataproc-cluster",
                  "service_account_id": "${yandex_iam_service_account.dataproc.id}",
                  "zone_id": "ru-central1-b"
                }
              references:
                bucket: yandex_storage_bucket.foo.bucket
                cluster_config.subcluster_spec.subnet_id: yandex_vpc_subnet.foo.id
                service_account_id: yandex_iam_service_account.dataproc.id
              dependencies:
                yandex_iam_service_account.dataproc: |-
                    {
                      "description": "service account to manage Dataproc Cluster",
                      "name": "dataproc"
                    }
                yandex_iam_service_account_static_access_key.foo: |-
                    {
                      "service_account_id": "${yandex_iam_service_account.dataproc.id}"
                    }
                yandex_resourcemanager_folder_iam_binding.bucket-creator: |-
                    {
                      "folder_id": "${data.yandex_resourcemanager_folder.foo.id}",
                      "members": [
                        "serviceAccount:${yandex_iam_service_account.dataproc.id}"
                      ],
                      "role": "editor"
                    }
                yandex_resourcemanager_folder_iam_binding.dataproc: |-
                    {
                      "folder_id": "${data.yandex_resourcemanager_folder.foo.id}",
                      "members": [
                        "serviceAccount:${yandex_iam_service_account.dataproc.id}"
                      ],
                      "role": "mdb.dataproc.agent"
                    }
                yandex_storage_bucket.foo: |-
                    {
                      "access_key": "${yandex_iam_service_account_static_access_key.foo.access_key}",
                      "bucket": "foo",
                      "depends_on": [
                        "${yandex_resourcemanager_folder_iam_binding.bucket-creator}"
                      ],
                      "secret_key": "${yandex_iam_service_account_static_access_key.foo.secret_key}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
        argumentDocs:
            autoscaling_config.cpu_utilization_target: '- (Optional) Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.'
            autoscaling_config.decommission_timeout: '- (Optional) Timeout to gracefully decommission nodes during downscaling. In seconds.'
            autoscaling_config.max_hosts_count: '- (Required) Maximum number of nodes in autoscaling subclusters.'
            autoscaling_config.measurement_duration: '- (Optional) Time in seconds allotted for averaging metrics.'
            autoscaling_config.preemptible: '- (Optional) Bool flag -- whether to use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see Preemptible Virtual Machines.'
            autoscaling_config.stabilization_duration: '- (Optional) Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn''t decrease, even if the new metric values indicate that it should.'
            autoscaling_config.warmup_duration: '- (Optional) The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.'
            bucket: '- (Optional) Name of the Object Storage bucket to use for Data Proc jobs. Data Proc Agent saves output of job driver''s process to specified bucket. In order for this to work service account (specified by the service_account_id argument) should be given permission to create objects within this bucket.'
            cluster_config: '- (Required) Configuration and resources for hosts that should be created with the cluster. The structure is documented below.'
            cluster_config.0.subcluster_spec.X.id: '- (Computed) ID of the subcluster.'
            cluster_config.hadoop: '- (Optional) Data Proc specific options. The structure is documented below.'
            cluster_config.hadoop.initialization_action: '- (Optional) List of initialization scripts. The structure is documented below.'
            cluster_config.hadoop.initialization_action.args: '- (Optional) List of arguments of the initialization script.'
            cluster_config.hadoop.initialization_action.timeout: '- (Optional) Script execution timeout, in seconds.'
            cluster_config.hadoop.initialization_action.uri: '- (Required) Script URI.'
            cluster_config.hadoop.properties: '- (Optional) A set of key/value pairs that are used to configure cluster services.'
            cluster_config.hadoop.services: '- (Optional) List of services to run on Data Proc cluster.'
            cluster_config.hadoop.ssh_public_keys: '- (Optional) List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see the official documentation.'
            cluster_config.subcluster_spec: '- (Required) Configuration of the Data Proc subcluster. The structure is documented below.'
            cluster_config.version_id: '- (Required) Version of Data Proc image.'
            created_at: '- (Computed) The Data Proc cluster creation timestamp.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the Data Proc cluster.'
            folder_id: '- (Optional) ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.'
            host_group_ids: '- (Optional) A list of host group IDs to place VMs of the cluster on.'
            id: '- (Computed) ID of a new Data Proc cluster.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Data Proc cluster.'
            name: '- (Required) Name of a specific Data Proc cluster.'
            security_group_ids: '- (Optional) A list of security group IDs that the cluster belongs to.'
            service_account_id: '- (Required) Service account to be used by the Data Proc agent to access resources of Yandex.Cloud. Selected service account should have mdb.dataproc.agent role on the folder where the Data Proc cluster will be located.'
            subcluster_spec.assign_public_ip: '- (Optional) If true then assign public IP addresses to the hosts of the subclusters.'
            subcluster_spec.autoscaling_config: '- (Optional) Autoscaling configuration for compute subclusters.'
            subcluster_spec.hosts_count: '- (Required) Number of hosts within Data Proc subcluster.'
            subcluster_spec.name: '- (Required) Name of the Data Proc subcluster.'
            subcluster_spec.resources: '- (Required) Resources allocated to each host of the Data Proc subcluster. The structure is documented below.'
            subcluster_spec.resources.disk_size: '- (Required) Volume of the storage available to a host, in gigabytes.'
            subcluster_spec.resources.disk_type_id: '- (Optional) Type of the storage of a host. One of network-hdd (default) or network-ssd.'
            subcluster_spec.resources.resource_preset_id: '- (Required) The ID of the preset for computational resources available to a host. All available presets are listed in the documentation.'
            subcluster_spec.role: '- (Required) Role of the subcluster in the Data Proc cluster.'
            subcluster_spec.subnet_id: '- (Required) The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.'
            ui_proxy: '- (Optional) Whether to enable UI Proxy feature.'
            zone_id: '- (Optional) ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.'
        importStatements: []
    yandex_datasphere_community:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud Datasphere Community.
        name: yandex_datasphere_community
        title: yandex_datasphere_community
        examples:
            - name: my-community
              manifest: |-
                {
                  "billing_account_id": "example-organization-id",
                  "description": "Description of community",
                  "labels": {
                    "foo": "bar"
                  },
                  "name": "example-datasphere-community",
                  "organization_id": "example-organization-id"
                }
        argumentDocs:
            billing_account_id: '- (Optional) Billing account ID to associated with community'
            create: '- Default is 1 minute.'
            created_at: '- Creation timestamp of the Yandex Datasphere Community'
            created_by: '- Creator account ID of the Yandex Datasphere Community'
            delete: '- Default is 1 minute.'
            description: '-  (Optional) Datasphere Community description.'
            id: '- Datasphere Community unique identifier'
            labels: '- (Optional) A set of key/value label pairs to assign to the Datasphere Community.'
            name: '- (Required) Name of the Datasphere Community.'
            organization_id: '- (Required) Organization ID where community would be created'
            update: '- Default is 1 minute.'
        importStatements: []
    yandex_datasphere_community_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Yandex Datasphere Community.
        name: yandex_datasphere_community_iam_binding
        title: yandex_datasphere_community_iam_binding
        examples:
            - name: community-iam
              manifest: |-
                {
                  "community_id": "your-datasphere-community-id",
                  "members": [
                    "system:allUsers"
                  ],
                  "role": "datasphere.communities.developer"
                }
        argumentDocs:
            community_id: '- (Required) The Yandex Cloud Datasphere Community ID to apply a binding to.'
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles'
        importStatements: []
    yandex_datasphere_project:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud Datasphere project.
        name: yandex_datasphere_project
        title: yandex_datasphere_project
        examples:
            - name: my-project
              manifest: |-
                {
                  "community_id": "${yandex_datasphere_community.my-community.id}",
                  "description": "Datasphere Project description",
                  "labels": {
                    "foo": "bar"
                  },
                  "limits": {
                    "balance": 10,
                    "max_units_per_execution": 10,
                    "max_units_per_hour": 10
                  },
                  "name": "example-datasphere-project",
                  "settings": {
                    "commit_mode": "AUTO",
                    "data_proc_cluster_id": "foo-data-proc-cluster-id",
                    "default_folder_id": "foo-folder-id",
                    "ide": "JUPYTER_LAB",
                    "security_group_ids": [
                      "${yandex_vpc_security_group.my-security-group.id}"
                    ],
                    "service_account_id": "${yandex_iam_service_account.my-account.id}",
                    "stale_exec_timeout_mode": "ONE_HOUR",
                    "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                  }
                }
              references:
                community_id: yandex_datasphere_community.my-community.id
        argumentDocs:
            AUTO: ': Commit happens periodically. Also, automatic saving of state occurs when switching to another type of computing resource.'
            JUPYTER_LAB: ': Project running on JupyterLab IDE.'
            NO_TIMEOUT: ': Setting to never automatically stop stale executions.'
            ONE_HOUR: ': Setting to automatically stop stale execution after one hour with low consumption.'
            STANDARD: ': Commit happens after the execution of a cell or group of cells or after completion with an error.'
            THREE_HOURS: ': Setting to automatically stop stale execution after three hours with low consumption.'
            community_id: '- (Required) Community ID where project would be created'
            create: '- Default is 1 minute.'
            created_at: '- Creation timestamp of the Yandex Datasphere Project.'
            created_by: '- Creator account ID of the Yandex Datasphere Project.'
            delete: '- Default is 1 minute.'
            description: '- (Optional) Datasphere project description.'
            id: '- Datasphere Project unique identifier'
            labels: '- (Optional) A set of key/value label pairs to assign to the Datasphere Project.'
            limits: '- (Optional) Datasphere Project limits configuration. The structure is documented below.'
            limits.balance: '- (Optional) The number of units available to the project.'
            limits.max_units_per_execution: '- (Optional) The number of units that can be spent on the one execution.'
            limits.max_units_per_hour: '- (Optional) The number of units that can be spent per hour.'
            name: '- (Required) Name of the Datasphere Project.'
            settings: '- (Optional) Datasphere Project settings configuration. The structure is documented below.'
            settings.commit_mode: '- (Optional) Commit mode that is assigned to the project.'
            settings.data_proc_cluster_id: '- (Optional) ID of the DataProc cluster.'
            settings.default_folder_id: '- (Optional) Default project folder ID.'
            settings.ide: '- (Optional) Project IDE.'
            settings.security_group_ids: '- (Optional) List of network interfaces security groups.'
            settings.service_account_id: '- (Optional) ID of the service account, on whose behalf all operations with clusters will be performed.'
            settings.stale_exec_timeout_mode: '- (Optional) Timeout to automatically stop stale executions.'
            settings.subnet_id: '- (Optional) ID of the subnet where the DataProc cluster resides. Currently only subnets created in the availability zone ru-central1-a are supported.'
            update: '- Default is 1 minute.'
        importStatements: []
    yandex_datasphere_project_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Yandex Datasphere Project.
        name: yandex_datasphere_project_iam_binding
        title: yandex_datasphere_project_iam_binding
        examples:
            - name: project-iam
              manifest: |-
                {
                  "members": [
                    "system:allUsers"
                  ],
                  "project_id": "your-datasphere-project-id",
                  "role": "datasphere.community-projects.developer"
                }
        argumentDocs:
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            project_id: '- (Required) The Yandex Cloud Datasphere Project ID to apply a binding to.'
            role: '- (Required) The role that should be applied. See roles'
        importStatements: []
    yandex_datatransfer_endpoint:
        subCategory: unknown
        description: Manages a Data Transfer endpoint within Yandex.Cloud.
        name: yandex_datatransfer_endpoint
        title: yandex_datatransfer_endpoint
        examples:
            - name: pg_source
              manifest: |-
                {
                  "name": "pg-test-source",
                  "settings": [
                    {
                      "postgres_source": [
                        {
                          "connection": [
                            {
                              "on_premise": [
                                {
                                  "hosts": [
                                    "example.org"
                                  ],
                                  "port": 5432
                                }
                              ]
                            }
                          ],
                          "database": "db1",
                          "password": [
                            {
                              "raw": "123"
                            }
                          ],
                          "slot_gigabyte_lag_limit": 100,
                          "user": "user1"
                        }
                      ]
                    }
                  ]
                }
            - name: pg_target
              manifest: |-
                {
                  "folder_id": "some_folder_id",
                  "name": "pg-test-target2",
                  "settings": [
                    {
                      "postgres_target": [
                        {
                          "connection": [
                            {
                              "mdb_cluster_id": "some_cluster_id"
                            }
                          ],
                          "database": "db2",
                          "password": [
                            {
                              "raw": "321"
                            }
                          ],
                          "security_groups": [
                            "${list}"
                          ],
                          "user": "user2"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            auth.no_auth: '- Connection without authentication data.'
            auth.sasl: '- Authentication using sasl.'
            author: '- (Computed) Identifier of the IAM user account of the user who created the endpoint.'
            clickhouse_source.connection: '- (Required) Connection settings. The structure is documented below.'
            clickhouse_source.exclude_tables: '- (Optional) The list of tables that should not be transferred.'
            clickhouse_source.include_tables: '- (Optional) The list of tables that should be transferred. Leave empty if all tables should be transferred.'
            clickhouse_source.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            clickhouse_source.subnet_id: '- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.'
            clickhouse_target.alt_names: '- (Optional) Table renaming rules. The structure is documented below.'
            clickhouse_target.cleanup_policy: '- (Optional) How to clean collections when activating the transfer. One of "CLICKHOUSE_CLEANUP_POLICY_DISABLED" or "CLICKHOUSE_CLEANUP_POLICY_DROP".'
            clickhouse_target.clickhouse_cluster_name: '- (Optional) Name of the ClickHouse cluster. For managed ClickHouse clusters defaults to managed cluster ID.'
            clickhouse_target.connection: '- (Required) Connection settings. The structure is documented below.'
            clickhouse_target.connection.connection_options: (Required) Connection options. The structure is documented below.
            clickhouse_target.connection.connection_options.database: '- (Required) Database name.'
            clickhouse_target.connection.connection_options.mdb_cluster_id: '- (Optional) Identifier of the Managed ClickHouse cluster.'
            clickhouse_target.connection.connection_options.on_premise: '- (Optional) Connection settings of the on-premise ClickHouse server.'
            clickhouse_target.connection.connection_options.on_premise.http_port: '- (Required) TCP port number for the HTTP interface of the ClickHouse server.'
            clickhouse_target.connection.connection_options.on_premise.native_port: '- (Required) TCP port number for the native interface of the ClickHouse server.'
            clickhouse_target.connection.connection_options.on_premise.shards: '- (Required) The list of ClickHouse shards. The structure is documented below.'
            clickhouse_target.connection.connection_options.on_premise.shards.hosts: '- (Required) List of ClickHouse server host names.'
            clickhouse_target.connection.connection_options.on_premise.shards.name: '- (Required) Arbitrary shard name. This name may be used in sharding block to specify custom sharding rules.'
            clickhouse_target.connection.connection_options.on_premise.tls_mode: '- (Optional) TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.'
            clickhouse_target.connection.connection_options.password: '- (Required) Password for the database access. This is a block with a single field named raw which should contain the password.'
            clickhouse_target.connection.connection_options.user: '- (Required) User for database access.'
            clickhouse_target.custom_mapping: (Optional) A custom shard mapping by the value of the specified column. The structure is documented below.
            clickhouse_target.round_robin: (Optional) Distribute incoming rows between ClickHouse shards in a round-robin manner. Specify as an empty block to enable.
            clickhouse_target.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            clickhouse_target.sharding: '- (Optional) Shard selection rules for the data being transferred. The structure is documented below.'
            clickhouse_target.subnet_id: '- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.'
            collections.collection_name: '- (Required) Collection name.'
            collections.database_name: '- (Required) Database name.'
            connection.cluster_id: '- Identifier of the Managed Kafka cluster.'
            connection.on_premise: '- Connection settings of the on-premise Kafka server.'
            connection.on_premise.broker_urls: (Required) List of Kafka broker URLs.
            connection.on_premise.subnet_id: (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
            connection.on_premise.tls_mode: (Optional) TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
            created_at: '- (Computed) Data Transfer endpoint creation timestamp.'
            custom_mapping.column_name: '- (Required) The name of the column to inspect when deciding the shard to chose for an incoming row.'
            custom_mapping.mapping: '- (Required) The mapping of the specified column values to the shard names. The structure is documented below.'
            custom_mapping.mapping.column_value: '- (Required) The value of the column. Currently only the string columns are supported. The structure is documented below.'
            custom_mapping.mapping.column_value.string_value: '- (Optional) The string value of the column.'
            custom_mapping.mapping.shard_name: '- (Required) The name of the shard into which all the rows with the specified column_value will be written.'
            description: '- (Optional) Arbitrary description text for the endpoint.'
            folder_id: '- (Optional) ID of the folder to create the endpoint in. If it is not provided, the default provider folder is used.'
            id: '- (Computed) Identifier of a new Data Transfer endpoint.'
            kafka_source.auth: '- (Required) Authentication data.'
            kafka_source.connection: '- (Required) Connection settings.'
            kafka_source.parser: '- (Optional) Data parsing parameters. If not set, the source messages are read in raw.'
            kafka_source.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            kafka_source.topic_name: '- (Optional) Deprecated. Please use topic_names instead.'
            kafka_source.topic_names: '- (Optional) The list of full source topic names.'
            kafka_source.transformer: '- (Optional) Transform data with a custom Cloud Function.'
            kafka_target.auth: '- (Required) Authentication data.'
            kafka_target.connection: '- (Required) Connection settings.'
            kafka_target.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            kafka_target.serializer: '- (Required) Data serialization settings.'
            kafka_target.topic_settings: '- (Required) Target topic settings.'
            kafka_target.topic_settings.topic: '- All messages will be sent to one topic. The structure is documented below.'
            kafka_target.topic_settings.topic.save_tx_order: '- Not to split events queue into separate per-table queues.'
            kafka_target.topic_settings.topic.topic_name: '- Full topic name'
            kafka_target.topic_settings.topic_prefix: '- Topic name prefix. Messages will be sent to topic with name <topic_prefix>..<table_name>.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Data Transfer endpoint.'
            mongo_source.collections: '- (Optional) The list of the MongoDB collections that should be transferred. If omitted, all available collections will be transferred. The structure of the list item is documented below.'
            mongo_source.connection: '- (Required) Connection settings. The structure is documented below.'
            mongo_source.excluded_collections: '- (Optional) The list of the MongoDB collections that should not be transferred.'
            mongo_source.secondary_preferred_mode: '- (Optional) whether the secondary server should be preferred to the primary when copying data.'
            mongo_source.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            mongo_source.subnet_id: '- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.'
            mongo_target.cleanup_policy: '- (Optional) How to clean collections when activating the transfer. One of "DISABLED", "DROP" or "TRUNCATE".'
            mongo_target.connection: '- (Required) Connection settings. The structure is documented below.'
            mongo_target.connection.connection_options: (Required) Connection options. The structure is documented below.
            mongo_target.connection.connection_options.auth_source: '- (Required) Name of the database associated with the credentials.'
            mongo_target.connection.connection_options.mdb_cluster_id: '- (Optional) Identifier of the Managed MongoDB cluster.'
            mongo_target.connection.connection_options.on_premise: '- (Optional) Connection settings of the on-premise MongoDB server.'
            mongo_target.connection.connection_options.on_premise.hosts: '- (Required) Host names of the replica set.'
            mongo_target.connection.connection_options.on_premise.port: '- (Required) TCP Port number.'
            mongo_target.connection.connection_options.on_premise.replica_set: '- (Optional) Replica set name.'
            mongo_target.connection.connection_options.on_premise.tls_mode: '- (Optional) TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.'
            mongo_target.connection.connection_options.password: '- (Required) Password for the database access. This is a block with a single field named raw which should contain the password.'
            mongo_target.connection.connection_options.user: '- (Required) User for database access.'
            mongo_target.database: '- (Optional) If not empty, then all the data will be written to the database with the specified name; otherwise the database name is the same as in the source endpoint.'
            mongo_target.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            mongo_target.subnet_id: '- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.'
            mysql_source.connection: '- (Required) Connection settings. The structure is documented below.'
            mysql_source.database: '- (Required) Name of the database to transfer.'
            mysql_source.exclude_tables_regex: '- (Optional) Opposite of include_table_regex. The tables matching the specified regular expressions will not be transferred.'
            mysql_source.include_tables_regex: '- (Optional) List of regular expressions of table names which should be transferred. A table name is formatted as schemaname.tablename. For example, a single regular expression may look like ^mydb.employees$.'
            mysql_source.object_transfer_settings: '- (Optional) Defines which database schema objects should be transferred, e.g. views, routines, etc.'
            mysql_source.password: '- (Required) Password for the database access. This is a block with a single field named raw which should contain the password.'
            mysql_source.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            mysql_source.timezone: '- (Optional) Timezone to use for parsing timestamps for saving source timezones. Accepts values from IANA timezone database. Default: local timezone.'
            mysql_source.user: '- (Required) User for the database access.'
            mysql_target.cleanup_policy: '- (Optional) How to clean tables when activating the transfer. One of "DISABLED", "DROP" or "TRUNCATE".'
            mysql_target.connection: '- (Required) Connection settings. The structure is documented below.'
            mysql_target.connection.mdb_cluster_id: '- Identifier of the Managed MySQL cluster.'
            mysql_target.connection.on_premise: '- Connection settings of the on-premise MySQL server.'
            mysql_target.connection.on_premise.hosts: '- (Required) List of host names of the MySQL server. Exactly one host is expected currently.'
            mysql_target.connection.on_premise.port: '- (Required) Port for the database connection.'
            mysql_target.connection.on_premise.subnet_id: '- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.'
            mysql_target.connection.on_premise.tls_mode: '- (Optional) TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.'
            mysql_target.database: '- (Required) Name of the database to transfer.'
            mysql_target.password: '- (Required) Password for the database access. This is a block with a single field named raw which should contain the password.'
            mysql_target.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            mysql_target.service_database: '- (Optional) The name of the database where technical tables (__tm_keeper, __tm_gtid_keeper) will be created. Default is the value of the attribute database.'
            mysql_target.skip_constraint_checks: '- (Optional) When true, disables foreign key checks. See foreign_key_checks. False by default.'
            mysql_target.sql_mode: '- (Optional) sql_mode to use when interacting with the server. Defaults to "NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION".'
            mysql_target.timezone: '- (Optional) Timezone to use for parsing timestamps for saving source timezones. Accepts values from IANA timezone database. Default: local timezone.'
            mysql_target.user: '- (Required) User for the database access.'
            name: '- (Required) Name of the endpoint.'
            object_transfer_settings.cast: All of the attrubutes are optional and should be either "BEFORE_DATA", "AFTER_DATA" or "NEVER".
            object_transfer_settings.trigger: All of the attrubutes are optional and should be either "BEFORE_DATA", "AFTER_DATA" or "NEVER".
            parser.audit_trails_v1_parser: '- Parse Audit Trails data. Empty struct.'
            parser.cloud_logging_parser: '- Parse Cloud Logging data. Empty struct.'
            parser.json_parser: '- Parse data in json format.'
            parser.json_parser.add_rest_column: '- Add fields, that are not in the schema, into the _rest column.'
            parser.json_parser.data_schema: '- (Required) Data parsing scheme.The structure is documented below.'
            parser.json_parser.data_schema.fields: '- Description of the data schema in the array of fields structure (documented below).'
            parser.json_parser.data_schema.fields.key: -Mark field as Primary Key.
            parser.json_parser.data_schema.fields.name: '- (Required) Field name.'
            parser.json_parser.data_schema.fields.path: '- Path to the field.'
            parser.json_parser.data_schema.fields.required: '- Mark field as required.'
            parser.json_parser.data_schema.fields.type: '- (Required) Field type, one of: INT64, INT32, INT16, INT8, UINT64, UINT32, UINT16, UINT8, DOUBLE, BOOLEAN, STRING, UTF8, ANY, DATETIME.'
            parser.json_parser.data_schema.json_fields: '- Description of the data schema as JSON specification.'
            parser.json_parser.null_keys_allowed: '- Allow null keys. If false - null keys will be putted to unparsed data'
            parser.json_parser.unescape_string_values: '- Allow unescape string values.'
            parser.tskv_parser: '- Parse data if tskv format.'
            postgres_target.connection: '- (Required) Connection settings. The structure is documented below.'
            postgres_target.connection.mdb_cluster_id: '- Identifier of the Managed PostgreSQL cluster.'
            postgres_target.connection.on_premise: '- Connection settings of the on-premise PostgreSQL server.'
            postgres_target.connection.on_premise.hosts: '- (Required) List of host names of the PostgreSQL server. Exactly one host is expected currently.'
            postgres_target.connection.on_premise.port: '- (Required) Port for the database connection.'
            postgres_target.connection.on_premise.subnet_id: '- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.'
            postgres_target.connection.on_premise.tls_mode: '- (Optional) TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.'
            postgres_target.database: '- (Required) Name of the database to transfer.'
            postgres_target.password: '- (Required) Password for the database access. This is a block with a single field named raw which should contain the password.'
            postgres_target.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            postgres_target.user: '- (Required) User for the database access.'
            serializer.serializer_auto: '- Empty block. Select data serialization format automatically.'
            serializer.serializer_debezium: '- Serialize data in json format. The structure is documented below.'
            serializer.serializer_debezium.serializer_parameters: '- A list of debezium parameters set by the structure of the key and value string fields.'
            serializer.serializer_json: '- Empty block. Serialize data in json format.'
            settings: '- (Required) Settings for the endpoint. The structure is documented below.'
            settings.clickhouse_source: '- (Optional) Settings specific to the ClickHouse source endpoint.'
            settings.clickhouse_target: '- (Optional) Settings specific to the ClickHouse target endpoint.'
            settings.kafka_source: '- (Optional) Settings specific to the Kafka source endpoint.'
            settings.kafka_target: '- (Optional) Settings specific to the Kafka target endpoint.'
            settings.mongo_source: '- (Optional) Settings specific to the MongoDB source endpoint.'
            settings.mongo_target: '- (Optional) Settings specific to the MongoDB target endpoint.'
            settings.mysql_source: '- (Optional) Settings specific to the MySQL source endpoint.'
            settings.mysql_target: '- (Optional) Settings specific to the MySQL target endpoint.'
            settings.postgres_source: '- (Optional) Settings specific to the PostgreSQL source endpoint.'
            settings.postgres_source.connection: '- (Required) Connection settings. The structure is documented below.'
            settings.postgres_source.database: '- (Required) Name of the database to transfer.'
            settings.postgres_source.exclude_tables: '- List of tables which will not be transfered, formatted as schemaname.tablename.'
            settings.postgres_source.include_tables: '- List of tables to transfer, formatted as schemaname.tablename. If omitted or an empty list is specified, all tables will be transferred.'
            settings.postgres_source.object_transfer_settings: '- (Optional) Defines which database schema objects should be transferred, e.g. views, functions, etc.'
            settings.postgres_source.password: '- (Required) Password for the database access. This is a block with a single field named raw which should contain the password.'
            settings.postgres_source.security_groups: '- (Optional) List of security groups that the transfer associated with this endpoint should use.'
            settings.postgres_source.service_schema: '- (Optional) Name of the database schema in which auxiliary tables needed for the transfer will be created. Empty service_schema implies schema "public".'
            settings.postgres_source.slot_gigabyte_lag_limit: '- (Optional) Maximum WAL size held by the replication slot, in gigabytes. Exceeding this limit will result in a replication failure and deletion of the replication slot. Unlimited by default.'
            settings.postgres_source.user: '- (Required) User for the database access.'
            settings.postgres_target: '- (Optional) Settings specific to the PostgreSQL target endpoint.'
            settings.ydb_source: '- (Optional) Settings specific to the YDB source endpoint.'
            settings.ydb_target: '- (Optional) Settings specific to the YDB target endpoint.'
            settings.yds_source: '- (Optional) Settings specific to the YDS source endpoint.'
            settings.yds_target: '- (Optional) Settings specific to the YDS target endpoint.'
            sharding.column_value_hash: '- Shard data by the hash value of the specified column. The structure is documented below.'
            sharding.column_value_hash.column_name: '- The name of the column to calculate hash from.'
            sharding.transfer_id: '- Shard data by ID of the transfer.'
            tls_mode.disabled: '- Empty block designating that the connection is not secured, i.e. plaintext connection.'
            tls_mode.enabled: '- If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.'
            tls_mode.enabled.ca_certificate: '- (Optional) X.509 certificate of the certificate authority which issued the server''s certificate, in PEM format. If empty, the server''s certificate must be signed by a well-known CA.'
            topic_settings.topic: '- All messages will be sent to one topic. The structure is documented below.'
            topic_settings.topic.save_tx_order: '- Not to split events queue into separate per-table queues.'
            topic_settings.topic.topic_name: '- Full topic name'
            topic_settings.topic_prefix: '- Topic name prefix. Messages will be sent to topic with name <topic_prefix>..<table_name>.'
            ydb_source.changefeed_custom_name: -- (Optional) Custom name for changefeed.
            ydb_source.database: '-- (Required) Database path in YDB where tables are stored. Example: "/ru/transfer_manager/prod/data-transfer-yt".'
            ydb_source.instance: '-- (Optional) Instance of YDB. Example: "my-cute-ydb.cloud.yandex.ru:2135".'
            ydb_source.paths: -- (Optional) A list of paths which should be uploaded. When not specified, all available tables are uploaded.
            ydb_source.sa_key_content: -- (Optional, Sensitive) Authentication key.
            ydb_source.security_groups: -- (Optional) List of security groups that the transfer associated with this endpoint should use.
            ydb_source.service_account_id: -- (Optional) Service account ID for interaction with database.
            ydb_source.subnet_id: -- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
            ydb_target.auth: '- (Required) Authentication data.'
            ydb_target.cleanup_policy: -- (Optional) How to clean collections when activating the transfer. One of "YDB_CLEANUP_POLICY_DISABLED" or "YDB_CLEANUP_POLICY_DROP".
            ydb_target.connection: '- (Required) Connection settings.'
            ydb_target.database: '-- (Required) Database path in YDB where tables are stored. Example: "/ru/transfer_manager/prod/data-transfer-yt".'
            ydb_target.default_compression: -- (Optional) Compression that will be used for default columns family on YDB table creation One of "YDB_DEFAULT_COMPRESSION_UNSPECIFIED", "YDB_DEFAULT_COMPRESSION_DISABLED", "YDB_DEFAULT_COMPRESSION_LZ4".
            ydb_target.instance: '-- (Optional) Instance of YDB. Example: "my-cute-ydb.cloud.yandex.ru:2135".'
            ydb_target.is_table_column_oriented: -- (Optional) Whether a column-oriented (i.e. OLAP) tables should be created. Default is false (create row-oriented OLTP tables).
            ydb_target.path: -- (Optional) A path where resulting tables are stored.
            ydb_target.sa_key_content: -- (Optional, Sensitive) Authentication key.
            ydb_target.security_groups: -- (Optional) List of security groups that the transfer associated with this endpoint should use.
            ydb_target.service_account_id: -- (Optional) Service account ID for interaction with database.
            ydb_target.subnet_id: -- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
            ydb_target.topic_settings: '- (Required) Target topic settings.'
            yds_source.allow_ttl_rewind: -- (Optional) Should continue working, if consumer read lag exceed TTL of topic.
            yds_source.consumer: -- (Optional) Consumer.
            yds_source.database: -- (Required) Database.
            yds_source.endpoint: -- (Optional) YDS Endpoint.
            yds_source.parser: -- (Optional) Data parsing rules.
            yds_source.security_groups: -- (Optional) List of security groups that the transfer associated with this endpoint should use.
            yds_source.service_account_id: -- (Required) Service account ID for interaction with database.
            yds_source.stream: -- (Optional) Stream.
            yds_source.subnet_id: -- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
            yds_source.supported_codecs: -- (Optional) List of supported compression codec.
            yds_target.database: -- (Required) Database.
            yds_target.endpoint: -- (Optional) YDS Endpoint.
            yds_target.save_tx_order: -- (Optional) Save transaction order
            yds_target.security_groups: -- (Optional) List of security groups that the transfer associated with this endpoint should use.
            yds_target.serializer: -- (Optional) Data serialization format.
            yds_target.service_account_id: -- (Required) Service account ID for interaction with database.
            yds_target.stream: -- (Optional) Stream.
            yds_target.subnet_id: -- (Optional) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
        importStatements: []
    yandex_datatransfer_transfer:
        subCategory: unknown
        description: Manages a Data Transfer transfer within Yandex.Cloud.
        name: yandex_datatransfer_transfer
        title: yandex_datatransfer_transfer
        examples:
            - name: pgpg_transfer
              manifest: |-
                {
                  "folder_id": "some_folder_id",
                  "name": "pgpg",
                  "runtime": [
                    {
                      "yc_runtime": [
                        {
                          "job_count": 1,
                          "upload_shard_params": [
                            {
                              "job_count": 4,
                              "process_count": 1
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "source_id": "${yandex_datatransfer_endpoint.pg_source.id}",
                  "target_id": "${yandex_datatransfer_endpoint.pg_target.id}",
                  "transformation": [
                    {
                      "transformers": [
                        {
                          "one": {
                            "of": {
                              "transfomer": [
                                {}
                              ]
                            }
                          }
                        },
                        {
                          "one": {
                            "of": {
                              "transfomers": [
                                {}
                              ]
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "type": "SNAPSHOT_AND_INCREMENT"
                }
              references:
                source_id: yandex_datatransfer_endpoint.pg_source.id
                target_id: yandex_datatransfer_endpoint.pg_target.id
              dependencies:
                yandex_datatransfer_endpoint.pg_source: |-
                    {
                      "name": "pg-test-source",
                      "settings": [
                        {
                          "postgres_source": [
                            {
                              "connection": [
                                {
                                  "on_premise": [
                                    {
                                      "hosts": [
                                        "example.org"
                                      ],
                                      "port": 5432
                                    }
                                  ]
                                }
                              ],
                              "database": "db1",
                              "password": [
                                {
                                  "raw": "123"
                                }
                              ],
                              "slot_gigabyte_lag_limit": 100,
                              "user": "user1"
                            }
                          ]
                        }
                      ]
                    }
                yandex_datatransfer_endpoint.pg_target: |-
                    {
                      "folder_id": "some_folder_id",
                      "name": "pg-test-target2",
                      "settings": [
                        {
                          "postgres_target": [
                            {
                              "connection": [
                                {
                                  "mdb_cluster_id": "some_cluster_id"
                                }
                              ],
                              "database": "db2",
                              "password": [
                                {
                                  "raw": "321"
                                }
                              ],
                              "user": "user2"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            columns.exclude_columns: '- (Optional) List of columns that will be excluded to transfer.'
            columns.include_columns: '- (Optional) List of columns that will be included to transfer.'
            convert_to_string.columns: '- (Optional) List of the columns to transfer to the target tables using lists of included and excluded columns (see block documentation below).'
            convert_to_string.tables: '- (Optional) Table filter (see block documentation below).'
            description: '- (Optional) Arbitrary description text for the transfer.'
            filter_columns.columns: '- (Optional) List of the columns to transfer to the target tables using lists of included and excluded columns (see block documentation below).'
            filter_columns.tables: '- (Optional) Table filter (see block documentation below).'
            filter_rows.filter: '- (Optional) Filtering criterion. This can be comparison operators for numeric, string, and Boolean values, comparison to NULL, and checking whether a substring is part of a string. Details here: https://cloud.yandex.com/en/docs/data-transfer/concepts/data-transformation#append-only-sources'
            filter_rows.tables: '- (Optional) Table filter (see block documentation below).'
            folder_id: '- (Optional) ID of the folder to create the transfer in. If it is not provided, the default provider folder is used.'
            id: '- (Computed) Identifier of a new Data Transfer transfer.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Data Transfer transfer.'
            name: '- (Required) Name of the transfer.'
            on_create_activate_mode: |-
                - (Optional) Activation action on create a new incremental transfer.
                It is not part of the transfer parameter and is used only on create.
                One of "sync_activate", "async_activate", "dont_activate". The default is "sync_activate".
            rename_tables.rename_tables: '- (Optional) List of renaming rules.'
            rename_tables.rename_tables.new_name: '- (Optional) Specify the new names for this table in the target.'
            rename_tables.rename_tables.original_name: '- (Optional) Specify the current names of the table in the source.'
            replace_primary_key.keys: '- (Optional) List of columns to be used as primary keys.'
            replace_primary_key.tables: '- (Optional) Table filter (see block documentation below).'
            runtime: '- (Optional) Runtime parameters for the transfer.'
            runtime.yc_runtime: '- (Optional) YC Runtime parameters for the transfer.'
            runtime.yc_runtime.job_count: '- (Optional) Number of workers in parallel replication.'
            runtime.yc_runtime.upload_shard_params: '- (Optional) Parallel snapshot parameters.'
            runtime.yc_runtime.upload_shard_params.job_count: '- (Optional) Number of workers.'
            runtime.yc_runtime.upload_shard_params.process_count: '- (Optional) Number of threads.'
            sharder_transformer.columns: '- (Optional) List of the columns to transfer to the target tables using lists of included and excluded columns (see block documentation below).'
            sharder_transformer.shards_count: '- (Optional) Number of shards.'
            sharder_transformer.tables: '- (Optional) Table filter (see block documentation below).'
            source_id: '- (Optional) ID of the source endpoint for the transfer.'
            table_splitter_transformer.columns: '- (Optional) List of strings that specify the columns in the tables to be partitioned.'
            table_splitter_transformer.splitter: '- (Optional) Specify the split string to be used for merging components in a new table name.'
            table_splitter_transformer.tables: '- (Optional) Table filter (see block documentation below).'
            tables.exclude_tables: '- (Optional) List of tables that will be excluded to transfer.'
            tables.include_tables: '- (Optional) List of tables that will be included to transfer.'
            target_id: '- (Optional) ID of the target endpoint for the transfer.'
            transformation: '- (Optional) Transformation for the transfer.'
            transformation.transformers: '- (Optional) A list of transformers. You can specify exactly 1 transformer in each element of list.'
            transformation.transformers.convert_to_string: '- (Optional) Convert column values to strings.'
            transformation.transformers.filter_columns: '- (Optional) Set up a list of table columns to transfer.'
            transformation.transformers.filter_rows: '- (Optional) This filter only applies to transfers with queues (Apache Kafka®) as a data source. When running a transfer, only the strings meeting the specified criteria remain in a changefeed.'
            transformation.transformers.mask_field: '- (Optional) Mask field transformer allows you to hash data.'
            transformation.transformers.mask_field.columns: '- (Optional) List of strings that specify the name of the column for data masking (a regular expression).'
            transformation.transformers.mask_field.function: '- (Optional) Mask function.'
            transformation.transformers.mask_field.function.mask_function_hash: '- (Optional) Hash mask function.'
            transformation.transformers.mask_field.function.mask_function_hash.user_defined_salt: '- (Optional) This string will be used in the HMAC(sha256, salt) function applied to the column data.'
            transformation.transformers.mask_field.tables: '- (Optional) Table filter.'
            transformation.transformers.rename_tables: '- (Optional) Set rules for renaming tables by specifying the current names of the tables in the source and new names for these tables in the target.'
            transformation.transformers.replace_primary_key: '- (Optional) Override primary keys.'
            transformation.transformers.sharder_transformer: '- (Optional) Set the number of shards for particular tables and a list of columns whose values will be used for calculating a hash to determine a shard.'
            transformation.transformers.table_splitter_transformer: '- (Optional) Splits the X table into multiple tables (X_1, X_2, ..., X_n) based on data.'
            type: '- (Required) Type of the transfer. One of "SNAPSHOT_ONLY", "INCREMENT_ONLY", "SNAPSHOT_AND_INCREMENT".'
            warning: '- (Computed) Error description if transfer has any errors.'
        importStatements: []
    yandex_dns_recordset:
        subCategory: unknown
        description: Manages a DNS Recordset within Yandex.Cloud.
        name: yandex_dns_recordset
        title: yandex_dns_recordset
        examples:
            - name: rs1
              manifest: |-
                {
                  "data": [
                    "10.1.0.1"
                  ],
                  "name": "srv.example.com.",
                  "ttl": 200,
                  "type": "A",
                  "zone_id": "${yandex_dns_zone.zone1.id}"
                }
              references:
                zone_id: yandex_dns_zone.zone1.id
              dependencies:
                yandex_dns_zone.zone1: |-
                    {
                      "description": "desc",
                      "labels": {
                        "label1": "label-1-value"
                      },
                      "name": "my_private_zone",
                      "private_networks": [
                        "${yandex_vpc_network.foo.id}"
                      ],
                      "public": false,
                      "zone": "example.com."
                    }
                yandex_vpc_network.foo: '{}'
            - name: rs2
              manifest: |-
                {
                  "data": [
                    "10.1.0.2"
                  ],
                  "name": "srv2",
                  "ttl": 200,
                  "type": "A",
                  "zone_id": "${yandex_dns_zone.zone1.id}"
                }
              references:
                zone_id: yandex_dns_zone.zone1.id
              dependencies:
                yandex_dns_zone.zone1: |-
                    {
                      "description": "desc",
                      "labels": {
                        "label1": "label-1-value"
                      },
                      "name": "my_private_zone",
                      "private_networks": [
                        "${yandex_vpc_network.foo.id}"
                      ],
                      "public": false,
                      "zone": "example.com."
                    }
                yandex_vpc_network.foo: '{}'
        argumentDocs:
            data: '- (Optional) The string data for the records in this record set.'
            name: '- (Required) The DNS name this record set will apply to.'
            ttl: '- (Optional) The time-to-live of this record set (seconds).'
            type: '- (Required) The DNS record set type.'
            zone_id: '- (Required) The id of the zone in which this record set will reside.'
        importStatements: []
    yandex_dns_zone:
        subCategory: unknown
        description: Manages a DNS Zone within Yandex.Cloud.
        name: yandex_dns_zone
        title: yandex_dns_zone
        examples:
            - name: zone1
              manifest: |-
                {
                  "deletion_protection": true,
                  "description": "desc",
                  "labels": {
                    "label1": "label-1-value"
                  },
                  "name": "my-private-zone",
                  "private_networks": [
                    "${yandex_vpc_network.foo.id}"
                  ],
                  "public": false,
                  "zone": "example.com."
                }
              dependencies:
                yandex_dns_recordset.rs1: |-
                    {
                      "data": [
                        "10.1.0.1"
                      ],
                      "name": "srv.example.com.",
                      "ttl": 200,
                      "type": "A",
                      "zone_id": "${yandex_dns_zone.zone1.id}"
                    }
                yandex_vpc_network.foo: '{}'
        argumentDocs:
            created_at: '- (Computed) The DNS zone creation timestamp.'
            deletion_protection: '- (Optional) Flag that protects the dns zone from accidental deletion.'
            description: '- (Optional) Description of the DNS zone.'
            folder_id: '- (Optional) ID of the folder to create a zone in. If it is not provided, the default provider folder is used.'
            id: '- (Computed) ID of a new DNS zone.'
            labels: '- (Optional) A set of key/value label pairs to assign to the DNS zone.'
            name: '- (Optional) User assigned name of a specific resource. Must be unique within the folder.'
            private_networks: '- (Optional) For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.'
            public: '- (Optional) The zone''s visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.'
            zone: '- (Required) The DNS name of this zone, e.g. "example.com.". Must ends with dot.'
        importStatements: []
    yandex_dns_zone_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_dns_zone_iam_binding
        title: yandex_dns_zone_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "dns_zone_id": "${yandex_dns_zone.zone1.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "dns.viewer"
                }
              references:
                dns_zone_id: yandex_dns_zone.zone1.id
              dependencies:
                yandex_dns_zone.zone1: |-
                    {
                      "name": "my-private-zone",
                      "zone": "example.com."
                    }
        argumentDocs:
            dns_zone_id: '- (Required) The DNS Zone ID to apply a binding to.'
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles.'
        importStatements: []
    yandex_function:
        subCategory: unknown
        description: Allows management of a Yandex Cloud Function.
        name: yandex_function
        title: yandex_function
        examples:
            - name: test-function
              manifest: |-
                {
                  "async_invocation": [
                    {
                      "retries_count": "3",
                      "services_account_id": "ajeihp9qsfg2l6f838kk",
                      "ymq_failure_target": [
                        {
                          "arn": "yrn:yc:ymq:ru-central1:b1glraqqa1i7tmh9hsfp:fail",
                          "service_account_id": "ajeqr0pjpbrkovcqb76m"
                        }
                      ],
                      "ymq_success_target": [
                        {
                          "arn": "yrn:yc:ymq:ru-central1:b1glraqqa1i7tmh9hsfp:success",
                          "service_account_id": "ajeqr0pjpbrkovcqb76m"
                        }
                      ]
                    }
                  ],
                  "content": [
                    {
                      "zip_filename": "function.zip"
                    }
                  ],
                  "description": "any description",
                  "entrypoint": "main",
                  "execution_timeout": "10",
                  "log_options": [
                    {
                      "log_group_id": "e2392vo6d1bne2aeq9fr",
                      "min_level": "ERROR"
                    }
                  ],
                  "memory": "128",
                  "name": "some_name",
                  "runtime": "python37",
                  "secrets": [
                    {
                      "environment_variable": "ENV_VARIABLE",
                      "id": "${yandex_lockbox_secret.secret.id}",
                      "key": "secret-key",
                      "version_id": "${yandex_lockbox_secret_version.secret_version.id}"
                    }
                  ],
                  "service_account_id": "are1service2account3id",
                  "tags": [
                    "my_tag"
                  ],
                  "user_hash": "any_user_defined_string"
                }
        argumentDocs:
            async_invocation: '- Config for asynchronous invocations of Yandex Cloud Function.'
            async_invocation.retries_count: '- Maximum number of retries for async invocation'
            async_invocation.service_account_id: '- Service account used for async invocation'
            async_invocation.ymq_failure_target: '- Target for unsuccessful async invocation'
            async_invocation.ymq_success_target: '- Target for successful async invocation'
            async_invocation.ymq_success_target.arn: '- YMQ ARN'
            async_invocation.ymq_success_target.disabled: '- Is logging from function disabled'
            async_invocation.ymq_success_target.folder_id: '- Log entries are written to default log group for specified folder'
            async_invocation.ymq_success_target.log_group_id: '- Log entries are written to specified log group'
            async_invocation.ymq_success_target.log_options: 'block supports:'
            async_invocation.ymq_success_target.min_level: '- Minimum log entry level'
            async_invocation.ymq_success_target.service_account_id: '- Service account used for writing result to queue'
            concurrency: '- The maximum number of requests processed by a function instance at the same time.'
            connectivity: '- Function version connectivity. If specified the version will be attached to specified network.'
            connectivity.0.network_id: '- Network the version will have access to. It''s essential to specify network with subnets in all availability zones.'
            content: '- Version deployment content for Yandex Cloud Function code. Can be only one package or content section. Either package or content section must be specified.'
            content.0.zip_filename: '- Filename to zip archive for the version.'
            created_at: '- Creation timestamp of the Yandex Cloud Function.'
            description: '- Description of the Yandex Cloud Function'
            entrypoint: '- (Required) Entrypoint for Yandex Cloud Function'
            environment: '- A set of key/value environment variables for Yandex Cloud Function'
            execution_timeout: '- Execution timeout in seconds for Yandex Cloud Function'
            folder_id: '- Folder ID for the Yandex Cloud Function'
            image_size: '- Image size for Yandex Cloud Function.'
            labels: '- A set of key/value label pairs to assign to the Yandex Cloud Function'
            log_options: '- Options for logging from Yandex Cloud Function.'
            loggroup_id: '- Loggroup ID size for Yandex Cloud Function.'
            memory: '- (Required) Memory in megabytes (aligned to 128MB) for Yandex Cloud Function'
            name: (Required) - Yandex Cloud Function name used to define trigger
            package: '- Version deployment package for Yandex Cloud Function code. Can be only one package or content section. Either package or content section must be specified.'
            package.0.bucket_name: '- Name of the bucket that stores the code for the version.'
            package.0.object_name: '- Name of the object in the bucket that stores the code for the version.'
            package.0.sha_256: '- SHA256 hash of the version deployment package.'
            runtime: '- (Required) Runtime for Yandex Cloud Function'
            secrets: '- Secrets for Yandex Cloud Function.'
            secrets.bucket: '- (Required) Name of the mounting bucket.'
            secrets.environment_variable: '- (Required) Function''s environment variable in which secret''s value will be stored.'
            secrets.id: '- (Required) Secret''s id.'
            secrets.key: '- (Required) Secret''s entries key which value will be stored in environment variable.'
            secrets.mount_point_name: '- (Required) Name of the mount point. The directory where the bucket is mounted will be accessible at the /function/storage/<mount_point> path.'
            secrets.prefix: '- Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.'
            secrets.read_only: '- Mount the bucket in read-only mode.'
            secrets.storage_mounts: 'block supports:'
            secrets.version_id: '- (Required) Secret''s version id.'
            service_account_id: '- Service account ID for Yandex Cloud Function'
            storage_mounts: '- Storage mounts for Yandex Cloud Function.'
            tags: '- Tags for Yandex Cloud Function. Tag "$latest" isn''t returned.'
            tmpfs_size: '- Tmpfs size for Yandex Cloud Function.'
            user_hash: '- (Required) User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.'
            version: '- Version for Yandex Cloud Function.'
        importStatements: []
    yandex_function_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_function_iam_binding
        title: yandex_function_iam_binding
        examples:
            - name: function-iam
              manifest: |-
                {
                  "function_id": "your-function-id",
                  "members": [
                    "system:allUsers"
                  ],
                  "role": "serverless.functions.invoker"
                }
        argumentDocs:
            function_id: '- (Required) The Yandex Cloud Function ID to apply a binding to.'
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles'
        importStatements: []
    yandex_function_scaling_policy:
        subCategory: unknown
        description: Allows management of a Yandex Cloud Function Scaling Policy.
        name: yandex_function_scaling_policy
        title: yandex_function_scaling_policy
        examples:
            - name: my_scaling_policy
              manifest: |-
                {
                  "function_id": "are1samplefunction11",
                  "policy": [
                    {
                      "tag": "$latest",
                      "zone_instances_limit": 3,
                      "zone_requests_limit": 100
                    },
                    {
                      "tag": "my_tag",
                      "zone_instances_limit": 4,
                      "zone_requests_limit": 150
                    }
                  ]
                }
        argumentDocs:
            function_id: (Required) - Yandex Cloud Function id used to define function
            policy: '- list definition for Yandex Cloud Function scaling policies'
            policy.#: '- number of Yandex Cloud Function scaling policies'
            policy.{num}.tag: '- Yandex.Cloud Function version tag for Yandex Cloud Function scaling policy'
            policy.{num}.zone_instances_limit: '- max number of instances in one zone for Yandex.Cloud Function with tag'
            policy.{num}.zone_requests_limit: '- max number of requests in one zone for Yandex.Cloud Function with tag'
        importStatements: []
    yandex_function_trigger:
        subCategory: unknown
        description: Allows management of a Yandex Cloud Functions Trigger.
        name: yandex_function_trigger
        title: yandex_function_trigger
        examples:
            - name: my_trigger
              manifest: |-
                {
                  "description": "any description",
                  "function": [
                    {
                      "id": "tf-test"
                    }
                  ],
                  "name": "some_name",
                  "timer": [
                    {
                      "cron_expression": "* * * * ? *"
                    }
                  ]
                }
        argumentDocs:
            container.0.id: '- Yandex.Cloud Serverless Container ID for Yandex Cloud Functions Trigger'
            container.0.path: '- Path for Yandex.Cloud Serverless Container for Yandex Cloud Functions Trigger'
            container.0.retry_attempts: '- Retry attempts for Yandex.Cloud Serverless Container for Yandex Cloud Functions Trigger'
            container.0.retry_interval: '- Retry interval in seconds for Yandex.Cloud Serverless Container for Yandex Cloud Functions Trigger'
            container.0.service_account_id: '- Service account ID for Yandex.Cloud Serverless Container for Yandex Cloud Functions Trigger'
            container_registry: '- Container Registry settings definition for Yandex Cloud Functions Trigger, if present'
            container_registry.0.batch_cutoff: '- Batch Duration in seconds for Yandex Cloud Functions Trigger'
            container_registry.0.batch_size: '- Batch Size for Yandex Cloud Functions Trigger'
            container_registry.0.create_image: '- Boolean flag for setting create image event for Yandex Cloud Functions Trigger'
            container_registry.0.create_image_tag: '- Boolean flag for setting create image tag event for Yandex Cloud Functions Trigger'
            container_registry.0.delete_image: '- Boolean flag for setting delete image event for Yandex Cloud Functions Trigger'
            container_registry.0.delete_image_tag: '- Boolean flag for setting delete image tag event for Yandex Cloud Functions Trigger'
            container_registry.0.image_name: '- Image name filter setting for Yandex Cloud Functions Trigger'
            container_registry.0.registry_id: '- Container Registry ID for Yandex Cloud Functions Trigger'
            container_registry.0.tag: '- Image tag filter setting for Yandex Cloud Functions Trigger'
            created_at: '- Creation timestamp of the Yandex Cloud Functions Trigger'
            data_streams: '- Data Streams settings definition for Yandex Cloud Functions Trigger, if present'
            data_streams.0.batch_cutoff: '- Batch Duration in seconds for Yandex Cloud Functions Trigger'
            data_streams.0.batch_size: '- Batch Size for Yandex Cloud Functions Trigger'
            data_streams.0.database: '- Stream database for Yandex Cloud Functions Trigger'
            data_streams.0.service_account_id: '- Service account ID to access data stream for Yandex Cloud Functions Trigger'
            data_streams.0.stream_name: '- Stream name for Yandex Cloud Functions Trigger'
            description: '- Description of the Yandex Cloud Functions Trigger'
            dlq: '- Dead Letter Queue settings definition for Yandex Cloud Functions Trigger'
            dlq.0.queue_id: '- ID of Dead Letter Queue for Trigger (Queue ARN)'
            dlq.0.service_account_id: '- Service Account ID for Dead Letter Queue for Yandex Cloud Functions Trigger'
            folder_id: '- (Optional) Folder ID for the Yandex Cloud Functions Trigger'
            function: '- Yandex.Cloud Function settings definition for Yandex Cloud Functions Trigger'
            function.0.id: '- Yandex.Cloud Function ID for Yandex Cloud Functions Trigger'
            function.0.retry_attempts: '- Retry attempts for Yandex.Cloud Function for Yandex Cloud Functions Trigger'
            function.0.retry_interval: '- Retry interval in seconds for Yandex.Cloud Function for Yandex Cloud Functions Trigger'
            function.0.service_account_id: '- Service account ID for Yandex.Cloud Function for Yandex Cloud Functions Trigger'
            function.0.tag: '- Tag for Yandex.Cloud Function for Yandex Cloud Functions Trigger'
            iot: '- IoT settings definition for Yandex Cloud Functions Trigger, if present. Only one section iot or message_queue or object_storage or timer can be defined.'
            iot.0.batch_cutoff: '- Batch Duration in seconds for Yandex Cloud Functions Trigger'
            iot.0.batch_size: '- Batch Size for Yandex Cloud Functions Trigger'
            iot.0.device_id: '- IoT Device ID for Yandex Cloud Functions Trigger'
            iot.0.registry_id: '- IoT Registry ID for Yandex Cloud Functions Trigger'
            iot.0.topic: '- IoT Topic for Yandex Cloud Functions Trigger'
            labels: '- A set of key/value label pairs to assign to the Yandex Cloud Functions Trigger'
            logging: '- Logging settings definition for Yandex Cloud Functions Trigger, if present'
            logging.0.batch_cutoff: '- Batch Duration in seconds for Yandex Cloud Functions Trigger'
            logging.0.batch_size: '- Batch Size for Yandex Cloud Functions Trigger'
            logging.0.group_id: '- Logging group ID for Yandex Cloud Functions Trigger'
            logging.0.levels: '- Logging level filter setting for Yandex Cloud Functions Trigger'
            logging.0.resource_ids: '- Resource ID filter setting for Yandex Cloud Functions Trigger'
            logging.0.resource_types: '- Resource type filter setting for Yandex Cloud Functions Trigger'
            logging.0.stream_names: '- Logging stream name filter setting for Yandex Cloud Functions Trigger'
            mail: '- Logging settings definition for Yandex Cloud Functions Trigger, if present'
            mail.0.attachments_bucket_id: '- Object Storage Bucket ID for Yandex Cloud Functions Trigger'
            mail.0.batch_cutoff: '- Batch Duration in seconds for Yandex Cloud Functions Trigger'
            mail.0.batch_size: '- Batch Size for Yandex Cloud Functions Trigger'
            mail.0.service_account_id: '- Service account ID to access object storage for Yandex Cloud Functions Trigger'
            message_queue: '- Message Queue settings definition for Yandex Cloud Functions Trigger, if present'
            message_queue.0.batch_cutoff: '- Batch Duration in seconds for Yandex Cloud Functions Trigger'
            message_queue.0.batch_size: '- Batch Size for Yandex Cloud Functions Trigger'
            message_queue.0.queue_id: '- Message Queue ID for Yandex Cloud Functions Trigger'
            message_queue.0.service_account_id: '- Message Queue Service Account ID for Yandex Cloud Functions Trigger'
            message_queue.0.visibility_timeout: '- Visibility timeout for Yandex Cloud Functions Trigger'
            name: (Required) - Yandex Cloud Functions Trigger name used to define trigger
            object_storage: '- Object Storage settings definition for Yandex Cloud Functions Trigger, if present'
            object_storage.0.batch_cutoff: '- Batch Duration in seconds for Yandex Cloud Functions Trigger'
            object_storage.0.batch_size: '- Batch Size for Yandex Cloud Functions Trigger'
            object_storage.0.bucket_id: '- Object Storage Bucket ID for Yandex Cloud Functions Trigger'
            object_storage.0.create: '- Boolean flag for setting create event for Yandex Cloud Functions Trigger'
            object_storage.0.delete: '- Boolean flag for setting delete event for Yandex Cloud Functions Trigger'
            object_storage.0.prefix: '- Prefix for Object Storage for Yandex Cloud Functions Trigger'
            object_storage.0.suffix: '- Suffix for Object Storage for Yandex Cloud Functions Trigger'
            object_storage.0.update: '- Boolean flag for setting update event for Yandex Cloud Functions Trigger'
            timer: '- Timer settings definition for Yandex Cloud Functions Trigger, if present'
            timer.0.cron_expression: '- Cron expression for timer for Yandex Cloud Functions Trigger'
            timer.0.payload: '- Payload to be passed to function'
        importStatements: []
    yandex_iam_service_account:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud IAM service account.
        name: yandex_iam_service_account
        title: yandex_iam_service_account
        examples:
            - name: sa
              manifest: |-
                {
                  "description": "service account to manage VMs",
                  "name": "vmmanager"
                }
        argumentDocs:
            description: '- (Optional) Description of the service account.'
            folder_id: |-
                - (Optional) ID of the folder that the service account will be created in.
                Defaults to the provider folder configuration.
            name: |-
                - (Required) Name of the service account.
                Can be updated without creating a new resource.
        importStatements: []
    yandex_iam_service_account_api_key:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud IAM service account API key.
        name: yandex_iam_service_account_api_key
        title: yandex_iam_service_account_api_key
        examples:
            - name: sa-api-key
              manifest: |-
                {
                  "description": "api key for authorization",
                  "pgp_key": "keybase:keybaseusername",
                  "service_account_id": "some_sa_id"
                }
        argumentDocs:
            created_at: '- Creation timestamp of the static access key.'
            description: '- (Optional) The description of the key.'
            encrypted_secret_key: '- The encrypted secret key, base64 encoded. This is only populated when pgp_key is supplied.'
            key_fingerprint: '- The fingerprint of the PGP key used to encrypt the secret key. This is only populated when pgp_key is supplied.'
            pgp_key: '- (Optional) An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase username in the form keybase:keybaseusername.'
            secret_key: '- The secret key. This is only populated when no pgp_key is provided.'
            service_account_id: '- (Required) ID of the service account to an API key for.'
        importStatements: []
    yandex_iam_service_account_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Yandex IAM service account.
        name: yandex_iam_service_account_iam_binding
        title: yandex_iam_service_account_iam_binding
        examples:
            - name: admin-account-iam
              manifest: |-
                {
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "admin",
                  "service_account_id": "your-service-account-id"
                }
        argumentDocs:
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be applied. Only one
                yandex_iam_service_account_iam_binding can be used per role.
            service_account_id: '- (Required) The service account ID to apply a binding to.'
        importStatements: []
    yandex_iam_service_account_iam_member:
        subCategory: unknown
        description: Allows management of a single member for a single IAM binding for a Yandex IAM service account.
        name: yandex_iam_service_account_iam_member
        title: yandex_iam_service_account_iam_member
        examples:
            - name: admin-account-iam
              manifest: |-
                {
                  "member": "userAccount:bar_user_id",
                  "role": "admin",
                  "service_account_id": "your-service-account-id"
                }
        argumentDocs:
            member: |-
                - (Required) Identity that will be granted the privilege in role.
                Entry can have one of the following values:
            role: |-
                - (Required) The role that should be applied. Only one
                yandex_iam_service_account_iam_binding can be used per role.
            service_account_id: '- (Required) The service account ID to apply a policy to.'
        importStatements: []
    yandex_iam_service_account_iam_policy:
        subCategory: unknown
        description: Allows management of the IAM policy for a Yandex IAM service account.
        name: yandex_iam_service_account_iam_policy
        title: yandex_iam_service_account_iam_policy
        examples:
            - name: admin-account-iam
              manifest: |-
                {
                  "policy_data": "${data.yandex_iam_policy.admin.policy_data}",
                  "service_account_id": "your-service-account-id"
                }
        argumentDocs:
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            policy_data: |-
                - (Required only by yandex_iam_service_account_iam_policy) The policy data generated by
                a yandex_iam_policy data source.
            role: |-
                - (Required) The role that should be applied. Only one
                yandex_iam_service_account_iam_binding can be used per role.
            service_account_id: '- (Required) The service account ID to apply a policy to.'
        importStatements: []
    yandex_iam_service_account_key:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud IAM service account key.
        name: yandex_iam_service_account_key
        title: yandex_iam_service_account_key
        examples:
            - name: sa-auth-key
              manifest: |-
                {
                  "description": "key for service account",
                  "key_algorithm": "RSA_4096",
                  "pgp_key": "keybase:keybaseusername",
                  "service_account_id": "some_sa_id"
                }
        argumentDocs:
            created_at: '- Creation timestamp of the static access key.'
            description: '- (Optional) The description of the key pair.'
            encrypted_private_key: '- The encrypted private key, base64 encoded. This is only populated when pgp_key is supplied.'
            format: '- (Optional) The output format of the keys. PEM_FILE is the default format.'
            key_algorithm: |-
                - (Optional) The algorithm used to generate the key. RSA_2048 is the default algorithm.
                Valid values are listed in the API reference.
            key_fingerprint: '- The fingerprint of the PGP key used to encrypt the private key. This is only populated when pgp_key is supplied.'
            pgp_key: '- (Optional) An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form keybase:keybaseusername.'
            private_key: '- The private key. This is only populated when no pgp_key is provided.'
            public_key: '- The public key.'
            service_account_id: '- (Required) ID of the service account to create a pair for.'
        importStatements: []
    yandex_iam_service_account_static_access_key:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud IAM service account static access key.
        name: yandex_iam_service_account_static_access_key
        title: yandex_iam_service_account_static_access_key
        examples:
            - name: sa-static-key
              manifest: |-
                {
                  "description": "static access key for object storage",
                  "pgp_key": "keybase:keybaseusername",
                  "service_account_id": "some_sa_id"
                }
        argumentDocs:
            access_key: '- ID of the static access key.'
            created_at: '- Creation timestamp of the static access key.'
            description: '- (Optional) The description of the service account static key.'
            encrypted_secret_key: '- The encrypted secret, base64 encoded. This is only populated when pgp_key is supplied.'
            key_fingerprint: '- The fingerprint of the PGP key used to encrypt the secret key. This is only populated when pgp_key is supplied.'
            pgp_key: '- (Optional) An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase username in the form keybase:keybaseusername.'
            secret_key: '- Private part of generated static access key. This is only populated when no pgp_key is provided.'
            service_account_id: '- (Required) ID of the service account which is used to get a static key.'
        importStatements: []
    yandex_iot_core_broker:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud IoT Core Broker.
        name: yandex_iot_core_broker
        title: yandex_iot_core_broker
        examples:
            - name: my_broker
              manifest: |-
                {
                  "certificates": [
                    "public part of certificate1",
                    "public part of certificate2"
                  ],
                  "description": "any description",
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "log_options": [
                    {
                      "log_group_id": "log-group-id",
                      "min_level": "ERROR"
                    }
                  ],
                  "name": "some_name"
                }
        argumentDocs:
            certificates: '- A set of certificate''s fingerprints for the IoT Core Broker'
            created_at: '- Creation timestamp of the IoT Core Broker'
            description: (Optional) - Description of the IoT Core Broker
            folder_id: '- Folder ID for the IoT Core Broker'
            labels: '- A set of key/value label pairs to assign to the IoT Core Broker.'
            log_options: '- Options for logging for IoT Core Broker'
            log_options.disabled: '- Is logging for broker disabled'
            log_options.folder_id: '- Log entries are written to default log group for specified folder'
            log_options.log_group_id: '- Log entries are written to specified log group'
            log_options.min_level: '- Minimum log entry level'
            name: (Required) - IoT Core Broker name used to define broker
        importStatements: []
    yandex_iot_core_device:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud IoT Core Device.
        name: yandex_iot_core_device
        title: yandex_iot_core_device
        examples:
            - name: my_device
              manifest: |-
                {
                  "aliases": {
                    "some_alias1/subtopic": "$devices/{id}/events/somesubtopic",
                    "some_alias2/subtopic": "$devices/{id}/events/aaa/bbb"
                  },
                  "certificates": [
                    "public part of certificate1",
                    "public part of certificate2"
                  ],
                  "description": "any description",
                  "name": "some_name",
                  "passwords": [
                    "my-password1",
                    "my-password2"
                  ],
                  "registry_id": "are1sampleregistryid11"
                }
        argumentDocs:
            aliases: '- A set of key/value aliases pairs to assign to the IoT Core Device'
            certificates: '- A set of certificate''s fingerprints for the IoT Core Device'
            created_at: '- Creation timestamp of the IoT Core Device'
            description: (Optional) - Description of the IoT Core Device
            name: (Required) - IoT Core Device name used to define device
            passwords: '- A set of passwords''s id for the IoT Core Device'
            registry_id: '- IoT Core Registry ID for the IoT Core Device'
        importStatements: []
    yandex_iot_core_registry:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud IoT Core Registry.
        name: yandex_iot_core_registry
        title: yandex_iot_core_registry
        examples:
            - name: my_registry
              manifest: |-
                {
                  "certificates": [
                    "public part of certificate1",
                    "public part of certificate2"
                  ],
                  "description": "any description",
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "log_options": [
                    {
                      "log_group_id": "log-group-id",
                      "min_level": "ERROR"
                    }
                  ],
                  "name": "some_name",
                  "passwords": [
                    "my-password1",
                    "my-password2"
                  ]
                }
        argumentDocs:
            certificates: '- A set of certificate''s fingerprints for the IoT Core Registry'
            created_at: '- Creation timestamp of the IoT Core Registry'
            description: (Optional) - Description of the IoT Core Registry
            folder_id: '- Folder ID for the IoT Core Registry'
            labels: '- A set of key/value label pairs to assign to the IoT Core Registry.'
            log_options: '- Options for logging for IoT Core Registry'
            log_options.disabled: '- Is logging for registry disabled'
            log_options.folder_id: '- Log entries are written to default log group for specified folder'
            log_options.log_group_id: '- Log entries are written to specified log group'
            log_options.min_level: '- Minimum log entry level'
            name: (Required) - IoT Core Device name used to define registry
            passwords: '- A set of passwords''s id for the IoT Core Registry'
        importStatements: []
    yandex_kms_asymmetric_encryption_key:
        subCategory: unknown
        description: Creates a Yandex KMS asymmetric encryption key that can be used for cryptographic operation.
        name: yandex_kms_asymmetric_encryption_key
        title: yandex_kms_asymmetric_encryption_key
        examples:
            - name: key-a
              manifest: |-
                {
                  "description": "description for key",
                  "encryption_algorithm": "RSA_2048_ENC_OAEP_SHA_256",
                  "name": "example-asymetric-encryption-key"
                }
        argumentDocs:
            create: '- Default 1 minute'
            created_at: '- Creation timestamp of the key.'
            delete: '- Default 1 minute'
            description: '- (Optional) An optional description of the key.'
            encryption_algorithm: '- (Optional) Encryption algorithm to be used with a new key. The default value is RSA_2048_ENC_OAEP_SHA_256.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) A set of key/value label pairs to assign to the key.'
            name: '- (Optional) Name of the key.'
            status: '- The status of the key.'
            update: '- Default 1 minute'
        importStatements: []
    yandex_kms_asymmetric_encryption_key_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_kms_asymmetric_encryption_key_iam_binding
        title: yandex_kms_asymmetric_encryption_key_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "asymmetric_encryption_key_id": "${yandex_kms_asymmetric_encryption_key.your-key.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer"
                }
              references:
                asymmetric_encryption_key_id: yandex_kms_asymmetric_encryption_key.your-key.id
              dependencies:
                yandex_kms_asymmetric_encryption_key.your-key: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "asymmetric-encryption-key-name"
                    }
        argumentDocs:
            asymmetric_encryption_key_id: '- (Required) The Yandex Key Management Service Asymmetric Encryption Key ID to apply a binding to.'
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles.'
        importStatements: []
    yandex_kms_asymmetric_signature_key:
        subCategory: unknown
        description: Creates a Yandex KMS asymmetric signature key that can be used for cryptographic operation.
        name: yandex_kms_asymmetric_signature_key
        title: yandex_kms_asymmetric_signature_key
        examples:
            - name: key-a
              manifest: |-
                {
                  "description": "description for key",
                  "name": "example-asymetric-signature-key",
                  "signature_algorithm": "RSA_2048_SIGN_PSS_SHA_256"
                }
        argumentDocs:
            create: '- Default 1 minute'
            created_at: '- Creation timestamp of the key.'
            delete: '- Default 1 minute'
            description: '- (Optional) An optional description of the key.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) A set of key/value label pairs to assign to the key.'
            name: '- (Optional) Name of the key.'
            signature_algorithm: '- (Optional) Signature algorithm to be used with a new key. The default value is RSA_2048_SIGN_PSS_SHA_256.'
            status: '- The status of the key.'
            update: '- Default 1 minute'
        importStatements: []
    yandex_kms_asymmetric_signature_key_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_kms_asymmetric_signature_key_iam_binding
        title: yandex_kms_asymmetric_signature_key_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "asymmetric_signaturen_key_id": "${yandex_kms_asymmetric_signature_key.your-key.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer"
                }
              references:
                asymmetric_signaturen_key_id: yandex_kms_asymmetric_signature_key.your-key.id
              dependencies:
                yandex_kms_asymmetric_signature_key.your-key: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "asymmetric-signature-key-name"
                    }
        argumentDocs:
            asymmetric_signature_key_id: '- (Required) The Yandex Key Management Service Asymmetric Signature Key ID to apply a binding to.'
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles.'
        importStatements: []
    yandex_kms_secret_ciphertext:
        subCategory: unknown
        description: Encrypts given plaintext with the specified Yandex KMS key and provides access to the ciphertext.
        name: yandex_kms_secret_ciphertext
        title: yandex_kms_secret_ciphertext
        examples:
            - name: password
              manifest: |-
                {
                  "aad_context": "additional authenticated data",
                  "key_id": "${yandex_kms_symmetric_key.example.id}",
                  "plaintext": "strong password"
                }
              dependencies:
                yandex_kms_symmetric_key.example: |-
                    {
                      "description": "description for key",
                      "name": "example-symetric-key"
                    }
        argumentDocs:
            aad_context: '- (Optional) Additional authenticated data (AAD context), optional. If specified, this data will be required for decryption with the SymmetricDecryptRequest'
            ciphertext: '- Resulting ciphertext, encoded with "standard" base64 alphabet as defined in RFC 4648 section 4'
            create: '- Default 1 minute'
            delete: '- Default 1 minute'
            id: '- an identifier for the resource with format {{key_id}}/{{ciphertext}}'
            key_id: '- (Required) ID of the symmetric KMS key to use for encryption.'
            plaintext: '- (Required) Plaintext to be encrypted.'
        importStatements: []
    yandex_kms_symmetric_key:
        subCategory: unknown
        description: Creates a Yandex KMS symmetric key that can be used for cryptographic operation.
        name: yandex_kms_symmetric_key
        title: yandex_kms_symmetric_key
        examples:
            - name: key-a
              manifest: |-
                {
                  "default_algorithm": "AES_128",
                  "description": "description for key",
                  "name": "example-symetric-key",
                  "rotation_period": "8760h"
                }
        argumentDocs:
            create: '- Default 1 minute'
            created_at: '- Creation timestamp of the key.'
            default_algorithm: |-
                - (Optional) Encryption algorithm to be used with a new key version,
                generated with the next rotation. The default value is AES_128.
            delete: '- Default 1 minute'
            description: '- (Optional) An optional description of the key.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) A set of key/value label pairs to assign to the key.'
            name: '- (Optional) Name of the key.'
            rotated_at: '- Last rotation timestamp of the key.'
            rotation_period: '- (Optional) Interval between automatic rotations. To disable automatic rotation, omit this parameter.'
            status: '- The status of the key.'
            update: '- Default 1 minute'
        importStatements: []
    yandex_kms_symmetric_key_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_kms_symmetric_key_iam_binding
        title: yandex_kms_symmetric_key_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer",
                  "symmetric_key_id": "${yandex_kms_symmetric_key.your-key.id}"
                }
              references:
                symmetric_key_id: yandex_kms_symmetric_key.your-key.id
              dependencies:
                yandex_kms_symmetric_key.your-key: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "symmetric-key-name"
                    }
        argumentDocs:
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles.'
            symmetric_key_id: '- (Required) The Yandex Key Management Service Symmetric Key ID to apply a binding to.'
        importStatements: []
    yandex_kubernetes_cluster:
        subCategory: unknown
        description: Allows management of Yandex Kubernetes Cluster. For more information, see
        name: yandex_kubernetes_cluster
        title: yandex_kubernetes_cluster
        examples:
            - name: zonal_cluster_resource_name
              manifest: |-
                {
                  "description": "description",
                  "kms_provider": [
                    {
                      "key_id": "${yandex_kms_symmetric_key.kms_key_resource_name.id}"
                    }
                  ],
                  "labels": {
                    "my_key": "my_value",
                    "my_other_key": "my_other_value"
                  },
                  "master": [
                    {
                      "maintenance_policy": [
                        {
                          "auto_upgrade": true,
                          "maintenance_window": [
                            {
                              "duration": "3h",
                              "start_time": "15:00"
                            }
                          ]
                        }
                      ],
                      "master_logging": [
                        {
                          "audit_enabled": true,
                          "cluster_autoscaler_enabled": true,
                          "enabled": true,
                          "events_enabled": true,
                          "kube_apiserver_enabled": true,
                          "log_group_id": "${yandex_logging_group.log_group_resoruce_name.id}"
                        }
                      ],
                      "public_ip": true,
                      "security_group_ids": [
                        "${yandex_vpc_security_group.security_group_name.id}"
                      ],
                      "version": "1.17",
                      "zonal": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.subnet_resource_name.id}",
                          "zone": "${yandex_vpc_subnet.subnet_resource_name.zone}"
                        }
                      ]
                    }
                  ],
                  "name": "name",
                  "network_id": "${yandex_vpc_network.network_resource_name.id}",
                  "network_policy_provider": "CALICO",
                  "node_service_account_id": "${yandex_iam_service_account.node_service_account_resource_name.id}",
                  "release_channel": "RAPID",
                  "service_account_id": "${yandex_iam_service_account.service_account_resource_name.id}"
                }
            - name: regional_cluster_resource_name
              manifest: |-
                {
                  "description": "description",
                  "labels": {
                    "my_key": "my_value",
                    "my_other_key": "my_other_value"
                  },
                  "master": [
                    {
                      "maintenance_policy": [
                        {
                          "auto_upgrade": true,
                          "maintenance_window": [
                            {
                              "day": "monday",
                              "duration": "3h",
                              "start_time": "15:00"
                            },
                            {
                              "day": "friday",
                              "duration": "4h30m",
                              "start_time": "10:00"
                            }
                          ]
                        }
                      ],
                      "master_logging": [
                        {
                          "audit_enabled": true,
                          "cluster_autoscaler_enabled": true,
                          "enabled": true,
                          "events_enabled": true,
                          "folder_id": "${data.yandex_resourcemanager_folder.folder_resource_name.id}",
                          "kube_apiserver_enabled": true
                        }
                      ],
                      "public_ip": true,
                      "regional": [
                        {
                          "location": [
                            {
                              "subnet_id": "${yandex_vpc_subnet.subnet_a_resource_name.id}",
                              "zone": "${yandex_vpc_subnet.subnet_a_resource_name.zone}"
                            },
                            {
                              "subnet_id": "${yandex_vpc_subnet.subnet_b_resource_name.id}",
                              "zone": "${yandex_vpc_subnet.subnet_b_resource_name.zone}"
                            },
                            {
                              "subnet_id": "${yandex_vpc_subnet.subnet_c_resource_name.id}",
                              "zone": "${yandex_vpc_subnet.subnet_c_resource_name.zone}"
                            }
                          ],
                          "region": "ru-central1"
                        }
                      ],
                      "version": "1.14"
                    }
                  ],
                  "name": "name",
                  "network_id": "${yandex_vpc_network.network_resource_name.id}",
                  "node_service_account_id": "${yandex_iam_service_account.node_service_account_resource_name.id}",
                  "release_channel": "STABLE",
                  "service_account_id": "${yandex_iam_service_account.service_account_resource_name.id}"
                }
        argumentDocs:
            cluster_ipv4_range: |-
                - (Optional) CIDR block. IP range for allocating pod addresses.
                It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be
                set up for this CIDR blocks in node subnets.
            cluster_ipv6_range: '- (Optional) Identical to cluster_ipv4_range but for IPv6 protocol.'
            create: '- Default is 30 minute.'
            created_at: '- (Computed) The Kubernetes cluster creation timestamp.'
            delete: '- Default is 20 minute.'
            description: '- (Optional) A description of the Kubernetes cluster.'
            folder_id: |-
                - (Optional) The ID of the folder that the Kubernetes cluster belongs to.
                If it is not provided, the default provider folder is used.
            health: '- (Computed) Health of the Kubernetes cluster.'
            id: '- (Computed) ID of a new Kubernetes cluster.'
            kms_provider: '- (Optional) cluster KMS provider parameters.'
            kms_provider.key_id: '- KMS key ID.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Kubernetes cluster.'
            log_group_id: '- Log group where cluster stores cluster system logs, like audit, events, or controlplane logs.'
            maintenance_policy.auto_upgrade: '- (Required) Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.'
            maintenance_policy.maintenance_window: |-
                - (Optional) (Computed) This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time.
                To specify time of day interval, for all days, one element should be provided, with two fields set, start_time and duration.
                Please see zonal_cluster_resource_name config example.
            master: '- Kubernetes master configuration options. The structure is documented below.'
            master.cluster_ca_certificate: '- (Computed) PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.'
            master.external_v4_address: '- (Computed) An IPv4 external network address that is assigned to the master.'
            master.external_v4_endpoint: '- (Computed) External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).'
            master.internal_v4_address: '- (Computed) An IPv4 internal network address that is assigned to the master.'
            master.internal_v4_endpoint: '- (Computed) Internal endpoint that can be used to connect to the master from cloud networks.'
            master.maintenance_policy: |-
                - (Optional) (Computed) Maintenance policy for Kubernetes master.
                If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time.
                Revision upgrades are performed only within the same minor version, e.g. 1.13.
                Minor version upgrades (e.g. 1.13->1.14) should be performed manually. The structure is documented below.
            master.master_location: |-
                - (Optional) Cluster master's instances locations array (zone and subnet).
                Cannot be used together with zonal or regional. Currently, supports either one, for zonal master, or three instances of master_location.
                Can be updated inplace. When creating regional cluster (three master instances), its region will be evaluated automatically by backend.
                The structure is documented below.
            master.master_logging: '- (Optional) Master Logging options. The structure is documented below.'
            master.public_ip: '- (Optional) (Computed) Boolean flag. When true, Kubernetes master will have visible ipv4 address.'
            master.regional: '- (Optional) Initialize parameters for Regional Master (highly available master). The structure is documented below.'
            master.security_group_ids: '- (Optional) List of security group IDs to which the Kubernetes cluster belongs.'
            master.version: '- (Optional) (Computed) Version of Kubernetes that will be used for master.'
            master.version_info: '- (Computed) Information about cluster version. The structure is documented below.'
            master.zonal: '- (Optional) Initialize parameters for Zonal Master (single node master). The structure is documented below.'
            master_location.subnet_id: '- (Optional) ID of the subnet.'
            master_location.zone: '- (Optional) ID of the availability zone.'
            master_logging.audit_enabled: '- (Optional) Boolean flag that specifies if kube-apiserver audit logs should be sent to Yandex Cloud Logging.'
            master_logging.cluster_autoscaler_enabled: '- (Optional) Boolean flag that specifies if cluster-autoscaler logs should be sent to Yandex Cloud Logging.'
            master_logging.enabled: '- (Optional) Boolean flag that specifies if master components logs should be sent to Yandex Cloud Logging. The exact components that will send their logs must be configured via the options described below.'
            master_logging.events_enabled: '- (Optional) Boolean flag that specifies if kubernetes cluster events should be sent to Yandex Cloud Logging.'
            master_logging.folder_id: '- (Optional) ID of the folder default Log group of which should be used to collect logs.'
            master_logging.kube_apiserver_enabled: '- (Optional) Boolean flag that specifies if kube-apiserver logs should be sent to Yandex Cloud Logging.'
            master_logging.log_group_id: '- (Optional) ID of the Yandex Cloud Logging Log group.'
            name: '- (Optional) Name of a specific Kubernetes cluster.'
            network_id: '- (Optional) The ID of the cluster network.'
            network_implementation: '- (Optional) Network Implementation options. The structure is documented below.'
            network_implementation.cilium: '- (Optional) Cilium network implementation configuration. No options exist.'
            network_policy_provider: '- (Optional) Network policy provider for the cluster. Possible values: CALICO.'
            node_ipv4_cidr_mask_size: '- (Optional) Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.'
            node_service_account_id: |-
                - Service account to be used by the worker nodes of the Kubernetes cluster
                to access Container Registry or to push node logs and metrics.
            regional.location: '- Array of locations, where master instances will be allocated. The structure is documented below.'
            regional.location.subnet_id: '- (Optional) ID of the subnet.'
            regional.location.zone: '- (Optional) ID of the availability zone.'
            regional.region: '- (Required) Name of availability region (e.g. "ru-central1"), where master instances will be allocated.'
            release_channel: '- Cluster release channel.'
            service_account_id: |-
                - Service account to be used for provisioning Compute Cloud and VPC resources
                for Kubernetes cluster. Selected service account should have edit role on the folder where the Kubernetes
                cluster will be located and on the folder where selected network resides.
            service_ipv4_range: |-
                - (Optional) CIDR block. IP range Kubernetes service Kubernetes cluster
                IP addresses will be allocated from. It should not overlap with any subnet in the network
                the Kubernetes cluster located in.
            service_ipv6_range: '- (Optional) Identical to service_ipv4_range but for IPv6 protocol.'
            status: '- (Computed)Status of the Kubernetes cluster.'
            update: '- Default is 20 minute.'
            version_info.current_version: '- Current Kubernetes version, major.minor (e.g. 1.15).'
            version_info.new_revision_available: |-
                - Boolean flag.
                Newer revisions may include Kubernetes patches (e.g 1.15.1 -> 1.15.2) as well
                as some internal component updates - new features or bug fixes in yandex-specific
                components either on the master or nodes.
            version_info.new_revision_summary: |-
                - Human readable description of the changes to be applied
                when updating to the latest revision. Empty if new_revision_available is false.
            version_info.version_deprecated: |-
                - Boolean flag. The current version is on the deprecation schedule,
                component (master or node group) should be upgraded.
            zonal.subnet_id: '- (Optional) ID of the subnet. If no ID is specified, and there only one subnet in specified zone, an address in this subnet will be allocated.'
            zonal.zone: '- (Optional) ID of the availability zone.'
        importStatements: []
    yandex_kubernetes_node_group:
        subCategory: unknown
        description: Allows management of Yandex Kubernetes Node Group. For more information, see
        name: yandex_kubernetes_node_group
        title: yandex_kubernetes_node_group
        examples:
            - name: my_node_group
              manifest: |-
                {
                  "allocation_policy": [
                    {
                      "location": [
                        {
                          "zone": "ru-central1-a"
                        }
                      ]
                    }
                  ],
                  "cluster_id": "${yandex_kubernetes_cluster.my_cluster.id}",
                  "description": "description",
                  "instance_template": [
                    {
                      "boot_disk": [
                        {
                          "size": 64,
                          "type": "network-hdd"
                        }
                      ],
                      "container_runtime": [
                        {
                          "type": "containerd"
                        }
                      ],
                      "network_interface": [
                        {
                          "nat": true,
                          "subnet_ids": [
                            "${yandex_vpc_subnet.my_subnet.id}"
                          ]
                        }
                      ],
                      "platform_id": "standard-v2",
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 2
                        }
                      ],
                      "scheduling_policy": [
                        {
                          "preemptible": false
                        }
                      ]
                    }
                  ],
                  "labels": {
                    "key": "value"
                  },
                  "maintenance_policy": [
                    {
                      "auto_repair": true,
                      "auto_upgrade": true,
                      "maintenance_window": [
                        {
                          "day": "monday",
                          "duration": "3h",
                          "start_time": "15:00"
                        },
                        {
                          "day": "friday",
                          "duration": "4h30m",
                          "start_time": "10:00"
                        }
                      ]
                    }
                  ],
                  "name": "name",
                  "scale_policy": [
                    {
                      "fixed_scale": [
                        {
                          "size": 1
                        }
                      ]
                    }
                  ],
                  "version": "1.17"
                }
        argumentDocs:
            allocation_policy: '- This argument specify subnets (zones), that will be used by node group compute instances. The structure is documented below.'
            allocation_policy.location: '- Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.'
            allocation_policy.location.subnet_id: '- ID of the subnet, that will be used by one compute instance in node group.'
            allocation_policy.location.zone: '- ID of the availability zone where for one compute instance in node group.'
            allowed_unsafe_sysctls: '- (Optional, Forces new resource) A list of allowed unsafe sysctl parameters for this node group. For more details see documentation.'
            auto_scale.initial: '- Initial number of instances in the node group.'
            auto_scale.max: '- Maximum number of instances in the node group.'
            auto_scale.min: '- Minimum number of instances in the node group.'
            boot_disk.size: '- The size of the disk in GB. Allowed minimal size: 64 GB.'
            boot_disk.type: '- The disk type.'
            cluster_id: '- (Required) The ID of the Kubernetes cluster that this node group belongs to.'
            container_network.pod_mtu: '- MTU for pods.'
            container_runtime.type: '- (Required) Type of container runtime. Values: docker, containerd.'
            create: '- Default is 60 minute.'
            created_at: '- (Computed) The Kubernetes node group creation timestamp.'
            delete: '- Default is 20 minute.'
            deploy_policy: '- Deploy policy of the node group. The structure is documented below.'
            deploy_policy.max_expansion: '- The maximum number of instances that can be temporarily allocated above the group''s target size during the update.'
            deploy_policy.max_unavailable: '- The maximum number of running instances that can be taken offline during update.'
            description: '- (Optional) A description of the Kubernetes node group.'
            gpu_settings.gpu_cluster_id: '- GPU cluster id.'
            gpu_settings.gpu_environment: '- GPU environment. Values: runc, runc_drivers_cuda.'
            instance_group_id: '- (Computed) ID of instance group that is used to manage this Kubernetes node group.'
            instance_template: '- (Required) Template used to create compute instances in this Kubernetes node group. The structure is documented below.'
            instance_template.boot_disk: '- The specifications for boot disks that will be attached to the instance. The structure is documented below.'
            instance_template.container_network: '- (Optional) Container network configuration. The structure is documented below.'
            instance_template.container_runtime: '- (Optional) Container runtime configuration. The structure is documented below.'
            instance_template.gpu_settings: '- (Optional) GPU settings. The structure is documented below.'
            instance_template.labels: '- (Optional) Labels that will be assigned to compute nodes (instances), created by the Node Group.'
            instance_template.metadata: '- The set of metadata key:value pairs assigned to this instance template. This includes custom metadata and predefined keys. Note: key "user-data" won''t be provided into instances. It reserved for internal activity in kubernetes_node_group resource.'
            instance_template.name: |-
                - (Optional) Name template of the instance.
                In order to be unique it must contain at least one of instance unique placeholders:
                {instance.short_id}
                {instance.index}
                combination of {instance.zone_id} and {instance.index_in_zone}
                Example: my-instance-{instance.index}
                If not set, default is used: {instance_group.id}-{instance.short_id}
                It may also contain another placeholders, see Compute Instance group metadata doc for full list.
            instance_template.nat: '- Boolean flag, enables NAT for node group compute instances.'
            instance_template.network_acceleration_type: '- (Optional) Type of network acceleration. Values: standard, software_accelerated.'
            instance_template.network_interface: '- An array with the network interfaces that will be attached to the instance. The structure is documented below.'
            instance_template.placement_policy: '- (Optional) The placement policy configuration. The structure is documented below.'
            instance_template.platform_id: '- The ID of the hardware platform configuration for the node group compute instances.'
            instance_template.resources.0.core_fraction: '- Baseline core performance as a percent.'
            instance_template.resources.0.cores: '- Number of CPU cores allocated to the instance.'
            instance_template.resources.0.gpus: '- Number of GPU cores allocated to the instance.'
            instance_template.resources.0.memory: '- The memory size allocated to the instance.'
            instance_template.scheduling_policy: '- The scheduling policy for the instances in node group. The structure is documented below.'
            ipv6_dns_records.dns_zone_id: '- (Optional) DNS zone ID (if not set, private zone is used).'
            ipv6_dns_records.fqdn: '- (Required) DNS record FQDN.'
            ipv6_dns_records.ptr: '- (Optional) When set to true, also create a PTR DNS record.'
            ipv6_dns_records.ttl: '- (Optional) DNS record TTL (in seconds).'
            labels: '- (Optional) A set of key/value label pairs assigned to the Kubernetes node group.'
            maintenance_policy: |-
                - (Optional) (Computed) Maintenance policy for this Kubernetes node group.
                If policy is omitted, automatic revision upgrades are enabled and could happen at any time.
                Revision upgrades are performed only within the same minor version, e.g. 1.13.
                Minor version upgrades (e.g. 1.13->1.14) should be performed manually. The structure is documented below.
            maintenance_policy.auto_repair: '- (Required) Boolean flag that specifies if node group can be repaired automatically. When omitted, default value is TRUE.'
            maintenance_policy.auto_upgrade: '- (Required) Boolean flag that specifies if node group can be upgraded automatically. When omitted, default value is TRUE.'
            maintenance_policy.maintenance_window: '- (Optional) (Computed) Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time.'
            name: '- (Optional) Name of a specific Kubernetes node group.'
            network_interface.ipv4: '- (Optional) Allocate an IPv4 address for the interface. The default value is true.'
            network_interface.ipv4_dns_records: '- (Optional) List of configurations for creating ipv4 DNS records. The structure is documented below.'
            network_interface.ipv4_dns_records.dns_zone_id: '- (Optional) DNS zone ID (if not set, private zone is used).'
            network_interface.ipv4_dns_records.fqdn: '- (Required) DNS record FQDN.'
            network_interface.ipv4_dns_records.ptr: '- (Optional) When set to true, also create a PTR DNS record.'
            network_interface.ipv4_dns_records.ttl: '- (Optional) DNS record TTL (in seconds).'
            network_interface.ipv6: '- (Optional) If true, allocate an IPv6 address for the interface. The address will be automatically assigned from the specified subnet.'
            network_interface.ipv6_dns_records: '- (Optional) List of configurations for creating ipv6 DNS records. The structure is documented below.'
            network_interface.nat: '- A public address that can be used to access the internet over NAT.'
            network_interface.security_group_ids: '- (Optional) Security group ids for network interface.'
            network_interface.subnet_ids: '- The IDs of the subnets.'
            node_labels: '- (Optional, Forces new resource) A set of key/value label pairs, that are assigned to all the nodes of this Kubernetes node group.'
            node_taints: '- (Optional, Forces new resource) A list of Kubernetes taints, that are applied to all the nodes of this Kubernetes node group.'
            placement_policy.placement_group_id: '- (Optional) Specifies the id of the Placement Group to assign to the instances.'
            scale_policy: '- (Required) Scale policy of the node group. The structure is documented below.'
            scale_policy.auto_scale: '- Scale policy for an autoscaled node group. The structure is documented below.'
            scale_policy.fixed_scale: '- Scale policy for a fixed scale node group. The structure is documented below.'
            scale_policy.fixed_scale.size: '- The number of instances in the node group.'
            scheduling_policy.preemptible: '- Specifies if the instance is preemptible. Defaults to false.'
            status: '- (Computed) Status of the Kubernetes node group.'
            update: '- Default is 60 minute.'
            version: '- (Optional) Version of Kubernetes that will be used for Kubernetes node group.'
            version_info: '- (Computed) Information about Kubernetes node group version. The structure is documented below.'
            version_info.current_version: '- Current Kubernetes version, major.minor (e.g. 1.15).'
            version_info.new_revision_available: |-
                - True/false flag.
                Newer revisions may include Kubernetes patches (e.g 1.15.1 -> 1.15.2) as well
                as some internal component updates - new features or bug fixes in yandex-specific
                components either on the master or nodes.
            version_info.new_revision_summary: |-
                - Human readable description of the changes to be applied
                when updating to the latest revision. Empty if new_revision_available is false.
            version_info.version_deprecated: |-
                - True/false flag. The current version is on the deprecation schedule,
                component (master or node group) should be upgraded.
        importStatements: []
    yandex_lb_network_load_balancer:
        subCategory: unknown
        description: A network load balancer is used to evenly distribute the load across cloud resources.
        name: yandex_lb_network_load_balancer
        title: yandex_lb_network_load_balancer
        examples:
            - name: foo
              manifest: |-
                {
                  "attached_target_group": [
                    {
                      "healthcheck": [
                        {
                          "http_options": [
                            {
                              "path": "/ping",
                              "port": 8080
                            }
                          ],
                          "name": "http"
                        }
                      ],
                      "target_group_id": "${yandex_lb_target_group.my-target-group.id}"
                    }
                  ],
                  "listener": [
                    {
                      "external_address_spec": [
                        {
                          "ip_version": "ipv4"
                        }
                      ],
                      "name": "my-listener",
                      "port": 8080
                    }
                  ],
                  "name": "my-network-load-balancer"
                }
        argumentDocs:
            attached_target_group: '- (Optional) An AttachedTargetGroup resource. The structure is documented below.'
            attached_target_group.healthcheck: '- (Required) A HealthCheck resource. The structure is documented below.'
            attached_target_group.target_group_id: '- (Required) ID of the target group.'
            create: '- Default is 5 minute.'
            created_at: '- The network load balancer creation timestamp.'
            delete: '- Default is 5 minute.'
            deletion_protection: '- (Optional) Flag that protects the network load balancer from accidental deletion.'
            description: |-
                - (Optional) An optional description of the network load balancer. Provide this property when
                you create the resource.
            external_address_spec.address: '- (Optional) External IP address for a listener. IP address will be allocated if it wasn''t been set.'
            external_address_spec.ip_version: '- (Optional) IP version of the external addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.'
            folder_id: |-
                - (Optional) The ID of the folder to which the resource belongs.
                If omitted, the provider folder is used.
            healthcheck.healthy_threshold: '- (Optional) Number of successful health checks required in order to set the HEALTHY status for the target.'
            healthcheck.http_options: '- (Optional) Options for HTTP health check. The structure is documented below.'
            healthcheck.interval: '- (Optional) The interval between health checks. The default is 2 seconds.'
            healthcheck.name: '- (Required) Name of the health check. The name must be unique for each target group that attached to a single load balancer.'
            healthcheck.tcp_options: '- (Optional) Options for TCP health check. The structure is documented below.'
            healthcheck.timeout: '- (Optional) Timeout for a target to return a response for the health check. The default is 1 second.'
            healthcheck.unhealthy_threshold: '- (Optional) Number of failed health checks before changing the status to UNHEALTHY. The default is 2.'
            http_options.path: '- (Optional) URL path to set for health checking requests for every target in the target group. For example /ping. The default path is /.'
            http_options.port: '- (Required) Port to use for HTTP health checks.'
            id: '- The ID of the network load balancer.'
            internal_address_spec.address: '- (Optional) Internal IP address for a listener. Must belong to the subnet that is referenced in subnet_id. IP address will be allocated if it wasn''t been set.'
            internal_address_spec.ip_version: '- (Optional) IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.'
            internal_address_spec.subnet_id: '- (Required) ID of the subnet to which the internal IP address belongs.'
            labels: '- (Optional) Labels to assign to this network load balancer. A list of key/value pairs.'
            listener: '- (Optional) Listener specification that will be used by a network load balancer. The structure is documented below.'
            listener.external_address_spec: '- (Optional) External IP address specification. The structure is documented below.'
            listener.internal_address_spec: '- (Optional) Internal IP address specification. The structure is documented below.'
            listener.name: '- (Required) Name of the listener. The name must be unique for each listener on a single load balancer.'
            listener.port: '- (Required) Port for incoming traffic.'
            listener.protocol: '- (Optional) Protocol for incoming traffic. TCP or UDP and the default is TCP.'
            listener.target_port: '- (Optional) Port of a target. The default is the same as listener''s port.'
            name: '- (Optional) Name of the network load balancer. Provided by the client when the network load balancer is created.'
            region_id: |-
                - (Optional) ID of the availability zone where the network load balancer resides.
                If omitted, default region is being used.
            tcp_options.port: '- (Required) Port to use for TCP health checks.'
            type: '- (Optional) Type of the network load balancer. Must be one of ''external'' or ''internal''. The default is ''external''.'
            update: '- Default is 5 minute.'
        importStatements: []
    yandex_lb_target_group:
        subCategory: unknown
        description: A load balancer distributes the load across cloud resources that are combined into a target group.
        name: yandex_lb_target_group
        title: yandex_lb_target_group
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "my-target-group",
                  "region_id": "ru-central1",
                  "target": [
                    {
                      "address": "${yandex_compute_instance.my-instance-1.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    },
                    {
                      "address": "${yandex_compute_instance.my-instance-2.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    }
                  ]
                }
        argumentDocs:
            create: '- Default is 5 minute.'
            created_at: '- The target group creation timestamp.'
            delete: '- Default is 5 minute.'
            description: |-
                - (Optional) An optional description of the target group. Provide this property when
                you create the resource.
            folder_id: |-
                - (Optional) The ID of the folder to which the resource belongs.
                If omitted, the provider folder is used.
            id: '- The ID of the target group.'
            labels: '- (Optional) Labels to assign to this target group. A list of key/value pairs.'
            name: '- (Optional) Name of the target group. Provided by the client when the target group is created.'
            region_id: |-
                - (Optional) ID of the availability zone where the target group resides.
                If omitted, default region is being used.
            target: '- (Optional) A Target resource. The structure is documented below.'
            target.address: '- (Required) IP address of the target.'
            target.subnet_id: |-
                - (Required) ID of the subnet that targets are connected to.
                All targets in the target group must be connected to the same subnet within a single availability zone.
            update: '- Default is 5 minute.'
        importStatements: []
    yandex_loadtesting_agent:
        subCategory: unknown
        description: Manages an Yandex Cloud Load Testing Agent resource.
        name: yandex_loadtesting_agent
        title: yandex_loadtesting_agent
        examples:
            - name: my-agent
              manifest: |-
                {
                  "compute_instance": [
                    {
                      "boot_disk": [
                        {
                          "auto_delete": true,
                          "initialize_params": [
                            {
                              "size": 15
                            }
                          ]
                        }
                      ],
                      "network_interface": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.my-subnet-a.id}"
                        }
                      ],
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 4
                        }
                      ],
                      "service_account_id": "${yandex_iam_service_account.test_account.id}",
                      "zone_id": "ru-central1-b"
                    }
                  ],
                  "description": "2 core 4 GB RAM agent",
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "labels": {
                    "jmeter": "5"
                  },
                  "name": "my-agent"
                }
        argumentDocs:
            boot_disk.auto_delete: '- (Optional) Whether the disk is auto-deleted when the instance is deleted. The default value is true.'
            boot_disk.device_name: '- (Optional) This value can be used to reference the device under /dev/disk/by-id/.'
            boot_disk.disk_id: '- (Computed) The ID of created disk.'
            boot_disk.initialize_params: '- (Required) Parameters for creating a disk alongside the instance. The structure is documented below.'
            compute_instance: '- (Required) The template for creating new compute instance running load testing agent. The structure is documented below.'
            compute_instance.boot_disk: '- (Required) Boot disk specifications for the instance. The structure is documented below.'
            compute_instance.computed_metadata: '- (Computed) The set of metadata key:value pairs assigned to this instance. This includes user custom metadata, and predefined items created by Yandex Cloud Load Testing.'
            compute_instance.labels: '- (Optional) A set of key/value label pairs to assign to the instance.'
            compute_instance.metadata: '- (Optional) A set of metadata key/value pairs to make available from within the instance.'
            compute_instance.network_interface: '- (Required) Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.'
            compute_instance.platform_id: '- (Optional) The Compute platform of virtual machine. If it is not provided, the standard-v2 platform will be used.'
            compute_instance.resources: '- (Required) Compute resource specifications for the instance. The structure is documented below.'
            compute_instance.service_account_id: '- (Required) The ID of the service account authorized for this load testing agent. Service account should have loadtesting.generatorClient or loadtesting.externalAgent role in the folder.'
            compute_instance.zone_id: |-
                - (Optional) The availability zone where the virtual machine will be created. If it is not provided,
                the default provider folder is used.
            create: '- Default 10 minutes'
            delete: '- Default 10 minutes'
            description: '- (Optional) A description of the load testing agent.'
            folder_id: '- (Required) The ID of the folder that the resources belong to.'
            initialize_params.block_size: '- (Optional) Block size of the disk, specified in bytes.'
            initialize_params.description: '- (Optional) A description of the boot disk.'
            initialize_params.name: '- (Optional) A name of the boot disk.'
            initialize_params.size: '- (Optional) The size of the disk in GB. Defaults to 15 GB.'
            initialize_params.type: '- (Optional) The disk type.'
            labels: '- (Optional) A set of key/value label pairs to assign to the agent.'
            name: '- (Required) The name of the load testing agent. Must be unique within folder.'
            network_interface.ip_address: '- (Optional) Manual set static IP address.'
            network_interface.ipv4: '- (Optional) Flag for allocating IPv4 address for the network interface.'
            network_interface.ipv6: '- (Optional) Flag for allocating IPv6 address for the network interface.'
            network_interface.ipv6_address: '- (Optional) Manual set static IPv6 address.'
            network_interface.nat: '- (Optional) Flag for using NAT.'
            network_interface.nat_ip_address: '- (Optional) A public address that can be used to access the internet over NAT.'
            network_interface.security_group_ids: '- (Optional) Security group ids for network interface.'
            network_interface.subnet_id: '- (Required) The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.'
            resources.core_fraction: '- (Optional) If provided, specifies baseline core performance as a percent.'
            resources.cores: '- (Optional) The number of CPU cores for the instance. Defaults to 2 cores.'
            resources.memory: '- (Optional) The memory size in GB. Defaults to 2 GB.'
            update: '- Default 10 minutes'
        importStatements: []
    yandex_lockbox_secret:
        subCategory: unknown
        description: Manages Yandex Cloud Lockbox secret.
        name: yandex_lockbox_secret
        title: yandex_lockbox_secret
        examples:
            - name: my_secret
              manifest: |-
                {
                  "name": "test secret"
                }
        argumentDocs:
            created_at: '- The Yandex Cloud Lockbox secret creation timestamp.'
            deletion_protection: '- (Optional) Whether the Yandex Cloud Lockbox secret is protected from deletion.'
            description: '- (Optional) A description for the Yandex Cloud Lockbox secret.'
            folder_id: |-
                - (Optional) ID of the folder that the Yandex Cloud Lockbox secret belongs to.
                It will be deduced from provider configuration if not set explicitly.
            kms_key_id: '- (Optional) The KMS key used to encrypt the Yandex Cloud Lockbox secret.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Yandex Cloud Lockbox secret.'
            name: '- (Optional) Name for the Yandex Cloud Lockbox secret.'
            status: '- The Yandex Cloud Lockbox secret status.'
        importStatements: []
    yandex_lockbox_secret_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_lockbox_secret_iam_binding
        title: yandex_lockbox_secret_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer",
                  "secret_id": "${yandex_lockbox_secret.your-secret.id}"
                }
              references:
                secret_id: yandex_lockbox_secret.your-secret.id
              dependencies:
                yandex_lockbox_secret.your-secret: |-
                    {
                      "name": "secret-name"
                    }
        argumentDocs:
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles.'
            secret_id: '- (Required) The Yandex Lockbox Secret Secret ID to apply a binding to.'
        importStatements: []
    yandex_lockbox_secret_version:
        subCategory: unknown
        description: Manages Yandex Cloud Lockbox secret version.
        name: yandex_lockbox_secret_version
        title: yandex_lockbox_secret_version
        examples:
            - name: my_version
              manifest: |-
                {
                  "entries": [
                    {
                      "key": "key1",
                      "text_value": "value1"
                    },
                    {
                      "command": [
                        {
                          "path": "my_secret_generator.sh"
                        }
                      ],
                      "key": "k2"
                    }
                  ],
                  "secret_id": "${yandex_lockbox_secret.my_secret.id}"
                }
              references:
                secret_id: yandex_lockbox_secret.my_secret.id
              dependencies:
                yandex_lockbox_secret.my_secret: |-
                    {
                      "name": "test secret"
                    }
        argumentDocs:
            description: '- (Optional) The Yandex Cloud Lockbox secret version description.'
            entries: '- (Required) List of entries in the Yandex Cloud Lockbox secret version.'
            entries.command: '- (Optional) The command that generates the text value of the entry.'
            entries.command.args: '- (Optional) List of arguments to be passed to the script/command.'
            entries.command.env: '- (Optional) Map of environment variables to set before calling the script/command.'
            entries.command.path: '- (Required) The path to the script or command to execute.'
            entries.key: '- (Required) The key of the entry.'
            entries.text_value: '- (Optional) The text value of the entry.'
            secret_id: '- (Required) The Yandex Cloud Lockbox secret ID where to add the version.'
        importStatements: []
    yandex_lockbox_secret_version_hashed:
        subCategory: unknown
        description: Manages Yandex Cloud Lockbox secret version (with values hashed in state).
        name: yandex_lockbox_secret_version_hashed
        title: yandex_lockbox_secret_version_hashed
        examples:
            - name: my_version
              manifest: |-
                {
                  "key_1": "key1",
                  "key_2": "k2",
                  "secret_id": "${yandex_lockbox_secret.my_secret.id}",
                  "text_value_1": "sensitive value 1",
                  "text_value_2": "sensitive value 2"
                }
              references:
                secret_id: yandex_lockbox_secret.my_secret.id
              dependencies:
                yandex_lockbox_secret.my_secret: |-
                    {
                      "name": "test secret"
                    }
        argumentDocs:
            description: '- (Optional) The Yandex Cloud Lockbox secret version description.'
            key_<NUMBER>: '- (Optional) Each of the entry keys in the Yandex Cloud Lockbox secret version.'
            secret_id: '- (Required) The Yandex Cloud Lockbox secret ID where to add the version.'
            text_value_<NUMBER>: '- (Optional) Each of the entry values in the Yandex Cloud Lockbox secret version.'
        importStatements: []
    yandex_logging_group:
        subCategory: unknown
        description: Manages Yandex Cloud Logging group.
        name: yandex_logging_group
        title: yandex_logging_group
        examples:
            - name: group1
              manifest: |-
                {
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "name": "test-logging-group"
                }
        argumentDocs:
            cloud_id: '- ID of the cloud that the Yandex Cloud Logging group belong to.'
            created_at: '- The Yandex Cloud Logging group creation timestamp.'
            description: '- (Optional) A description for the Yandex Cloud Logging group.'
            folder_id: |-
                - (Optional) ID of the folder that the Yandex Cloud Logging group belongs to.
                It will be deduced from provider configuration if not set explicitly.
            id: '- The Yandex Cloud Logging group ID.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Yandex Cloud Logging group.'
            location_id: '- (Optional) Location ID for the Yandex Cloud Logging group.'
            name: '- (Optional) Name for the Yandex Cloud Logging group.'
            retention_period: '- (Optional) Log entries retention period for the Yandex Cloud Logging group.'
            status: '- The Yandex Cloud Logging group status.'
        importStatements: []
    yandex_mdb_clickhouse_cluster:
        subCategory: unknown
        description: Manages a ClickHouse cluster within Yandex.Cloud.
        name: yandex_mdb_clickhouse_cluster
        title: yandex_mdb_clickhouse_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "clickhouse": [
                    {
                      "config": [
                        {
                          "background_pool_size": 16,
                          "background_schedule_pool_size": 16,
                          "compression": [
                            {
                              "method": "LZ4",
                              "min_part_size": 1024,
                              "min_part_size_ratio": 0.5
                            },
                            {
                              "method": "ZSTD",
                              "min_part_size": 2048,
                              "min_part_size_ratio": 0.7
                            }
                          ],
                          "geobase_uri": "",
                          "graphite_rollup": [
                            {
                              "name": "rollup1",
                              "pattern": [
                                {
                                  "function": "func1",
                                  "regexp": "abc",
                                  "retention": [
                                    {
                                      "age": 1000,
                                      "precision": 3
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "name": "rollup2",
                              "pattern": [
                                {
                                  "function": "func2",
                                  "retention": [
                                    {
                                      "age": 2000,
                                      "precision": 5
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "kafka": [
                            {
                              "sasl_mechanism": "SASL_MECHANISM_GSSAPI",
                              "sasl_password": "pass1",
                              "sasl_username": "user1",
                              "security_protocol": "SECURITY_PROTOCOL_PLAINTEXT"
                            }
                          ],
                          "kafka_topic": [
                            {
                              "name": "topic1",
                              "settings": [
                                {
                                  "sasl_mechanism": "SASL_MECHANISM_SCRAM_SHA_256",
                                  "sasl_password": "pass2",
                                  "sasl_username": "user2",
                                  "security_protocol": "SECURITY_PROTOCOL_SSL"
                                }
                              ]
                            },
                            {
                              "name": "topic2",
                              "settings": [
                                {
                                  "sasl_mechanism": "SASL_MECHANISM_PLAIN",
                                  "security_protocol": "SECURITY_PROTOCOL_SASL_PLAINTEXT"
                                }
                              ]
                            }
                          ],
                          "keep_alive_timeout": 3000,
                          "log_level": "TRACE",
                          "mark_cache_size": 5368709120,
                          "max_concurrent_queries": 50,
                          "max_connections": 100,
                          "max_partition_size_to_drop": 53687091200,
                          "max_table_size_to_drop": 53687091200,
                          "merge_tree": [
                            {
                              "max_bytes_to_merge_at_min_space_in_pool": 1048576,
                              "max_replicated_merges_in_queue": 16,
                              "number_of_free_entries_in_pool_to_lower_max_size_of_merge": 8,
                              "parts_to_delay_insert": 150,
                              "parts_to_throw_insert": 300,
                              "replicated_deduplication_window": 100,
                              "replicated_deduplication_window_seconds": 604800
                            }
                          ],
                          "metric_log_enabled": true,
                          "metric_log_retention_size": 536870912,
                          "metric_log_retention_time": 2592000,
                          "part_log_retention_size": 536870912,
                          "part_log_retention_time": 2592000,
                          "query_log_retention_size": 1073741824,
                          "query_log_retention_time": 2592000,
                          "query_thread_log_enabled": true,
                          "query_thread_log_retention_size": 536870912,
                          "query_thread_log_retention_time": 2592000,
                          "rabbitmq": [
                            {
                              "password": "rabbit_pass",
                              "username": "rabbit_user"
                            }
                          ],
                          "text_log_enabled": true,
                          "text_log_level": "TRACE",
                          "text_log_retention_size": 536870912,
                          "text_log_retention_time": 2592000,
                          "timezone": "UTC",
                          "trace_log_enabled": true,
                          "trace_log_retention_size": 536870912,
                          "trace_log_retention_time": 2592000,
                          "uncompressed_cache_size": 8589934592
                        }
                      ],
                      "resources": [
                        {
                          "disk_size": 32,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "cloud_storage": [
                    {
                      "enabled": false
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "format_schema": [
                    {
                      "name": "test_schema",
                      "type": "FORMAT_SCHEMA_TYPE_CAPNPROTO",
                      "uri": "https://storage.yandexcloud.net/ch-data/schema.proto"
                    }
                  ],
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "ml_model": [
                    {
                      "name": "test_model",
                      "type": "ML_MODEL_TYPE_CATBOOST",
                      "uri": "https://storage.yandexcloud.net/ch-data/train.csv"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "service_account_id": "your_service_account_id",
                  "user": [
                    {
                      "name": "user",
                      "password": "your_password",
                      "permission": [
                        {
                          "database_name": "db_name"
                        }
                      ],
                      "quota": [
                        {
                          "errors": 1000,
                          "interval_duration": 3600000,
                          "queries": 10000
                        },
                        {
                          "errors": 5000,
                          "interval_duration": 79800000,
                          "queries": 50000
                        }
                      ],
                      "settings": [
                        {
                          "max_memory_usage_for_user": 1000000000,
                          "output_format_json_quote_64bit_integers": true,
                          "read_overflow_mode": "throw"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "clickhouse": [
                    {
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "cloud_storage": [
                    {
                      "enabled": false
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-a"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-b"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "ZOOKEEPER",
                      "zone": "ru-central1-a"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "ZOOKEEPER",
                      "zone": "ru-central1-b"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.baz.id}",
                      "type": "ZOOKEEPER",
                      "zone": "ru-central1-c"
                    }
                  ],
                  "name": "ha",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "user": [
                    {
                      "name": "user",
                      "password": "password",
                      "permission": [
                        {
                          "database_name": "db_name"
                        }
                      ],
                      "quota": [
                        {
                          "errors": 1000,
                          "interval_duration": 3600000,
                          "queries": 10000
                        },
                        {
                          "errors": 5000,
                          "interval_duration": 79800000,
                          "queries": 50000
                        }
                      ],
                      "settings": [
                        {
                          "max_memory_usage_for_user": 1000000000,
                          "output_format_json_quote_64bit_integers": true,
                          "read_overflow_mode": "throw"
                        }
                      ]
                    }
                  ],
                  "zookeeper": [
                    {
                      "resources": [
                        {
                          "disk_size": 10,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "clickhouse": [
                    {
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "cloud_storage": [
                    {
                      "enabled": false
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name"
                    }
                  ],
                  "environment": "PRODUCTION",
                  "host": [
                    {
                      "shard_name": "shard1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-a"
                    },
                    {
                      "shard_name": "shard1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-b"
                    },
                    {
                      "shard_name": "shard2",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-b"
                    },
                    {
                      "shard_name": "shard2",
                      "subnet_id": "${yandex_vpc_subnet.baz.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-c"
                    }
                  ],
                  "name": "sharded",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "shard": [
                    {
                      "name": "shard1",
                      "weight": 110
                    },
                    {
                      "name": "shard2",
                      "weight": 300
                    }
                  ],
                  "shard_group": [
                    {
                      "description": "Cluster configuration that contain only shard1",
                      "name": "single_shard_group",
                      "shard_names": [
                        "shard1"
                      ]
                    }
                  ],
                  "user": [
                    {
                      "name": "user",
                      "password": "password",
                      "permission": [
                        {
                          "database_name": "db_name"
                        }
                      ],
                      "quota": [
                        {
                          "errors": 1000,
                          "interval_duration": 3600000,
                          "queries": 10000
                        },
                        {
                          "errors": 5000,
                          "interval_duration": 79800000,
                          "queries": 50000
                        }
                      ],
                      "settings": [
                        {
                          "max_memory_usage_for_user": 1000000000,
                          "output_format_json_quote_64bit_integers": true,
                          "read_overflow_mode": "throw"
                        }
                      ]
                    }
                  ],
                  "zookeeper": [
                    {
                      "resources": [
                        {
                          "disk_size": 10,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: '- (Optional) Access policy to the ClickHouse cluster. The structure is documented below.'
            access.data_lens: '- (Optional) Allow access for DataLens. Can be either true or false.'
            access.data_transfer: '- (Optional) Allow access for DataTransfer. Can be either true or false.'
            access.metrika: '- (Optional) Allow access for Yandex.Metrika. Can be either true or false.'
            access.serverless: '- (Optional) Allow access for Serverless. Can be either true or false.'
            access.web_sql: '- (Optional) Allow access for Web SQL. Can be either true or false.'
            access.yandex_query: '- (Optional) Allow access for YandexQuery. Can be either true or false.'
            admin_password: '- (Optional) A password used to authorize as user admin when sql_user_management enabled.'
            age: '- (Required) Minimum data age in seconds.'
            any: '- perform approximate GROUP BY operation by continuing aggregation for the keys that got into the set, but don’t add new keys to the set.'
            backup_window_start: '- (Optional) Time to start the daily backup, in the UTC timezone. The structure is documented below.'
            backup_window_start.hours: '- (Optional) The hour at which backup will be started.'
            backup_window_start.minutes: '- (Optional) The minute at which backup will be started.'
            break: '- stop query execution, return partial result.'
            clickhouse: '- (Required) Configuration of the ClickHouse subcluster. The structure is documented below.'
            clickhouse.config: '- (Optional) Main ClickHouse cluster configuration.'
            clickhouse.resources: '- (Required) Resources allocated to hosts of the ClickHouse subcluster. The structure is documented below.'
            cloud_storage.data_cache_enabled: '- Enables temporary storage in the cluster repository of data requested from the object repository.'
            cloud_storage.data_cache_max_size: '- Defines the maximum amount of memory (in bytes) allocated in the cluster storage for temporary storage of data requested from the object storage.'
            cloud_storage.enabled: '- (Required) Whether to use Yandex Object Storage for storing ClickHouse data. Can be either true or false.'
            cloud_storage.move_factor: '- Sets the minimum free space ratio in the cluster storage. If the free space is lower than this value, the data is transferred to Yandex Object Storage. Acceptable values are 0 to 1, inclusive.'
            cloud_storage.prefer_not_to_merge: '- (Optional) Disables merging of data parts in Yandex Object Storage.'
            compression.level: '- (Optional) Compression level for ZSTD method.'
            compression.method: '- (Optional) Method: Compression method. Two methods are available: LZ4 and zstd.'
            compression.min_part_size: '- (Optional) Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.'
            compression.min_part_size_ratio: '- (Optional) Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.'
            config.compression: '- (Optional) Data compression configuration. The structure is documented below.'
            config.graphite_rollup: '- (Optional) Graphite rollup configuration. The structure is documented below.'
            config.kafka: '- (Optional) Kafka connection configuration. The structure is documented below.'
            config.kafka_topic: '- (Optional) Kafka topic connection configuration. The structure is documented below.'
            config.log_level: |-
                , max_connections, max_concurrent_queries, keep_alive_timeout, uncompressed_cache_size, mark_cache_size,
                max_table_size_to_drop, max_partition_size_to_drop, timezone, geobase_uri, query_log_retention_size,
                query_log_retention_time, query_thread_log_enabled, query_thread_log_retention_size, query_thread_log_retention_time,
                part_log_retention_size, part_log_retention_time, metric_log_enabled, metric_log_retention_size, metric_log_retention_time,
                trace_log_enabled, trace_log_retention_size, trace_log_retention_time, text_log_enabled, text_log_retention_size,
                text_log_retention_time, text_log_level,
                background_pool_size, background_schedule_pool_size, background_fetches_pool_size, background_message_broker_schedule_pool_size,background_merges_mutations_concurrency_ratio,
                default_database,
                total_memory_profiler_step - (Optional) ClickHouse server parameters. For more information, see
                the official documentation.
            config.merge_tree: '- (Optional) MergeTree engine configuration. The structure is documented below.'
            config.rabbitmq: '- (Optional) RabbitMQ connection configuration. The structure is documented below.'
            copy_schema_on_new_hosts: '- (Optional) Whether to copy schema on new ClickHouse hosts.'
            created_at: '- Timestamp of cluster creation.'
            database: '- (Required) A database of the ClickHouse cluster. The structure is documented below.'
            database.name: '- (Required) The name of the database.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the ClickHouse cluster.'
            embedded_keeper: '- (Optional, ForceNew) Whether to use ClickHouse Keeper as a coordination system and place it on the same hosts with ClickHouse. If not, it''s used ZooKeeper with placement on separate hosts.'
            environment: '- (Required) Deployment environment of the ClickHouse cluster. Can be either PRESTABLE or PRODUCTION.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            format_schema: '- (Optional) A set of protobuf or capnproto format schemas. The structure is documented below.'
            format_schema.name: '- (Required) The name of the format schema.'
            format_schema.type: '- (Required) Type of the format schema.'
            format_schema.uri: '- (Required) Format schema file URL. You can only use format schemas stored in Yandex Object Storage.'
            function: '- (Required) Aggregation function name.'
            graphite_rollup.name: '- (Required) Graphite rollup configuration name.'
            graphite_rollup.pattern: '- (Required) Set of thinning rules.'
            health: |-
                - Aggregated health of the cluster. Can be ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN.
                For more information see health field of JSON representation in the official documentation.
            host: '- (Required) A host of the ClickHouse cluster. The structure is documented below.'
            host.assign_public_ip: (Optional) - Sets whether the host should get a public IP address on creation. Can be either true or false.
            host.fqdn: '- (Computed) The fully qualified domain name of the host.'
            host.shard_name: (Optional) - The name of the shard to which the host belongs.
            host.subnet_id: (Optional) - The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            host.type: '- (Required) The type of the host to be deployed. Can be either CLICKHOUSE or ZOOKEEPER.'
            host.zone: |-
                - (Required) The availability zone where the ClickHouse host will be created.
                For more information see the official documentation.
            kafka.enable_ssl_certificate_verification: '- (Optional) enable verification of SSL certificates.'
            kafka.max_poll_interval_ms: '- (Optional) Maximum allowed time between calls to consume messages (e.g., rd_kafka_consumer_poll()) for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.'
            kafka.sasl_mechanism: '- (Optional) SASL mechanism used in kafka authentication.'
            kafka.sasl_password: '- (Optional) User password on kafka server.'
            kafka.sasl_username: '- (Optional) Username on kafka server.'
            kafka.security_protocol: '- (Optional) Security protocol used to connect to kafka server.'
            kafka.session_timeout_ms: '- (Optional) Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.'
            kafka_topic.name: '- (Required) Kafka topic name.'
            kafka_topic.settings: '- (Optional) Kafka connection settngs sanem as kafka block.'
            labels: '- (Optional) A set of key/value label pairs to assign to the ClickHouse cluster.'
            maintenance_window.day: '- (Optional) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            maintenance_window.hour: '- (Optional) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            merge_tree.cleanup_delay_period: '- (Optional) Minimum period to clean old queue logs, blocks hashes and parts.'
            merge_tree.max_avg_part_size_for_too_many_parts: '- (Optional) The too many parts check according to parts_to_delay_insert and parts_to_throw_insert will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.'
            merge_tree.max_bytes_to_merge_at_min_space_in_pool: '- (Optional) Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.'
            merge_tree.max_number_of_merges_with_ttl_in_pool: '- (Optional) When there is more than specified number of merges with TTL entries in pool, do not assign new merge with TTL.'
            merge_tree.max_parts_in_total: '- (Optional) Maximum number of parts in all partitions.'
            merge_tree.max_replicated_merges_in_queue: '- (Optional) Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.'
            merge_tree.merge_selecting_sleep_ms: '- (Optional) Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.'
            merge_tree.merge_with_recompression_ttl_timeout: '- (Optional) Minimum delay in seconds before repeating a merge with recompression TTL. Default value: 14400 seconds (4 hours).'
            merge_tree.merge_with_ttl_timeout: '- (Optional) Minimum delay in seconds before repeating a merge with delete TTL. Default value: 14400 seconds (4 hours).'
            merge_tree.min_age_to_force_merge_on_partition_only: '- (Optional) Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.'
            merge_tree.min_age_to_force_merge_seconds: '- (Optional) Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.'
            merge_tree.min_bytes_for_wide_part: '- (Optional) Minimum number of bytes in a data part that can be stored in Wide format. You can set one, both or none of these settings.'
            merge_tree.min_rows_for_wide_part: '- (Optional) Minimum number of rows in a data part that can be stored in Wide format. You can set one, both or none of these settings.'
            merge_tree.number_of_free_entries_in_pool_to_execute_mutation: '- (Optional)'
            merge_tree.number_of_free_entries_in_pool_to_lower_max_size_of_merge: '- (Optional) Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.'
            merge_tree.parts_to_delay_insert: '- (Optional) Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.'
            merge_tree.parts_to_throw_insert: '- (Optional) Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the ''Too many parts ...'' exception.'
            merge_tree.replicated_deduplication_window: '- (Optional) Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).'
            merge_tree.replicated_deduplication_window_seconds: '- (Optional) Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).'
            merge_tree.ttl_only_drop_parts: '- (Optional) Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.'
            ml_model: '- (Optional) A group of machine learning models. The structure is documented below'
            ml_model.name: '- (Required) The name of the ml model.'
            ml_model.type: '- (Required) Type of the model.'
            ml_model.uri: '- (Required) Model file URL. You can only use models stored in Yandex Object Storage.'
            name: '- (Required) Name of the ClickHouse cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the ClickHouse cluster belongs.'
            permission.database_name: '- (Required) The name of the database that the permission grants access to.'
            pread: '- abort query execution, return an error.'
            pread_threadpool: |-
                - stop query execution, return partial result.
                If the parameter is set to 0 (default), no hops is allowed.
            precision: '- (Required) Accuracy of determining the age of the data in seconds.'
            quota.errors: '- (Optional) The number of queries that threw exception.'
            quota.execution_time: '- (Optional) The total query execution time, in milliseconds (wall time).'
            quota.interval_duration: '- (Required) Duration of interval for quota in milliseconds.'
            quota.queries: '- (Optional) The total number of queries.'
            quota.read_rows: '- (Optional) The total number of source rows read from tables for running the query, on all remote servers.'
            quota.result_rows: '- (Optional) The total number of rows given as the result.'
            rabbitmq.password: '- (Optional) RabbitMQ user password.'
            rabbitmq.username: '- (Optional) RabbitMQ username.'
            rabbitmq.vhost: '- (Optional) RabbitMQ vhost. Default: ''''.'
            read: '- abort query execution, return an error.'
            regexp: '- (Optional) Regular expression that the metric name must match.'
            resources.disk_size: '- (Required) Volume of the storage available to a ClickHouse host, in gigabytes.'
            resources.disk_type_id: |-
                - (Required) Type of the storage of ClickHouse hosts.
                For more information see the official documentation.
            resources.resources_preset_id: |-
                - (Required) The ID of the preset for computational resources available to a ClickHouse host (CPU, memory etc.).
                For more information, see the official documentation.
            retention: '- Retain parameters.'
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            service_account_id: '- (Optional) ID of the service account used for access to Yandex Object Storage.'
            settings.add_http_cors_header: '- (Optional) Include CORS headers in HTTP responces.'
            settings.allow_ddl: '- (Optional) Allows or denies DDL queries.'
            settings.allow_introspection_functions: '- (Optional) Enables introspections functions for query profiling.'
            settings.allow_suspicious_low_cardinality_types: '- (Optional) Allows specifying LowCardinality modifier for types of small fixed size (8 or less) in CREATE TABLE statements. Enabling this may increase merge times and memory consumption.'
            settings.async_insert: '- (Optional) Enables asynchronous inserts. Disabled by default.'
            settings.async_insert_busy_timeout: '- (Optional) The maximum timeout in milliseconds since the first INSERT query before inserting collected data. If the parameter is set to 0, the timeout is disabled. Default value: 200.'
            settings.async_insert_max_data_size: '- (Optional) The maximum size of the unparsed data in bytes collected per query before being inserted. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 100000.'
            settings.async_insert_stale_timeout: '- (Optional) The maximum timeout in milliseconds since the last INSERT query before dumping collected data. If enabled, the settings prolongs the async_insert_busy_timeout with every INSERT query as long as async_insert_max_data_size is not exceeded.'
            settings.async_insert_threads: '- (Optional) The maximum number of threads for background data parsing and insertion. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 16.'
            settings.cancel_http_readonly_queries_on_client_close: |-
                - (Optional) Cancels HTTP read-only queries (e.g. SELECT) when a client closes the connection without waiting for the response.
                Default value: false.
            settings.compile: '- (Optional) Enable compilation of queries.'
            settings.compile_expressions: '- (Optional) Turn on expression compilation.'
            settings.connect_timeout: '- (Optional) Connect timeout in milliseconds on the socket used for communicating with the client.'
            settings.connect_timeout_with_failover: '- (Optional) The timeout in milliseconds for connecting to a remote server for a Distributed table engine, if the ‘shard’ and ‘replica’ sections are used in the cluster definition. If unsuccessful, several attempts are made to connect to various replicas. Default value: 50.'
            settings.count_distinct_implementation: '- (Optional) Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.'
            settings.distinct_overflow_mode: '- (Optional) Sets behaviour on overflow when using DISTINCT. Possible values:'
            settings.distributed_aggregation_memory_efficient: '- (Optional) Determine the behavior of distributed subqueries.'
            settings.distributed_ddl_task_timeout: '- (Optional) Timeout for DDL queries, in milliseconds.'
            settings.distributed_product_mode: '- (Optional) Changes the behaviour of distributed subqueries.'
            settings.empty_result_for_aggregation_by_empty_set: '- (Optional) Allows to retunr empty result.'
            settings.enable_http_compression: '- (Optional) Enables or disables data compression in the response to an HTTP request.'
            settings.fallback_to_stale_replicas_for_distributed_queries: '- (Optional) Forces a query to an out-of-date replica if updated data is not available.'
            settings.flatten_nested: '- (Optional) Sets the data format of a nested columns.'
            settings.force_index_by_date: '- (Optional) Disables query execution if the index can’t be used by date.'
            settings.force_primary_key: '- (Optional) Disables query execution if indexing by the primary key is not possible.'
            settings.group_by_overflow_mode: '- (Optional) Sets behaviour on overflow while GROUP BY operation. Possible values:'
            settings.group_by_two_level_threshold: '- (Optional) Sets the threshold of the number of keys, after that the two-level aggregation should be used.'
            settings.group_by_two_level_threshold_bytes: '- (Optional) Sets the threshold of the number of bytes, after that the two-level aggregation should be used.'
            settings.http_connection_timeout: '- (Optional) Timeout for HTTP connection in milliseconds.'
            settings.http_headers_progress_interval: '- (Optional) Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.'
            settings.http_receive_timeout: '- (Optional) Timeout for HTTP connection in milliseconds.'
            settings.http_send_timeout: '- (Optional) Timeout for HTTP connection in milliseconds.'
            settings.input_format_defaults_for_omitted_fields: '- (Optional) When performing INSERT queries, replace omitted input column values with default values of the respective columns.'
            settings.input_format_import_nested_json: '- (Optional) Enables or disables the insertion of JSON data with nested objects.'
            settings.input_format_parallel_parsing: '- (Optional) Enables or disables order-preserving parallel parsing of data formats. Supported only for TSV, TKSV, CSV and JSONEachRow formats.'
            settings.input_format_values_interpret_expressions: '- (Optional) Enables or disables the full SQL parser if the fast stream parser can’t parse the data.'
            settings.insert_keeper_max_retries: '- (Optional) The setting sets the maximum number of retries for ClickHouse Keeper (or ZooKeeper) requests during insert into replicated MergeTree. Only Keeper requests which failed due to network error, Keeper session timeout, or request timeout are considered for retries.'
            settings.insert_null_as_default: '- (Optional) Enables the insertion of default values instead of NULL into columns with not nullable data type. Default value: true.'
            settings.insert_quorum: '- (Optional) Enables the quorum writes.'
            settings.insert_quorum_timeout: '- (Optional) Write to a quorum timeout in milliseconds.'
            settings.join_overflow_mode: '- (Optional) Sets behaviour on overflow in JOIN. Possible values:'
            settings.join_use_nulls: '- (Optional) Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.'
            settings.joined_subquery_requires_alias: '- (Optional) Require aliases for subselects and table functions in FROM that more than one table is present.'
            settings.local_filesystem_read_method: '- (Optional) Method of reading data from local filesystem. Possible values:'
            settings.low_cardinality_allow_in_native_format: '- (Optional) Allows or restricts using the LowCardinality data type with the Native format.'
            settings.max_ast_depth: '- (Optional) Maximum abstract syntax tree depth.'
            settings.max_ast_elements: '- (Optional) Maximum abstract syntax tree elements.'
            settings.max_block_size: '- (Optional) A recommendation for what size of the block (in a count of rows) to load from tables.'
            settings.max_bytes_before_external_group_by: '- (Optional) Limit in bytes for using memoru for GROUP BY before using swap on disk.'
            settings.max_bytes_before_external_sort: '- (Optional) This setting is equivalent of the max_bytes_before_external_group_by setting, except for it is for sort operation (ORDER BY), not aggregation.'
            settings.max_bytes_in_distinct: '- (Optional) Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.'
            settings.max_bytes_in_join: '- (Optional) Limit on maximum size of the hash table for JOIN, in bytes.'
            settings.max_bytes_in_set: '- (Optional) Limit on the number of bytes in the set resulting from the execution of the IN section.'
            settings.max_bytes_to_read: '- (Optional) Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.'
            settings.max_bytes_to_sort: '- (Optional) Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.'
            settings.max_bytes_to_transfer: '- (Optional) Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.'
            settings.max_columns_to_read: '- (Optional) Limits the maximum number of columns that can be read from a table in a single query.'
            settings.max_concurrent_queries_for_user: '- (Optional) The maximum number of concurrent requests per user. Default value: 0 (no limit).'
            settings.max_execution_time: '- (Optional) Limits the maximum query execution time in milliseconds.'
            settings.max_expanded_ast_elements: '- (Optional) Maximum abstract syntax tree depth after after expansion of aliases.'
            settings.max_final_threads: '- (Optional) Sets the maximum number of parallel threads for the SELECT query data read phase with the FINAL modifier.'
            settings.max_http_get_redirects: '- (Optional) Limits the maximum number of HTTP GET redirect hops for URL-engine tables.'
            settings.max_insert_block_size: '- (Optional) The size of blocks (in a count of rows) to form for insertion into a table.'
            settings.max_memory_usage: '- (Optional) Limits the maximum memory usage (in bytes) for processing queries on a single server.'
            settings.max_memory_usage_for_user: '- (Optional) Limits the maximum memory usage (in bytes) for processing of user''s queries on a single server.'
            settings.max_network_bandwidth: '- (Optional) Limits the speed of the data exchange over the network in bytes per second.'
            settings.max_network_bandwidth_for_user: '- (Optional) Limits the speed of the data exchange over the network in bytes per second.'
            settings.max_parser_depth: '- (Optional) Limits maximum recursion depth in the recursive descent parser. Allows controlling the stack size. Zero means unlimited.'
            settings.max_query_size: '- (Optional) The maximum part of a query that can be taken to RAM for parsing with the SQL parser.'
            settings.max_read_buffer_size: '- (Optional) The maximum size of the buffer to read from the filesystem.'
            settings.max_replica_delay_for_distributed_queries: '- (Optional) Disables lagging replicas for distributed queries.'
            settings.max_result_bytes: '- (Optional) Limits the number of bytes in the result.'
            settings.max_result_rows: '- (Optional) Limits the number of rows in the result.'
            settings.max_rows_in_distinct: '- (Optional) Limits the maximum number of different rows when using DISTINCT.'
            settings.max_rows_in_join: '- (Optional) Limit on maximum size of the hash table for JOIN, in rows.'
            settings.max_rows_in_set: '- (Optional) Limit on the number of rows in the set resulting from the execution of the IN section.'
            settings.max_rows_to_group_by: '- (Optional) Limits the maximum number of unique keys received from aggregation function.'
            settings.max_rows_to_read: '- (Optional) Limits the maximum number of rows that can be read from a table when running a query.'
            settings.max_rows_to_sort: '- (Optional) Limits the maximum number of rows that can be read from a table for sorting.'
            settings.max_rows_to_transfer: '- (Optional) Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.'
            settings.max_temporary_columns: '- (Optional) Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.'
            settings.max_temporary_data_on_disk_size_for_query: '- (Optional) The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running queries. Zero means unlimited.'
            settings.max_temporary_data_on_disk_size_for_user: '- (Optional) The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running user queries. Zero means unlimited.'
            settings.max_temporary_non_const_columns: '- (Optional) Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.'
            settings.max_threads: '- (Optional) The maximum number of query processing threads, excluding threads for retrieving data from remote servers.'
            settings.memory_overcommit_ratio_denominator: '- (Optional) It represents soft memory limit in case when hard limit is reached on user level. This value is used to compute overcommit ratio for the query. Zero means skip the query.'
            settings.memory_overcommit_ratio_denominator_for_user: '- (Optional) It represents soft memory limit in case when hard limit is reached on global level. This value is used to compute overcommit ratio for the query. Zero means skip the query.'
            settings.memory_profiler_sample_probability: '- (Optional) Collect random allocations and deallocations and write them into system.trace_log with ''MemorySample'' trace_type. The probability is for every alloc/free regardless to the size of the allocation. Possible values: from 0 to 1. Default: 0.'
            settings.memory_profiler_step: '- (Optional) Memory profiler step (in bytes).  If the next query step requires more memory than this parameter specifies, the memory profiler collects the allocating stack trace. Values lower than a few megabytes slow down query processing. Default value: 4194304 (4 MB). Zero means disabled memory profiler.'
            settings.memory_usage_overcommit_max_wait_microseconds: '- (Optional) Maximum time thread will wait for memory to be freed in the case of memory overcommit on a user level. If the timeout is reached and memory is not freed, an exception is thrown.'
            settings.merge_tree_max_bytes_to_use_cache: '- (Optional) If ClickHouse should read more than merge_tree_max_bytes_to_use_cache bytes in one query, it doesn’t use the cache of uncompressed blocks.'
            settings.merge_tree_max_rows_to_use_cache: '- (Optional) If ClickHouse should read more than merge_tree_max_rows_to_use_cache rows in one query, it doesn’t use the cache of uncompressed blocks.'
            settings.merge_tree_min_bytes_for_concurrent_read: '- (Optional) If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.'
            settings.merge_tree_min_rows_for_concurrent_read: '- (Optional) If the number of rows to be read from a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read then ClickHouse tries to perform a concurrent reading from this file on several threads.'
            settings.min_bytes_to_use_direct_io: '- (Optional) The minimum data volume required for using direct I/O access to the storage disk.'
            settings.min_count_to_compile: '- (Optional) How many times to potentially use a compiled chunk of code before running compilation.'
            settings.min_count_to_compile_expression: '- (Optional) A query waits for expression compilation process to complete prior to continuing execution.'
            settings.min_execution_speed: '- (Optional) Minimal execution speed in rows per second.'
            settings.min_execution_speed_bytes: '- (Optional) Minimal execution speed in bytes per second.'
            settings.min_insert_block_size_bytes: '- (Optional) Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.'
            settings.min_insert_block_size_rows: '- (Optional) Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.'
            settings.output_format_json_quote_64bit_integers: '- (Optional) If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.'
            settings.output_format_json_quote_denormals: '- (Optional) Enables +nan, -nan, +inf, -inf outputs in JSON output format.'
            settings.priority: '- (Optional) Query priority.'
            settings.quota_mode: '- (Optional) Quota accounting mode.'
            settings.read_overflow_mode: '- (Optional) Sets behaviour on overflow while read. Possible values:'
            settings.readonly: '- (Optional) Restricts permissions for reading data, write data and change settings queries.'
            settings.receive_timeout: '- (Optional) Receive timeout in milliseconds on the socket used for communicating with the client.'
            settings.remote_filesystem_read_method: '- (Optional)  Method of reading data from remote filesystem, one of: read, threadpool.'
            settings.replication_alter_partitions_sync: '- (Optional) For ALTER ... ATTACH|DETACH|DROP queries, you can use the replication_alter_partitions_sync setting to set up waiting.'
            settings.result_overflow_mode: '- (Optional) Sets behaviour on overflow in result. Possible values:'
            settings.select_sequential_consistency: '- (Optional) Enables or disables sequential consistency for SELECT queries.'
            settings.send_progress_in_http_headers: '- (Optional) Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.'
            settings.send_timeout: '- (Optional) Send timeout in milliseconds on the socket used for communicating with the client.'
            settings.set_overflow_mode: '- (Optional) Sets behaviour on overflow in the set resulting. Possible values:'
            settings.skip_unavailable_shards: '- (Optional) Enables or disables silently skipping of unavailable shards.'
            settings.sort_overflow_mode: '- (Optional) Sets behaviour on overflow while sort. Possible values:'
            settings.timeout_before_checking_execution_speed: |-
                - (Optional) Timeout (in seconds) between checks of execution speed. It is checked that execution speed is not less that specified in min_execution_speed parameter.
                Must be at least 1000.
            settings.timeout_overflow_mode: '- (Optional) Sets behaviour on overflow. Possible values:'
            settings.transfer_overflow_mode: '- (Optional) Sets behaviour on overflow. Possible values:'
            settings.transform_null_in: '- (Optional) Enables equality of NULL values for IN operator.'
            settings.use_uncompressed_cache: '- (Optional) Whether to use a cache of uncompressed blocks.'
            settings.wait_for_async_insert: '- (Optional) Enables waiting for processing of asynchronous insertion. If enabled, server returns OK only after the data is inserted.'
            settings.wait_for_async_insert_timeout: '- (Optional) The timeout (in seconds) for waiting for processing of asynchronous insertion. Value must be at least 1000 (1 second).'
            shard.name: '- (Required) The name of shard.'
            shard.resources: '- (Optional) Resources allocated to host of the shard. The resources specified for the shard takes precedence over the resources specified for the cluster. The structure is documented below.'
            shard.weight: '- (Optional) The weight of shard.'
            shard_group: '- (Optional) A group of clickhouse shards. The structure is documented below.'
            shard_group.description: (Optional) - Description of the shard group.
            shard_group.name: (Required) - The name of the shard group, used as cluster name in Distributed tables.
            shard_group.shard_names: (Required) -  List of shards names that belong to the shard group.
            sql_database_management: '- (Optional, ForceNew) Grants admin user database management permission.'
            sql_user_management: '- (Optional, ForceNew) Enables admin user with user management permission.'
            status: |-
                - Status of the cluster. Can be CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
                For more information see status field of JSON representation in the official documentation.
            throw: '- abort query execution, return an error.'
            user: '- (Required) A user of the ClickHouse cluster. The structure is documented below.'
            user.name: '- (Required) The name of the user.'
            user.password: '- (Required) The password of the user.'
            user.permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            user.quota: '- (Optional) Set of user quotas. The structure is documented below.'
            user.settings: '- (Optional) Custom settings for user. The list is documented below.'
            version: '- (Optional) Version of the ClickHouse server software.'
            zookeeper: '- (Optional) Configuration of the ZooKeeper subcluster. The structure is documented below.'
            zookeeper.resources: '- (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.'
            zookeeper.resources.disk_size: '- (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.'
            zookeeper.resources.disk_type_id: |-
                - (Optional) Type of the storage of ZooKeeper hosts.
                For more information see the official documentation.
            zookeeper.resources.resources_preset_id: |-
                - (Optional) The ID of the preset for computational resources available to a ZooKeeper host (CPU, memory etc.).
                For more information, see the official documentation.
        importStatements: []
    yandex_mdb_elasticsearch_cluster:
        subCategory: unknown
        description: Manages a Elasticsearch cluster within Yandex.Cloud.
        name: yandex_mdb_elasticsearch_cluster
        title: yandex_mdb_elasticsearch_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "admin_password": "super-password",
                      "data_node": [
                        {
                          "resources": [
                            {
                              "disk_size": 100,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "assign_public_ip": true,
                      "name": "node",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "DATA_NODE",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "admin_password": "super-password",
                      "data_node": [
                        {
                          "resources": [
                            {
                              "disk_size": 100,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ],
                      "edition": "platinum",
                      "master_node": [
                        {
                          "resources": [
                            {
                              "disk_size": 10,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ],
                      "plugins": [
                        "analysis-icu"
                      ]
                    }
                  ],
                  "depends_on": [
                    "${yandex_vpc_subnet.es-subnet-a}",
                    "${yandex_vpc_subnet.es-subnet-b}",
                    "${yandex_vpc_subnet.es-subnet-c}"
                  ],
                  "dynamic": {
                    "host": [
                      {
                        "content": [
                          {
                            "assign_public_ip": true,
                            "name": "datanode${host.value}",
                            "type": "DATA_NODE",
                            "zone": "${local.zones[(host.value)%3]}"
                          }
                        ],
                        "for_each": "${toset(range(0,6))}"
                      },
                      {
                        "content": [
                          {
                            "name": "masternode${host.value}",
                            "type": "MASTER_NODE",
                            "zone": "${local.zones[host.value%3]}"
                          }
                        ],
                        "for_each": "${toset(range(0,3))}"
                      }
                    ]
                  },
                  "environment": "PRODUCTION",
                  "name": "my-cluster",
                  "network_id": "${yandex_vpc_network.es-net.id}"
                }
              dependencies:
                yandex_vpc_network.es-net: '{}'
                yandex_vpc_subnet.es-subnet-a: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
                yandex_vpc_subnet.es-subnet-b: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.es-subnet-c: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
        argumentDocs:
            config: '- (Required) Configuration of the Elasticsearch cluster. The structure is documented below.'
            config.admin_password: '- (Required) Password for admin user of Elasticsearch.'
            config.data_node: '- (Required) Configuration for Elasticsearch data nodes subcluster. The structure is documented below.'
            config.edition: '- (Optional) Edition of Elasticsearch. For more information, see the official documentation.'
            config.master_node: '- (Optional) Configuration for Elasticsearch master nodes subcluster. The structure is documented below.'
            config.plugins: '- (Optional) A set of Elasticsearch plugins to install.'
            config.version: '- (Optional) Version of Elasticsearch.'
            created_at: '- Creation timestamp of the key.'
            data_node.resources: '- (Required) Resources allocated to hosts of the Elasticsearch data nodes subcluster. The structure is documented below.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the Elasticsearch cluster.'
            environment: '- (Required) Deployment environment of the Elasticsearch cluster. Can be either PRESTABLE or PRODUCTION.'
            folder_id: '- (Optional) The ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.'
            health: |-
                - Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN.
                For more information see health field of JSON representation in the official documentation.
            host: '- (Required) A host of the Elasticsearch cluster. The structure is documented below.'
            host.assign_public_ip: (Optional) - Sets whether the host should get a public IP address on creation. Can be either true or false.
            host.fqdn: (Computed) - The fully qualified domain name of the host.
            host.name: (Required) - User defined host name.
            host.subnet_id: |-
                (Optional) - The ID of the subnet, to which the host belongs. The subnet must
                be a part of the network to which the cluster belongs.
            host.type: '- (Required) The type of the host to be deployed. Can be either DATA_NODE or MASTER_NODE.'
            host.zone: |-
                - (Required) The availability zone where the Elasticsearch host will be created.
                For more information see the official documentation.
            labels: '- (Optional) A set of key/value label pairs to assign to the Elasticsearch cluster.'
            maintenance_window.day: '- (Optional) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            maintenance_window.hour: '- (Optional) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            master_node.resources: '- (Required) Resources allocated to hosts of the Elasticsearch master nodes subcluster. The structure is documented below.'
            master_node.resources.disk_size: '- (Required) Volume of the storage available to a host, in gigabytes.'
            master_node.resources.disk_type_id: '- (Required) Type of the storage of Elasticsearch hosts.'
            master_node.resources.resources_preset_id: '- (Required) The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see the official documentation.'
            name: '- (Required) Name of the Elasticsearch cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the Elasticsearch cluster belongs.'
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            service_account_id: '- (Optional) ID of the service account authorized for this cluster.'
            status: |-
                - Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
                For more information see status field of JSON representation in the official documentation.
        importStatements: []
    yandex_mdb_greenplum_cluster:
        subCategory: unknown
        description: Manages a Greenplum cluster within Yandex.Cloud.
        name: yandex_mdb_greenplum_cluster
        title: yandex_mdb_greenplum_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "access": [
                    {
                      "web_sql": true
                    }
                  ],
                  "assign_public_ip": true,
                  "description": "test greenplum cluster",
                  "environment": "PRESTABLE",
                  "greenplum_config": {
                    "gp_workfile_compression": "false",
                    "max_connections": 395
                  },
                  "master_host_count": 2,
                  "master_subcluster": [
                    {
                      "resources": [
                        {
                          "disk_size": 24,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "security_group_ids": [
                    "${yandex_vpc_security_group.test-sg-x.id}"
                  ],
                  "segment_host_count": 5,
                  "segment_in_host": 1,
                  "segment_subcluster": [
                    {
                      "resources": [
                        {
                          "disk_size": 24,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "subnet_id": "${yandex_vpc_subnet.foo.id}",
                  "user_name": "admin_user",
                  "user_password": "your_super_secret_password",
                  "version": "6.22",
                  "zone_id": "ru-central1-a"
                }
              references:
                network_id: yandex_vpc_network.foo.id
                subnet_id: yandex_vpc_subnet.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_security_group.test-sg-x: |-
                    {
                      "egress": [
                        {
                          "description": "Allow outgoing traffic to members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "ingress": [
                        {
                          "description": "Allow incoming traffic from members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: '- (Optional) Access policy to the Greenplum cluster. The structure is documented below.'
            access.data_lens: '- (Optional) Allow access for Yandex DataLens.'
            access.data_transfer: '- (Optional) Allow access for DataTransfer'
            access.web_sql: '- (Optional) Allows access for SQL queries in the management console.'
            assign_public_ip: '- (Required) Sets whether the master hosts should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.'
            backup_window_start: '- (Optional) Time to start the daily backup, in the UTC timezone. The structure is documented below.'
            backup_window_start.hours: '- (Optional) The hour at which backup will be started (UTC).'
            backup_window_start.minutes: '- (Optional) The minute at which backup will be started (UTC).'
            cloud_storage: '- (Optional) Cloud Storage settings of the Greenplum cluster. The structure is documented below.'
            cloud_storage.enable: '- (Optional) Whether to use cloud storage or not.'
            created_at: '- Creation timestamp of the cluster.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the Greenplum cluster.'
            environment: '- (Required) Deployment environment of the Greenplum cluster. (PRODUCTION, PRESTABLE)'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            greenplum_config: '- (Optional) Greenplum cluster config. Detail info in "Greenplum cluster settings" section (documented below).'
            health: '- Aggregated health of the cluster.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Greenplum cluster.'
            maintenance_window: '- (Optional) Maintenance policy of the Greenplum cluster. The structure is documented below.'
            maintenance_window.day: '- (Optional) Day of the week (in DDD format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"'
            maintenance_window.hour: '- (Optional) Hour of the day in UTC (in HH format). Allowed value is between 0 and 23.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            master_host_count: '- (Required) Number of hosts in master subcluster (1 or 2).'
            master_hosts: '- (Computed) Info about hosts in master subcluster. The structure is documented below.'
            master_hosts.assign_public_ip: '- (Computed) Flag indicating that master hosts should be created with a public IP address.'
            master_hosts.fqdn: '- (Computed) The fully qualified domain name of the host.'
            master_subcluster: '- (Required) Settings for master subcluster. The structure is documented below.'
            master_subcluster.resources: '- (Required) Resources allocated to hosts for master subcluster of the Greenplum cluster. The structure is documented below.'
            name: '- (Required) Name of the Greenplum cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the Greenplum cluster uses.'
            pooler_config: '- (Optional) Configuration of the connection pooler. The structure is documented below.'
            pooler_config.pool_client_idle_timeout: '- (Optional) Value for pool_client_idle_timeout parameter in Odyssey.'
            pooler_config.pool_size: '- (Optional) Value for pool_size parameter in Odyssey.'
            pooler_config.pooling_mode: '- (Optional) Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.'
            pxf_config: '- (Optional) Configuration of the PXF daemon. The structure is documented below.'
            pxf_config.connection_timeout: '- (Optional) The Tomcat server connection timeout for read operations in seconds. Value is between 5 and 600.'
            pxf_config.max_threads: '- (Optional) The maximum number of PXF tomcat threads. Value is between 1 and 1024.'
            pxf_config.pool_allow_core_thread_timeout: '- (Optional) Identifies whether or not core streaming threads are allowed to time out.'
            pxf_config.pool_core_size: '- (Optional) The number of core streaming threads. Value is between 1 and 1024.'
            pxf_config.pool_max_size: '- (Optional) The maximum allowed number of core streaming threads. Value is between 1 and 1024.'
            pxf_config.pool_queue_capacity: '- (Optional) The capacity of the core streaming thread pool queue. Value is positive.'
            pxf_config.upload_timeout: '- (Optional) The Tomcat server connection timeout for write operations in seconds. Value is between 5 and 600.'
            pxf_config.xms: '- (Optional) Maximum JVM heap size for PXF daemon. Value is between 64 and 16384.'
            pxf_config.xmx: '- (Optional) Initial JVM heap size for PXF daemon. Value is between 64 and 16384.'
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            segment_host_count: '- (Required) Number of hosts in segment subcluster (from 1 to 32).'
            segment_hosts: '- (Computed) Info about hosts in segment subcluster. The structure is documented below.'
            segment_hosts.fqdn: '- (Computed) The fully qualified domain name of the host.'
            segment_in_host: '- (Required) Number of segments on segment host (not more then 1 + RAM/8).'
            segment_subcluster: '- (Required) Settings for segment subcluster. The structure is documented below.'
            segment_subcluster.resources: '- (Required) Resources allocated to hosts for segment subcluster of the Greenplum cluster. The structure is documented below.'
            status: '- Status of the cluster.'
            subnet_id: '- (Required) The ID of the subnet, to which the hosts belongs. The subnet must be a part of the network to which the cluster belongs.'
            user_name: '- (Required) Greenplum cluster admin user name.'
            user_password: '- (Required) Greenplum cluster admin password name.'
            version: '- (Required) Version of the Greenplum cluster. (6.22 or 6.25)'
            zone: '- (Required) The availability zone where the Greenplum hosts will be created.'
        importStatements: []
    yandex_mdb_kafka_cluster:
        subCategory: unknown
        description: Manages a Kafka cluster within Yandex.Cloud.
        name: yandex_mdb_kafka_cluster
        title: yandex_mdb_kafka_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "assign_public_ip": false,
                      "brokers_count": 1,
                      "kafka": [
                        {
                          "kafka_config": [
                            {
                              "compression_type": "COMPRESSION_TYPE_ZSTD",
                              "default_replication_factor": 1,
                              "log_flush_interval_messages": 1024,
                              "log_flush_interval_ms": 1000,
                              "log_flush_scheduler_interval_ms": 1000,
                              "log_preallocate": true,
                              "log_retention_bytes": 1073741824,
                              "log_retention_hours": 168,
                              "log_retention_minutes": 10080,
                              "log_retention_ms": 86400000,
                              "log_segment_bytes": 134217728,
                              "message_max_bytes": 1048588,
                              "num_partitions": 10,
                              "offsets_retention_minutes": 10080,
                              "replica_fetch_max_bytes": 1048576,
                              "sasl_enabled_mechanisms": [
                                "SASL_MECHANISM_SCRAM_SHA_256",
                                "SASL_MECHANISM_SCRAM_SHA_512"
                              ],
                              "ssl_cipher_suites": [
                                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                                "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                              ]
                            }
                          ],
                          "resources": [
                            {
                              "disk_size": 32,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ],
                      "schema_registry": false,
                      "version": "2.8",
                      "zones": [
                        "ru-central1-a"
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.foo.id}"
                  ],
                  "user": [
                    {
                      "name": "producer-application",
                      "password": "password",
                      "permission": [
                        {
                          "allow_hosts": [
                            "host1.db.yandex.net",
                            "host2.db.yandex.net"
                          ],
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "input"
                        }
                      ]
                    },
                    {
                      "name": "worker",
                      "password": "password",
                      "permission": [
                        {
                          "role": "ACCESS_ROLE_CONSUMER",
                          "topic_name": "input"
                        },
                        {
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "output"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "assign_public_ip": true,
                      "brokers_count": 2,
                      "kafka": [
                        {
                          "kafka_config": [
                            {
                              "compression_type": "COMPRESSION_TYPE_ZSTD",
                              "default_replication_factor": 6,
                              "log_flush_interval_messages": 1024,
                              "log_flush_interval_ms": 1000,
                              "log_flush_scheduler_interval_ms": 1000,
                              "log_preallocate": true,
                              "log_retention_bytes": 1073741824,
                              "log_retention_hours": 168,
                              "log_retention_minutes": 10080,
                              "log_retention_ms": 86400000,
                              "log_segment_bytes": 134217728,
                              "message_max_bytes": 1048588,
                              "num_partitions": 10,
                              "offsets_retention_minutes": 10080,
                              "replica_fetch_max_bytes": 1048576,
                              "sasl_enabled_mechanisms": [
                                "SASL_MECHANISM_SCRAM_SHA_256",
                                "SASL_MECHANISM_SCRAM_SHA_512"
                              ],
                              "ssl_cipher_suites": [
                                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                                "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                              ]
                            }
                          ],
                          "resources": [
                            {
                              "disk_size": 128,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.medium"
                            }
                          ]
                        }
                      ],
                      "schema_registry": false,
                      "version": "2.8",
                      "zones": [
                        "ru-central1-a",
                        "ru-central1-b",
                        "ru-central1-c"
                      ],
                      "zookeeper": [
                        {
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.foo.id}",
                    "${yandex_vpc_subnet.bar.id}",
                    "${yandex_vpc_subnet.baz.id}"
                  ],
                  "user": [
                    {
                      "name": "producer-application",
                      "password": "password",
                      "permission": [
                        {
                          "allow_hosts": [
                            "host1.db.yandex.net",
                            "host2.db.yandex.net"
                          ],
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "input"
                        }
                      ]
                    },
                    {
                      "name": "worker",
                      "password": "password",
                      "permission": [
                        {
                          "role": "ACCESS_ROLE_CONSUMER",
                          "topic_name": "input"
                        },
                        {
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "output"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access.data_transfer: '- Allow access for DataTransfer'
            config: '- (Required) Configuration of the Kafka cluster. The structure is documented below.'
            config.access: '- (Optional) Access policy to the Kafka cluster. The structure is documented below.'
            config.assign_public_ip: '- (Optional) Determines whether each broker will be assigned a public IP address. The default is false.'
            config.brokers_count: '- (Optional) Count of brokers per availability zone. The default is 1.'
            config.kafka: '- (Optional) Configuration of the Kafka subcluster. The structure is documented below.'
            config.schema_registry: '- (Optional) Enables managed schema registry on cluster. The default is false.'
            config.version: '- (Required) Version of the Kafka server software.'
            config.zones: '- (Required) List of availability zones.'
            config.zookeeper: '- (Optional) Configuration of the ZooKeeper subcluster. The structure is documented below.'
            created_at: '- Timestamp of cluster creation.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the Kafka cluster.'
            environment: |-
                - (Optional) Deployment environment of the Kafka cluster. Can be either PRESTABLE or PRODUCTION.
                The default is PRODUCTION.
            folder_id: '- (Optional) The ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.'
            health: |-
                - Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN.
                For more information see health field of JSON representation in the official documentation.
            host: '- A host of the Kafka cluster. The structure is documented below.'
            host.assign_public_ip: '- The flag that defines whether a public IP address is assigned to the node.'
            host.health: '- Health of the host.'
            host.name: '- The fully qualified domain name of the host.'
            host.role: '- Role of the host in the cluster.'
            host.subnet_id: '- The ID of the subnet, to which the host belongs.'
            host.zone_id: '- The availability zone where the Kafka host was created.'
            host_group_ids: '- (Optional) A list of IDs of the host groups to place VMs of the cluster on.'
            kafka.kafka_config: '- (Optional) User-defined settings for the Kafka cluster. The structure is documented below.'
            kafka.resources: '- (Required) Resources allocated to hosts of the Kafka subcluster. The structure is documented below.'
            kafka_config.compression_type: |-
                , log_flush_interval_messages, log_flush_interval_ms, log_flush_scheduler_interval_ms, log_retention_bytes, log_retention_hours,
                log_retention_minutes, log_retention_ms, log_segment_bytes, log_preallocate, socket_send_buffer_bytes, socket_receive_buffer_bytes, auto_create_topics_enable,
                num_partitions, default_replication_factor, message_max_bytes, replica_fetch_max_bytes, ssl_cipher_suites, offsets_retention_minutes, sasl_enabled_mechanisms - (Optional) Kafka server settings. For more information, see
                the official documentation
                and the Kafka documentation.
            labels: '- (Optional) A set of key/value label pairs to assign to the Kafka cluster.'
            maintenance_window: '- (Optional) Maintenance policy of the Kafka cluster. The structure is documented below.'
            maintenance_window.day: '- (Optional) Day of the week (in DDD format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"'
            maintenance_window.hour: '- (Optional) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            name: '- (Required) Name of the Kafka cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the Kafka cluster belongs.'
            permission.allow_hosts: '- (Optional) Set of hosts, to which this permission grants access to.'
            permission.role: '- (Required) The role type to grant to the topic.'
            permission.topic_name: '- (Required) The name of the topic that the permission grants access to.'
            resources.disk_size: '- (Required) Volume of the storage available to a Kafka host, in gigabytes.'
            resources.disk_type_id: |-
                - (Required) Type of the storage of Kafka hosts.
                For more information see the official documentation.
            resources.resources_preset_id: |-
                - (Required) The ID of the preset for computational resources available to a Kafka host (CPU, memory etc.).
                For more information, see the official documentation.
            security_group_ids: '- (Optional) Security group ids, to which the Kafka cluster belongs.'
            status: |-
                - Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
                For more information see status field of JSON representation in the official documentation.
            subnet_ids: '- (Optional) IDs of the subnets, to which the Kafka cluster belongs.'
            topic: '- (Deprecated) To manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic.'
            topic.name: '- (Required) The name of the topic.'
            topic.partitions: '- (Required) The number of the topic''s partitions.'
            topic.replication_factor: '- (Required) Amount of data copies (replicas) for the topic in the cluster.'
            topic.topic_config: '- (Required) User-defined settings for the topic. The structure is documented below.'
            topic_config.compression_type: |-
                , delete_retention_ms, file_delete_delay_ms, flush_messages, flush_ms, min_compaction_lag_ms,
                retention_bytes, retention_ms, max_message_bytes, min_insync_replicas, segment_bytes, preallocate, - (Optional) Kafka topic settings. For more information, see
                the official documentation
                and the Kafka documentation.
            user: '- (Deprecated) To manage users, please switch to using a separate resource type yandex_mdb_kafka_user.'
            user.name: '- (Required) The name of the user.'
            user.password: '- (Required) The password of the user.'
            user.permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            zookeeper.resources: '- (Optional) Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.'
            zookeeper.resources.disk_size: '- (Optional) Volume of the storage available to a ZooKeeper host, in gigabytes.'
            zookeeper.resources.disk_type_id: |-
                - (Optional) Type of the storage of ZooKeeper hosts.
                For more information see the official documentation.
            zookeeper.resources.resources_preset_id: |-
                - (Optional) The ID of the preset for computational resources available to a ZooKeeper host (CPU, memory etc.).
                For more information, see the official documentation.
        importStatements: []
    yandex_mdb_kafka_connector:
        subCategory: unknown
        description: Manages a connectors of a Kafka cluster within Yandex.Cloud.
        name: yandex_mdb_kafka_connector
        title: yandex_mdb_kafka_connect
        examples:
            - name: connector
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.foo.id}",
                  "connector_config_mirrormaker": [
                    {
                      "replication_factor": 1,
                      "source_cluster": [
                        {
                          "alias": "source",
                          "external_cluster": [
                            {
                              "bootstrap_servers": "somebroker1:9091,somebroker2:9091",
                              "sasl_mechanism": "SCRAM-SHA-512",
                              "sasl_password": "somepassword",
                              "sasl_username": "someuser",
                              "security_protocol": "SASL_SSL"
                            }
                          ]
                        }
                      ],
                      "target_cluster": [
                        {
                          "alias": "target",
                          "this_cluster": [
                            {}
                          ]
                        }
                      ],
                      "topics": "data.*"
                    }
                  ],
                  "name": "replication",
                  "properties": {
                    "refresh.topics.enabled": "true"
                  },
                  "tasks_max": 3
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.foo.id
              dependencies:
                yandex_mdb_kafka_cluster.foo: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
            - name: connector
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.foo.id}",
                  "connector_config_s3_sink": [
                    {
                      "file_compression_type": "gzip",
                      "file_max_records": 100,
                      "s3_connection": [
                        {
                          "bucket_name": "somebucket",
                          "external_s3": [
                            {
                              "access_key_id": "some_access_key_id",
                              "endpoint": "storage.yandexcloud.net",
                              "secret_access_key": "some_secret_access_key"
                            }
                          ]
                        }
                      ],
                      "topics": "data.*"
                    }
                  ],
                  "name": "s3-sink",
                  "properties": {
                    "file.name.template": "dir1/dir2/{{topic}}-{{partition:padding=true}}-{{start_offset:padding=true}}.gz",
                    "format.output.type": "jsonl",
                    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
                    "timestamp.timezone": "Europe/Moscow",
                    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
                    "value.converter.schemas.enable": "false"
                  },
                  "tasks_max": 3
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.foo.id
              dependencies:
                yandex_mdb_kafka_cluster.foo: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
        argumentDocs:
            connector_config_mirrormaker: '- (Optional) Params for MirrorMaker2 connector. The structure is documented below.'
            connector_config_mirrormaker.replication_factor: '- (Optional) Replication factor for topics created in target cluster'
            connector_config_mirrormaker.source_cluster: '- (Required) Settings for source cluster. The structure is documented below.'
            connector_config_mirrormaker.source_cluster.alias: '- (Optional) Name of the cluster. Used also as a topic prefix'
            connector_config_mirrormaker.source_cluster.external_cluster: '- (Optional) Connection params for external cluster'
            connector_config_mirrormaker.source_cluster.external_cluster.bootstrap_servers: '- (Required) List of bootstrap servers to connect to cluster'
            connector_config_mirrormaker.source_cluster.external_cluster.sasl_mechanism: '- (Optional) Type of SASL authentification mechanism to use'
            connector_config_mirrormaker.source_cluster.external_cluster.sasl_password: '- (Optional) Password to use in SASL authentification mechanism'
            connector_config_mirrormaker.source_cluster.external_cluster.sasl_username: '- (Optional) Username to use in SASL authentification mechanism'
            connector_config_mirrormaker.source_cluster.external_cluster.security_protocol: '- (Optional) Security protocol to use'
            connector_config_mirrormaker.source_cluster.this_cluster: '- (Optional) Using this section in the cluster definition (source or target) means it''s this cluster'
            connector_config_mirrormaker.target_cluster: '- (Required) Settings for target cluster. The structure is documented below.'
            connector_config_mirrormaker.topics: '- (Required) The pattern for topic names to be replicated.'
            connector_config_s3_sink: '- (Optional) Params for S3 Sink connector. The structure is documented below.'
            connector_config_s3_sink.file_compression_type: '- (Required) Сompression type for messages. Cannot be changed.'
            connector_config_s3_sink.file_max_records: '- (Optional) Max records per file.'
            connector_config_s3_sink.s3_connection: '- (Required) Settings for connection to s3-compatible storage. The structure is documented below.'
            connector_config_s3_sink.s3_connection.bucket_name: '- (Required) Name of the bucket in s3-compatible storage.'
            connector_config_s3_sink.s3_connection.external_s3: '- (Required) Connection params for external s3-compatible storage. The structure is documented below.'
            connector_config_s3_sink.s3_connection.external_s3.access_key_id: '- (Optional) ID of aws-compatible static key.'
            connector_config_s3_sink.s3_connection.external_s3.endpoint: '- (Required) URL of s3-compatible storage.'
            connector_config_s3_sink.s3_connection.external_s3.region: '- (Optional) region of s3-compatible storage. Available region list.'
            connector_config_s3_sink.s3_connection.external_s3.secret_access_key: '- (Optional) Secret key of aws-compatible static key.'
            connector_config_s3_sink.topics: '- (Required) The pattern for topic names to be copied to s3 bucket.'
            name: '- (Required) The name of the connector.'
            properties: '- (Optional) Additional properties for connector.'
            tasks_max: '- (Optional) The number of the connector''s parallel working tasks. Default is the number of brokers'
        importStatements: []
    yandex_mdb_kafka_topic:
        subCategory: unknown
        description: Manages a topic of a Kafka cluster within Yandex.Cloud.
        name: yandex_mdb_kafka_topic
        title: yandex_mdb_kafka_topic
        examples:
            - name: events
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.foo.id}",
                  "name": "events",
                  "partitions": 4,
                  "replication_factor": 1,
                  "topic_config": [
                    {
                      "cleanup_policy": "CLEANUP_POLICY_COMPACT",
                      "compression_type": "COMPRESSION_TYPE_LZ4",
                      "delete_retention_ms": 86400000,
                      "file_delete_delay_ms": 60000,
                      "flush_messages": 128,
                      "flush_ms": 1000,
                      "max_message_bytes": 1048588,
                      "min_compaction_lag_ms": 0,
                      "min_insync_replicas": 1,
                      "preallocate": true,
                      "retention_bytes": 10737418240,
                      "retention_ms": 604800000,
                      "segment_bytes": 268435456
                    }
                  ]
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.foo.id
              dependencies:
                yandex_mdb_kafka_cluster.foo: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
        argumentDocs:
            name: '- (Required) The name of the topic.'
            partitions: '- (Required) The number of the topic''s partitions.'
            replication_factor: '- (Required) Amount of data copies (replicas) for the topic in the cluster.'
            topic_config: '- (Optional) User-defined settings for the topic. The structure is documented below.'
            topic_config.cleanup_policy: |-
                , compression_type, delete_retention_ms, file_delete_delay_ms, flush_messages, flush_ms,
                min_compaction_lag_ms, retention_bytes, retention_ms, max_message_bytes, min_insync_replicas,
                segment_bytes, preallocate - (Optional) Kafka topic settings. For more information, see
                the official documentation
                and the Kafka documentation.
        importStatements: []
    yandex_mdb_kafka_user:
        subCategory: unknown
        description: Manages a user of a Kafka cluster within Yandex.Cloud.
        name: yandex_mdb_kafka_user
        title: yandex_mdb_kafka_user
        examples:
            - name: user_events
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.foo.id}",
                  "name": "user-events",
                  "password": "pass1231232332",
                  "permission": [
                    {
                      "allow_hosts": [
                        "host1.db.yandex.net",
                        "host2.db.yandex.net"
                      ],
                      "role": "ACCESS_ROLE_CONSUMER",
                      "topic_name": "events"
                    },
                    {
                      "role": "ACCESS_ROLE_PRODUCER",
                      "topic_name": "events"
                    }
                  ]
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.foo.id
              dependencies:
                yandex_mdb_kafka_cluster.foo: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
                yandex_mdb_kafka_topic.events: |-
                    {
                      "cluster_id": "${yandex_mdb_kafka_cluster.foo.id}",
                      "name": "events",
                      "partitions": 4,
                      "replication_factor": 1
                    }
        argumentDocs:
            name: '- (Required) The name of the user.'
            password: '- (Required) The password of the user.'
            permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            permission.allow_hosts: '- (Optional) Set of hosts, to which this permission grants access to.'
            permission.role: '- (Required) The role type to grant to the topic.'
            permission.topic_name: '- (Required) The name of the topic that the permission grants access to.'
        importStatements: []
    yandex_mdb_mongodb_cluster:
        subCategory: unknown
        description: Manages a MongoDB cluster within Yandex.Cloud.
        name: yandex_mdb_mongodb_cluster
        title: yandex_mdb_mongodb_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_config": [
                    {
                      "version": "4.2"
                    }
                  ],
                  "database": [
                    {
                      "name": "testdb"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone_id": "ru-central1-a"
                    }
                  ],
                  "labels": {
                    "test_key": "test_value"
                  },
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources_mongocfg": [
                    {
                      "disk_size": 14,
                      "disk_type_id": "network-hdd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "resources_mongod": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-hdd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "resources_mongos": [
                    {
                      "disk_size": 14,
                      "disk_type_id": "network-hdd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "user": [
                    {
                      "name": "john",
                      "password": "password",
                      "permission": [
                        {
                          "database_name": "testdb"
                        }
                      ]
                    }
                  ]
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access.data_lens: '- (Optional) Allow access for Yandex DataLens.'
            access.data_transfer: '- (Optional) Allow access for DataTransfer'
            audit_log.filter: |-
                - (Optional) Configuration of the audit log filter in JSON format.
                For more information see auditLog.filter
                description in the official documentation. Available only in enterprise edition.
            audit_log.runtime_configuration: |-
                - (Optional) Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable.
                For more information see auditLog.runtimeConfiguration
                description in the official documentation. Available only in enterprise edition.
            backup_window_start.hours: '- (Optional) The hour at which backup will be started.'
            backup_window_start.minutes: '- (Optional) The minute at which backup will be started.'
            cluster_config: '- (Required) Configuration of the MongoDB subcluster. The structure is documented below.'
            cluster_config.access: '- (Optional) Access policy to the MongoDB cluster. The structure is documented below.'
            cluster_config.backup_retain_period_days: '- (Optional) Retain period of automatically created backup in days.'
            cluster_config.backup_window_start: '- (Optional) Time to start the daily backup, in the UTC timezone. The structure is documented below.'
            cluster_config.feature_compatibility_version: '- (Optional) Feature compatibility version of MongoDB. If not provided version is taken. Can be either 6.0, 5.0, 4.4 and 4.2.'
            cluster_config.mongocfg: '- (Optional) Configuration of the mongocfg service. The structure is documented below.'
            cluster_config.mongod: '- (Optional) Configuration of the mongod service. The structure is documented below.'
            cluster_config.mongos: '- (Optional) Configuration of the mongos service. The structure is documented below.'
            cluster_config.performance_diagnostics: '- (Optional) Performance diagnostics to the MongoDB cluster. The structure is documented below.'
            cluster_config.version: '- (Required) Version of the MongoDB server software. Can be either 4.2, 4.4, 4.4-enterprise, 5.0, 5.0-enterprise, 6.0 and 6.0-enterprise.'
            cluster_id: '- The ID of the cluster.'
            create: '- Default 30 minutes.'
            created_at: '- Creation timestamp of the key.'
            database: '- (Optional) A database of the MongoDB cluster. The structure is documented below.'
            database.name: '- (Required) The name of the database.'
            delete: '- Default 30 minutes.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the MongoDB cluster.'
            environment: '- (Required, ForceNew) Deployment environment of the MongoDB cluster. Can be either PRESTABLE or PRODUCTION.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            health: |-
                - Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN.
                For more information see health field of JSON representation in the official documentation.
            hidden: '- (Optional) Should this host be hidden in replicaset. Can be either true of false. For more information see the official documentation'
            host: '- (Required) A host of the MongoDB cluster. The structure is documented below.'
            host.assign_public_ip: -(Optional)  Should this host have assigned public IP assigned. Can be either true or false.
            host.health: '- (Computed) The health of the host.'
            host.host_parameters: '- (Optional) The parameters of mongod host in replicaset.'
            host.name: '- (Computed) The fully qualified domain name of the host. Computed on server side.'
            host.role: '- (Optional) The role of the cluster (either PRIMARY or SECONDARY).'
            host.shard_name: '- (Optional) The name of the shard to which the host belongs. Only for sharded cluster.'
            host.subnet_id: |-
                - (Required) The ID of the subnet, to which the host belongs. The subnet must
                be a part of the network to which the cluster belongs.
            host.type: '- (Optional) type of mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.'
            host.zone_id: |-
                - (Required) The availability zone where the MongoDB host will be created.
                For more information see the official documentation.
            journal.commit_interval: |-
                - (Optional) The maximum amount of time in milliseconds that the mongod process allows between journal operations.
                For more information, see the storage.journal.commitIntervalMs
                description in the official documentation.
            kmip.client_certificate: |-
                - (Required) String containing the client certificate used for authenticating MongoDB to the KMIP server.
                For more information see security.kmip.clientCertificateFile
                description in the official documentation.
            kmip.key_identifier: |-
                - (Optional) Unique KMIP identifier for an existing key within the KMIP server.
                For more information see security.kmip.keyIdentifier
                description in the official documentation.
            kmip.port: |-
                - (Optional) Port number to use to communicate with the KMIP server. Default: 5696
                For more information see security.kmip.port
                description in the official documentation.
            kmip.server_ca: |-
                - (Required) Path to CA File. Used for validating secure client connection to KMIP server.
                For more information see security.kmip.serverCAFile
                description in the official documentation.
            kmip.server_name: |-
                - (Required) Hostname or IP address of the KMIP server to connect to.
                For more information see security.kmip.serverName
                description in the official documentation.
            labels: '- (Optional) A set of key/value label pairs to assign to the MongoDB cluster.'
            maintenance_window: '- (Optional) Maintenance window settings of the MongoDB cluster. The structure is documented below.'
            maintenance_window.day: '- (Optional) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            maintenance_window.hour: '- (Optional) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            mongocfg.net: |-
                - (Optional) A set of network settings
                (see the net option).
                The structure is documented below.
            mongocfg.operation_profiling: |-
                - (Optional) A set of profiling settings
                (see the operationProfiling option).
                The structure is documented below.
            mongocfg.storage: |-
                - (Optional) A set of storage settings
                (see the storage option).
                The structure is documented below.
            mongod.audit_log: |-
                - (Optional) A set of audit log settings
                (see the auditLog option).
                The structure is documented below. Available only in enterprise edition.
            mongod.net: |-
                - (Optional) A set of network settings
                (see the net option).
                The structure is documented below.
            mongod.operation_profiling: |-
                - (Optional) A set of profiling settings
                (see the operationProfiling option).
                The structure is documented below.
            mongod.security: |-
                - (Optional) A set of MongoDB Security settings
                (see the security option).
                The structure is documented below. Available only in enterprise edition.
            mongod.set_parameter: |-
                - (Optional) A set of MongoDB Server Parameters
                (see the setParameter option).
                The structure is documented below.
            mongod.storage: |-
                - (Optional) A set of storage settings
                (see the storage option).
                The structure is documented below.
            mongos.net: |-
                - (Optional) A set of network settings
                (see the net option).
                The structure is documented below.
            name: '- (Required) Name of the MongoDB cluster. Provided by the client when the cluster is created.'
            net.compressors: |-
                - (Optional) Specifies the default compressor(s) to use for communication between this mongod or mongos.
                Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make "disabled" the only value.
                For more information, see the net.Compression.Compressors
                description in the official documentation.
            net.max_incoming_connections: |-
                - (Optional) The maximum number of simultaneous connections that host will accept.
                For more information, see the net.maxIncomingConnections
                description in the official documentation.
            network_id: '- (Required, ForceNew) ID of the network, to which the MongoDB cluster belongs.'
            operation_profiling.mode: |-
                - (Optional) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all.
                For more information, see the operationProfiling.mode
                description in the official documentation.
            operation_profiling.slow_op_sample_rate: |-
                - (Optional) The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive.
                For more information, see the operationProfiling.slowOpSampleRate
                description in the official documentation.
            operation_profiling.slow_op_threshold: |-
                - (Optional) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow.
                For more information, see the operationProfiling.slowOpThresholdMs
                description in the official documentation.
            performance_diagnostics.enabled: '- (Optional) Enable or disable performance diagnostics.'
            permission.database_name: '- (Required) The name of the database that the permission grants access to.'
            permission.roles: '- (Optional) The roles of the user in this database. For more information see the official documentation.'
            priority: '- (Optional) A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see the official documentation'
            resources: '- (DEPRECATED, use resources_* instead) Resources allocated to hosts of the MongoDB cluster. The structure is documented below.'
            resources.disk_size: '- (Required) Volume of the storage available to a MongoDB host, in gigabytes.'
            resources.disk_type_id: |-
                - (Required) Type of the storage of MongoDB hosts.
                For more information see the official documentation.
            resources.resources_preset_id: |-
                - (Required) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.).
                For more information, see the official documentation.
            resources_mongocfg: '- (Optional) Resources allocated to mongocfg hosts of the MongoDB cluster. The structure is documented below.'
            resources_mongod: '- (Optional) Resources allocated to mongod hosts of the MongoDB cluster. The structure is documented below.'
            resources_mongoinfra: '- (Optional) Resources allocated to mongoinfra hosts of the MongoDB cluster. The structure is documented below.'
            resources_mongos: '- (Optional) Resources allocated to mongos hosts of the MongoDB cluster. The structure is documented below.'
            restore: '- (Optional, ForceNew) The cluster will be created from the specified backup. The structure is documented below.'
            restore.backup_id: '- (Required, ForceNew) Backup ID. The cluster will be created from the specified backup. How to get a list of PostgreSQL backups'
            restore.time: '- (Optional, ForceNew) Timestamp of the moment to which the MongoDB cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.'
            secondary_delay_secs: '- (Optional) The number of seconds "behind" the primary that this replica set member should "lag". For more information see the official documentation'
            security.enable_encryption: |-
                - (Optional) Enables the encryption for the WiredTiger storage engine. Can be either true or false.
                For more information see security.enableEncryption
                description in the official documentation. Available only in enterprise edition.
            security.kmip: |-
                - (Optional) Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP)
                (see Encryption tutorial ). Requires enable_encryption to be true.
                The structure is documented below. Available only in enterprise edition.
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            set_parameter.audit_authorization_success: |-
                - (Optional) Enables the auditing of authorization successes. Can be either true or false.
                For more information, see the auditAuthorizationSuccess
                description in the official documentation. Available only in enterprise edition.
            set_parameter.enable_flow_control: |-
                - (Optional) Enables the flow control. Can be either true or false.
                For more information, see the enableFlowControl
                description in the official documentation.
            set_parameter.min_snapshot_history_window_in_seconds: |-
                - (Optional) The minimum time window in seconds for which the storage engine keeps the snapshot history.
                For more information, see the minSnapshotHistoryWindowInSeconds
                description in the official documentation.
            sharded: '- MongoDB Cluster mode enabled/disabled.'
            status: |-
                - Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
                For more information see status field of JSON representation in the official documentation.
            storage.journal: |-
                - (Optional) The durability journal to ensure data files remain valid and recoverable.
                The structure is documented below.
            storage.wired_tiger: |-
                - (Optional) The WiredTiger engine settings.
                (see the storage.wiredTiger option).
                These settings available only on mongod hosts. The structure is documented below.
            tags: '- (Optional) A set of key/value pairs to assign for the replica set member. For more information see the official documentation'
            update: '- Default 60 minutes.'
            user: '- (Optional) A user of the MongoDB cluster. The structure is documented below.'
            user.name: '- (Required) The name of the user.'
            user.password: '- (Required) The password of the user.'
            user.permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            wired_tiger.block_compressor: |-
                - (Optional) Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections.
                Available compressors are: none, snappy, zlib, zstd. This setting available only on mongod hosts.
                For more information, see the storage.wiredTiger.collectionConfig.blockCompressor
                description in the official documentation.
            wired_tiger.cache_size_gb: |-
                - (Optional) Defines the maximum size of the internal cache that WiredTiger will use for all data.
                For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB
                description in the official documentation.
            wired_tiger.prefix_compression: |-
                - (Optional) Enables or disables prefix compression for index data. Сan be either true or false.
                For more information, see the storage.wiredTiger.indexConfig.prefixCompression
                description in the official documentation.
        importStatements: []
    yandex_mdb_mongodb_database:
        subCategory: unknown
        description: Manages a MongoDB database within Yandex.Cloud.
        name: yandex_mdb_mongodb_database
        title: yandex_mdb_mongodb_database
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_mongodb_cluster.foo.id}",
                  "name": "testdb"
                }
              references:
                cluster_id: yandex_mdb_mongodb_cluster.foo.id
              dependencies:
                yandex_mdb_mongodb_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "version": "6.0"
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone_id": "ru-central1-a"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources_mongod": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            name: '- (Required) The name of the database.'
        importStatements: []
    yandex_mdb_mongodb_user:
        subCategory: unknown
        description: Manages a MongoDB user within Yandex.Cloud.
        name: yandex_mdb_mongodb_user
        title: yandex_mdb_mongodb_user
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_mongodb_cluster.foo.id}",
                  "name": "alice",
                  "password": "password"
                }
              references:
                cluster_id: yandex_mdb_mongodb_cluster.foo.id
              dependencies:
                yandex_mdb_mongodb_cluster.foo: |-
                    {
                      "cluster_config": [
                        {
                          "version": "6.0"
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone_id": "ru-central1-a"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources_mongod": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            name: '- (Required) The name of the user.'
            password: '- (Required) The password of the user.'
            permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            permission.database_name: '- (Required) The name of the database that the permission grants access to.'
            permission.roles: '- (Optional) List of strings. The roles of the user in this database. For more information see the official documentation.'
        importStatements: []
    yandex_mdb_mysql_cluster:
        subCategory: unknown
        description: Manages a MySQL cluster within Yandex.Cloud.
        name: yandex_mdb_mysql_cluster
        title: yandex_mdb_mysql_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "mysql_config": {
                    "default_authentication_plugin": "MYSQL_NATIVE_PASSWORD",
                    "innodb_print_all_deadlocks": true,
                    "max_connections": 100,
                    "sql_mode": "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
                  },
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "name": "na-2",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "name": "nb-1",
                      "replication_source_name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "name": "nb-2",
                      "replication_source_name": "nb-1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "backup_priority": 5,
                      "name": "nb-1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "backup_priority": 10,
                      "name": "nb-2",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "name": "nb-1",
                      "priority": 5,
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "name": "nb-2",
                      "priority": 10,
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "restore": [
                    {
                      "backup_id": "c9qj2tns23432471d9qha:stream_20210122T141717Z",
                      "time": "2021-01-23T15:04:05"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: '- (Optional) Access policy to the MySQL cluster. The structure is documented below.'
            access.data_lens: '- (Optional) Allow access for Yandex DataLens.'
            access.data_transfer: '- (Optional) Allow access for DataTransfer'
            access.web_sql: '- (Optional) Allows access for SQL queries in the management console.'
            audit_log: boolean
            auto_increment_increment: integer
            auto_increment_offset: integer
            backup_retain_period_days: '- (Optional) The period in days during which backups are stored.'
            backup_window_start: '- (Optional) Time to start the daily backup, in the UTC. The structure is documented below.'
            backup_window_start.hours: '- (Optional) The hour at which backup will be started.'
            backup_window_start.minutes: '- (Optional) The minute at which backup will be started.'
            binlog_cache_size: integer
            binlog_group_commit_sync_delay: integer
            binlog_row_image: 'one of:'
            binlog_rows_query_log_events: boolean
            character_set_server: text
            collation_server: text
            connection_limits.max_connections_per_hour: '- Max connections per hour.'
            connection_limits.max_questions_per_hour: '- Max questions per hour.'
            connection_limits.max_updates_per_hour: '- Max updates per hour.'
            connection_limits.max_user_connections: '- Max user connections.'
            created_at: '- Creation timestamp of the cluster.'
            database: '- (Deprecated) To manage databases, please switch to using a separate resource type yandex_mdb_mysql_databases.'
            database.name: '- (Required) The name of the database.'
            default_authentication_plugin: 'one of:'
            default_time_zone: text
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the MySQL cluster.'
            environment: '- (Required) Deployment environment of the MySQL cluster.'
            explicit_defaults_for_timestamp: boolean
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            general_log: boolean
            group_concat_max_len: integer
            health: '- Aggregated health of the cluster.'
            host: '- (Required) A host of the MySQL cluster. The structure is documented below.'
            host.assign_public_ip: '- (Optional) Sets whether the host should get a public IP address. It can be changed on the fly only when name is set.'
            host.backup_priority: '- (Optional) Host backup priority. Value is between 0 and 100, default is 0.'
            host.fqdn: '- (Computed) The fully qualified domain name of the host.'
            host.name: '- (Optional) Host state name. It should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please refer to replication_source_name parameter.'
            host.priority: '- (Optional) Host master promotion priority. Value is between 0 and 100, default is 0.'
            host.replication_source: '- (Computed) Host replication source (fqdn), when replication_source is empty then host is in HA group.'
            host.replication_source_name: '- (Optional) Host replication source name points to host''s name from which this host should replicate. When not set then host in HA group. It works only when name is set.'
            host.subnet_id: '- (Optional) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.'
            host.zone: '- (Required) The availability zone where the MySQL host will be created.'
            innodb_adaptive_hash_index: boolean
            innodb_buffer_pool_size: integer
            innodb_flush_log_at_trx_commit: integer
            innodb_ft_max_token_size: integer
            innodb_ft_min_token_size: integer
            innodb_io_capacity: integer
            innodb_io_capacity_max: integer
            innodb_lock_wait_timeout: integer
            innodb_log_buffer_size: integer
            innodb_log_file_size: integer
            innodb_numa_interleave: boolean
            innodb_online_alter_log_max_size: integer
            innodb_page_size: integer (create-only option)
            innodb_print_all_deadlocks: boolean
            innodb_purge_threads: integer
            innodb_read_io_threads: integer
            innodb_temp_data_file_max_size: integer
            innodb_thread_concurrency: integer
            innodb_write_io_threads: integer
            interactive_timeout: integer
            join_buffer_size: integer
            labels: '- (Optional) A set of key/value label pairs to assign to the MySQL cluster.'
            log_slow_rate_limit: intger
            log_slow_rate_type: 'one of:'
            log_slow_sp_statements: boolean
            long_query_time: float
            lower_case_table_names: boolean (create-only option)
            maintenance_window: '- (Optional) Maintenance policy of the MySQL cluster. The structure is documented below.'
            maintenance_window.day: '- (Optional) Day of the week (in DDD format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"'
            maintenance_window.hour: '- (Optional) Hour of the day in UTC (in HH format). Allowed value is between 0 and 23.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            max_allowed_packet: integer
            max_connections: integer
            max_heap_table_size: integer
            mdb_offline_mode_disable_lag: integer
            mdb_offline_mode_enable_lag: integer
            mdb_preserve_binlog_bytes: integer
            mdb_priority_choice_max_lag: integer
            mysql_config: '- (Optional) MySQL cluster config. Detail info in "MySQL config" section (documented below).'
            name: '- (Required) Name of the MySQL cluster. Provided by the client when the cluster is created.'
            net_read_timeout: integer
            net_write_timeout: integer
            network_id: '- (Required) ID of the network, to which the MySQL cluster uses.'
            performance_diagnostics: '- (Optional) Cluster performance diagnostics settings. The structure is documented below. YC Documentation'
            performance_diagnostics.enabled: '- Enable performance diagnostics'
            performance_diagnostics.sessions_sampling_interval: '- Interval (in seconds) for my_stat_activity sampling Acceptable values are 1 to 86400, inclusive.'
            performance_diagnostics.statements_sampling_interval: '- Interval (in seconds) for my_stat_statements sampling Acceptable values are 1 to 86400, inclusive.'
            permission.database_name: '- (Required) The name of the database that the permission grants access to.'
            permission.roles: |-
                - (Optional) List user's roles in the database.
                Allowed roles: ALL,ALTER,ALTER_ROUTINE,CREATE,CREATE_ROUTINE,CREATE_TEMPORARY_TABLES,
                CREATE_VIEW,DELETE,DROP,EVENT,EXECUTE,INDEX,INSERT,LOCK_TABLES,SELECT,SHOW_VIEW,TRIGGER,UPDATE.
            range_optimizer_max_mem_size: integer
            regexp_time_limit: integer
            resources: '- (Required) Resources allocated to hosts of the MySQL cluster. The structure is documented below.'
            resources.disk_size: '- (Required) Volume of the storage available to a MySQL host, in gigabytes.'
            resources.disk_type_id: '- (Required) Type of the storage of MySQL hosts.'
            resources.resources_preset_id: |-
                - (Required) The ID of the preset for computational resources available to a MySQL host (CPU, memory etc.).
                For more information, see the official documentation.
            restore: '- (Optional, ForceNew) The cluster will be created from the specified backup. The structure is documented below.'
            restore.backup_id: '- (Required, ForceNew) Backup ID. The cluster will be created from the specified backup. How to get a list of MySQL backups.'
            restore.time: '- (Optional, ForceNew) Timestamp of the moment to which the MySQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.'
            rpl_semi_sync_master_wait_for_slave_count: integer
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            show_compatibility_56: boolean
            slave_parallel_type: 'one of:'
            slave_parallel_workers: integer
            slow_query_log: boolean
            slow_query_log_always_write_time: float
            sort_buffer_size: integer
            sql_mode: 'default value: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'
            status: '- Status of the cluster.'
            sync_binlog: integer
            table_definition_cache: integer
            table_open_cache: integer
            table_open_cache_instances: integer
            thread_cache_size: integer
            thread_stack: integer
            tmp_table_size: integer
            transaction_isolation: 'one of:'
            user: '- (Deprecated) To manage users, please switch to using a separate resource type yandex_mdb_mysql_user.'
            user.authentication_plugin: '- (Optional) Authentication plugin. Allowed values: MYSQL_NATIVE_PASSWORD, CACHING_SHA2_PASSWORD, SHA256_PASSWORD (for version 5.7 MYSQL_NATIVE_PASSWORD, SHA256_PASSWORD)'
            user.connection_limits: |-
                - (Optional) User's connection limits. The structure is documented below.
                If the attribute is not specified there will be no changes.
            user.global_permissions: |-
                - (Optional) List user's global permissions
                Allowed permissions:  REPLICATION_CLIENT, REPLICATION_SLAVE, PROCESS for clear list use empty list.
                If the attribute is not specified there will be no changes.
            user.name: '- (Required) The name of the user.'
            user.password: '- (Required) The password of the user.'
            user.permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            version: '- (Required) Version of the MySQL cluster. (allowed versions are: 5.7, 8.0)'
            wait_timeout: integer
        importStatements: []
    yandex_mdb_mysql_database:
        subCategory: unknown
        description: Manages a MySQL database within Yandex.Cloud.
        name: yandex_mdb_mysql_database
        title: yandex_mdb_mysql_database
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_mysql_cluster.foo.id}",
                  "name": "testdb"
                }
              references:
                cluster_id: yandex_mdb_mysql_cluster.foo.id
              dependencies:
                yandex_mdb_mysql_cluster.foo: |-
                    {
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-a"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": "8.0"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            name: '- (Required) The name of the database.'
        importStatements: []
    yandex_mdb_mysql_user:
        subCategory: unknown
        description: Manages a MySQL user within Yandex.Cloud.
        name: yandex_mdb_mysql_user
        title: yandex_mdb_mysql_user
        examples:
            - name: john
              manifest: |-
                {
                  "authentication_plugin": "SHA256_PASSWORD",
                  "cluster_id": "${yandex_mdb_mysql_cluster.foo.id}",
                  "connection_limits": [
                    {
                      "max_connections_per_hour": 30,
                      "max_questions_per_hour": 10,
                      "max_updates_per_hour": 20,
                      "max_user_connections": 40
                    }
                  ],
                  "global_permissions": [
                    "PROCESS"
                  ],
                  "name": "john",
                  "password": "password",
                  "permission": [
                    {
                      "database_name": "${yandex_mdb_mysql_database.testdb.name}",
                      "roles": [
                        "ALL"
                      ]
                    },
                    {
                      "database_name": "${yandex_mdb_mysql_database.new_testdb.name}",
                      "roles": [
                        "ALL",
                        "INSERT"
                      ]
                    }
                  ]
                }
              references:
                cluster_id: yandex_mdb_mysql_cluster.foo.id
                permission.database_name: yandex_mdb_mysql_database.new_testdb.name
              dependencies:
                yandex_mdb_mysql_cluster.foo: |-
                    {
                      "config": [
                        {
                          "resources": [
                            {
                              "disk_size": 16,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ],
                          "version": 14
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-a"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            authentication_plugin: '- (Optional) Authentication plugin. Allowed values: MYSQL_NATIVE_PASSWORD, CACHING_SHA2_PASSWORD, SHA256_PASSWORD (for version 5.7 MYSQL_NATIVE_PASSWORD, SHA256_PASSWORD)'
            connection_limits: |-
                - (Optional) User's connection limits. The structure is documented below.
                If the attribute is not specified there will be no changes.
            connection_limits.max_connections_per_hour: '- Max connections per hour.'
            connection_limits.max_questions_per_hour: '- Max questions per hour.'
            connection_limits.max_updates_per_hour: '- Max updates per hour.'
            connection_limits.max_user_connections: '- Max user connections.'
            global_permissions: |-
                - (Optional) List user's global permissions
                Allowed permissions:  REPLICATION_CLIENT, REPLICATION_SLAVE, PROCESS for clear list use empty list.
                If the attribute is not specified there will be no changes.
            name: '- (Required) The name of the user.'
            password: '- (Required) The password of the user.'
            permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            permission.database_name: '- (Required) The name of the database that the permission grants access to.'
            permission.roles: |-
                - (Optional) List user's roles in the database.
                Allowed roles: ALL,ALTER,ALTER_ROUTINE,CREATE,CREATE_ROUTINE,CREATE_TEMPORARY_TABLES,
                CREATE_VIEW,DELETE,DROP,EVENT,EXECUTE,INDEX,INSERT,LOCK_TABLES,SELECT,SHOW_VIEW,TRIGGER,UPDATE.
        importStatements: []
    yandex_mdb_opensearch_cluster:
        subCategory: unknown
        description: Manages a OpenSearch cluster within Yandex.Cloud.
        name: yandex_mdb_opensearch_cluster
        title: yandex_mdb_opensearch_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "admin_password": "super-password",
                      "opensearch": [
                        {
                          "node_groups": [
                            {
                              "assign_public_ip": true,
                              "hosts_count": 1,
                              "name": "group0",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "roles": [
                                "data",
                                "manager"
                              ],
                              "subnet_ids": [
                                "${yandex_vpc_subnet.foo.id}"
                              ],
                              "zone_ids": [
                                "ru-central1-a"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "admin_password": "super-password",
                      "dashboards": [
                        {
                          "node_groups": [
                            {
                              "assign_public_ip": true,
                              "hosts_count": 1,
                              "name": "dashboards",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "zone_ids": "${local.zones}"
                            }
                          ]
                        }
                      ],
                      "opensearch": [
                        {
                          "node_groups": [
                            {
                              "assign_public_ip": true,
                              "hosts_count": 2,
                              "name": "hot_group0",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.small"
                                }
                              ],
                              "roles": [
                                "data"
                              ],
                              "zone_ids": "${local.zones}"
                            },
                            {
                              "assign_public_ip": true,
                              "hosts_count": 2,
                              "name": "cold_group0",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "roles": [
                                "data"
                              ],
                              "zone_ids": "${local.zones}"
                            },
                            {
                              "assign_public_ip": true,
                              "hosts_count": 3,
                              "name": "managers_group",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "roles": [
                                "manager"
                              ],
                              "zone_ids": "${local.zones}"
                            }
                          ],
                          "plugins": [
                            "analysis-icu"
                          ]
                        }
                      ]
                    }
                  ],
                  "depends_on": [
                    "${yandex_vpc_subnet.es-subnet-a}",
                    "${yandex_vpc_subnet.es-subnet-b}",
                    "${yandex_vpc_subnet.es-subnet-c}"
                  ],
                  "environment": "PRODUCTION",
                  "name": "my-cluster",
                  "network_id": "${yandex_vpc_network.es-net.id}"
                }
              references:
                config.dashboards.node_groups.zone_ids: local.zones
                config.opensearch.node_groups.zone_ids: local.zones
              dependencies:
                yandex_vpc_network.es-net: '{}'
                yandex_vpc_subnet.es-subnet-a: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
                yandex_vpc_subnet.es-subnet-b: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.es-subnet-c: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
        argumentDocs:
            config: '- (Required) Configuration of the OpenSearch cluster. The structure is documented below.'
            config.admin_password: '- (Required) Password for admin user of OpenSearch.'
            config.dashboards: '- (Optional) Configuration for Dashboards node groups. The structure is documented below.'
            config.opensearch: '- (Required) Configuration for OpenSearch node groups. The structure is documented below.'
            config.version: '- (Optional) Version of OpenSearch.'
            created_at: '- Creation timestamp of the key.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the OpenSearch cluster.'
            environment: '- (Optional) Deployment environment of the OpenSearch cluster. Can be either PRESTABLE or PRODUCTION. Default: PRODUCTION'
            folder_id: '- (Optional) The ID of the folder that the resource belongs to. If it is not provided, the default provider folder is used.'
            health: |-
                - Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN.
                For more information see health field of JSON representation in the official documentation.
            hosts: '- A hosts of the OpenSearch cluster. The structure is documented below.'
            hosts.assign_public_ip: '- Sets whether the host should get a public IP address. Can be either true or false.'
            hosts.fqdn: '- The fully qualified domain name of the host.'
            hosts.roles: '- The roles of the deployed host. Can contain DATA and/or MANAGER roles. Will be empty for DASHBOARDS type.'
            hosts.subnet_id: |-
                - The ID of the subnet, to which the host belongs. The subnet must
                be a part of the network to which the cluster belongs.
            hosts.type: '- The type of the deployed host. Can be either OPENSEARCH or DASHBOARDS.'
            hosts.zone: |-
                - The availability zone where the OpenSearch host will be created.
                For more information see the official documentation.
            labels: '- (Optional) A set of key/value label pairs to assign to the OpenSearch cluster.'
            maintenance_window.day: '- (Optional) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            maintenance_window.hour: '- (Optional) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            name: '- (Required) Name of the OpenSearch cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the OpenSearch cluster belongs.'
            node_groups.assign_public_ip: '- (Optional) Sets whether the hosts should get a public IP address on creation.'
            node_groups.host_count: '- (Required) Number of hosts in this node group.'
            node_groups.name: '- (Required) Name of OpenSearch node group.'
            node_groups.resources: '- (Required) Resources allocated to hosts of this OpenSearch node group. The structure is documented below.'
            node_groups.roles: '- (Optional) A set of OpenSearch roles assigned to hosts. Available roles are: DATA, MANAGER. Default: [DATA, MANAGER]'
            node_groups.subnet_ids: '- (Optional) A set of the subnets, to which the hosts belongs. The subnets must be a part of the network to which the cluster belongs. No other parameters should be changed simultaneously with this one, except zones_ids.'
            node_groups.zones_ids: '- (Required) A set of availability zones where hosts of node group may be allocated. No other parameters should be changed simultaneously with this one, except subnet_ids.'
            opensearch.node_groups: '- (Required) A set of named OpenSearch node group configurations. The structure is documented below.'
            opensearch.plugins: '- (Optional) A set of requested OpenSearch plugins.'
            resources.disk_size: '- (Required) Volume of the storage available to a host, in bytes.'
            resources.disk_type_id: '- (Required) Type of the storage of OpenSearch hosts.'
            resources.resources_preset_id: '- (Required) The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see the official documentation.'
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            service_account_id: '- (Optional) ID of the service account authorized for this cluster.'
            status: |-
                - Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
                For more information see status field of JSON representation in the official documentation.
        importStatements: []
    yandex_mdb_postgresql_cluster:
        subCategory: unknown
        description: Manages a PostgreSQL cluster within Yandex.Cloud.
        name: yandex_mdb_postgresql_cluster
        title: yandex_mdb_postgresql_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "postgresql_config": {
                        "autovacuum_vacuum_scale_factor": 0.34,
                        "default_transaction_isolation": "TRANSACTION_ISOLATION_READ_COMMITTED",
                        "enable_parallel_hash": true,
                        "max_connections": 395,
                        "shared_preload_libraries": "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"
                      },
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "ha",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "resources": [
                        {
                          "disk_size": 10,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "description": "test High-Availability (HA) PostgreSQL Cluster with priority and set master",
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "host_name_a",
                      "priority": 2,
                      "subnet_id": "${yandex_vpc_subnet.a.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "name": "host_name_b",
                      "replication_source_name": "host_name_c",
                      "subnet_id": "${yandex_vpc_subnet.b.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "name": "host_name_c",
                      "subnet_id": "${yandex_vpc_subnet.c.id}",
                      "zone": "ru-central1-c"
                    },
                    {
                      "name": "host_name_c_2",
                      "subnet_id": "${yandex_vpc_subnet.c.id}",
                      "zone": "ru-central1-c"
                    }
                  ],
                  "host_master_name": "host_name_c_2",
                  "name": "test_ha",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.c.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.a: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
                yandex_vpc_subnet.b: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.c: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "postgresql_config": {
                        "autovacuum_vacuum_scale_factor": 0.34,
                        "default_transaction_isolation": "TRANSACTION_ISOLATION_READ_COMMITTED",
                        "enable_parallel_hash": true,
                        "max_connections": 395,
                        "shared_preload_libraries": "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"
                      },
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "restore": [
                    {
                      "backup_id": "c9q99999999999999994cm:base_000000010000005F000000B4",
                      "time": "2021-02-11T15:04:05"
                    }
                  ]
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access.data_lens: '- (Optional) Allow access for Yandex DataLens.'
            access.data_transfer: '- (Optional) Allow access for DataTransfer'
            access.serverless: '- Allow access for connection to managed databases from functions'
            access.web_sql: '- Allow access for SQL queries in the management console'
            backup_window_start.hours: '- (Optional) The hour at which backup will be started (UTC).'
            backup_window_start.minutes: '- (Optional) The minute at which backup will be started (UTC).'
            config: '- (Required) Configuration of the PostgreSQL cluster. The structure is documented below.'
            config.access: '- (Optional) Access policy to the PostgreSQL cluster. The structure is documented below.'
            config.autofailover: '- (Optional) Configuration setting which enables/disables autofailover in cluster.'
            config.backup_retain_period_days: '- (Optional) The period in days during which backups are stored.'
            config.backup_window_start: '- (Optional) Time to start the daily backup, in the UTC timezone. The structure is documented below.'
            config.disk_size_autoscaling: '- Cluster disk size autoscaling settings. The structure is documented below.'
            config.performance_diagnostics: '- (Optional) Cluster performance diagnostics settings. The structure is documented below. YC Documentation'
            config.pooler_config: '- (Optional) Configuration of the connection pooler. The structure is documented below.'
            config.postgresql_config: '- (Optional) PostgreSQL cluster config. Detail info in "postresql config" section (documented below).'
            config.resources: '- (Required) Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.'
            config.version: '- (Required) Version of the PostgreSQL cluster. (allowed versions are: 10, 10-1c, 11, 11-1c, 12, 12-1c, 13, 13-1c, 14, 14-1c, 15, 15-1c, 16)'
            created_at: '- Timestamp of cluster creation.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the PostgreSQL cluster.'
            disk_size_autoscaling.disk_size_limit: '- Limit of disk size after autoscaling (GiB).'
            disk_size_autoscaling.emergency_usage_threshold: '- Immediate autoscaling disk usage (percent).'
            disk_size_autoscaling.planned_usage_threshold: '- Maintenance window autoscaling disk usage (percent).'
            environment: '- (Required) Deployment environment of the PostgreSQL cluster.'
            folder_id: '- (Optional) The ID of the folder that the resource belongs to. If it is unset, the default provider folder_id is used for create.'
            health: '- Aggregated health of the cluster.'
            host: '- (Required) A host of the PostgreSQL cluster. The structure is documented below.'
            host.assign_public_ip: '- (Optional) Sets whether the host should get a public IP address on creation. It can be changed on the fly only when name is set.'
            host.fqdn: '- (Computed) The fully qualified domain name of the host.'
            host.name: |-
                - (Optional) Host state name. It should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see replication_source_name parameter.
                Also, this field is used to select which host will be selected as a master host. Please see host_master_name parameter.
            host.priority: '- Host priority in HA group. It works only when name is set.'
            host.replication_source: '- (Computed) Host replication source (fqdn), when replication_source is empty then host is in HA group.'
            host.replication_source_name: '- (Optional) Host replication source name points to host''s name from which this host should replicate. When not set then host in HA group. It works only when name is set.'
            host.subnet_id: '- (Optional) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.'
            host.zone: '- (Required) The availability zone where the PostgreSQL host will be created.'
            host_master_name: '- (Optional) It sets name of master host. It works only when host.name is set.'
            labels: '- (Optional) A set of key/value label pairs to assign to the PostgreSQL cluster.'
            maintenance_window: '- (Optional) Maintenance policy of the PostgreSQL cluster. The structure is documented below.'
            maintenance_window.day: '- (Optional) Day of the week (in DDD format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"'
            maintenance_window.hour: '- (Optional) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            name: '- (Required) Name of the PostgreSQL cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the PostgreSQL cluster belongs.'
            performance_diagnostics.database: '- (Deprecated) To manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database.'
            performance_diagnostics.enabled: '- Enable performance diagnostics'
            performance_diagnostics.sessions_sampling_interval: '- Interval (in seconds) for pg_stat_activity sampling Acceptable values are 1 to 86400, inclusive.'
            performance_diagnostics.statements_sampling_interval: '- Interval (in seconds) for pg_stat_statements sampling Acceptable values are 1 to 86400, inclusive.'
            performance_diagnostics.user: '- (Deprecated) To manage users, please switch to using a separate resource type yandex_mdb_postgresql_user.'
            pooler_config.pool_discard: '- (Optional) Setting pool_discard parameter in Odyssey.'
            pooler_config.pooling_mode: '- (Optional) Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.'
            resources.disk_size: '- (Required) Volume of the storage available to a PostgreSQL host, in gigabytes.'
            resources.disk_type_id: '- (Required) Type of the storage of PostgreSQL hosts.'
            resources.resources_preset_id: |-
                - (Required) The ID of the preset for computational resources available to a PostgreSQL host (CPU, memory etc.).
                For more information, see the official documentation.
            restore: '- (Optional, ForceNew) The cluster will be created from the specified backup. The structure is documented below.'
            restore.backup_id: '- (Required, ForceNew) Backup ID. The cluster will be created from the specified backup. How to get a list of PostgreSQL backups.'
            restore.time: '- (Optional, ForceNew) Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.'
            restore.time_inclusive: |-
                - (Optional, ForceNew) Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before.
                Possible values:
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            status: '- Status of the cluster.'
        importStatements: []
    yandex_mdb_postgresql_database:
        subCategory: unknown
        description: Manages a PostgreSQL database within Yandex.Cloud.
        name: yandex_mdb_postgresql_database
        title: yandex_mdb_postgresql_database
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_postgresql_cluster.foo.id}",
                  "extension": [
                    {
                      "name": "uuid-ossp"
                    },
                    {
                      "name": "xml2"
                    }
                  ],
                  "lc_collate": "en_US.UTF-8",
                  "lc_type": "en_US.UTF-8",
                  "name": "testdb",
                  "owner": "${yandex_mdb_postgresql_user.alice.name}"
                }
              references:
                cluster_id: yandex_mdb_postgresql_cluster.foo.id
                owner: yandex_mdb_postgresql_user.alice.name
              dependencies:
                yandex_mdb_postgresql_cluster.foo: |-
                    {
                      "config": [
                        {
                          "resources": [
                            {
                              "disk_size": 16,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ],
                          "version": 15
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-a"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_mdb_postgresql_user.foo: |-
                    {
                      "cluster_id": "${yandex_mdb_postgresql_cluster.foo.id}",
                      "name": "alice",
                      "password": "password"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            extension: '- (Optional) Set of database extensions. The structure is documented below'
            extension.deletion_protection: '- (Optional) Inhibits deletion of the database. Can either be true, false or unspecified.'
            extension.name: '- (Required) Name of the database extension. For more information on available extensions see the official documentation.'
            extension.version: '- (Optional) Version of the extension.'
            lc_collate: '- (Optional) POSIX locale for string sorting order. Forbidden to change in an existing database.'
            lc_type: '- (Optional) POSIX locale for character classification. Forbidden to change in an existing database.'
            name: '- (Required) The name of the database.'
            owner: '- (Required) Name of the user assigned as the owner of the database. Forbidden to change in an existing database.'
            template_db: '- (Optional) Name of the template database.'
        importStatements: []
    yandex_mdb_postgresql_user:
        subCategory: unknown
        description: Manages a PostgreSQL user within Yandex.Cloud.
        name: yandex_mdb_postgresql_user
        title: yandex_mdb_postgresql_user
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_postgresql_cluster.foo.id}",
                  "conn_limit": 50,
                  "name": "alice",
                  "password": "password",
                  "settings": {
                    "default_transaction_isolation": "read committed",
                    "log_min_duration_statement": 5000
                  }
                }
              references:
                cluster_id: yandex_mdb_postgresql_cluster.foo.id
              dependencies:
                yandex_mdb_postgresql_cluster.foo: |-
                    {
                      "config": [
                        {
                          "resources": [
                            {
                              "disk_size": 16,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ],
                          "version": 15
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-a"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            conn_limit: '- (Optional) The maximum number of connections per user. (Default 50)'
            deletion_protection: '- (Optional) Inhibits deletion of the user. Can either be true, false or unspecified.'
            grants: '- (Optional) List of the user''s grants.'
            login: '- (Optional) User''s ability to login.'
            name: '- (Required) The name of the user.'
            password: '- (Required) The password of the user.'
            permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            permission.database_name: '- (Required) The name of the database that the permission grants access to.'
            settings: '- (Optional) Map of user settings. List of settings is documented below.'
            settings.catchup_timeout: '- The connection pooler setting. It determines the maximum allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold. Default value is 0, which disables this feature. Integer.'
            settings.default_transaction_isolation: '- defines the default isolation level to be set for all new SQL transactions. One of:'
            settings.idle_in_transaction_session_timeout: '- Sets the maximum allowed idle time (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer.'
            settings.lock_timeout: '- The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object (default 0)'
            settings.log_min_duration_statement: '- This setting controls logging of the duration of statements. (default -1 disables logging of the duration of statements.)'
            settings.log_statement: '- This setting specifies which SQL statements should be logged (on the user level). One of:'
            settings.pool_mode: '- Mode that the connection pooler is working in with specified user. One of:'
            settings.prepared_statements_pooling: '- This setting allows user to use prepared statements with transaction pooling. Boolean.'
            settings.statement_timeout: '- The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the timeout. Integer'
            settings.synchronous_commit: '- This setting defines whether DBMS will commit transaction in a synchronous way. One of:'
            settings.temp_file_limit: '- The maximum storage space size (in kilobytes) that a single process can use to create temporary files.'
            settings.wal_sender_timeout: '- The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for longer than this amount of time. Integer.'
        importStatements: []
    yandex_mdb_redis_cluster:
        subCategory: unknown
        description: Manages a Redis cluster within Yandex.Cloud.
        name: yandex_mdb_redis_cluster
        title: yandex_mdb_redis_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "password": "your_password",
                      "version": "6.2"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "resource_preset_id": "hm1.nano"
                    }
                  ]
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "password": "your_password",
                      "version": "6.2"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "shard_name": "first",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "shard_name": "second",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "shard_name": "third",
                      "subnet_id": "${yandex_vpc_subnet.baz.id}",
                      "zone": "ru-central1-c"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "resource_preset_id": "hm1.nano"
                    }
                  ],
                  "sharded": true
                }
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            announce_hostnames: '- Announce fqdn instead of ip address.'
            config: '- (Required) Configuration of the Redis cluster. The structure is documented below.'
            config.client_output_buffer_limit_normal: |-
                - (Optional) Normal clients output buffer limits.
                See redis config file.
            config.client_output_buffer_limit_pubsub: |-
                - (Optional) Pubsub clients output buffer limits.
                See redis config file.
            config.databases: '- (Optional) Number of databases (changing requires redis-server restart).'
            config.maxmemory_percent: '- (Optional) Redis maxmemory usage in percent'
            config.maxmemory_policy: |-
                - (Optional) Redis key eviction policy for a dataset that reaches maximum memory.
                Can be any of the listed in the official RedisDB documentation.
            config.notify_keyspace_events: '- (Optional) Select the events that Redis will notify among a set of classes.'
            config.password: '- (Required) Password for the Redis cluster.'
            config.slowlog_log_slower_than: '- (Optional) Log slow queries below this number in microseconds.'
            config.slowlog_max_len: '- (Optional) Slow queries log length.'
            config.timeout: '- (Optional) Close the connection after a client is idle for N seconds.'
            config.version: '- (Required) Version of Redis (6.2).'
            created_at: '- Creation timestamp of the key.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the Redis cluster.'
            environment: '- (Required) Deployment environment of the Redis cluster. Can be either PRESTABLE or PRODUCTION.'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            health: |-
                - Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN.
                For more information see health field of JSON representation in the official documentation.
            host: '- (Required) A host of the Redis cluster. The structure is documented below.'
            host.assign_public_ip: '- (Optional) Sets whether the host should get a public IP address or not.'
            host.fqdn: (Computed) - The fully qualified domain name of the host.
            host.replica_priority: '- (Optional) Replica priority of a current replica (usable for non-sharded only).'
            host.shard_name: (Optional) - The name of the shard to which the host belongs.
            host.subnet_id: |-
                (Optional) - The ID of the subnet, to which the host belongs. The subnet must
                be a part of the network to which the cluster belongs.
            host.zone: |-
                - (Required) The availability zone where the Redis host will be created.
                For more information see the official documentation.
            labels: '- (Optional) A set of key/value label pairs to assign to the Redis cluster.'
            maintenance_window.day: '- (Optional) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            maintenance_window.hour: '- (Optional) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.'
            maintenance_window.type: '- (Required) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.'
            name: '- (Required) Name of the Redis cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the Redis cluster belongs.'
            persistence_mode: '- (Optional) Persistence mode.'
            resources: '- (Required) Resources allocated to hosts of the Redis cluster. The structure is documented below.'
            resources.disk_size: '- (Required) Volume of the storage available to a host, in gigabytes.'
            resources.disk_type_id: '- (Optional) Type of the storage of Redis hosts - environment default is used if missing.'
            resources.resources_preset_id: |-
                - (Required) The ID of the preset for computational resources available to a host (CPU, memory etc.).
                For more information, see the official documentation.
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            sharded: |-
                - (Optional) Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded.
                If cluster is sharded - disabling is not allowed.
            status: |-
                - Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
                For more information see status field of JSON representation in the official documentation.
            tls_enabled: '- (Optional) TLS support mode enabled/disabled.'
        importStatements: []
    yandex_mdb_sqlserver_cluster:
        subCategory: unknown
        description: Manages a Microsoft SQLServer cluster within Yandex.Cloud.
        name: yandex_mdb_sqlserver_cluster
        title: yandex_mdb_sqlserver_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "backup_window_start": [
                    {
                      "hours": 20,
                      "minutes": 30
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name_a"
                    },
                    {
                      "name": "db_name"
                    },
                    {
                      "name": "db_name_b"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "host_group_ids": [
                    "host_group_1",
                    "host_group_2"
                  ],
                  "labels": {
                    "test_key": "test_value"
                  },
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 20,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "security_group_ids": [
                    "${yandex_vpc_security_group.test-sg-x.id}"
                  ],
                  "sqlserver_config": {
                    "fill_factor_percent": 49,
                    "optimize_for_ad_hoc_workloads": true
                  },
                  "user": [
                    {
                      "name": "bob",
                      "password": "mysecurepassword"
                    },
                    {
                      "name": "alice",
                      "password": "mysecurepassword",
                      "permission": [
                        {
                          "database_name": "db_name",
                          "roles": [
                            "DDLADMIN"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "chuck",
                      "password": "mysecurepassword",
                      "permission": [
                        {
                          "database_name": "db_name_a",
                          "roles": [
                            "OWNER"
                          ]
                        },
                        {
                          "database_name": "db_name",
                          "roles": [
                            "OWNER",
                            "DDLADMIN"
                          ]
                        },
                        {
                          "database_name": "db_name_b",
                          "roles": [
                            "OWNER",
                            "DDLADMIN"
                          ]
                        }
                      ]
                    }
                  ],
                  "version": "2016sp2std"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_security_group.test-sg-x: |-
                    {
                      "egress": [
                        {
                          "description": "Allow outgoing traffic to members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "ingress": [
                        {
                          "description": "Allow incoming traffic from members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            backup_window_start: '- (Optional) Time to start the daily backup, in the UTC. The structure is documented below.'
            backup_window_start.hours: '- (Optional) The hour at which backup will be started.'
            backup_window_start.minutes: '- (Optional) The minute at which backup will be started.'
            created_at: '- Creation timestamp of the cluster.'
            database: '- (Required) A database of the SQLServer cluster. The structure is documented below.'
            database.name: '- (Required) The name of the database.'
            deletion_protection: '- (Optional) Inhibits deletion of the cluster.  Can be either true or false.'
            description: '- (Optional) Description of the SQLServer cluster.'
            environment: '- (Required) Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE)'
            folder_id: |-
                - (Optional) The ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            health: '- Aggregated health of the cluster.'
            host: '- (Required) A host of the SQLServer cluster. The structure is documented below.'
            host.assign_public_ip: '- (Optional) Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment'
            host.fqdn: '- (Computed) The fully qualified domain name of the host.'
            host.subnet_id: '- (Optional) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.'
            host.zone: '- (Required) The availability zone where the SQLServer host will be created.'
            host_group_ids: '- (Optional) A list of IDs of the host groups hosting VMs of the cluster.'
            labels: '- (Optional) A set of key/value label pairs to assign to the SQLServer cluster.'
            name: '- (Required) Name of the SQLServer cluster. Provided by the client when the cluster is created.'
            network_id: '- (Required) ID of the network, to which the SQLServer cluster uses.'
            permission.database_name: '- (Required) The name of the database that the permission grants access to.'
            permission.roles: |-
                - (Optional) List user's roles in the database.
                Allowed roles: OWNER, SECURITYADMIN, ACCESSADMIN, BACKUPOPERATOR, DDLADMIN, DATAWRITER, DATAREADER, DENYDATAWRITER, DENYDATAREADER.
            resources: '- (Required) Resources allocated to hosts of the SQLServer cluster. The structure is documented below.'
            resources.disk_size: '- (Required) Volume of the storage available to a SQLServer host, in gigabytes.'
            resources.disk_type_id: '- (Required) Type of the storage of SQLServer hosts.'
            resources.resources_preset_id: |-
                - (Required) The ID of the preset for computational resources available to a SQLServer host (CPU, memory etc.).
                For more information, see the official documentation.
            security_group_ids: '- (Optional) A set of ids of security groups assigned to hosts of the cluster.'
            sqlcollation: '- (Optional) SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!'
            sqlserver_config: '- (Optional) SQLServer cluster config. Detail info in "SQLServer config" section (documented below).'
            status: '- Status of the cluster.'
            user: '- (Required) A user of the SQLServer cluster. The structure is documented below.'
            user.name: '- (Required) The name of the user.'
            user.password: '- (Required) The password of the user.'
            user.permission: '- (Optional) Set of permissions granted to the user. The structure is documented below.'
            version: '- (Required) Version of the SQLServer cluster. (2016sp2std, 2016sp2ent)'
        importStatements: []
    yandex_message_queue:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud Message Queue.
        name: yandex_message_queue
        title: yandex_message_queue
        examples:
            - name: example_queue
              manifest: |-
                {
                  "message_retention_seconds": 1209600,
                  "name": "ymq_terraform_example",
                  "receive_wait_time_seconds": 20,
                  "redrive_policy": "${jsonencode({\n    deadLetterTargetArn = yandex_message_queue.example_deadletter_queue.arn\n    maxReceiveCount     = 3\n  })}",
                  "visibility_timeout_seconds": 600
                }
            - name: example_deadletter_queue
              manifest: |-
                {
                  "name": "ymq_terraform_deadletter_example"
                }
            - name: example_fifo_queue
              manifest: |-
                {
                  "content_based_deduplication": true,
                  "fifo_queue": true,
                  "name": "ymq_terraform_fifo_example.fifo"
                }
        argumentDocs:
            access_key: '- (Optional) The access key to use when applying changes. If omitted, ymq_access_key specified in provider config is used. For more information see documentation.'
            arn: '- ARN of the Yandex Message Queue. It is used for setting up a redrive policy. See documentation.'
            content_based_deduplication: '- (Optional) Enables content-based deduplication. Can be used only if queue is FIFO.'
            delay_seconds: '- (Optional) Number of seconds to delay the message from being available for processing. Valid values: from 0 to 900 seconds (15 minutes). Default: 0.'
            fifo_queue: '- (Optional, forces new resource) Is this queue FIFO. If this parameter is not used, a standard queue is created. You cannot change the parameter value for a created queue.'
            id: '- URL of the Yandex Message Queue.'
            max_message_size: '- (Optional) Maximum message size in bytes. Valid values: from 1024 bytes (1 KB) to 262144 bytes (256 KB). Default: 262144 (256 KB). For more information see documentation.'
            message_retention_seconds: '- (Optional) The length of time in seconds to retain a message. Valid values: from 60 seconds (1 minute) to 1209600 seconds (14 days). Default: 345600 (4 days). For more information see documentation.'
            name: '- (Optional, forces new resource) Queue name. The maximum length is 80 characters. You can use numbers, letters, underscores, and hyphens in the name. The name of a FIFO queue must end with the .fifo suffix. If not specified, random name will be generated. Conflicts with name_prefix. For more information see documentation.'
            name_prefix: '- (Optional, forces new resource) Generates random name with the specified prefix. Conflicts with name.'
            receive_wait_time_seconds: '- (Optional) Wait time for the ReceiveMessage method (for long polling), in seconds. Valid values: from 0 to 20 seconds. Default: 0. For more information about long polling see documentation.'
            redrive_policy: '- (Optional) Message redrive policy in Dead Letter Queue. The source queue and DLQ must be the same type: for FIFO queues, the DLQ must also be a FIFO queue. For more information about redrive policy see documentation. Also you can use example in this page.'
            region_id: |-
                - (Optional, forces new resource) ID of the region where the message queue is located at.
                The default is 'ru-central1'.
            secret_key: '- (Optional) The secret key to use when applying changes. If omitted, ymq_secret_key specified in provider config is used. For more information see documentation.'
            visibility_timeout_seconds: '- (Optional) Visibility timeout for messages in a queue, specified in seconds. Valid values: from 0 to 43200 seconds (12 hours). Default: 30.'
        importStatements: []
    yandex_monitoring_dashboard:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud Monitoring Dashboard.
        name: yandex_monitoring_dashboard
        title: yandex_monitoring_dashboard
        examples:
            - name: my-dashboard
              manifest: |-
                {
                  "description": "Description",
                  "labels": {
                    "a": "b"
                  },
                  "name": "local-id-resource",
                  "parametrization": [
                    {
                      "parameters": [
                        {
                          "custom": [
                            {
                              "default_values": [
                                "1",
                                "2"
                              ],
                              "multiselectable": true,
                              "values": [
                                "1",
                                "2",
                                "3"
                              ]
                            }
                          ],
                          "description": "param1 description",
                          "hidden": false,
                          "id": "param1",
                          "title": "title"
                        },
                        {
                          "hidden": true,
                          "id": "param2",
                          "label_values": [
                            {
                              "default_values": [
                                "1",
                                "2"
                              ],
                              "label_key": "key",
                              "multiselectable": true,
                              "selectors": "a=b"
                            }
                          ]
                        },
                        {
                          "hidden": true,
                          "id": "param3",
                          "text": [
                            {
                              "default_value": "abc"
                            }
                          ]
                        }
                      ],
                      "selectors": "a=b"
                    }
                  ],
                  "title": "My title",
                  "widgets": [
                    {
                      "position": [
                        {
                          "h": 1,
                          "w": 1,
                          "x": 4,
                          "y": 4
                        }
                      ],
                      "text": [
                        {
                          "text": "text here"
                        }
                      ]
                    },
                    {
                      "chart": [
                        {
                          "chart_id": "chart1id",
                          "description": "chart description",
                          "display_legend": true,
                          "freeze": "FREEZE_DURATION_HOUR",
                          "name_hiding_settings": [
                            {
                              "names": [
                                "a",
                                "b"
                              ],
                              "positive": true
                            }
                          ],
                          "queries": [
                            {
                              "downsampling": [
                                {
                                  "disabled": false,
                                  "gap_filling": "GAP_FILLING_NULL",
                                  "grid_aggregation": "GRID_AGGREGATION_COUNT",
                                  "max_points": 100
                                }
                              ],
                              "target": [
                                {
                                  "hidden": true,
                                  "query": "{service=monitoring}",
                                  "text_mode": true
                                }
                              ]
                            }
                          ],
                          "series_overrides": [
                            {
                              "name": "name",
                              "settings": [
                                {
                                  "color": "colorValue",
                                  "grow_down": true,
                                  "name": "series_overrides name",
                                  "stack_name": "stack name",
                                  "type": "SERIES_VISUALIZATION_TYPE_LINE",
                                  "yaxis_position": "YAXIS_POSITION_LEFT"
                                }
                              ]
                            }
                          ],
                          "title": "title for chart",
                          "visualization_settings": [
                            {
                              "aggregation": "SERIES_AGGREGATION_AVG",
                              "color_scheme_settings": [
                                {
                                  "gradient": [
                                    {
                                      "green_value": "11",
                                      "red_value": "22",
                                      "violet_value": "33",
                                      "yellow_value": "44"
                                    }
                                  ]
                                }
                              ],
                              "heatmap_settings": [
                                {
                                  "green_value": "1",
                                  "red_value": "2",
                                  "violet_value": "3",
                                  "yellow_value": "4"
                                }
                              ],
                              "interpolate": "INTERPOLATE_LEFT",
                              "normalize": true,
                              "show_labels": true,
                              "title": "visualization_settings title",
                              "type": "VISUALIZATION_TYPE_POINTS",
                              "yaxis_settings": [
                                {
                                  "left": [
                                    {
                                      "max": "111",
                                      "min": "11",
                                      "precision": 3,
                                      "title": "yaxis_settings left title",
                                      "type": "YAXIS_TYPE_LOGARITHMIC",
                                      "unit_format": "UNIT_CELSIUS"
                                    }
                                  ],
                                  "right": [
                                    {
                                      "max": "22",
                                      "min": "2",
                                      "precision": 2,
                                      "title": "yaxis_settings right title",
                                      "type": "YAXIS_TYPE_LOGARITHMIC",
                                      "unit_format": "UNIT_NONE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "position": [
                        {
                          "h": 100,
                          "w": 100,
                          "x": 6,
                          "y": 6
                        }
                      ]
                    },
                    {
                      "position": [
                        {
                          "h": 1,
                          "w": 1,
                          "x": 1,
                          "y": 1
                        }
                      ],
                      "title": [
                        {
                          "size": "TITLE_SIZE_XS",
                          "text": "title here"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            chart.chart_id: '- Chart ID.'
            chart.description: '- Chart description in dashboard (not enabled in UI).'
            chart.display_legend: '- Enable legend under chart.'
            chart.freeze: '- Fixed time interval for chart. Values:'
            chart.name_hiding_settings: '- Names settings.'
            chart.name_hiding_settings.names: '- Series name.'
            chart.name_hiding_settings.positive: '- True if we want to show concrete series names only, false if we want to hide concrete series names.'
            chart.queries: '- (Required) Queries settings.'
            chart.series_overrides: Time series settings.
            chart.title: '- Chart widget title.'
            chart.visualization_settings: '- Visualization settings.'
            create: '- Default is 2 minute.'
            delete: '- Default is 2 minute.'
            description: '- Dashboard description.'
            folder_id: '- Folder that the resource belongs to. If value is omitted, the default provider folder is used.'
            heatmap_settings.green_value: '- Heatmap green value.'
            heatmap_settings.red_value: '- Heatmap red value.'
            heatmap_settings.violet_value: '- Heatmap violet value.'
            heatmap_settings.yellow_value: '- Heatmap yellow value.'
            label_values.default_values: '- Default value.'
            label_values.folder_id: '- Labels folder ID.'
            label_values.label_key: '- (Required) Label key to list label values.'
            label_values.multiselectable: '- Specifies the multiselectable values of parameter.'
            label_values.selectors: '- (Required) Selectors to select metric label values.'
            labels: '- A set of key/value label pairs to assign to the Dashboard.'
            name: '- (Required) Name of the Dashboard.'
            parametrization: '- Dashboard parametrization'
            parametrization.parameters: '- parameters list.'
            parametrization.parameters.custom: '- Custom values parameter. Oneof: label_values, custom, text.'
            parametrization.parameters.custom.default_values: '- Default value.'
            parametrization.parameters.custom.multiselectable: '- Specifies the multiselectable values of parameter.'
            parametrization.parameters.custom.values: '- Parameter values.'
            parametrization.parameters.description: '- Parameter description.'
            parametrization.parameters.hidden: '- UI-visibility.'
            parametrization.parameters.id: '- (Required) Parameter identifier'
            parametrization.parameters.label_values: '- Label values parameter. Oneof: label_values, custom, text.'
            parametrization.parameters.text: '- Text parameter. Oneof: label_values, custom, text.'
            parametrization.parameters.title: '- UI-visible title of the parameter.'
            parametrization.selectors: '- dashboard predefined parameters selector.'
            queries.downsampling: '- Downsamplang settings.'
            queries.downsampling.disabled: '- Disable downsampling.'
            queries.downsampling.gap_filling: '- Parameters for filling gaps in data.'
            queries.downsampling.grid_aggregation: '- Function that is used for downsampling.'
            queries.downsampling.grid_interval: '- Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point'
            queries.downsampling.max_points: '- Maximum number of points to be returned.'
            queries.target: '- Query targets.'
            right.max: '- Max value in extended number format or empty.'
            right.min: '- Min value in extended number format or empty.'
            right.precision: '- Tick value precision (null as default, 0-7 in other cases).'
            right.title: -Title or empty.
            right.type: '- Type.'
            right.unit_format: '- Unit format.'
            series_overrides.name: '- Series name. Oneof: name or target_index.'
            series_overrides.settings: '- Override settings.'
            series_overrides.settings.color: '- Series color or empty.'
            series_overrides.settings.grow_down: '- Stack grow down.'
            series_overrides.settings.name: '- Series name or empty.'
            series_overrides.settings.stack_name: '- Stack name or empty.'
            series_overrides.settings.type: '- Type.'
            series_overrides.settings.yaxis_position: '- Yaxis position.'
            series_overrides.target_index: '- Series index. Oneof: name or target_index.'
            target.hidden: '- Checks that target is visible or invisible.'
            target.query: '- Query.'
            target.text_mode: '- Text mode enabled.'
            text.default_value: '- Default value.'
            text.text: '- Widget text.'
            title: '- Dashboard title.'
            title.size: '- Title size. Values:'
            title.text: '- Title text.'
            update: '- Default is 2 minute.'
            visualization_settings.aggregation: '- Aggregation. Values:'
            visualization_settings.color_scheme_settings: '- Color settings.'
            visualization_settings.color_scheme_settings.automatic: '- Automatic color scheme. Oneof: automatic, standard or gradient.'
            visualization_settings.color_scheme_settings.gradient: '- Gradient color scheme. Oneof: automatic, standard or gradient.'
            visualization_settings.color_scheme_settings.gradient.green_value: '- Gradient green value.'
            visualization_settings.color_scheme_settings.gradient.red_value: '- Gradient red value.'
            visualization_settings.color_scheme_settings.gradient.violet_value: '- Gradient violet value.'
            visualization_settings.color_scheme_settings.gradient.yellow_value: '- Gradient yellow value.'
            visualization_settings.color_scheme_settings.standard: '- Standard color scheme. Oneof: automatic, standard or gradient.'
            visualization_settings.heatmap_settings: '- Heatmap settings.'
            visualization_settings.interpolate: '- Interpolate values. Values:'
            visualization_settings.normalize: '- Normalize values.'
            visualization_settings.show_labels: '- Show chart labels.'
            visualization_settings.title: '- Inside chart title.'
            visualization_settings.type: '- Visualization type. Values:'
            visualization_settings.yaxis_settings: '- Y axis settings.'
            widgets: '- Widgets'
            widgets.chart: '- Chart widget settings. Oneof: text, title or chart.'
            widgets.position: '- Widget position.'
            widgets.position.h: '- Height.'
            widgets.position.w: '- Width.'
            widgets.position.x: '- X-axis top-left corner coordinate.'
            widgets.position.y: '- Y-axis top-left corner coordinate.'
            widgets.text: '- Text widget settings. Oneof: text, title or chart.'
            widgets.title: '- Title widget settings. Oneof: text, title or chart.'
            yaxis_settings.left: '- Left yaxis config.'
            yaxis_settings.left.max: '- Max value in extended number format or empty.'
            yaxis_settings.left.min: '- Min value in extended number format or empty.'
            yaxis_settings.left.precision: '- Tick value precision (null as default, 0-7 in other cases).'
            yaxis_settings.left.title: -Title or empty.
            yaxis_settings.left.type: '- Type. Values:'
            yaxis_settings.left.unit_format: '- Unit format. Values:'
            yaxis_settings.right: Right yaxis config.
        importStatements: []
    yandex_organizationmanager_group:
        subCategory: unknown
        description: Allows management of a single Group within an existing Yandex.Cloud Organization.
        name: yandex_organizationmanager_group
        title: yandex_organizationmanager_group
        examples:
            - name: group
              manifest: |-
                {
                  "description": "My new Group",
                  "name": "my-group",
                  "organization_id": "sdf4*********3fr"
                }
        argumentDocs:
            created_at: '- (Computed) The SAML Federation creation timestamp.'
            description: '- (Optional) The description of the Group.'
            name: '- (Required) The name of the Group.'
            organization_id: '- (Required, Forces new resource) The organization to attach this Group to.'
        importStatements: []
    yandex_organizationmanager_group_iam_member:
        subCategory: unknown
        description: Allows management of a single member for a single IAM binding on a Yandex.Cloud Organization Manager Group.
        name: yandex_organizationmanager_group_iam_member
        title: yandex_organizationmanager_group_iam_member
        examples:
            - name: editor
              manifest: |-
                {
                  "group_id": "some_group_id",
                  "member": "userAccount:user_id",
                  "role": "editor"
                }
        argumentDocs:
            group_id: '- (Required) ID of the organization to attach a policy to.'
            member: |-
                - (Required) The identity that will be granted the privilege that is specified in the role field.
                This field can have one of the following values:
            role: '- (Required) The role that should be assigned.'
        importStatements: []
    yandex_organizationmanager_group_membership:
        subCategory: unknown
        description: Allows management of members of Yandex.Cloud Organization Manager Group.
        name: yandex_organizationmanager_group_membership
        title: yandex_organizationmanager_group_membership
        examples:
            - name: group
              manifest: |-
                {
                  "group_id": "sdf4*********3fr",
                  "members": [
                    "xdf********123"
                  ]
                }
        argumentDocs:
            group_id: '- (Required, Forces new resource) The Group to add/remove members to/from.'
            members: '- A set of members of the Group. Each member is represented by an id.'
        importStatements: []
    yandex_organizationmanager_organization_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Yandex Organization Manager organization.
        name: yandex_organizationmanager_organization_iam_binding
        title: yandex_organizationmanager_organization_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "organization_id": "some_organization_id",
                  "role": "editor"
                }
        argumentDocs:
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            organization_id: '- (Required) ID of the organization to attach the policy to.'
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_organizationmanager_organization_iam_binding can be used per role.
        importStatements: []
    yandex_organizationmanager_organization_iam_member:
        subCategory: unknown
        description: Allows management of a single member for a single IAM binding on a Yandex.Cloud Organization Manager organization.
        name: yandex_organizationmanager_organization_iam_member
        title: yandex_organizationmanager_organization_iam_member
        examples:
            - name: editor
              manifest: |-
                {
                  "member": "userAccount:user_id",
                  "organization_id": "some_organization_id",
                  "role": "editor"
                }
        argumentDocs:
            member: |-
                - (Required) The identity that will be granted the privilege that is specified in the role field.
                This field can have one of the following values:
            organization_id: '- (Required) ID of the organization to attach a policy to.'
            role: '- (Required) The role that should be assigned.'
        importStatements: []
    yandex_organizationmanager_os_login_settings:
        subCategory: unknown
        description: Allows management of OsLogin Settings within an existing Yandex.Cloud Organization.
        name: yandex_organizationmanager_os_login_settings
        title: yandex_organizationmanager_os_login_settings
        examples:
            - name: my_os_login_settings
              manifest: |-
                {
                  "organization_id": "sdf4*********3fr",
                  "ssh_certificate_settings": [
                    {
                      "enabled": true
                    }
                  ],
                  "user_ssh_key_settings": [
                    {
                      "allow_manage_own_keys": true,
                      "enabled": true
                    }
                  ]
                }
        argumentDocs:
            organization_id: '- (Required) The organization to manage it''s OsLogin Settings.'
            ssh_certificate_settings: '- (Optional) The structure is documented below.'
            ssh_certificate_settings.enabled: '- Enables or disables usage of ssh certificates signed by trusted CA.'
            user_ssh_key_settings: '- (Optional) The structure is documented below.'
            user_ssh_key_settings.allow_manage_own_keys: '- If set to true subject is allowed to manage own ssh keys without having to be assigned specific permissions.'
            user_ssh_key_settings.enabled: '- Enables or disables usage of ssh keys assigned to a specific subject.'
        importStatements: []
    yandex_organizationmanager_saml_federation:
        subCategory: unknown
        description: Allows management of a single SAML Federation within an existing Yandex.Cloud Organization.
        name: yandex_organizationmanager_saml_federation
        title: yandex_organizationmanager_saml_federation
        examples:
            - name: federation
              manifest: |-
                {
                  "description": "My new SAML federation",
                  "issuer": "my-issuer",
                  "name": "my-federation",
                  "organization_id": "sdf4*********3fr",
                  "sso_binding": "POST",
                  "sso_url": "https://my-sso.url"
                }
        argumentDocs:
            auto_create_account_on_login: '- (Optional, Computed) Add new users automatically on successful authentication. The user will get the resource-manager.clouds.member role automatically, but you need to grant other roles to them. If the value is false, users who aren''t added to the cloud can''t log in, even if they have authenticated on your server.'
            case_insensitive_name_ids: '- (Optional, Computed) Use case-insensitive name ids.'
            cookie_max_age: '- (Optional, Computed) The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user immediately and redirects them to the home page. The default value is 8h.'
            created_at: '- (Computed) The SAML Federation creation timestamp.'
            description: '- (Optional) The description of the SAML Federation.'
            issuer: '- (Required) The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user authenticates.'
            labels: '- (Optional) A set of key/value label pairs assigned to the SAML Federation.'
            name: '- (Required) The name of the SAML Federation.'
            organization_id: '- (Required, Forces new resource) The organization to attach this SAML Federation to.'
            security_settings: '- (Optional, Computed) Federation security settings, structure is documented below.'
            security_settings.encrypted_assertions: '- (Required) Enable encrypted assertions.'
            sso_binding: '- (Required) Single sign-on endpoint binding type. Most Identity Providers support the POST binding type. SAML Binding is a mapping of a SAML protocol message onto standard messaging formats and/or communications protocols.'
            sso_url: '- (Required) Single sign-on endpoint URL. Specify the link to the IdP login page here.'
        importStatements: []
    yandex_organizationmanager_saml_federation_user_account:
        subCategory: unknown
        description: Allows management of a single SAML Federation user account within an existing Yandex.Cloud Organization.
        name: yandex_organizationmanager_saml_federation_user_account
        title: yandex_organizationmanager_saml_federation_user_account
        examples:
            - name: account
              manifest: |-
                {
                  "federation_id": "some_federation_id",
                  "name_id": "example@example.org"
                }
        argumentDocs:
            federation_id: '- (Required) ID of a SAML Federation.'
            name_id: '- (Required) Name ID of the SAML federated user.'
        importStatements: []
    yandex_organizationmanager_user_ssh_key:
        subCategory: unknown
        description: Allows management of User Ssh Keys within an existing Yandex.Cloud Organization and Subject.
        name: yandex_organizationmanager_user_ssh_key
        title: yandex_organizationmanager_user_ssh_key
        examples:
            - name: my_user_ssh_key
              manifest: |-
                {
                  "data": "ssh_key_data",
                  "organization_id": "some_organization_id",
                  "subject_id": "some_subject_id"
                }
        argumentDocs:
            data: '- (Required) Data of the user ssh key.'
            expires_at: '- (Optional) User ssh key will be no longer valid after expiration timestamp.'
            name: '- (Optional) Name of the user ssh key.'
            organization_id: '- (Required) Organization that the user ssh key belongs to.'
            subject_id: '- (Required) Subject that the user ssh key belongs to.'
        importStatements: []
    yandex_resourcemanager_cloud:
        subCategory: unknown
        description: Allows management of the Cloud resource.
        name: yandex_resourcemanager_cloud
        title: yandex_resourcemanager_cloud
        examples:
            - name: cloud1
              manifest: |-
                {
                  "organization_id": "my_organization_id"
                }
        argumentDocs:
            description: '- (Optional) A description of the Cloud.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Cloud.'
            name: '- (Optional) The name of the Cloud.'
            organization_id: '- (Optional) Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.'
        importStatements: []
    yandex_resourcemanager_cloud_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Yandex Resource Manager cloud.
        name: yandex_resourcemanager_cloud_iam_binding
        title: yandex_resourcemanager_cloud_iam_binding
        examples:
            - name: admin
              manifest: |-
                {
                  "cloud_id": "${data.yandex_resourcemanager_cloud.project1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
        argumentDocs:
            cloud_id: '- (Required) ID of the cloud to attach the policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege in the role.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_resourcemanager_cloud_iam_binding can be used per role.
        importStatements: []
    yandex_resourcemanager_cloud_iam_member:
        subCategory: unknown
        description: Allows management of a single member for a single IAM binding on a Yandex Resource Manager cloud.
        name: yandex_resourcemanager_cloud_iam_member
        title: yandex_resourcemanager_cloud_iam_member
        examples:
            - name: admin
              manifest: |-
                {
                  "cloud_id": "${data.yandex_resourcemanager_cloud.department1.id}",
                  "member": "userAccount:user_id",
                  "role": "editor"
                }
        argumentDocs:
            cloud_id: '- (Required) ID of the cloud to attach a policy to.'
            member: |-
                - (Required) The identity that will be granted the privilege that is specified in the role field.
                This field can have one of the following values:
            role: '- (Required) The role that should be assigned.'
        importStatements: []
    yandex_resourcemanager_folder:
        subCategory: unknown
        description: Allows management of the Cloud Folder.
        name: yandex_resourcemanager_folder
        title: yandex_resourcemanager_folder
        examples:
            - name: folder1
              manifest: |-
                {
                  "cloud_id": "my_cloud_id"
                }
        argumentDocs:
            cloud_id: '- (Optional) Cloud that the resource belongs to. If value is omitted, the default provider Cloud ID is used.'
            description: '- (Optional) A description of the Folder.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Folder.'
            name: '- (Optional) The name of the Folder.'
        importStatements: []
    yandex_resourcemanager_folder_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a Yandex Resource Manager folder.
        name: yandex_resourcemanager_folder_iam_binding
        title: yandex_resourcemanager_folder_iam_binding
        examples:
            - name: admin
              manifest: |-
                {
                  "folder_id": "${data.yandex_resourcemanager_folder.project1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
        argumentDocs:
            folder_id: '- (Required) ID of the folder to attach a policy to.'
            members: |-
                - (Required) An array of identities that will be granted the privilege that is specified in the role field.
                Each entry can have one of the following values:
            role: |-
                - (Required) The role that should be assigned. Only one
                yandex_resourcemanager_folder_iam_binding can be used per role.
        importStatements: []
    yandex_resourcemanager_folder_iam_member:
        subCategory: unknown
        description: Allows management of a single member for a single IAM binding for a Yandex Resource Manager folder.
        name: yandex_resourcemanager_folder_iam_member
        title: yandex_resourcemanager_folder_iam_member
        examples:
            - name: admin
              manifest: |-
                {
                  "folder_id": "${data.yandex_resourcemanager.department1.name}",
                  "member": "userAccount:user_id",
                  "role": "editor"
                }
        argumentDocs:
            folder_id: '- (Required) ID of the folder to attach a policy to.'
            member: |-
                - (Required) The identity that will be granted the privilege that is specified in the role field.
                This field can have one of the following values:
            role: '- (Required) The role that should be assigned.'
        importStatements: []
    yandex_resourcemanager_folder_iam_policy:
        subCategory: unknown
        description: Allows management of the IAM policy for a Yandex Resource Manager folder.
        name: yandex_resourcemanager_folder_iam_policy
        title: yandex_resourcemanager_folder_iam_policy
        examples:
            - name: folder_admin_policy
              manifest: |-
                {
                  "folder_id": "${data.yandex_folder.project1.id}",
                  "policy_data": "${data.yandex_iam_policy.admin.policy_data}"
                }
        argumentDocs:
            folder_id: '- (Required) ID of the folder that the policy is attached to.'
            policy_data: |-
                - (Required) The yandex_iam_policy data source that represents
                the IAM policy that will be applied to the folder. This policy overrides any existing policy applied to the folder.
        importStatements: []
    yandex_serverless_container:
        subCategory: unknown
        description: Allows management of a Yandex Cloud Serverless Container.
        name: yandex_serverless_container
        title: yandex_serverless_container
        examples:
            - name: test-container
              manifest: |-
                {
                  "core_fraction": 100,
                  "cores": 1,
                  "description": "any description",
                  "execution_timeout": "15s",
                  "image": [
                    {
                      "url": "cr.yandex/yc/test-image:v1"
                    }
                  ],
                  "log_options": [
                    {
                      "log_group_id": "e2392vo6d1bne2aeq9fr",
                      "min_level": "ERROR"
                    }
                  ],
                  "memory": 256,
                  "name": "some_name",
                  "secrets": [
                    {
                      "environment_variable": "ENV_VARIABLE",
                      "id": "${yandex_lockbox_secret.secret.id}",
                      "key": "secret-key",
                      "version_id": "${yandex_lockbox_secret_version.secret_version.id}"
                    }
                  ],
                  "service_account_id": "are1service2account3id"
                }
            - name: test-container-with-digest
              manifest: |-
                {
                  "image": [
                    {
                      "digest": "sha256:e1d772fa8795adac847a2420c87d0d2e3d38fb02f168cab8c0b5fe2fb95c47f4",
                      "url": "cr.yandex/yc/test-image:v1"
                    }
                  ],
                  "memory": 128,
                  "name": "some_name"
                }
        argumentDocs:
            concurrency: '- Concurrency of Yandex Cloud Serverless Container'
            connectivity: '- Network access. If specified the revision will be attached to specified network'
            connectivity.0.network_id: '- Network the revision will have access to'
            core: '- Cores (1+) of the Yandex Cloud Serverless Container'
            core_fraction: '- Core fraction (0...100) of the Yandex Cloud Serverless Container'
            created_at: '- Creation timestamp of the Yandex Cloud Serverless Container'
            description: '- Description of the Yandex Cloud Serverless Container'
            execution_timeout: '- Execution timeout in seconds (duration format) for Yandex Cloud Serverless Container'
            folder_id: '- Folder ID for the Yandex Cloud Serverless Container'
            image: '- Revision deployment image for Yandex Cloud Serverless Container'
            image.0.args: '- List of arguments for Yandex Cloud Serverless Container'
            image.0.command: '- List of commands for Yandex Cloud Serverless Container'
            image.0.digest: |-
                - Digest of image that will be deployed as Yandex Cloud Serverless Container.
                If presented, should be equal to digest that will be resolved at server side by URL.
                Container will be updated on digest change even if image.0.url stays the same.
                If field not specified then its value will be computed.
            image.0.environment: '-  A set of key/value environment variable pairs for Yandex Cloud Serverless Container'
            image.0.url: (Required) - URL of image that will be deployed as Yandex Cloud Serverless Container
            image.0.work_dir: '- Working directory for Yandex Cloud Serverless Container'
            labels: '- A set of key/value label pairs to assign to the Yandex Cloud Serverless Container'
            log_options: '- Options for logging from Yandex Cloud Serverless Container'
            memory: (Required) - Memory in megabytes (aligned to 128MB) for Yandex Cloud Serverless Container
            name: (Required) - Yandex Cloud Serverless Container name
            revision_id: '- Last revision ID of the Yandex Cloud Serverless Container'
            secrets: '- Secrets for Yandex Cloud Serverless Container'
            secrets.bucket: '- (Required) Name of the mounting bucket.'
            secrets.disabled: '- Is logging from container disabled'
            secrets.environment_variable: '- (Required) Container''s environment variable in which secret''s value will be stored.'
            secrets.folder_id: '- Log entries are written to default log group for specified folder'
            secrets.id: '- (Required) Secret''s id.'
            secrets.key: '- (Required) Secret''s entries key which value will be stored in environment variable.'
            secrets.log_group_id: '- Log entries are written to specified log group'
            secrets.log_options: 'block supports:'
            secrets.min_level: '- Minimum log entry level'
            secrets.mount_point_path: '- (Required) Path inside the container to access the directory in which the bucket is mounted.'
            secrets.prefix: '- Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.'
            secrets.read_only: '- Mount the bucket in read-only mode.'
            secrets.storage_mounts: 'block supports:'
            secrets.version_id: '- (Required) Secret''s version id.'
            service_account_id: '- Service account ID for Yandex Cloud Serverless Container'
            storage_mounts: '- Storage mounts for Yandex Cloud Serverless Container'
            url: '- Invoke URL for the Yandex Cloud Serverless Container'
        importStatements: []
    yandex_serverless_container_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_serverless_container_iam_binding
        title: yandex_serverless_container_iam_binding
        examples:
            - name: container-iam
              manifest: |-
                {
                  "container_id": "your-container-id",
                  "members": [
                    "system:allUsers"
                  ],
                  "role": "serverless.containers.invoker"
                }
        argumentDocs:
            container_id: '- (Required) The Yandex Serverless Container ID to apply a binding to.'
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied.'
        importStatements: []
    yandex_storage_bucket:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud Storage Bucket.
        name: yandex_storage_bucket
        title: yandex_storage_bucket
        examples:
            - name: test
              manifest: |-
                {
                  "access_key": "${yandex_iam_service_account_static_access_key.sa-static-key.access_key}",
                  "bucket": "tf-test-bucket",
                  "secret_key": "${yandex_iam_service_account_static_access_key.sa-static-key.secret_key}"
                }
              references:
                access_key: yandex_iam_service_account_static_access_key.sa-static-key.access_key
                secret_key: yandex_iam_service_account_static_access_key.sa-static-key.secret_key
              dependencies:
                yandex_iam_service_account.sa: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "name": "tf-test-sa"
                    }
                yandex_iam_service_account_static_access_key.sa-static-key: |-
                    {
                      "description": "static access key for object storage",
                      "service_account_id": "${yandex_iam_service_account.sa.id}"
                    }
                yandex_resourcemanager_folder_iam_member.sa-editor: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "member": "serviceAccount:${yandex_iam_service_account.sa.id}",
                      "role": "storage.editor"
                    }
            - name: test
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "storage-website-test.hashicorp.com",
                  "website": [
                    {
                      "error_document": "error.html",
                      "index_document": "index.html",
                      "routing_rules": "[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"documents/\"\n    }\n}]\n"
                    }
                  ]
                }
            - name: test
              manifest: |-
                {
                  "bucket": "mybucket",
                  "grant": [
                    {
                      "id": "myuser",
                      "permissions": [
                        "FULL_CONTROL"
                      ],
                      "type": "CanonicalUser"
                    },
                    {
                      "permissions": [
                        "READ",
                        "WRITE"
                      ],
                      "type": "Group",
                      "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "s3-website-test.hashicorp.com",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "PUT",
                        "POST"
                      ],
                      "allowed_origins": [
                        "https://s3-website-test.hashicorp.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "object_lock_configuration": [
                    {
                      "object_lock_enabled": "Enabled",
                      "rule": [
                        {
                          "default_retention": [
                            {
                              "mode": "GOVERNANCE",
                              "years": 1
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
            - name: log_bucket
              manifest: |-
                {
                  "bucket": "my-tf-log-bucket"
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "logging": [
                    {
                      "target_bucket": "${yandex_storage_bucket.log_bucket.id}",
                      "target_prefix": "log/"
                    }
                  ]
                }
              references:
                logging.target_bucket: yandex_storage_bucket.log_bucket.id
            - name: bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "id": "log",
                      "prefix": "log/",
                      "transition": [
                        {
                          "days": 30,
                          "storage_class": "COLD"
                        }
                      ]
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "date": "2020-12-21"
                        }
                      ],
                      "id": "tmp",
                      "prefix": "tmp/"
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "date": "2020-12-21"
                        }
                      ],
                      "filter": [
                        {
                          "tag": [
                            {
                              "key": "key1",
                              "value": "value1"
                            }
                          ]
                        }
                      ],
                      "id": "test_tag"
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "date": "2020-12-21"
                        }
                      ],
                      "filter": [
                        {
                          "and": [
                            {
                              "prefix": "path2/",
                              "tags": {
                                "key1": "value1",
                                "key2": "value2"
                              }
                            }
                          ]
                        }
                      ],
                      "id": "test_filter"
                    }
                  ]
                }
            - name: versioning_bucket
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-versioning-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "noncurrent_version_expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "noncurrent_version_transition": [
                        {
                          "days": 30,
                          "storage_class": "COLD"
                        }
                      ],
                      "prefix": "config/"
                    }
                  ],
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
            - name: test
              manifest: |-
                {
                  "bucket": "mybucket",
                  "server_side_encryption_configuration": [
                    {
                      "rule": [
                        {
                          "apply_server_side_encryption_by_default": [
                            {
                              "kms_master_key_id": "${yandex_kms_symmetric_key.key-a.id}",
                              "sse_algorithm": "aws:kms"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              references:
                server_side_encryption_configuration.rule.apply_server_side_encryption_by_default.kms_master_key_id: yandex_kms_symmetric_key.key-a.id
              dependencies:
                yandex_kms_symmetric_key.key-a: |-
                    {
                      "default_algorithm": "AES_128",
                      "description": "description for key",
                      "name": "example-symetric-key",
                      "rotation_period": "8760h"
                    }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::my-policy-bucket/*\",\n        \"arn:aws:s3:::my-policy-bucket\"\n      ]\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": \"s3:PutObject\",\n      \"Resource\": [\n        \"arn:aws:s3:::my-policy-bucket/*\",\n        \"arn:aws:s3:::my-policy-bucket\"\n      ]\n    }\n  ]\n}\n"
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "tags": {
                    "other_key": "other_value",
                    "test_key": "test_value"
                  }
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "max_size": 1048576
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "folder_id": "\u003cfolder_id\u003e"
                }
            - name: b
              manifest: |-
                {
                  "anonymous_access_flags": [
                    {
                      "config_read": true,
                      "list": false,
                      "read": true
                    }
                  ],
                  "bucket": "my-policy-bucket"
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "https": [
                    {
                      "certificate_id": "\u003ccertificate_id_from_certificate_manager\u003e"
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "default_storage_class": "COLD"
                }
            - name: log_bucket
              manifest: |-
                {
                  "bucket": "my-tf-log-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 365
                        }
                      ],
                      "id": "cleanupoldlogs"
                    }
                  ]
                }
              dependencies:
                yandex_kms_symmetric_key.key-a: |-
                    {
                      "default_algorithm": "AES_128",
                      "description": "description for key",
                      "name": "example-symetric-key",
                      "rotation_period": "8760h"
                    }
            - name: all_settings
              manifest: |-
                {
                  "anonymous_access_flags": [
                    {
                      "list": true,
                      "read": true
                    }
                  ],
                  "bucket": "example-tf-settings-bucket",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "GET",
                        "PUT"
                      ],
                      "allowed_origins": [
                        "https://storage-cloud.example.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    }
                  ],
                  "default_storage_class": "COLD",
                  "folder_id": "\u003cfolder_id\u003e",
                  "https": {
                    "certificate_id": "\u003ccertificate_id\u003e"
                  },
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 30
                        }
                      ],
                      "id": "test",
                      "prefix": "prefix/"
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "id": "log",
                      "prefix": "log/",
                      "transition": [
                        {
                          "days": 30,
                          "storage_class": "COLD"
                        }
                      ]
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 180
                        }
                      ],
                      "id": "everything180",
                      "prefix": ""
                    },
                    {
                      "enabled": true,
                      "id": "cleanupoldversions",
                      "noncurrent_version_expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "noncurrent_version_transition": [
                        {
                          "days": 30,
                          "storage_class": "COLD"
                        }
                      ],
                      "prefix": "config/"
                    },
                    {
                      "abort_incomplete_multipart_upload_days": 7,
                      "enabled": true,
                      "id": "abortmultiparts",
                      "prefix": ""
                    }
                  ],
                  "logging": [
                    {
                      "target_bucket": "${yandex_storage_bucket.log_bucket.id}",
                      "target_prefix": "tf-logs/"
                    }
                  ],
                  "max_size": 1024,
                  "server_side_encryption_configuration": [
                    {
                      "rule": [
                        {
                          "apply_server_side_encryption_by_default": [
                            {
                              "kms_master_key_id": "${yandex_kms_symmetric_key.key-a.id}",
                              "sse_algorithm": "aws:kms"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "some_key": "some_value"
                  },
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ],
                  "website": [
                    {
                      "error_document": "error.html",
                      "index_document": "index.html"
                    }
                  ]
                }
              references:
                logging.target_bucket: yandex_storage_bucket.log_bucket.id
                server_side_encryption_configuration.rule.apply_server_side_encryption_by_default.kms_master_key_id: yandex_kms_symmetric_key.key-a.id
              dependencies:
                yandex_kms_symmetric_key.key-a: |-
                    {
                      "default_algorithm": "AES_128",
                      "description": "description for key",
                      "name": "example-symetric-key",
                      "rotation_period": "8760h"
                    }
        argumentDocs:
            abort_incomplete_multipart_upload_days: '- (Optional) Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.'
            access_key: |-
                - (Optional) The access key to use when applying changes. If omitted, storage_access_key specified in
                provider config (explicitly or within shared_credentials_file) is used.
            acl: |-
                - (Optional) The predefined ACL to apply.
                Defaults to private. Conflicts with grant.
            allowed_headers: '- (Optional) Specifies which headers are allowed.'
            allowed_methods: '- (Required) Specifies which methods are allowed. Can be GET, PUT, POST, DELETE or HEAD.'
            allowed_origins: '- (Required) Specifies which origins are allowed.'
            anonymous_access_flags: |-
                - (Optional) Provides various access to objects.
                See bucket availability
                for more infomation.
            apply_server_side_encryption_by_default: '- (Required) A single object for setting server-side encryption by default. (documented below)'
            bucket: '- (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name.'
            bucket_domain_name: '- The bucket domain name.'
            bucket_prefix: |-
                - (Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix.
                Conflicts with bucket.
            certificate_id: — Id of the certificate in Certificate Manager, that will be used for bucket.
            cors_rule: '- (Optional) A rule of Cross-Origin Resource Sharing (documented below).'
            date: '- (Optional) Specifies the date after which you want the corresponding action to take effect.'
            days: '- (Optional) Specifies a retention period in days after uploading an object version. It must be a positive integer. You can''t set it simultaneously with years.'
            default_storage_class: |-
                - (Optional) Storage class which is used for storing objects by default.
                Available values are: "STANDARD", "COLD", "ICE". Default is "STANDARD".
                See storage class for more inforamtion.
            enabled: '- (Optional) Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.'
            error_document: '- (Optional) An absolute path to the document to return in case of a 4XX error.'
            expiration: '- (Optional) Specifies a period in the object''s expire (documented below).'
            expired_object_delete_marker: '- (Optional) On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.'
            expose_headers: '- (Optional) Specifies expose header in the response.'
            filter: '- (Optional) Filter block identifies one or more objects to which the rule applies. A Filter must have exactly one of Prefix, Tag, or And specified. The filter supports the following options:'
            filter.and: 'operator applied to one or more filter parameters. It should be used when both prefix and tags are used. It supports the following parameters:'
            folder_id: '- (Optional) Allow to create bucket in different folder.'
            force_destroy: '- (Optional, Default: false) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.'
            grant: '- (Optional) An ACL policy grant. Conflicts with acl.'
            https: '- (Optional) Manages https certificates for bucket. See https for more infomation.'
            id: '- (Optional) Canonical user id to grant for. Used only when type is CanonicalUser.'
            index_document: '- (Required, unless using redirect_all_requests_to) Storage returns this index document when requests are made to the root domain or any of the subfolders.'
            kms_master_key_id: '- (Optional) The KMS master key ID used for the SSE-KMS encryption.'
            lifecycle_rule: '- (Optional) A configuration of object lifecycle management (documented below).'
            list: '- (Optional) Allows to list object in bucket anonymously.'
            logging: '- (Optional) A settings of bucket logging (documented below).'
            max_age_seconds: '- (Optional) Specifies time in seconds that browser can cache the response for a preflight request.'
            max_size: '- (Optional) The size of bucket, in bytes. See size limiting for more information.'
            mode: '- (Required) Specifies a type of object lock. One of ["GOVERNANCE", "COMPLIANCE"].'
            noncurrent_version_expiration: '- (Optional) Specifies when noncurrent object versions expire (documented below).'
            noncurrent_version_transition: '- (Optional) Specifies when noncurrent object versions transitions (documented below).'
            object_lock_configuration: '- (Optional) A configuration of object lock management (documented below).'
            object_lock_enabled: '- (Optional) Enable object locking in a bucket. Require versioning to be enabled.'
            permissions: '- (Required) List of permissions to apply for grantee. Valid values are READ, WRITE, FULL_CONTROL.'
            prefix: '- (Optional) Object key prefix identifying one or more objects to which the rule applies.'
            read: '- (Optional) Allows to read objects in bucket anonymously.'
            redirect_all_requests_to: '- (Optional) A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting requests. The default is the protocol that is used in the original request.'
            routing_rules: '- (Optional) A json array containing routing rules describing redirect behavior and when redirects are applied.'
            rule: '- (Optional) Specifies a default locking configuration for added objects. Require object_lock_enabled to be enabled.'
            secret_key: |-
                - (Optional) The secret key to use when applying changes. If omitted, storage_secret_key specified in
                provider config (explicitly or within shared_credentials_file) is used.
            server_side_encryption_configuration: '- (Optional) A configuration of server-side encryption for the bucket (documented below)'
            sse_algorithm: '- (Required) The server-side encryption algorithm to use. Single valid value is aws:kms'
            storage_class: '- (Required) Specifies the storage class to which you want the object to transition. Supported values: [STANDARD_IA, COLD, ICE].'
            target_bucket: '- (Required) The name of the bucket that will receive the log objects.'
            target_prefix: '- (Optional) To specify a key prefix for log objects.'
            transition: '- (Optional) Specifies a period in the object''s transitions (documented below).'
            type: '- (Required) Type of grantee to apply for. Valid values are CanonicalUser and Group.'
            uri: '- (Optional) Uri address to grant for. Used only when type is Group.'
            versioning: '- (Optional) A state of versioning (documented below)'
            website: '- (Optional) A website object (documented below).'
            website_domain: '- The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.'
            website_endpoint: '- The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.'
            years: '- (Optional) Specifies a retention period in years after uploading an object version. It must be a positive integer. You can''t set it simultaneously with days.'
        importStatements: []
    yandex_storage_object:
        subCategory: unknown
        description: Allows management of a Yandex.Cloud Storage Object.
        name: yandex_storage_object
        title: yandex_storage_object
        examples:
            - name: cute-cat-picture
              manifest: |-
                {
                  "bucket": "cat-pictures",
                  "key": "cute-cat",
                  "source": "/images/cats/cute-cat.jpg",
                  "tags": {
                    "test": "value"
                  }
                }
        argumentDocs:
            access_key: '- (Optional) The access key to use when applying changes. If omitted, storage_access_key specified in config is used.'
            acl: '- (Optional) The predefined ACL to apply. Defaults to private.'
            bucket: '- (Required) The name of the containing bucket.'
            content: '- (Optional, conflicts with source and content_base64) Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text.'
            content_base64: '- (Optional, conflicts with source and content) Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file.'
            content_type: '- (Optional) A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.'
            id: '- The key of the resource.'
            key: '- (Required) The name of the object once it is in the bucket.'
            object_lock_legal_hold_status: '- (Optional) Specifies a legal hold status of an object. Requires object_lock_configuration to be enabled on a bucket.'
            object_lock_mode: '- (Optional) Specifies a type of object lock. One of ["GOVERNANCE", "COMPLIANCE"]. It must be set simultaneously with object_lock_retain_until_date. Requires object_lock_configuration to be enabled on a bucket.'
            object_lock_retain_until_date: '- (Optional) Specifies date and time in RTC3339 format until which an object is to be locked. It must be set simultaneously with object_lock_mode. Requires object_lock_configuration to be enabled on a bucket.'
            secret_key: '- (Optional) The secret key to use when applying changes. If omitted, storage_secret_key specified in config is used.'
            source: '- (Optional, conflicts with content and content_base64) The path to a file that will be read and uploaded as raw bytes for the object content.'
            source_hash: '- (Optional) Used to trigger object update when the source content changes. So the only meaningful value is filemd5("path/to/source") (The value is only stored in state and not saved by Yandex Storage).'
            tags: '- (Optional) Specifies an object tags.'
        importStatements: []
    yandex_vpc_address:
        subCategory: unknown
        description: Manages a VPC address within Yandex.Cloud.
        name: yandex_vpc_address
        title: yandex_vpc_address
        examples:
            - name: addr
              manifest: |-
                {
                  "external_ipv4_address": [
                    {
                      "zone_id": "ru-central1-a"
                    }
                  ],
                  "name": "exampleAddress"
                }
            - name: vpnaddr
              manifest: |-
                {
                  "external_ipv4_address": [
                    {
                      "ddos_protection_provider": "qrator",
                      "zone_id": "ru-central1-a"
                    }
                  ],
                  "name": "vpnaddr"
                }
        argumentDocs:
            address: '- Allocated IP address.'
            created_at: '- Creation timestamp of the key.'
            deletion_protection: '- (Optional) Flag that protects the address from accidental deletion.'
            description: |-
                - (Optional) An optional description of this resource. Provide this property when
                you create the resource.
            external_ipv4_address: '- (Optional) spec of IP v4 address'
            external_ipv4_address.ddos_protection_provider: '- (Optional) Enable DDOS protection. Possible values are: "qrator"'
            external_ipv4_address.dns_record: '- (Optional) DNS record specification of address'
            external_ipv4_address.dns_record.dns_zone_id: '- (Required) DNS zone id to create record at.'
            external_ipv4_address.dns_record.fqdn: '- (Required) FQDN for record to address'
            external_ipv4_address.dns_record.ptr: '- (Optional) If PTR record is needed'
            external_ipv4_address.dns_record.ttl: '- (Optional) TTL of DNS record'
            external_ipv4_address.outgoing_smtp_capability: '- (Optional) Wanted outgoing smtp capability.'
            external_ipv4_address.zone_id: '- Zone for allocating address.'
            folder_id: |-
                - (Optional) ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) Labels to apply to this resource. A list of key/value pairs.'
            name: '- (Optional) Name of the address. Provided by the client when the address is created.'
            reserved: '- false means that address is ephemeral.'
            used: '- true if address is used.'
        importStatements: []
    yandex_vpc_default_security_group:
        subCategory: unknown
        description: Yandex VPC Default Security Group.
        name: yandex_vpc_default_security_group
        title: yandex_vpc_default_security_group
        examples:
            - name: default-sg
              manifest: |-
                {
                  "description": "description for default security group",
                  "egress": [
                    {
                      "description": "rule2 description",
                      "from_port": 8090,
                      "protocol": "ANY",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    },
                    {
                      "description": "rule3 description",
                      "from_port": 8090,
                      "protocol": "UDP",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24"
                      ]
                    }
                  ],
                  "ingress": [
                    {
                      "description": "rule1 description",
                      "port": 8080,
                      "protocol": "TCP",
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    }
                  ],
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "network_id": "${yandex_vpc_network.lab-net.id}"
                }
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            created_at: '- Creation timestamp of this security group.'
            description: (Optional) - Description of the security group.
            egress: (Optional) - A list of egress rules. The structure is documented below.
            folder_id: (Optional) - ID of the folder this security group belongs to.
            id: '- Id of the security group.'
            ingress: (Optional) - A list of ingress rules.
            ingress.description: (Optional) - Description of the rule.
            ingress.from_port: (Optional) - Minimum port number.
            ingress.labels: (Optional) - Labels to assign to this rule.
            ingress.port: (Optional) - Port number (if applied to a single port).
            ingress.predefined_target: (Optional) - Special-purpose targets. self_security_group refers to this particular security group. loadbalancer_healthchecks represents loadbalancer health check nodes.
            ingress.protocol: (Required) - One of ANY, TCP, UDP, ICMP, IPV6_ICMP.
            ingress.security_group_id: (Optional) - Target security group ID for this rule.
            ingress.to_port: (Optional) - Maximum port number.
            ingress.v4_cidr_blocks: (Optional) - The blocks of IPv4 addresses for this rule.
            ingress.v6_cidr_blocks: (Optional) - The blocks of IPv6 addresses for this rule. v6_cidr_blocks argument is currently not supported. It will be available in the future.
            labels: (Optional) - Labels to assign to this security group.
            name: '- Name of this security group.'
            network_id: (Required) - ID of the network this security group belongs to.
            status: '- Status of this security group.'
        importStatements: []
    yandex_vpc_gateway:
        subCategory: unknown
        description: Manages a gateway within Yandex.Cloud.
        name: yandex_vpc_gateway
        title: yandex_vpc_gateway
        examples:
            - name: default
              manifest: |-
                {
                  "name": "foobar",
                  "shared_egress_gateway": [
                    {}
                  ]
                }
        argumentDocs:
            created_at: '- Creation timestamp of the key.'
            description: |-
                - (Optional) An optional description of this resource. Provide this property when
                you create the resource.
            folder_id: |-
                - (Optional) ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) Labels to apply to this VPC Gateway. A list of key/value pairs.'
            name: '- (Optional) Name of the VPC Gateway. Provided by the client when the VPC Gateway is created.'
            shared_egress_gateway: '- Shared egress gateway configuration. Currently empty.'
        importStatements: []
    yandex_vpc_network:
        subCategory: unknown
        description: Manages a network within Yandex.Cloud.
        name: yandex_vpc_network
        title: yandex_vpc_network
        examples:
            - name: default
              manifest: |-
                {
                  "name": "foobar"
                }
        argumentDocs:
            created_at: '- Creation timestamp of the key.'
            default_security_group_id: '- ID of default Security Group of this network.'
            description: |-
                - (Optional) An optional description of this resource. Provide this property when
                you create the resource.
            folder_id: |-
                - (Optional) ID of the folder that the resource belongs to. If it
                is not provided, the default provider folder is used.
            labels: '- (Optional) Labels to apply to this network. A list of key/value pairs.'
            name: '- (Optional) Name of the network. Provided by the client when the network is created.'
        importStatements: []
    yandex_vpc_route_table:
        subCategory: unknown
        description: A VPC route table is a virtual version of the traditional route table on router device.
        name: yandex_vpc_route_table
        title: yandex_vpc_route_table
        examples:
            - name: lab-rt-a
              manifest: |-
                {
                  "network_id": "${yandex_vpc_network.lab-net.id}",
                  "static_route": [
                    {
                      "destination_prefix": "10.2.0.0/16",
                      "next_hop_address": "172.16.10.10"
                    },
                    {
                      "destination_prefix": "0.0.0.0/0",
                      "gateway_id": "${yandex_vpc_gateway.egress-gateway.id}"
                    }
                  ]
                }
              dependencies:
                yandex_vpc_gateway.egress-gateway: |-
                    {
                      "name": "egress-gateway",
                      "shared_egress_gateway": [
                        {}
                      ]
                    }
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            created_at: '- Creation timestamp of the route table.'
            description: |-
                - (Optional) An optional description of the route table. Provide this property when
                you create the resource.
            folder_id: |-
                - (Optional) The ID of the folder to which the resource belongs.
                If omitted, the provider folder is used.
            labels: '- (Optional) Labels to assign to this route table. A list of key/value pairs.'
            name: '- (Optional) Name of the route table. Provided by the client when the route table is created.'
            network_id: '- (Required) ID of the network this route table belongs to.'
            static_route: '- (Optional) A list of static route records for the route table. The structure is documented below.'
            static_route.destination_prefix: '- Route prefix in CIDR notation.'
            static_route.gateway_id: '- ID of the gateway used ad next hop.'
            static_route.next_hop_address: '- Address of the next hop.'
        importStatements: []
    yandex_vpc_security_group:
        subCategory: unknown
        description: Yandex VPC Security Group.
        name: yandex_vpc_security_group
        title: yandex_vpc_security_group
        examples:
            - name: group1
              manifest: |-
                {
                  "description": "description for my security group",
                  "egress": [
                    {
                      "description": "rule2 description",
                      "from_port": 8090,
                      "protocol": "ANY",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    },
                    {
                      "description": "rule3 description",
                      "from_port": 8090,
                      "protocol": "UDP",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24"
                      ]
                    }
                  ],
                  "ingress": [
                    {
                      "description": "rule1 description",
                      "port": 8080,
                      "protocol": "TCP",
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    }
                  ],
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "My security group",
                  "network_id": "${yandex_vpc_network.lab-net.id}"
                }
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            created_at: '- Creation timestamp of this security group.'
            description: (Optional) - Description of the security group.
            egress: (Optional) - A list of egress rules. The structure is documented below.
            folder_id: (Optional) - ID of the folder this security group belongs to.
            id: '- Id of the rule.'
            ingress: (Optional) - A list of ingress rules.
            ingress.description: (Optional) - Description of the rule.
            ingress.from_port: (Optional) - Minimum port number.
            ingress.labels: (Optional) - Labels to assign to this rule.
            ingress.port: (Optional) - Port number (if applied to a single port).
            ingress.predefined_target: (Optional) - Special-purpose targets. self_security_group refers to this particular security group. loadbalancer_healthchecks represents loadbalancer health check nodes.
            ingress.protocol: (Required) - One of ANY, TCP, UDP, ICMP, IPV6_ICMP.
            ingress.security_group_id: (Optional) - Target security group ID for this rule.
            ingress.to_port: (Optional) - Maximum port number.
            ingress.v4_cidr_blocks: (Optional) - The blocks of IPv4 addresses for this rule.
            ingress.v6_cidr_blocks: (Optional) - The blocks of IPv6 addresses for this rule. v6_cidr_blocks argument is currently not supported. It will be available in the future.
            labels: (Optional) - Labels to assign to this security group.
            name: (Optional) - Name of the security group.
            network_id: (Required) - ID of the network this security group belongs to.
            status: '- Status of this security group.'
        importStatements: []
    yandex_vpc_security_group_rule:
        subCategory: unknown
        description: Yandex VPC Security Group Rule.
        name: yandex_vpc_security_group_rule
        title: yandex_vpc_security_group_rule
        examples:
            - name: rule1
              manifest: |-
                {
                  "description": "rule1 description",
                  "direction": "ingress",
                  "port": 8080,
                  "protocol": "TCP",
                  "security_group_binding": "${yandex_vpc_security_group.group1.id}",
                  "v4_cidr_blocks": [
                    "10.0.1.0/24",
                    "10.0.2.0/24"
                  ]
                }
              references:
                security_group_binding: yandex_vpc_security_group.group1.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
                yandex_vpc_security_group.group1: |-
                    {
                      "description": "description for my security group",
                      "labels": {
                        "my-label": "my-label-value"
                      },
                      "name": "My security group",
                      "network_id": "${yandex_vpc_network.lab-net.id}"
                    }
            - name: rule2
              manifest: |-
                {
                  "description": "rule2 description",
                  "direction": "egress",
                  "from_port": 8090,
                  "protocol": "UDP",
                  "security_group_binding": "${yandex_vpc_security_group.group1.id}",
                  "to_port": 8099,
                  "v4_cidr_blocks": [
                    "10.0.1.0/24"
                  ]
                }
              references:
                security_group_binding: yandex_vpc_security_group.group1.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
                yandex_vpc_security_group.group1: |-
                    {
                      "description": "description for my security group",
                      "labels": {
                        "my-label": "my-label-value"
                      },
                      "name": "My security group",
                      "network_id": "${yandex_vpc_network.lab-net.id}"
                    }
        argumentDocs:
            description: (Optional) - Description of the rule.
            direction: (Required) - direction of the rule. Can be ingress (inbound) or egress (outbound).
            from_port: (Optional) - Minimum port number.
            id: '- Id of the rule.'
            labels: (Optional) - Labels to assign to this rule.
            port: (Optional) - Port number (if applied to a single port).
            predefined_target: (Optional) - Special-purpose targets such as "self_security_group". See docs for possible options.
            protocol: (Required) - One of ANY, TCP, UDP, ICMP, IPV6_ICMP.
            security_group_binding: (Required) - ID of the security group this rule belongs to.
            security_group_id: (Optional) - Target security group ID for this rule.
            to_port: (Optional) - Maximum port number.
            v4_cidr_blocks: (Optional) - The blocks of IPv4 addresses for this rule.
            v6_cidr_blocks: (Optional) - The blocks of IPv6 addresses for this rule. v6_cidr_blocks argument is currently not supported. It will be available in the future.
        importStatements: []
    yandex_vpc_subnet:
        subCategory: unknown
        description: A VPC network is a virtual version of the traditional physical networks that exist within and between physical data centers.
        name: yandex_vpc_subnet
        title: yandex_vpc_subnet
        examples:
            - name: lab-subnet-a
              manifest: |-
                {
                  "network_id": "${yandex_vpc_network.lab-net.id}",
                  "v4_cidr_blocks": [
                    "10.2.0.0/16"
                  ],
                  "zone": "ru-central1-a"
                }
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            create: '- Default is 3 minute.'
            delete: '- Default is 3 minute.'
            description: |-
                - (Optional) An optional description of the subnet. Provide this property when
                you create the resource.
            dhcp_options: '- (Optional) Options for DHCP client. The structure is documented below.'
            dhcp_options.domain_name: '- (Optional) Domain name.'
            dhcp_options.domain_name_servers: '- (Optional) Domain name server IP addresses.'
            dhcp_options.ntp_servers: '- (Optional) NTP server IP addresses.'
            folder_id: |-
                - (Optional) The ID of the folder to which the resource belongs.
                If omitted, the provider folder is used.
            labels: '- (Optional) Labels to assign to this subnet. A list of key/value pairs.'
            name: '- (Optional) Name of the subnet. Provided by the client when the subnet is created.'
            network_id: |-
                - (Required) ID of the network this subnet belongs to.
                Only networks that are in the distributed mode can have subnets.
            route_table_id: |-
                - (Optional) The ID of the route table to assign to this subnet. Assigned route table should
                belong to the same network as this subnet.
            update: '- Default is 3 minute.'
            v4_cidr_blocks: |-
                - (Required) A list of blocks of internal IPv4 addresses that are owned by this subnet.
                Provide this property when you create the subnet. For example, 10.0.0.0/22 or 192.168.0.0/16.
                Blocks of addresses must be unique and non-overlapping within a network.
                Minimum subnet size is /28, and maximum subnet size is /16. Only IPv4 is supported.
            v6_cidr_blocks: '- An optional list of blocks of IPv6 addresses that are owned by this subnet.'
            zone: '- (Required) Name of the Yandex.Cloud zone for this subnet.'
        importStatements: []
    yandex_ydb_database_dedicated:
        subCategory: unknown
        description: Manages Yandex Database dedicated cluster.
        name: yandex_ydb_database_dedicated
        title: yandex_ydb_database_dedicated
        examples:
            - name: database1
              manifest: |-
                {
                  "deletion_protection": true,
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "location": [
                    {
                      "region": [
                        {
                          "id": "ru-central1"
                        }
                      ]
                    }
                  ],
                  "name": "test-ydb-dedicated",
                  "network_id": "${yandex_vpc_network.my-inst-group-network.id}",
                  "resource_preset_id": "medium",
                  "scale_policy": [
                    {
                      "fixed_scale": [
                        {
                          "size": 1
                        }
                      ]
                    }
                  ],
                  "storage_config": [
                    {
                      "group_count": 1,
                      "storage_type_id": "ssd"
                    }
                  ],
                  "subnet_ids": [
                    "${yandex_vpc_subnet.my-inst-group-subnet.id}"
                  ]
                }
        argumentDocs:
            assign_public_ips: '- (Optional) Whether public IP addresses should be assigned to the Yandex Database cluster.'
            created_at: '- The Yandex Database cluster creation timestamp.'
            database_path: |-
                - Full database path of the Yandex Database cluster.
                Useful for SDK configuration.
            deletion_protection: '- (Optional) Inhibits deletion of the database. Can be either true or false'
            description: '- (Optional) A description for the Yandex Database cluster.'
            folder_id: |-
                - (Optional) ID of the folder that the Yandex Database cluster belongs to.
                It will be deduced from provider configuration if not set explicitly.
            id: '- ID of the Yandex Database cluster.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Yandex Database cluster.'
            location: |-
                - (Optional) Location for the Yandex Database cluster.
                The structure is documented below.
            location.region: |-
                - (Optional) Region for the Yandex Database cluster.
                The structure is documented below.
            location.region.id: '- (Required) Region ID for the Yandex Database cluster.'
            location_id: '- (Optional) Location ID for the Yandex Database cluster.'
            name: '- (Required) Name of the Yandex Database cluster.'
            network_id: '- (Required) ID of the network to attach the Yandex Database cluster to.'
            resource_preset_id: |-
                - (Required) The Yandex Database cluster preset.
                Available presets can be obtained via yc ydb resource-preset list command.
            scale_policy: |-
                - (Required) Scaling policy for the Yandex Database cluster.
                The structure is documented below.
            scale_policy.fixed_scale: |-
                - (Required) Fixed scaling policy for the Yandex Database cluster.
                The structure is documented below.
            scale_policy.fixed_scale.size: '- (Required) Number of instances for the Yandex Database cluster.'
            status: '- Status of the Yandex Database cluster.'
            storage_config: |-
                - (Required) A list of storage configuration options for the Yandex Database cluster.
                The structure is documented below.
            storage_config.group_count: '- (Required) Amount of storage groups of selected type for the Yandex Database cluster.'
            storage_config.storage_type_id: |-
                - (Required) Storage type ID for the Yandex Database cluster.
                Available presets can be obtained via yc ydb storage-type list command.
            subnet_ids: '- (Required) List of subnet IDs to attach the Yandex Database cluster to.'
            tls_enabled: |-
                - Whether TLS is enabled for the Yandex Database cluster.
                Useful for SDK configuration.
            ydb_api_endpoint: |-
                - API endpoint of the Yandex Database cluster.
                Useful for SDK configuration.
            ydb_full_endpoint: '- Full endpoint of the Yandex Database cluster.'
        importStatements: []
    yandex_ydb_database_iam_binding:
        subCategory: unknown
        description: Allows management of a single IAM binding for a
        name: yandex_ydb_database_iam_binding
        title: yandex_ydb_database_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "database_id": "${yandex_ydb_database_serverless.database1.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "ydb.viewer"
                }
              references:
                database_id: yandex_ydb_database_serverless.database1.id
              dependencies:
                yandex_ydb_database_serverless.database1: |-
                    {
                      "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                      "name": "test-ydb-serverless"
                    }
        argumentDocs:
            database_id: '- (Required) The Managed Service YDB instance Database ID to apply a binding to.'
            members: |-
                - (Required) Identities that will be granted the privilege in role.
                Each entry can have one of the following values:
            role: '- (Required) The role that should be applied. See roles.'
        importStatements: []
    yandex_ydb_database_serverless:
        subCategory: unknown
        description: Manages Yandex Database serverless cluster.
        name: yandex_ydb_database_serverless
        title: yandex_ydb_database_serverless
        examples:
            - name: database1
              manifest: |-
                {
                  "deletion_protection": true,
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "name": "test-ydb-serverless"
                }
        argumentDocs:
            created_at: '- The Yandex Database serverless cluster creation timestamp.'
            database_path: |-
                - Full database path of the Yandex Database serverless cluster.
                Useful for SDK configuration.
            deletion_protection: '- (Optional) Inhibits deletion of the database. Can be either true or false'
            description: '- (Optional) A description for the Yandex Database serverless cluster.'
            document_api_endpoint: '- Document API endpoint of the Yandex Database serverless cluster.'
            folder_id: |-
                - (Optional) ID of the folder that the Yandex Database serverless cluster belongs to.
                It will be deduced from provider configuration if not set explicitly.
            id: '- ID of the Yandex Database serverless cluster.'
            labels: '- (Optional) A set of key/value label pairs to assign to the Yandex Database serverless cluster.'
            location_id: '- (Optional) Location ID for the Yandex Database serverless cluster.'
            name: '- (Required) Name for the Yandex Database serverless cluster.'
            status: '- Status of the Yandex Database serverless cluster.'
            tls_enabled: |-
                - Whether TLS is enabled for the Yandex Database serverless cluster.
                Useful for SDK configuration.
            ydb_api_endpoint: |-
                - API endpoint of the Yandex Database serverless cluster.
                Useful for SDK configuration.
            ydb_full_endpoint: '- Full endpoint of the Yandex Database serverless cluster.'
        importStatements: []
    yandex_ydb_table:
        subCategory: unknown
        description: Manages Yandex Database dedicated cluster.
        name: yandex_ydb_table
        title: yandex_ydb_table
        examples:
            - name: test_table
              manifest: |-
                {
                  "column": [
                    {
                      "name": "a",
                      "not_null": true,
                      "type": "Utf8"
                    },
                    {
                      "name": "b",
                      "not_null": true,
                      "type": "Uint32"
                    },
                    {
                      "name": "c",
                      "not_null": false,
                      "type": "Int32"
                    },
                    {
                      "name": "d",
                      "type": "Timestamp"
                    }
                  ],
                  "connection_string": "${yandex_ydb_database_serverless.database1.ydb_full_endpoint}",
                  "path": "test_dir/test_table_3_col",
                  "primary_key": [
                    "a",
                    "b”]"
                  ]
                }
              references:
                connection_string: yandex_ydb_database_serverless.database1.ydb_full_endpoint
        argumentDocs:
            attributes: "- (Optional)\tA map of table attributes."
            column: |-
                - (Required)	A list of column configuration options.
                The structure is documented below.
            column.family: "- (Optional)\tColumn group"
            column.name: '- (Required) Column name'
            column.not_null: "- (Optional) A column cannot have the NULL data type. (\tDefault: false\t)"
            column.type: '- (Required) Column data type. YQL data types are used.'
            connection_string: '- (Required) Connection string for database.'
            family: |-
                - (Optional)	A list of column group configuration options.
                The structure is documented below.
            family.compression: '- (Optional) Data codec (acceptable values: off, lz4).'
            family.data: '- (Optional) Type of storage device for column data in this group (acceptable values: ssd, rot (from HDD spindle rotation)).'
            family.name: '- (Required) Column family name'
            key_bloom_filter: '- (Optional) Use the Bloom filter for the primary key'
            partitioning_settings: |-
                - (Optional) Table partiotioning settings
                The structure is documented below.
            path: '- (Required) Table path.'
            primary_key: '- (Required) A list of table columns to be uased as primary key.'
            read_replicas_settings: "- (Optional)\tRead replication settings"
            ttl: |-
                - (Optional)	ttl		TTL settings
                The structure is documented below.
            ttl.column_name: '- (Required) Column name for TTL'
            ttl.expire_interval: '- (Required) Interval in the ISO 8601 format'
        importStatements: []
    yandex_ydb_table_changefeed:
        subCategory: unknown
        description: Manages Yandex Database dedicated cluster.
        name: yandex_ydb_table_changefeed
        title: yandex_ydb_table_changefeed
        argumentDocs:
            connection_string: '- (Required) Connection string, conflicts with table_id'
            consumer: '- (Optional) Changefeed consumers - named entities for reading data from the topic.'
            database_id: '- (Required) Database ID, conflicts with table_path and connection_string'
            format: ': Changefeed format. Only JSON format is available.'
            mode: ': Changefeed operating mode. The available changefeed operating modes are presented in the documentation.'
            name: ': Changefeed name.'
            retention_period: '- (Optional) Time of data retention in the topic, ISO 8601 format'
            starting_message_timestamp_ms: '- (Optional) Timestamp in the UNIX timestamp format, from which the consumer will start reading data'
            supported_codecs: '- (Optional) Supported data encodings'
            table_id: ': ID of the table for which we create the changefeed.'
            table_path: '- (Required) Table path'
            virtual_timestamps: '- (Optional) Use virtual timestamps'
        importStatements: []
    yandex_ydb_topic:
        subCategory: unknown
        description: Get information about a Yandex YDB Topics.
        name: yandex_ydb_topic
        title: yandex_ydb_topic
        examples:
            - name: topic
              manifest: |-
                {
                  "consumer": [
                    {
                      "name": "consumer-name",
                      "starting_message_timestamp_ms": 0,
                      "supported_codecs": [
                        "raw",
                        "gzip"
                      ]
                    }
                  ],
                  "database_endpoint": "${yandex_ydb_database_serverless.database_name.ydb_full_endpoint}",
                  "name": "topic-test",
                  "partitions_count": 1,
                  "retention_period_ms": 2000000,
                  "supported_codecs": [
                    "raw",
                    "gzip"
                  ]
                }
              dependencies:
                yandex_ydb_database_serverless.database_name: |-
                    {
                      "location_id": "ru-central1",
                      "name": "database-name"
                    }
        argumentDocs:
            consumer: '- Topic Readers. Types: array[consumer], optional. Default value: null.'
            database_endpoint: '- YDB database endpoint. Types: string, required. Default value: "".'
            name: '- Topic name. Type: string, required. Default value: "".'
            partitions_count: '- Number of partitions. Types: integer, optional. Default value: 2.'
            retention_period_ms: '- Data retention time. Types: integer, required. Default value: 86400000'
            starting_message_timestamp_ms: '- Timestamp in UNIX timestamp format from which the reader will start reading data. Type: integer, optional. Default value: 0.'
            supported_codecs: '- Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].'
        importStatements: []
