name: yandex-cloud/yandex
resources:
    yandex_airflow_cluster:
        subCategory: Managed Service for Apache Airflow
        description: Manages an Apache Airflow cluster within Yandex Cloud.
        name: yandex_airflow_cluster
        title: yandex_airflow_cluster
        examples:
            - name: my_airflow_cluster
              manifest: |-
                {
                  "admin_password": "some-strong-password",
                  "airflow_config": {
                    "api": {
                      "auth_backends": "airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session"
                    }
                  },
                  "code_sync": {
                    "s3": {
                      "bucket": "bucket-for-airflow-dags"
                    }
                  },
                  "lockbox_secrets_backend": {
                    "enabled": true
                  },
                  "logging": {
                    "enabled": true,
                    "folder_id": "${var.folder_id}",
                    "min_level": "INFO"
                  },
                  "name": "airflow-created-with-terraform",
                  "pip_packages": [
                    "dbt"
                  ],
                  "scheduler": {
                    "count": 1,
                    "resource_preset_id": "c1-m4"
                  },
                  "service_account_id": "${yandex_iam_service_account.for-airflow.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.a.id}",
                    "${yandex_vpc_subnet.b.id}",
                    "${yandex_vpc_subnet.d.id}"
                  ],
                  "webserver": {
                    "count": 1,
                    "resource_preset_id": "c1-m4"
                  },
                  "worker": {
                    "max_count": 2,
                    "min_count": 1,
                    "resource_preset_id": "c1-m4"
                  }
                }
              references:
                service_account_id: yandex_iam_service_account.for-airflow.id
                subnet_ids: yandex_vpc_subnet.a.id
        argumentDocs:
            admin_password: (String, Sensitive) Password that is used to log in to Apache Airflow web UI under admin user.
            airflow_config: (Map of Map of String) Configuration of the Apache Airflow application itself. The value of this attribute is a two-level map. Keys of top-level map are the names of configuration sections. Keys of inner maps are the names of configuration options within corresponding section.
            airflow_version: (String) Apache Airflow version in format <major>.<minor>.
            bucket: (String) The name of the Object Storage bucket that stores DAG files used in the cluster.
            code_sync: (Attributes) Parameters of the location and access to the code that will be executed in the cluster. (see below for nested schema)
            count: (Number) The number of scheduler instances in the cluster.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            day: (String) Day of week for maintenance window. One of MON, TUE, WED, THU, FRI, SAT, SUN.
            deb_packages: (Set of String) System packages that are installed in the cluster.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            enabled: (Boolean) Enables usage of Lockbox Secrets Backend.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            health: (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window.
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            lockbox_secrets_backend: (Attributes) Configuration of Lockbox Secrets Backend. See documentation for details. (see below for nested schema)
            log_group_id: (String) Logs will be written to the specified log group. Exactly one of the attributes folder_id or log_group_id should be specified.
            logging: (Attributes) Cloud Logging configuration. (see below for nested schema)
            maintenance_window: (Attributes) Configuration of window for maintenance operations. (see below for nested schema)
            max_count: (Number) The maximum number of worker instances in the cluster.
            min_count: (Number) The minimum number of worker instances in the cluster.
            min_level: (String) Minimum level of messages that will be sent to Cloud Logging. Can be either TRACE, DEBUG, INFO, WARN, ERROR or FATAL. If not set then server default is applied (currently INFO).
            name: (String) The resource name.
            pip_packages: (Set of String) Python packages that are installed in the cluster.
            python_version: (String) Version of Python that Airflow will run on. Must be in format <major>.<minor>.
            resource_preset_id: (String) The identifier of the preset for computational resources available to an instance (CPU, memory etc.).
            s3: (Attributes) Currently only Object Storage (S3) is supported as the source of DAG files. (see below for nested schema)
            scheduler: (Attributes) Configuration of scheduler instances. (see below for nested schema)
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            service_account_id: (String) Service account which linked to the resource. For more information, see documentation.
            status: (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
            subnet_ids: (Set of String) The list of VPC subnets identifiers which resource is attached.
            timeouts: (Block, Optional) (see below for nested schema)
            triggerer: (Attributes) Configuration of triggerer instances. (see below for nested schema)
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. If WEEKLY, day and hour must be specified.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            webserver: (Attributes) Configuration of webserver instances. (see below for nested schema)
            worker: (Attributes) Configuration of worker instances. (see below for nested schema)
        importStatements: []
    yandex_alb_backend_group:
        subCategory: Application Load Balancer (ALB)
        description: An application load balancer distributes the load across cloud resources that are combined into a backend group.
        name: yandex_alb_backend_group
        title: yandex_alb_backend_group
        examples:
            - name: my_alb_bg
              manifest: |-
                {
                  "http_backend": [
                    {
                      "healthcheck": [
                        {
                          "http_healthcheck": [
                            {
                              "path": "/"
                            }
                          ],
                          "interval": "1s",
                          "timeout": "1s"
                        }
                      ],
                      "http2": "true",
                      "load_balancing_config": [
                        {
                          "panic_threshold": 50
                        }
                      ],
                      "name": "test-http-backend",
                      "port": 8080,
                      "target_group_ids": [
                        "${yandex_alb_target_group.test-target-group.id}"
                      ],
                      "tls": [
                        {
                          "sni": "backend-domain.internal"
                        }
                      ],
                      "weight": 1
                    }
                  ],
                  "name": "my-backend-group",
                  "session_affinity": [
                    {
                      "connection": [
                        {
                          "source_ip": "127.0.0.1"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            connection: '(Block List, Max: 1) Requests received from the same IP are combined into a session. Stream backend groups only support session affinity by client IP address. (see below for nested schema)'
            cookie: '(Block List, Max: 1) Requests with the same cookie value and the specified file name are combined into a session. Allowed only for HTTP and gRPC backend groups. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            enable_proxy_protocol: (Boolean)
            expected_statuses: (List of Number) A list of HTTP response statuses considered healthy.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            grpc_backend: (Block List) gRPC backend specification that will be used by the ALB Backend Group. (see below for nested schema)
            grpc_healthcheck: '(Block List, Max: 1) gRPC Healthcheck specification that will be used by this healthcheck. (see below for nested schema)'
            header: '(Block List, Max: 1) Requests with the same value of the specified HTTP header, such as with user authentication data, are combined into a session. Allowed only for HTTP and gRPC backend groups. (see below for nested schema)'
            header_name: (String) The name of the request header that will be used with affinity.
            healthcheck: '(Block List, Max: 1) Healthcheck specification that will be used by this backend.'
            healthcheck_port: (Number) Optional alternative port for health checking.
            healthy_threshold: (Number) Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.
            host: (String) Host HTTP header value.
            http_backend: (Block List) HTTP backend specification that will be used by the ALB Backend Group.
            http_healthcheck: '(Block List, Max: 1) HTTP Healthcheck specification that will be used by this healthcheck. (see below for nested schema)'
            http2: (Boolean) If set, health checks will use HTTP2.
            id: (String) The ID of this resource.
            interval: (String) Interval between health checks.
            interval_jitter_percent: (Number) An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * interval_jitter_percent / 100) will be added to the wait time.
            keep_connections_on_host_health_failure: (Boolean) If set, when a backend host becomes unhealthy (as determined by the configured health checks), keep connections to the failed host.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            load_balancing_config: '(Block List, Max: 1) Load Balancing Config specification that will be used by this backend. (see below for nested schema)'
            locality_aware_routing_percent: (Number) Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.
            mode: '(String) Load balancing mode for the backend. Possible values: ROUND_ROBIN, RANDOM, LEAST_REQUEST, MAGLEV_HASH.'
            name: (String) The resource name.
            panic_threshold: (Number) If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading when everything is bad. Zero means no panic threshold.
            path: (String) HTTP path.
            port: (Number) Port for incoming traffic.
            receive: (String) Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.
            send: (String) Message sent to targets during TCP data transfer. If not specified, no data is sent to the target.
            service_name: (String) Service name for grpc.health.v1.HealthCheckRequest message.
            session_affinity: '(Block List, Max: 1) Session affinity mode determines how incoming requests are grouped into one session.'
            sni: (String) SNI string for TLS connections.
            source_ip: (Boolean) Source IP address to use with affinity.
            storage_bucket: (String) Name of bucket which should be used as a backend.
            stream_backend: (Block List) Stream backend specification that will be used by the ALB Backend Group. (see below for nested schema)
            stream_healthcheck: '(Block List, Max: 1) Stream Healthcheck specification that will be used by this healthcheck. (see below for nested schema)'
            strict_locality: (Boolean) If set, will route requests only to the same availability zone. Balancer won't know about endpoints in other zones.
            target_group_ids: (List of String) References target groups for the backend.
            timeout: (String) Time to wait for a health check response.
            timeouts: (Block, Optional) (see below for nested schema)
            tls: '(Block List, Max: 1) TLS specification that will be used by this backend.'
            trusted_ca_bytes: (String) PEM-encoded trusted CA certificate chain.
            trusted_ca_id: (String) Trusted CA certificate ID in the Certificate Manager.
            ttl: (String) TTL for the cookie (if not set, session cookie will be used).
            unhealthy_threshold: (Number) Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            validation_context: '(Block List, Max: 1) (see below for nested schema)'
            weight: (Number) Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
        importStatements: []
    yandex_alb_http_router:
        subCategory: Application Load Balancer (ALB)
        description: The HTTP router defines the routing rules for HTTP requests to backend groups.
        name: yandex_alb_http_router
        title: yandex_alb_http_router
        examples:
            - name: tf-router
              manifest: |-
                {
                  "labels": [
                    {
                      "empty-label": "s",
                      "tf-label": "tf-label-value"
                    }
                  ],
                  "name": "my-http-router"
                }
        argumentDocs:
            action: (String)
            and_principals: '(Block List, Min: 1) (see below for nested schema)'
            any: (Boolean)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            exact: (String) Match exactly.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            header: '(Block List, Max: 1) (see below for nested schema)'
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            prefix: (String) Match prefix.
            principals: '(Block List, Min: 1) (see below for nested schema)'
            rbac: '(Block List, Max: 1) RBAC configuration. (see below for nested schema)'
            regex: (String) Match regex.
            remote_ip: (String)
            route_options: '(Block List, Max: 1) Route options for the virtual host. (see below for nested schema)'
            security_profile_id: (String) SWS profile ID.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            value: '(Block List, Max: 1) The path and fqmn blocks.'
        importStatements: []
    yandex_alb_load_balancer:
        subCategory: Application Load Balancer (ALB)
        description: A Load Balancer is used for receiving incoming traffic and transmitting it to the backend endpoints specified in the ALB Target Groups.
        name: yandex_alb_load_balancer
        title: yandex_alb_load_balancer
        examples:
            - name: my_alb
              manifest: |-
                {
                  "allocation_policy": [
                    {
                      "location": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.test-subnet.id}",
                          "zone_id": "ru-central1-a"
                        }
                      ]
                    }
                  ],
                  "listener": [
                    {
                      "endpoint": [
                        {
                          "address": [
                            {
                              "external_ipv4_address": [
                                {}
                              ]
                            }
                          ],
                          "ports": [
                            8080
                          ]
                        }
                      ],
                      "http": [
                        {
                          "handler": [
                            {
                              "http_router_id": "${yandex_alb_http_router.test-router.id}"
                            }
                          ]
                        }
                      ],
                      "name": "my-listener"
                    }
                  ],
                  "log_options": [
                    {
                      "discard_rule": [
                        {
                          "discard_percent": 75,
                          "http_code_intervals": [
                            "2XX"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "my-load-balancer",
                  "network_id": "${yandex_vpc_network.test-network.id}"
                }
              references:
                allocation_policy.location.subnet_id: yandex_vpc_subnet.test-subnet.id
                listener.http.handler.http_router_id: yandex_alb_http_router.test-router.id
                network_id: yandex_vpc_network.test-network.id
        argumentDocs:
            address: '(Block List, Min: 1) One or more addresses to listen on. (see below for nested schema)'
            allocation_policy: '(Block List, Min: 1, Max: 1) Allocation zones for the Load Balancer instance. (see below for nested schema)'
            allow_http10: (Boolean) If set, will enable only HTTP1 protocol with HTTP1.0 support.
            allow_zonal_shift: (Boolean) Specifies whether application load balancer is available to zonal shift
            auto_scale_policy: '(Block List, Max: 1) Scaling settings of the application load balancer. (see below for nested schema)'
            backend_group_id: (String) Backend Group ID.
            certificate_ids: (Set of String) Certificate IDs in the Certificate Manager. Multiple TLS certificates can be associated with the same context to allow both RSA and ECDSA certificates. Only the first certificate of each type will be used.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            default_handler: '(Block List, Min: 1, Max: 1) TLS handler resource. (see below for nested schema)'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disable: (Boolean) Set to true to disable Cloud Logging for the balancer.
            disable_traffic: (Boolean) If set, will disable all L7 instances in the zone for request handling.
            discard_percent: (Number) The percent of logs which will be discarded.
            discard_rule: (Block List) List of rules to discard a fraction of logs. (see below for nested schema)
            endpoint: (Block List) Network endpoint (addresses and ports) of the listener. (see below for nested schema)
            external_ipv4_address: '(Block List, Max: 1) External IPv4 address. (see below for nested schema)'
            external_ipv6_address: '(Block List, Max: 1) External IPv6 address. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            grpc_codes: (List of String) list of grpc codes by name, e.g, [NOT_FOUND, RESOURCE_EXHAUSTED].
            handler: '(Block List, Max: 1) HTTP handler. (see below for nested schema)'
            http: '(Block List, Max: 1) HTTP handler that sets plain text HTTP router. (see below for nested schema)'
            http_code_intervals: (List of String) List of http code intervals 1XX-5XX or ALL
            http_codes: (List of Number) List of http codes 100-599.
            http_handler: '(Block List, Max: 1) HTTP handler. (see below for nested schema)'
            http_router_id: (String) HTTP router id.
            http_to_https: (Boolean) If set redirects all unencrypted HTTP requests to the same URI with scheme changed to https.
            http2_options: '(Block List, Max: 1) If set, will enable HTTP2 protocol for the handler. (see below for nested schema)'
            id: (String) The ID of this resource.
            idle_timeout: (String) The idle timeout is the interval after which the connection will be forcibly closed if no data has been transmitted or received on either the upstream or downstream connection. If not configured, the default idle timeout is 1 hour. Setting it to 0 disables the timeout.
            internal_ipv4_address: '(Block List, Max: 1) Internal IPv4 address. (see below for nested schema)'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            listener: (Block List) List of listeners for the Load Balancer. (see below for nested schema)
            location: '(Block Set, Min: 1) Unique set of locations. (see below for nested schema)'
            log_group_id: (String) Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.
            log_options: '(Block List, Max: 1) Cloud Logging settings. (see below for nested schema)'
            max_concurrent_streams: (Number) Maximum number of concurrent streams.
            max_size: (Number) Upper limit for total instance count (across all zones)
            min_zone_size: (Number) Lower limit for instance count in each zone.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            ports: (List of Number) One or more ports to listen on.
            redirects: '(Block List, Max: 1) Shortcut for adding http -> https redirects. (see below for nested schema)'
            region_id: (String) The region ID where Load Balancer is located at.
            rewrite_request_id: (Boolean) When unset, will preserve the incoming x-request-id header, otherwise would rewrite it with a new value.
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            server_names: (Set of String) Server names that are matched by the SNI handler
            sni_handler: (Block List) Settings for handling requests with Server Name Indication (SNI) (see below for nested schema)
            status: (String) Status of the Load Balancer.
            stream: '(Block List, Max: 1) Stream configuration (see below for nested schema)'
            stream_handler: '(Block List, Max: 1) Stream handler resource. (see below for nested schema)'
            subnet_id: (String) ID of the subnet that location is located at.
            timeouts: (Block, Optional) (see below for nested schema)
            tls: '(Block List, Max: 1) TLS configuration (see below for nested schema)'
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone_id: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements: []
    yandex_alb_target_group:
        subCategory: Application Load Balancer (ALB)
        description: An application load balancer distributes the load across cloud resources that are combined into a target group.
        name: yandex_alb_target_group
        title: yandex_alb_target_group
        examples:
            - name: foo
              manifest: |-
                {
                  "name": "my-target-group",
                  "target": [
                    {
                      "ip_address": "${yandex_compute_instance.my-instance-1.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    },
                    {
                      "ip_address": "${yandex_compute_instance.my-instance-2.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    }
                  ]
                }
              references:
                target.ip_address: yandex_compute_instance.my-instance-2.network_interface.0.ip_address
                target.subnet_id: yandex_vpc_subnet.my-subnet.id
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The resource name.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            ip_address: (String) IP address of the target.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            private_ipv4_address: (Boolean)
            subnet_id: (String) ID of the subnet that targets are connected to. All targets in the target group must be connected to the same subnet within a single availability zone.
            target: (Block List) A Target resource. (see below for nested schema)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_alb_virtual_host:
        subCategory: Application Load Balancer (ALB)
        description: Virtual hosts combine routes belonging to the same set of domains.
        name: yandex_alb_virtual_host
        title: yandex_alb_virtual_host
        examples:
            - name: my-vhost
              manifest: |-
                {
                  "http_router_id": "${yandex_alb_http_router.my-router.id}",
                  "name": "my-virtual-host",
                  "route": [
                    {
                      "http_route": [
                        {
                          "http_route_action": [
                            {
                              "backend_group_id": "${yandex_alb_backend_group.my-bg.id}",
                              "timeout": "3s"
                            }
                          ]
                        }
                      ],
                      "name": "my-route"
                    }
                  ]
                }
              references:
                http_router_id: yandex_alb_http_router.my-router.id
                route.http_route.http_route_action.backend_group_id: yandex_alb_backend_group.my-bg.id
        argumentDocs:
            action: (String)
            all_requests: '(Block List, Max: 1) Rate limit configuration applied to all incoming requests (see below for nested schema)'
            and_principals: '(Block List, Min: 1) (see below for nested schema)'
            any: (Boolean)
            append: (String) Append string to the header value.
            authority: (Set of String) A list of domains (host/authority header) that will be matched to this virtual host. Wildcard hosts are supported in the form of '.foo.com' or '-bar.foo.com'. If not specified, all domains will be matched.
            auto_host_rewrite: (Boolean) If set, will automatically rewrite host.
            backend_group_id: (String) Backend group to route requests.
            body: (String) Response body text.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            direct_response_action: '(Block List, Max: 1) Direct response action resource. (see below for nested schema)'
            exact: (String) Match exactly.
            fqmn: '(Block List, Max: 1) The path and fqmn blocks.'
            grpc_match: (Block List) Checks / prefix by default. (see below for nested schema)
            grpc_route: '(Block List, Max: 1) gRPC route resource.'
            grpc_route_action: '(Block List, Max: 1) gRPC route action resource.'
            grpc_status_response_action: '(Block List, Max: 1) gRPC status response action resource. (see below for nested schema)'
            header: '(Block List, Max: 1) (see below for nested schema)'
            host_rewrite: (String) Host rewrite specifier.
            http_match: (Block List) Checks / prefix by default. (see below for nested schema)
            http_method: (Set of String) List of methods (strings).
            http_route: '(Block List, Max: 1) HTTP route resource.'
            http_route_action: '(Block List, Max: 1) HTTP route action resource.'
            http_router_id: (String) The ID of the HTTP router to which the virtual host belongs.
            id: (String) The ID of this resource.
            idle_timeout: (String) Specifies the idle timeout (time without any data transfer for the active request) for the route. It is useful for streaming scenarios - one should set idle_timeout to something meaningful and max_timeout to the maximum time the stream is allowed to be alive. If not specified, there is no per-route idle timeout.
            max_timeout: (String) Lower timeout may be specified by the client (using grpc-timeout header). If not set, default is 60 seconds.
            modify_request_headers: (Block List) Apply the following modifications to the Request/Response header.
            modify_response_headers: (Block List) Apply the following modifications to the Request/Response header.
            name: (String) The resource name.
            path: '(Block List, Max: 1) The path and fqmn blocks.'
            per_minute: (Number) Limit value specified with per minute time unit
            per_second: (Number) Limit value specified with per second time unit
            prefix: (String) Match prefix.
            prefix_rewrite: (String) If not empty, matched path prefix will be replaced by this value.
            principals: '(Block List, Min: 1) (see below for nested schema)'
            rate_limit: '(Block List, Max: 1) Rate limit configuration applied for a whole virtual host (see below for nested schema)'
            rbac: '(Block List, Max: 1) RBAC configuration. (see below for nested schema)'
            redirect_action: '(Block List, Max: 1) Redirect action resource.'
            regex: (String) Match regex.
            regex_rewrite: '(Block List, Max: 1) Replacement for path substrings that match the pattern (see below for nested schema)'
            remote_ip: (String)
            remove: (Boolean) If set, remove the header.
            remove_query: (Boolean) If set, remove query part.
            replace: (String) New value for a header. Header values support the following formatters.
            replace_host: (String) Replaces hostname.
            replace_path: (String) Replace path.
            replace_port: (Number) Replaces port.
            replace_prefix: '(String) Replace only matched prefix. Example: match:{ prefix_match: /some }  redirect: { replace_prefix: /other }  will redirect /something to /otherthing.'
            replace_scheme: (String) Replaces scheme. If the original scheme is http or https, will also remove the 80 or 443 port, if present.
            requests_per_ip: '(Block List, Max: 1) Rate limit configuration applied separately for each set of requests grouped by client IP address (see below for nested schema)'
            response_code: '(String) The HTTP status code to use in the redirect response. Supported values are: moved_permanently, found, see_other, temporary_redirect, permanent_redirect.'
            route: (Block List) A Route resource. Routes are matched in-order. Be careful when adding them to the end. For instance, having http '/' match first makes all other routes unused.
            route_options: '(Block List, Max: 1) Route options for the virtual host. (see below for nested schema)'
            security_profile_id: (String) SWS profile ID.
            status: '(String) The status of the response. Supported values are: ok, invalid_argumet, not_found, permission_denied, unauthenticated, unimplemented, internal, unavailable.'
            substitute: (String) The string which should be used to substitute matched substrings
            timeout: (String) Specifies the request timeout (overall time request processing is allowed to take) for the route. If not set, default is 60 seconds.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            upgrade_types: (Set of String) List of upgrade types. Only specified upgrade types will be allowed. For example, websocket.
            value: '(Block List, Max: 1) The path and fqmn blocks.'
        importStatements: []
    yandex_api_gateway:
        subCategory: Yandex API Gateway
        description: Allows management of a Yandex API Gateway.
        name: yandex_api_gateway
        title: yandex_api_gateway
        examples:
            - name: test-api-gateway
              manifest: |-
                {
                  "canary": [
                    {
                      "variables": {
                        "installation": "dev"
                      },
                      "weight": 20
                    }
                  ],
                  "connectivity": [
                    {
                      "network_id": "\u003cdynamic network id\u003e"
                    }
                  ],
                  "custom_domains": [
                    {
                      "certificate_id": "\u003ccertificate_id_from_cert_manager\u003e",
                      "fqdn": "test.example.com"
                    }
                  ],
                  "description": "any description",
                  "execution_timeout": "300",
                  "labels": {
                    "empty-label": "",
                    "label": "label"
                  },
                  "log_options": [
                    {
                      "log_group_id": "\u003clog group id\u003e",
                      "min_level": "ERROR"
                    }
                  ],
                  "name": "some_name",
                  "spec": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Test API\nx-yc-apigateway:\n  variables:\n    installation:\n      default: \"prod\"\n      enum:\n       - \"prod\"\n       - \"dev\"\npaths:\n  /hello:\n    get:\n      summary: Say hello\n      operationId: hello\n      parameters:\n        - name: user\n          in: query\n          description: User name to appear in greetings\n          required: false\n          schema:\n            type: string\n            default: 'world'\n      responses:\n        '200':\n          description: Greeting\n          content:\n            'text/plain':\n              schema:\n                type: \"string\"\n      x-yc-apigateway-integration:\n        type: dummy\n        http_code: 200\n        http_headers:\n          'Content-Type': \"text/plain\"\n        content:\n          'text/plain': \"Hello again, {user} from ${apigw.installation} release!\\n\"\n",
                  "variables": {
                    "installation": "prod"
                  }
                }
        argumentDocs:
            canary: '(Block List, Max: 1) Canary release settings of gateway. (see below for nested schema)'
            certificate_id: (String)
            connectivity: '(Block List, Max: 1) Gateway connectivity. If specified the gateway will be attached to specified network. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            custom_domains: (Block Set) Set of custom domains to be attached to Yandex Cloud API Gateway. (see below for nested schema)
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disabled: (Boolean) Is logging from Yandex Cloud API Gateway disabled.
            domain: (String) Default domain for the Yandex Cloud API Gateway. Generated at creation time.
            domain_id: (String)
            execution_timeout: (String) Execution timeout in seconds for the Yandex Cloud API Gateway.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String)
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) ID of the log group for the Yandex Cloud API Gateway.
            log_options: '(Block List, Max: 1) Options for logging from Yandex Cloud API Gateway. (see below for nested schema)'
            min_level: (String) Minimum log entry level.
            name: (String) The resource name.
            network_id: (String) Network the gateway will have access to. It's essential to specify network with subnets in all availability zones.
            spec: (String) The OpenAPI specification for Yandex Cloud API Gateway.
            status: (String) Status of the Yandex Cloud API Gateway.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user_domains: (Set of String, Deprecated) ~> DEPRECATED Use custom_domains instead. Set of user domains attached to Yandex Cloud API Gateway.
            variables: (Map of String) A set of values for variables in gateway specification.
            weight: (Number) Percentage of requests, which will be processed by canary release.
        importStatements: []
    yandex_audit_trails_trail:
        subCategory: Audit Trails
        description: Manages a trail resource.
        name: yandex_audit_trails_trail
        title: yandex_audit_trails_trail
        examples:
            - name: basic-trail
              manifest: |-
                {
                  "description": "Some trail description",
                  "filtering_policy": [
                    {
                      "data_events_filter": [
                        {
                          "resource_scope": [
                            {
                              "resource_id": "home-folder",
                              "resource_type": "resource-manager.folder"
                            }
                          ],
                          "service": "storage"
                        },
                        {
                          "dns_filter": [
                            {
                              "include_nonrecursive_queries": true
                            }
                          ],
                          "resource_scope": [
                            {
                              "resource_id": "vpc-net-id-1",
                              "resource_type": "vpc.network"
                            },
                            {
                              "resource_id": "vpc-net-id-2",
                              "resource_type": "vpc.network"
                            }
                          ],
                          "service": "dns"
                        }
                      ],
                      "management_events_filter": [
                        {
                          "resource_scope": [
                            {
                              "resource_id": "home-folder",
                              "resource_type": "resource-manager.folder"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "folder_id": "home-folder",
                  "labels": {
                    "key": "value"
                  },
                  "logging_destination": [
                    {
                      "log_group_id": "some-log-group"
                    }
                  ],
                  "name": "basic-trail",
                  "service_account_id": "trail-service-account"
                }
            - name: basic_trail
              manifest: |-
                {
                  "data_stream_destination": [
                    {
                      "database_id": "some-database",
                      "stream_name": "some-stream"
                    }
                  ],
                  "description": "Some trail description",
                  "filtering_policy": [
                    {
                      "data_events_filter": [
                        {
                          "resource_scope": [
                            {
                              "resource_id": "some-organization",
                              "resource_type": "organization-manager.organization"
                            }
                          ],
                          "service": "storage"
                        },
                        {
                          "dns_filter": [
                            {
                              "include_nonrecursive_queries": true
                            }
                          ],
                          "resource_scope": [
                            {
                              "resource_id": "some-organization",
                              "resource_type": "organization-manager.organization"
                            }
                          ],
                          "service": "dns"
                        }
                      ],
                      "management_events_filter": [
                        {
                          "resource_scope": [
                            {
                              "resource_id": "some-organization",
                              "resource_type": "organization-manager.organization"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "folder_id": "home-folder",
                  "labels": {
                    "key": "value"
                  },
                  "name": "a-trail",
                  "service_account_id": "trail-service-account"
                }
        argumentDocs:
            any_filter: '(Block List, Max: 1) Deprecated. (see below for nested schema)'
            any_filters: '(Block List, Min: 1) Deprecated. (see below for nested schema)'
            bucket_name: (String) Name of the destination bucket.
            categories: '(Block List, Min: 1) Deprecated. (see below for nested schema)'
            data_events_filter: (Block List) Structure describing filtering process for the service-specific data events. (see below for nested schema)
            data_stream_destination: '(Block List, Max: 1) Structure describing destination data stream of the trail. Mutually exclusive with logging_destination and storage_destination. (see below for nested schema)'
            database_id: (String) ID of the YDB hosting the destination data stream.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            description: (String) The resource description.
            dns_filter: '(Block List, Max: 1) Specific filter for DNS service. (see below for nested schema)'
            event_filters: (Block List) Deprecated. (see below for nested schema)
            excluded_events: (List of String) A list of events that won't be gathered by the trail from this service. New events will be automatically gathered when this option is specified. Mutually exclusive with included_events.
            filter: '(Block List, Max: 1, Deprecated) Structure is deprecated. Use filtering_policy instead. (see below for nested schema)'
            filter.event_filters.categories: blocks. With the introduction of included_events/excluded_events you can configure filtering per each event type.
            filter.event_filters.path_filter: with the appropriate resource_scope blocks. You have to account that resource_scope does not support specifying relations between resources, so your configuration will simplify to only the actual resources, that will be monitored.
            filter.path_filter: block with the filtering_policy.management_events_filter. New API states management events filtration in a more clear way. The resources, that were specified, must migrate into the filtering_policy.management_events_filter.resource_scope.
            filtering_policy: '(Block List, Max: 1) Structure describing event filtering process for the trail. Mutually exclusive with filter. At least one of the management_events_filter or data_events_filter fields will be filled. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            include_nonrecursive_queries: (Boolean) All types of queries will be delivered.
            included_events: (List of String) A list of events that will be gathered by the trail from this service. New events won't be gathered by default when this option is specified. Mutually exclusive with excluded_events.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) ID of the destination Cloud Logging Group.
            logging_destination: '(Block List, Max: 1) Structure describing destination log group of the trail. Mutually exclusive with storage_destination and data_stream_destination. (see below for nested schema)'
            management_events_filter: '(Block List, Max: 1) Structure describing filtering process for management events. (see below for nested schema)'
            name: (String) The resource name.
            object_prefix: (String) Additional prefix of the uploaded objects. If not specified, objects will be uploaded with prefix equal to trail_id.
            path_filter: '(Block List, Max: 1) Deprecated. (see below for nested schema)'
            plane: (String) Deprecated.
            resource_id: (String) Resource ID.
            resource_scope: '(Block List, Min: 1) Structure describing that events will be gathered from the specified resource. (see below for nested schema)'
            resource_type: (String) Resource type.
            service: (String) Deprecated.
            service_account_id: (String) Service account which linked to the resource.
            some_filter: '(Block List, Max: 1) Deprecated. (see below for nested schema)'
            status: (String) Status of this trail.
            storage_destination: '(Block List, Max: 1) Structure describing destination bucket of the trail. Mutually exclusive with logging_destination and data_stream_destination. (see below for nested schema)'
            stream_name: (String) Name of the YDS stream belonging to the specified YDB.
            timeouts: (Block, Optional) (see below for nested schema)
            trail_id: (String) ID of the trail resource.
            type: (String) Deprecated.
        importStatements: []
    yandex_backup_policy:
        subCategory: Cloud Backup
        description: Allows management of Yandex Cloud Backup Policy.
        name: yandex_backup_policy
        title: yandex_backup_policy
        examples:
            - name: basic_policy
              manifest: |-
                {
                  "name": "basic policy",
                  "reattempts": [
                    {}
                  ],
                  "retention": [
                    {
                      "after_backup": false
                    }
                  ],
                  "scheduling": [
                    {
                      "backup_sets": [
                        {
                          "execute_by_interval": 86400
                        }
                      ],
                      "enabled": false
                    }
                  ],
                  "vm_snapshot_reattempts": [
                    {}
                  ]
                }
            - name: my_policy
              manifest: |-
                {
                  "archive_name": "[Machine Name]-[Plan ID]-[Unique ID]a",
                  "cbt": "USE_IF_ENABLED",
                  "compression": "NORMAL",
                  "fast_backup_enabled": true,
                  "format": "AUTO",
                  "multi_volume_snapshotting_enabled": true,
                  "name": "example_name",
                  "performance_window_enabled": true,
                  "preserve_file_security_settings": true,
                  "quiesce_snapshotting_enabled": true,
                  "reattempts": [
                    {
                      "enabled": true,
                      "interval": "1m",
                      "max_attempts": 10
                    }
                  ],
                  "retention": [
                    {
                      "after_backup": false,
                      "rules": [
                        {
                          "max_age": "365d",
                          "repeat_period": []
                        }
                      ]
                    }
                  ],
                  "scheduling": [
                    {
                      "backup_sets": [
                        {
                          "execute_by_time": [
                            {
                              "include_last_day_of_month": true,
                              "monthdays": [],
                              "months": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                              ],
                              "repeat_at": [
                                "04:10"
                              ],
                              "repeat_every": "30m",
                              "type": "MONTHLY",
                              "weekdays": []
                            }
                          ]
                        }
                      ],
                      "enabled": false,
                      "max_parallel_backups": 0,
                      "random_max_delay": "30m",
                      "scheme": "ALWAYS_INCREMENTAL",
                      "weekly_backup_day": "MONDAY"
                    }
                  ],
                  "silent_mode_enabled": true,
                  "splitting_bytes": "9223372036854775807",
                  "vm_snapshot_reattempts": [
                    {
                      "enabled": true,
                      "interval": "1m",
                      "max_attempts": 10
                    }
                  ],
                  "vss_provider": "NATIVE"
                }
        argumentDocs:
            M: — months
            after_backup: (Boolean) Defines whether retention rule applies after creating backup or before.
            archive_name: (String) The name of generated archives. Default [Machine Name]-[Plan ID]-[Unique ID]a.
            backup_sets: (Block Set) A list of schedules with backup sets that compose the whole scheme. (see below for nested schema)
            cbt: '(String) Configuration of Changed Block Tracking. Available values are: USE_IF_ENABLED, ENABLED_AND_USE, DO_NOT_USE. Default DO_NOT_USE.'
            compression: '(String) Archive compression level. Affects CPU. Available values: NORMAL, HIGH, MAX, OFF. Default: NORMAL.'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            d: — days
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            enabled: (Boolean) If this field is true, it means that the policy is enabled.
            exclusion_masks: (List of String) Do not backup files that match the following criteria.
            execute_by_interval: '(Number, Deprecated) Perform backup by interval, since last backup of the host. Maximum value is: 9999 days. See interval_type for available values. Exactly on of options should be set: execute_by_interval or execute_by_time.'
            execute_by_time: '(Block Set, Deprecated) Perform backup periodically at specific time. Exactly on of options should be set: execute_by_interval or execute_by_time. (see below for nested schema)'
            fast_backup_enabled: (Boolean) If true, determines whether a file has changed by the file size and timestamp. Otherwise, the entire file contents are compared to those stored in the backup.
            file_filters: '(Block List, Max: 1) File filters to specify masks of files to backup or to exclude of backuping. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            format: '(String) Format of the backup. It''s strongly recommend to leave this option empty or AUTO. Available values: AUTO, VERSION_11, VERSION_12.'
            h: — hours
            id: (String) The ID of this resource.
            include_last_day_of_month: (Boolean) If true, schedule will be applied on the last day of month. See day_type for available values. Default false.
            inclusion_masks: (List of String) Backup only files that match the following criteria.
            interval: '(String) Retry interval. See interval_type for available values. Default: 5m.'
            lvm_snapshotting_enabled: (Boolean) LVM will be used to create the volume snapshot. If LVM fails to create a snapshot (for example, because there is not enough free space), the software will create the snapshot itself.
            m: — minutes
            max_age: (String) Deletes backups that older than max_age. Exactly one of max_count or max_age should be set.
            max_attempts: (Number) Maximum number of attempts before throwing an error. Default 5.
            max_count: (Number) Deletes backups if it's count exceeds max_count. Exactly one of max_count or max_age should be set.
            max_parallel_backups: (Number) Maximum number of backup processes allowed to run in parallel. 0 for unlimited. Default 0.
            monthdays: (List of Number) List of days when schedule applies. Used in MONTHLY type.
            months: (List of Number) Set of values. Allowed values form 1 to 12.
            multi_volume_snapshotting_enabled: (Boolean) If true, snapshots of multiple volumes will be taken simultaneously. Default true.
            name: (String) The resource name.
            performance_window_enabled: (Boolean) Time windows for performance limitations of backup. Default false.
            preserve_file_security_settings: (Boolean, Deprecated) If true, a quiesced snapshot of the virtual machine will be taken. Default true.
            quiesce_snapshotting_enabled: (Boolean, Deprecated) If true, a quiesced snapshot of the virtual machine will be taken. Default true.
            random_max_delay: (String) Configuration of the random delay between the execution of parallel tasks. See interval_type for available values. Default 30m.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            reattempts: '(Block Set, Min: 1, Max: 1) Amount of reattempts that should be performed while trying to make backup at the host. (see below for nested schema)'
            repeat_at: (List of String) List of time in format HH:MM (24-hours format), when the schedule applies.
            repeat_every: (String) Frequency of backup repetition. See interval_type for available values.
            repeat_period: '(List of String) Possible types: REPEATE_PERIOD_UNSPECIFIED, HOURLY, DAILY, WEEKLY, MONTHLY. Specifies repeat period of the backupset.'
            retention: '(Block Set, Min: 1, Max: 1) Retention policy for backups. Allows to setup backups lifecycle. (see below for nested schema)'
            rules: (Block Set) A list of retention rules. (see below for nested schema)
            run_later: (Boolean) If true and if the machine is off, launch missed tasks on boot up. Default false.
            s: — seconds
            scheduling: '(Block Set, Min: 1, Max: 1) Schedule settings for creating backups on the host. (see below for nested schema)'
            scheme: '(String) Scheme of the backups. Available values are: ALWAYS_INCREMENTAL, ALWAYS_FULL, WEEKLY_FULL_DAILY_INCREMENTAL, WEEKLY_INCREMENTAL. Default ALWAYS_INCREMENTAL.'
            sector_by_sector: (Boolean) A sector-by-sector backup of a disk or volume creates a backup copy of all sectors of the disk or volume, including those that do not contain data. Therefore, the size of such a backup copy will be equal to the size of the original disk or volume.
            silent_mode_enabled: (Boolean) If true, a user interaction will be avoided when possible. Default true.
            splitting_bytes: (String) Determines the size to split backups. It's better to leave this option unchanged. Default 9223372036854775807.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) BackupSet type. See backup_set_type for available values. Default TYPE_AUTO.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            updated_at: (String) The update timestamp of the resource.
            validation_enabled: (Boolean) Validation is a time-consuming process, even with incremental or differential backups of small amounts of data. This is because not only the data physically contained in the backup copy is verified, but all data restored when it is selected. This option requires access to previously created backup copies.
            vm_snapshot_reattempts: '(Block Set, Min: 1, Max: 1) Amount of reattempts that should be performed while trying to make snapshot. (see below for nested schema)'
            vss_provider: '(String) Settings for the volume shadow copy service. Available values are: NATIVE, TARGET_SYSTEM_DEFINED. Default NATIVE.'
            w: — weekdays
            weekdays: (List of String) List of weekdays when the backup will be applied. Used in WEEKLY type.
            weekly_backup_day: (String) A day of week to start weekly backups. See day_type for available values. Default MONDAY.
        importStatements: []
    yandex_backup_policy_bindings:
        subCategory: Cloud Backup
        description: Allows to bind compute instance with backup policy.
        name: yandex_backup_policy_bindings
        title: yandex_backup_policy_bindings
        examples:
            - name: test_backup_binding
              manifest: |-
                {
                  "instance_id": "${yandex_compute_instance.test_backup_compute.id}",
                  "policy_id": "${data.yandex_backup_policy.test_backup_policy.id}"
                }
              references:
                instance_id: yandex_compute_instance.test_backup_compute.id
                policy_id: data.yandex_backup_policy.test_backup_policy.id
              dependencies:
                yandex_compute_instance.test_backup_compute: |-
                    {
                      "boot_disk": [
                        {
                          "initialize_params": [
                            {
                              "image_id": "${data.yandex_compute_image.ubuntu.id}"
                            }
                          ]
                        }
                      ],
                      "metadata": {
                        "user-data": "#cloud-config\npackages:\n  - curl\n  - perl\n  - jq\nruncmd:\n  - curl https://storage.yandexcloud.net/backup-distributions/agent_installer.sh | sudo bash\n"
                      },
                      "name": "test-backup-compute",
                      "network_interface": [
                        {
                          "nat": true,
                          "security_group_ids": [
                            "${yandex_vpc_security_group.test_backup_security_group.id}"
                          ],
                          "subnet_id": "${yandex_vpc_subnet.test_backup_subnet.id}"
                        }
                      ],
                      "platform_id": "standard-v1",
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 4
                        }
                      ],
                      "service_account_id": "${yandex_iam_service_account.test_sa.id}",
                      "zone": "ru-central1-a"
                    }
                yandex_iam_service_account.test_sa: |-
                    {
                      "name": "sa-backup-editor"
                    }
                yandex_resourcemanager_folder_iam_member.test_binding: |-
                    {
                      "folder_id": "${yandex_iam_service_account.test_sa.folder_id}",
                      "member": "serviceAccount:${yandex_iam_service_account.test_sa.id}",
                      "role": "backup.editor"
                    }
                yandex_vpc_network.test_backup_network: '{}'
                yandex_vpc_security_group.test_backup_security_group: |-
                    {
                      "egress": [
                        {
                          "from_port": 7770,
                          "protocol": "TCP",
                          "to_port": 7800,
                          "v4_cidr_blocks": [
                            "84.47.172.0/24"
                          ]
                        },
                        {
                          "port": 443,
                          "protocol": "TCP",
                          "v4_cidr_blocks": [
                            "213.180.204.0/24",
                            "213.180.193.0/24",
                            "178.176.128.0/24",
                            "84.201.181.0/24",
                            "84.47.172.0/24"
                          ]
                        },
                        {
                          "port": 80,
                          "protocol": "TCP",
                          "v4_cidr_blocks": [
                            "213.180.204.0/24",
                            "213.180.193.0/24"
                          ]
                        },
                        {
                          "port": 8443,
                          "protocol": "TCP",
                          "v4_cidr_blocks": [
                            "84.47.172.0/24"
                          ]
                        },
                        {
                          "port": 44445,
                          "protocol": "TCP",
                          "v4_cidr_blocks": [
                            "51.250.1.0/24"
                          ]
                        }
                      ],
                      "name": "cloud-backup",
                      "network_id": "${yandex_vpc_network.test_backup_network.id}"
                    }
                yandex_vpc_subnet.test_backup_subnet: |-
                    {
                      "network_id": "${yandex_vpc_network.test_backup_network.id}",
                      "v4_cidr_blocks": [
                        "192.168.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            enabled: (Boolean) Flag is specifies whether the policy application is enabled. May be false if Processing flag is true.
            id: (String) The ID of this resource.
            instance_id: (String) Compute Cloud instance ID.
            policy_id: (String) Backup Policy ID.
            processing: (Boolean) Flag that specifies whether the policy is in the process of binding to an instance.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_billing_cloud_binding:
        subCategory: Cloud Billing
        description: Bind cloud to billing account.
        name: yandex_billing_cloud_binding
        title: yandex_billing_cloud_binding
        examples:
            - name: foo
              manifest: |-
                {
                  "billing_account_id": "foo-ba-id",
                  "cloud_id": "foo-cloud-id"
                }
        argumentDocs:
            billing_account_id: (String) The ID of billing account to bind cloud to.
            cloud_id: (String) Service Instance ID.
            id: (String) The resource identifier.
        importStatements: []
    yandex_cdn_origin_group:
        subCategory: Cloud Content Delivery Network (CDN)
        description: Allows management of a Yandex Cloud CDN Origin Groups.
        name: yandex_cdn_origin_group
        title: yandex_cdn_origin_group
        examples:
            - name: my_group
              manifest: |-
                {
                  "name": "My Origin group",
                  "origin": [
                    {
                      "source": "ya.ru"
                    },
                    {
                      "source": "yandex.ru"
                    },
                    {
                      "source": "goo.gl"
                    },
                    {
                      "backup": false,
                      "source": "amazon.com"
                    }
                  ],
                  "use_next": true
                }
        argumentDocs:
            backup: (Boolean) Specifies whether the origin is used in its origin group as backup. A backup origin is used when one of active origins becomes unavailable.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            enabled: (Boolean) The origin is enabled and used as a source for the CDN. Default enabled.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            name: (String) The resource name.
            origin: '(Block Set, Min: 1) A set of available origins, an origins group must contain at least one enabled origin with fields below. (see below for nested schema)'
            origin_group_id: (Number)
            source: (String) IP address or Domain name of your origin and the port.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            use_next: (Boolean) If the option is active (has true value), in case the origin responds with 4XX or 5XX codes, use the next origin from the list.
        importStatements: []
    yandex_cdn_resource:
        subCategory: Cloud Content Delivery Network (CDN)
        description: Allows management of a Yandex Cloud CDN Resource.
        name: yandex_cdn_resource
        title: yandex_cdn_resource
        examples:
            - name: my_resource
              manifest: |-
                {
                  "active": false,
                  "cname": "cdn1.yandex-example.ru",
                  "options": [
                    {
                      "edge_cache_settings": 345600,
                      "ignore_cookie": true,
                      "static_request_headers": {
                        "is-from-cdn": "yes"
                      },
                      "static_response_headers": {
                        "is-cdn": "yes"
                      }
                    }
                  ],
                  "origin_group_id": "${yandex_cdn_origin_group.foo_cdn_group_by_id.id}",
                  "origin_protocol": "https",
                  "secondary_hostnames": [
                    "cdn-example-1.yandex.ru",
                    "cdn-example-2.yandex.ru"
                  ]
                }
              references:
                origin_group_id: yandex_cdn_origin_group.foo_cdn_group_by_id.id
        argumentDocs:
            active: (Boolean) Flag to create Resource either in active or disabled state. True - the content from CDN is available to clients.
            allowed_http_methods: '(List of String) HTTP methods for your CDN content. By default the following methods are allowed: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS. In case some methods are not allowed to the user, they will get the 405 (Method Not Allowed) response. If the method is not supported, the user gets the 501 (Not Implemented) response.'
            browser_cache_settings: '(Number) Set up a cache period for the end-users browser. Content will be cached due to origin settings. If there are no cache settings on your origin, the content will not be cached. The list of HTTP response codes that can be cached in browsers: 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Other response codes will not be cached. The default value is 4 days.'
            cache_http_headers: (List of String) List HTTP headers that must be included in responses to clients.
            certificate_manager_id: (String) Certificate Manager ID.
            cname: (String) CDN endpoint CNAME, must be unique among resources.
            cors: (List of String) Parameter that lets browsers get access to selected resources from a domain different to a domain from which the request is received.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            custom_host_header: (String) Custom value for the Host header. Your server must be able to process requests with the chosen header.
            custom_server_name: (String) Wildcard additional CNAME. If a resource has a wildcard additional CNAME, you can use your own certificate for content delivery via HTTPS.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            disable_cache: (Boolean) Setup a cache status.
            disable_proxy_force_ranges: (Boolean) Disabling proxy force ranges.
            edge_cache_settings: (Number) Content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers. Responses with other codes will not be cached.
            enable_ip_url_signing: (Boolean) Enable access limiting by IP addresses, option available only with setting secure_key.
            excepted_values: (List of String) The list of specified IP addresses to be allowed or denied depending on acl policy type.
            fetched_compressed: (Boolean) Option helps you to reduce the bandwidth between origin and CDN servers. Also, content delivery speed becomes higher because of reducing the time for compressing files in a CDN.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            forward_host_header: (Boolean) Choose the Forward Host header option if is important to send in the request to the Origin the same Host header as was sent in the request to CDN server.
            gzip_on: (Boolean) GZip compression at CDN servers reduces file size by 70% and can be as high as 90%.
            id: (String) The ID of this resource.
            ignore_cookie: (Boolean) Set for ignoring cookie.
            ignore_query_params: (Boolean) Files with different query parameters are cached as objects with the same key regardless of the parameter value. selected by default.
            ip_address_acl: '(Block List, Max: 1) IP address access control list. The list of specified IP addresses to be allowed or denied depending on acl policy type. (see below for nested schema)'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            options: '(Block List, Max: 1) CDN Resource settings and options to tune CDN edge behavior. (see below for nested schema)'
            origin_group_id: (Number) The ID of a specific origin group.
            origin_group_name: (String) The name of a specific origin group.
            origin_protocol: (String) Protocol of origin resource. http or https.
            policy_type: (String) The policy type for ACL. One of allow or deny values.
            provider_cname: (String) Provider CNAME of CDN resource, computed value for read and update operations.
            proxy_cache_methods_set: (Boolean) Allows caching for GET, HEAD and POST requests.
            query_params_blacklist: (List of String) Files with the specified query parameters are cached as objects with the same key, files with other parameters are cached as objects with different keys.
            query_params_whitelist: (List of String) Files with the specified query parameters are cached as objects with different keys, files with other parameters are cached as objects with the same key.
            redirect_http_to_https: (Boolean) Set up a redirect from HTTP to HTTPS.
            redirect_https_to_http: (Boolean) Set up a redirect from HTTPS to HTTP.
            secondary_hostnames: (Set of String) List of secondary hostname strings.
            secure_key: (String) Set secure key for url encoding to protect contect and limit access by IP addresses and time limits.
            slice: (Boolean) Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte. The origin must support HTTP Range requests.
            ssl_certificate: '(Block Set, Max: 1) SSL certificate of CDN resource. (see below for nested schema)'
            static_request_headers: (Map of String) Set up custom headers that CDN servers will send in requests to origins.
            static_response_headers: (Map of String) Set up a static response header. The header name must be lowercase.
            status: (String) SSL certificate status.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) SSL certificate type.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            updated_at: (String) Last update timestamp. Computed value for read and update operations.
        importStatements: []
    yandex_cm_certificate:
        subCategory: Certificate Manager
        description: A TLS certificate signed by a certification authority confirming that it belongs to the owner of the domain name.
        name: yandex_cm_certificate
        title: yandex_cm_certificate
        examples:
            - name: example
              manifest: |-
                {
                  "domains": [
                    "example.com"
                  ],
                  "managed": [
                    {
                      "challenge_type": "DNS_CNAME"
                    }
                  ],
                  "name": "example"
                }
            - name: example
              manifest: |-
                {
                  "domains": [
                    "one.example.com",
                    "two.example.com"
                  ],
                  "managed": [
                    {
                      "challenge_count": 2,
                      "challenge_type": "DNS_CNAME"
                    }
                  ],
                  "name": "example"
                }
              dependencies:
                yandex_dns_recordset.example: |-
                    {
                      "count": "${yandex_cm_certificate.example.managed[0].challenge_count}",
                      "data": [
                        "${yandex_cm_certificate.example.challenges[count.index].dns_value}"
                      ],
                      "name": "${yandex_cm_certificate.example.challenges[count.index].dns_name}",
                      "ttl": 60,
                      "type": "${yandex_cm_certificate.example.challenges[count.index].dns_type}",
                      "zone_id": "example-zone-id"
                    }
            - name: example
              manifest: |-
                {
                  "domains": [
                    "example.com",
                    "*.example.com"
                  ],
                  "managed": [
                    {
                      "challenge_count": 1,
                      "challenge_type": "DNS_CNAME"
                    }
                  ],
                  "name": "example"
                }
              dependencies:
                yandex_dns_recordset.example: |-
                    {
                      "count": "${yandex_cm_certificate.example.managed[0].challenge_count}",
                      "data": [
                        "${yandex_cm_certificate.example.challenges[count.index].dns_value}"
                      ],
                      "name": "${yandex_cm_certificate.example.challenges[count.index].dns_name}",
                      "ttl": 60,
                      "type": "${yandex_cm_certificate.example.challenges[count.index].dns_type}",
                      "zone_id": "example-zone-id"
                    }
            - name: example
              manifest: |-
                {
                  "name": "example",
                  "self_managed": [
                    {
                      "certificate": "-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE----- \n -----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----",
                      "private_key": "-----BEGIN RSA PRIVATE KEY----- ... -----END RSA PRIVATE KEY-----"
                    }
                  ]
                }
        argumentDocs:
            DNS_CNAME: '- you will need to create a CNAME dns record with the specified value. Recommended for fully automated certificate renewal.'
            DNS_TXT: '- you will need to create a TXT dns record with specified value.'
            HTTP: '- you will need to place specified value into specified url.'
            certificate: (String) Certificate with chain.
            challenge_count: (Number) Expected number of challenge count needed to validate certificate. Resource creation will fail if the specified value does not match the actual number of challenges received from issue provider. This argument is helpful for safe automatic resource creation for passing challenges for multi-domain certificates.
            challenge_type: '(String) Domain owner-check method. Possible values:'
            challenges: (List of Object) Array of challenges. (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            dns_name: (String)
            dns_type: (String)
            dns_value: (String)
            domain: (String)
            domains: (List of String) Domains for this certificate. Should be specified for managed certificates.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            http_content: (String)
            http_url: (String)
            id: (String) The ID of this resource.
            issued_at: (String) Certificate issue timestamp.
            issuer: (String) Certificate Issuer.
            key: (String) Key of the Lockbox secret, the value of which contains the private key of the certificate.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            managed: '(Block List, Max: 1) Managed specification.'
            message: (String)
            name: (String) The resource name.
            not_after: (String) Certificate end valid period.
            not_before: (String) Certificate start valid period.
            private_key: (String, Sensitive) Private key of certificate.
            private_key_lockbox_secret: '(Block List, Max: 1) Lockbox secret specification for getting private key. (see below for nested schema)'
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            self_managed: '(Block List, Max: 1) Self-managed specification.'
            serial: (String) Certificate Serial Number.
            status: '(String) Certificate status: VALIDATING, INVALID, ISSUED, REVOKED, RENEWING or RENEWAL_FAILED.'
            subject: (String) Certificate Subject.
            timeouts: (Block, Optional) (see below for nested schema)
            type: '(String) Certificate type: MANAGED or IMPORTED.'
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            updated_at: (String) Certificate update timestamp.
        importStatements: []
    yandex_cm_certificate_iam_binding:
        subCategory: Certificate Manager
        description: Allows management of a single IAM binding for a Certificate Manager.
        name: yandex_cm_certificate_iam_binding
        title: yandex_cm_certificate_iam_binding
        examples:
            - name: viewer_binding
              manifest: |-
                {
                  "certificate_id": "${yandex_cm_certificate.your-certificate.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer"
                }
              references:
                certificate_id: yandex_cm_certificate.your-certificate.id
              dependencies:
                yandex_cm_certificate.your-certificate: |-
                    {
                      "domains": [
                        "example.com"
                      ],
                      "managed": [
                        {
                          "challenge_type": "DNS_CNAME"
                        }
                      ],
                      "name": "certificate-name"
                    }
        argumentDocs:
            certificate_id: (String) The Certificate ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_cm_certificate_iam_member:
        subCategory: Certificate Manager
        description: Allows management of a single member for a single IAM member.
        name: yandex_cm_certificate_iam_member
        title: yandex_cm_certificate_iam_member
        examples:
            - name: viewer_member
              manifest: |-
                {
                  "certificate_id": "${yandex_cm_certificate.your-certificate.id}",
                  "member": "userAccount:foo_user_id",
                  "role": "viewer"
                }
              references:
                certificate_id: yandex_cm_certificate.your-certificate.id
              dependencies:
                yandex_cm_certificate.your-certificate: |-
                    {
                      "domains": [
                        "example.com"
                      ],
                      "managed": [
                        {
                          "challenge_type": "DNS_CNAME"
                        }
                      ],
                      "name": "certificate-name"
                    }
        argumentDocs:
            certificate_id: (String) The Certificate ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_compute_disk:
        subCategory: Compute Cloud
        description: Persistent disks are durable storage devices that function similarly to the physical disks in a desktop or a server.
        name: yandex_compute_disk
        title: yandex_compute_disk
        examples:
            - name: my_disk
              manifest: |-
                {
                  "image_id": "ubuntu-16.04-v20180727",
                  "labels": {
                    "environment": "test"
                  },
                  "name": "disk-name",
                  "type": "network-ssd",
                  "zone": "ru-central1-a"
                }
            - name: my_vm
              manifest: |-
                {
                  "disk_placement_policy": [
                    {
                      "disk_placement_group_id": "${yandex_compute_disk_placement_group.my_pg.id}"
                    }
                  ],
                  "name": "non-replicated-disk-name",
                  "size": 93,
                  "type": "network-ssd-nonreplicated",
                  "zone": "ru-central1-b"
                }
              references:
                disk_placement_policy.disk_placement_group_id: yandex_compute_disk_placement_group.my_pg.id
              dependencies:
                yandex_compute_disk_placement_group.my_pg: |-
                    {
                      "zone": "ru-central1-b"
                    }
        argumentDocs:
            allow_recreate: (Boolean)
            block_size: (Number) Block size of the disk, specified in bytes.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disk_placement_group_id: (String) Specifies Disk Placement Group id.
            disk_placement_policy: '(Block List, Max: 1) Disk placement policy configuration. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            generation2_features: '(Block List, Max: 1) A newer hardware generation, which always uses PCI_TOPOLOGY_V2 and UEFI boot. (see below for nested schema)'
            hardware_generation: '(Block List, Max: 1) Hardware generation and its features, which will be applied to the instance when this disk is used as a boot disk. Provide this property if you wish to override this value, which otherwise is inherited from the source. (see below for nested schema)'
            id: (String) The ID of this resource.
            image_id: (String) The source image to use for disk creation.
            kms_key_id: (String) ID of KMS symmetric key used to encrypt disk.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            legacy_features: '(Block List, Max: 1) Defines the first known hardware generation and its features. (see below for nested schema)'
            name: (String) The resource name.
            pci_topology: (String) A variant of PCI topology, one of PCI_TOPOLOGY_V1 or PCI_TOPOLOGY_V2.
            product_ids: (List of String)
            size: (Number) Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the image_id or snapshot_id parameter, or specify it alone to create an empty persistent disk. If you specify this field along with image_id or snapshot_id, the size value must not be less than the size of the source image or the size of the snapshot.
            snapshot_id: (String) The source snapshot to use for disk creation.
            status: (String) The status of the disk.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of disk to create. Provide this when creating a disk.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements: []
    yandex_compute_disk_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the compute Disk.
        name: yandex_compute_disk_iam_binding
        title: yandex_compute_disk_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "disk_id": "${data.yandex_compute_disk.disk1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                disk_id: data.yandex_compute_disk.disk1.id
              dependencies:
                yandex_compute_disk.disk1: |-
                    {
                      "image_id": "ubuntu-16.04-v20180727",
                      "labels": {
                        "environment": "test"
                      },
                      "name": "disk-name",
                      "type": "network-ssd",
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            disk_id: (String) The ID of the compute Disk to attach the policy to.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_disk_iam_binding can be used per role.
        importStatements: []
    yandex_compute_disk_placement_group:
        subCategory: Compute Cloud
        description: Manages a Disk Placement Group resource.
        name: yandex_compute_disk_placement_group
        title: yandex_compute_disk_placement_group
        examples:
            - name: group1
              manifest: |-
                {
                  "description": "my description",
                  "folder_id": "abc*********123",
                  "name": "test-pg"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            status: (String) Status of the Disk Placement Group.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements: []
    yandex_compute_disk_placement_group_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the Disk Placement Group.
        name: yandex_compute_disk_placement_group_iam_binding
        title: yandex_compute_disk_placement_group_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "disk_placement_group_id": "${data.yandex_compute_disk_placement_group.group1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                disk_placement_group_id: data.yandex_compute_disk_placement_group.group1.id
              dependencies:
                yandex_compute_disk_placement_group.group1: |-
                    {
                      "description": "my description",
                      "folder_id": "abc*********123",
                      "name": "test-pg"
                    }
        argumentDocs:
            disk_placement_group_id: (String) The ID of the compute Disk Placement Group to attach the policy to.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_disk_placement_group_iam_binding can be used per role.
        importStatements: []
    yandex_compute_filesystem:
        subCategory: Compute Cloud
        description: File storage is a virtual file system that can be attached to multiple Compute Cloud VMs in the same availability zone.
        name: yandex_compute_filesystem
        title: yandex_compute_filesystem
        examples:
            - name: default
              manifest: |-
                {
                  "labels": {
                    "environment": "test"
                  },
                  "name": "fs-name",
                  "size": 10,
                  "type": "network-ssd",
                  "zone": "ru-central1-a"
                }
        argumentDocs:
            block_size: (Number) Block size of the filesystem, specified in bytes.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            size: (Number) Size of the filesystem, specified in GB.
            status: (String) The status of the filesystem.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of filesystem to create. Type network-hdd is set by default.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements: []
    yandex_compute_filesystem_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the compute Filesystem.
        name: yandex_compute_filesystem_iam_binding
        title: yandex_compute_filesystem_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "filesystem_id": "${data.yandex_compute_filesystem.fs1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                filesystem_id: data.yandex_compute_filesystem.fs1.id
              dependencies:
                yandex_compute_filesystem.fs1: |-
                    {
                      "labels": {
                        "environment": "test"
                      },
                      "name": "fs-name",
                      "size": 10,
                      "type": "network-ssd",
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            filesystem_id: (String) The ID of the compute Filesystem to attach the policy to.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_filesystem_iam_binding can be used per role.
        importStatements: []
    yandex_compute_gpu_cluster:
        subCategory: Compute Cloud
        description: GPU Cluster connects multiple Compute GPU Instances in the same availability zone with high-speed low-latency network.
        name: yandex_compute_gpu_cluster
        title: yandex_compute_gpu_cluster
        examples:
            - name: default
              manifest: |-
                {
                  "interconnect_type": "infiniband",
                  "labels": {
                    "environment": "test"
                  },
                  "name": "gpu-cluster-name",
                  "zone": "ru-central1-a"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            interconnect_type: (String) Type of interconnect between nodes to use in GPU cluster. Type INFINIBAND is set by default, and it is the only one available at the moment.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            status: (String) The status of the GPU cluster.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements: []
    yandex_compute_gpu_cluster_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the GPU Cluster.
        name: yandex_compute_gpu_cluster_iam_binding
        title: yandex_compute_gpu_cluster_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "gpu_cluster_id": "${data.yandex_compute_gpu_cluster.gpu1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                gpu_cluster_id: data.yandex_compute_gpu_cluster.gpu1.id
              dependencies:
                yandex_compute_gpu_cluster.gpu1: |-
                    {
                      "interconnect_type": "infiniband",
                      "labels": {
                        "environment": "test"
                      },
                      "name": "gpu-cluster-name",
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            gpu_cluster_id: (String) The ID of the compute GPU Cluster to attach the policy to.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_gpu_cluster_iam_binding can be used per role.
        importStatements: []
    yandex_compute_image:
        subCategory: Compute Cloud
        description: Creates a VM image for the Yandex Compute service from an existing tarball.
        name: yandex_compute_image
        title: yandex_compute_image
        examples:
            - name: foo-image
              manifest: |-
                {
                  "name": "my-custom-image",
                  "source_url": "https://storage.yandexcloud.net/lucky-images/kube-it.img"
                }
              dependencies:
                yandex_compute_instance.vm: |-
                    {
                      "boot_disk": [
                        {
                          "initialize_params": [
                            {
                              "image_id": "${yandex_compute_image.foo-image.id}"
                            }
                          ]
                        }
                      ],
                      "name": "vm-from-custom-image"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            family: (String) The name of the image family to which this image belongs.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            generation2_features: '(Block List, Max: 1) A newer hardware generation, which always uses PCI_TOPOLOGY_V2 and UEFI boot. (see below for nested schema)'
            hardware_generation: '(Block List, Max: 1) Hardware generation and its features, which will be applied to the instance when this image is used for creating a boot disk. Provide this property if you wish to override this value, which otherwise is inherited from the source. (see below for nested schema)'
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            legacy_features: '(Block List, Max: 1) Defines the first known hardware generation and its features. (see below for nested schema)'
            min_disk_size: (Number) Minimum size in GB of the disk that will be created from this image.
            name: (String) The resource name.
            os_type: '(String) Operating system type that is contained in the image. Possible values: LINUX, WINDOWS.'
            pci_topology: (String) A variant of PCI topology, one of PCI_TOPOLOGY_V1 or PCI_TOPOLOGY_V2.
            pooled: (Boolean) Optimize the image to create a disk.
            product_ids: (Set of String) License IDs that indicate which licenses are attached to this image.
            size: (Number) The size of the image, specified in GB.
            source_disk: (String) The ID of a disk to use as the source of the image. Changing this ID forces a new resource to be created.
            source_family: (String) The name of the family to use as the source of the new image. The ID of the latest image is taken from the standard-images folder. Changing the family forces a new resource to be created.
            source_image: (String) The ID of an existing image to use as the source of the image. Changing this ID forces a new resource to be created.
            source_snapshot: (String) The ID of a snapshot to use as the source of the image. Changing this ID forces a new resource to be created.
            source_url: (String) The URL to use as the source of the image. Changing this URL forces a new resource to be created.
            status: (String) The status of the image.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_compute_image_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the compute Image.
        name: yandex_compute_image_iam_binding
        title: yandex_compute_image_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "image_id": "${data.yandex_compute_image.image1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                image_id: data.yandex_compute_image.image1.id
              dependencies:
                yandex_compute_image.image1: |-
                    {
                      "name": "my-custom-image",
                      "source_url": "https://storage.yandexcloud.net/lucky-images/kube-it.img"
                    }
        argumentDocs:
            image_id: (String) The ID of the compute Image to attach the policy to.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_image_iam_binding can be used per role.
        importStatements: []
    yandex_compute_instance:
        subCategory: Compute Cloud
        description: Manages a VM instance resource.
        name: yandex_compute_instance
        title: yandex_compute_instance
        examples:
            - name: default
              manifest: |-
                {
                  "boot_disk": [
                    {
                      "disk_id": "${yandex_compute_disk.boot-disk.id}"
                    }
                  ],
                  "metadata": {
                    "foo": "bar",
                    "ssh-keys": "ubuntu:${file(\"~/.ssh/id_ed25519.pub\")}"
                  },
                  "name": "test",
                  "network_interface": [
                    {
                      "index": 1,
                      "subnet_id": "${yandex_vpc_subnet.foo.id}"
                    }
                  ],
                  "platform_id": "standard-v3",
                  "resources": [
                    {
                      "cores": 2,
                      "memory": 4
                    }
                  ],
                  "zone": "ru-central1-a"
                }
              references:
                boot_disk.disk_id: yandex_compute_disk.boot-disk.id
                network_interface.subnet_id: yandex_vpc_subnet.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            allow_recreate: (Boolean)
            allow_stopping_for_update: (Boolean) If true, allows Terraform to stop the instance in order to update its properties. If you try to update a property that requires stopping the instance without setting this field, the update will fail.
            auto_delete: (Boolean) Defines whether the disk will be auto-deleted when the instance is deleted. The default value is True.
            aws_v1_http_endpoint: (Number)
            aws_v1_http_token: (Number)
            block_size: (Number) Block size of the disk, specified in bytes.
            boot_disk: '(Block List, Min: 1, Max: 1) The boot disk for the instance. Either initialize_params or disk_id must be specified. (see below for nested schema)'
            core_fraction: (Number) If provided, specifies baseline performance for a core as a percent.
            cores: (Number) CPU cores for the instance.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            device_name: (String) Name that can be used to access an attached disk.
            disk_id: (String) The ID of the existing disk (such as those managed by yandex_compute_disk) to attach as a boot disk.
            dns_record: (Block List) List of configurations for creating ipv4 DNS records. (see below for nested schema)
            dns_zone_id: (String) DNS zone ID (if not set, private zone used).
            filesystem: (Block Set) List of filesystems that are attached to the instance. (see below for nested schema)
            filesystem_id: (String) ID of the filesystem that should be attached.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified DNS name of this instance.
            gce_http_endpoint: (Number)
            gce_http_token: (Number)
            generation2_features: (List of Object) (see below for nested schema)
            gpu_cluster_id: (String) ID of the GPU cluster to attach this instance to.
            gpus: (Number) If provided, specifies the number of GPU devices for the instance.
            hardware_generation: (List of Object) (see below for nested schema)
            host_affinity_rules: (List of Object) List of host affinity rules.
            hostname: (String) Host name for the instance. This field is used to generate the instance fqdn value. The host name must be unique within the network and region. If not specified, the host name will be equal to id of the instance and fqdn will be <id>.auto.internal. Otherwise FQDN will be <hostname>.<region_id>.internal.
            id: (String) The ID of this resource.
            image_id: (String) A disk image to initialize this disk from.
            index: (Number) Index of network interface, will be calculated automatically for instance create or update operations if not specified. Required for attach/detach operations.
            initialize_params: '(Block List, Max: 1) Parameters for a new disk that will be created alongside the new instance. Either initialize_params or disk_id must be set. Either image_id or snapshot_id must be specified. (see below for nested schema)'
            ip_address: (String) The private IP address to assign to the instance. If empty, the address will be automatically assigned from the specified subnet.
            ipv4: (Boolean) Allocate an IPv4 address for the interface. The default value is true.
            ipv6: (Boolean) If true, allocate an IPv6 address for the interface. The address will be automatically assigned from the specified subnet.
            ipv6_address: (String) The private IPv6 address to assign to the instance.
            ipv6_dns_record: (Block List) List of configurations for creating ipv6 DNS records. (see below for nested schema)
            key: (String)
            kms_key_id: (String) ID of KMS symmetric key used to encrypt disk.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            legacy_features: (List of Object) (see below for nested schema)
            local_disk: (Block List) List of local disks that are attached to the instance.
            mac_address: (String)
            maintenance_grace_period: (String) Time between notification via metadata service and maintenance. E.g., 60s.
            maintenance_policy: '(String) Behavior on maintenance events. Can be: unspecified, migrate, restart. The default is unspecified.'
            memory: (Number) Memory size in GB.
            metadata: (Map of String) Metadata key/value pairs to make available from within the instance.
            metadata_options: '(Block List, Max: 1) Options allow user to configure access to instance''s metadata. (see below for nested schema)'
            mode: (String) Type of access to the disk resource. By default, a disk is attached in READ_WRITE mode.
            name: (String) The resource name.
            nat: (Boolean) Provide a public address, for instance, to access the internet over NAT.
            nat_dns_record: (Block List) List of configurations for creating ipv4 NAT DNS records. (see below for nested schema)
            nat_ip_address: (String) Provide a public address, for instance, to access the internet over NAT. Address should be already reserved in web UI.
            nat_ip_version: (String)
            network_acceleration_type: (String) Type of network acceleration. Can be standard or software_accelerated. The default is standard.
            network_interface: '(Block List, Min: 1) Networks to attach to the instance. This can be specified multiple times. (see below for nested schema)'
            op: (String)
            pci_topology: (String)
            placement_group_id: (String) Specifies the id of the Placement Group to assign to the instance.
            placement_group_partition: (Number)
            placement_policy: '(Block List, Max: 1) The placement policy configuration. (see below for nested schema)'
            platform_id: (String) The type of virtual machine to create.
            preemptible: (Boolean) Specifies if the instance is preemptible. Defaults to false.
            ptr: (Boolean) When set to true, also create a PTR DNS record.
            resources: '(Block List, Min: 1, Max: 1) Compute resources that are allocated for the instance. (see below for nested schema)'
            scheduling_policy: '(Block List, Max: 1) Scheduling policy configuration. (see below for nested schema)'
            secondary_disk: (Block Set) A set of disks to attach to the instance. The structure is documented below.
            security_group_ids: (Set of String) Security Group (SG) IDs for network interface.
            service_account_id: (String) Service account which linked to the resource.
            size: (Number) Size of the disk in GB.
            size_bytes: (Number) Size of the disk, specified in bytes.
            snapshot_id: (String) A snapshot to initialize this disk from.
            status: (String) The status of this instance.
            subnet_id: (String) ID of the subnet to attach this interface to. The subnet must exist in the same zone where this instance will be created.
            timeouts: (Block, Optional) (see below for nested schema)
            ttl: (Number) DNS record TTL in seconds.
            type: (String) Disk type.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            values: (List of String)
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements: []
    yandex_compute_instance_group:
        subCategory: Compute Cloud
        description: Manages an Instance group resource.
        name: yandex_compute_instance_group
        title: yandex_compute_instance_group
        examples:
            - name: group1
              manifest: |-
                {
                  "allocation_policy": [
                    {
                      "zones": [
                        "ru-central1-a"
                      ]
                    }
                  ],
                  "deletion_protection": true,
                  "deploy_policy": [
                    {
                      "max_creating": 2,
                      "max_deleting": 2,
                      "max_expansion": 2,
                      "max_unavailable": 2
                    }
                  ],
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "instance_template": [
                    {
                      "boot_disk": [
                        {
                          "initialize_params": [
                            {
                              "image_id": "${data.yandex_compute_image.ubuntu.id}",
                              "size": 4
                            }
                          ],
                          "mode": "READ_WRITE"
                        }
                      ],
                      "labels": {
                        "label1": "label1-value",
                        "label2": "label2-value"
                      },
                      "metadata": {
                        "foo": "bar",
                        "ssh-keys": "ubuntu:${file(\"~/.ssh/id_rsa.pub\")}"
                      },
                      "network_interface": [
                        {
                          "network_id": "${yandex_vpc_network.my-inst-group-network.id}",
                          "subnet_ids": [
                            "${yandex_vpc_subnet.my-inst-group-subnet.id}"
                          ]
                        }
                      ],
                      "network_settings": [
                        {
                          "type": "STANDARD"
                        }
                      ],
                      "platform_id": "standard-v1",
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 2
                        }
                      ]
                    }
                  ],
                  "name": "test-ig",
                  "scale_policy": [
                    {
                      "fixed_scale": [
                        {
                          "size": 3
                        }
                      ]
                    }
                  ],
                  "service_account_id": "${yandex_iam_service_account.test_account.id}",
                  "variables": {
                    "test_key1": "test_value1",
                    "test_key2": "test_value2"
                  }
                }
              references:
                folder_id: data.yandex_resourcemanager_folder.test_folder.id
                instance_template.boot_disk.initialize_params.image_id: data.yandex_compute_image.ubuntu.id
                instance_template.network_interface.network_id: yandex_vpc_network.my-inst-group-network.id
                service_account_id: yandex_iam_service_account.test_account.id
        argumentDocs:
            '{instance.zone_id}': |-
                and {instance.index_in_zone}
                Example: my-instance-{instance.index}. If hostname is not set, name value will be used. It may also contain another placeholders, see metadata doc for full list.
            allocation_policy: '(Block List, Min: 1, Max: 1) The allocation policy of the instance group by zone and region. (see below for nested schema)'
            application_load_balancer: '(Block List, Max: 1) Application Load balancing (L7) specifications. (see below for nested schema)'
            auto_scale: '(Block List, Max: 1) The auto scaling policy of the instance group. (see below for nested schema)'
            auto_scale_type: (String) Autoscale type, can be ZONAL or REGIONAL. By default ZONAL type is used.
            aws_v1_http_endpoint: '(Number) Enables access to AWS flavored metadata (IMDSv1). Possible values: 0, 1 for enabled and 2 for disabled.'
            aws_v1_http_token: '(Number) Enables access to IAM credentials with AWS flavored metadata (IMDSv1). Possible values: 0, 1 for enabled and 2 for disabled.'
            boot_disk: '(Block List, Min: 1, Max: 1) Boot disk specifications for the instance. (see below for nested schema)'
            core_fraction: (Number) If provided, specifies baseline core performance as a percent.
            cores: (Number) The number of CPU cores for the instance.
            cpu_utilization_target: (Number) Target CPU load level.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            custom_rule: (Block List) A list of custom rules. (see below for nested schema)
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            deploy_policy: '(Block List, Min: 1, Max: 1) The deployment policy of the instance group. (see below for nested schema)'
            description: (String) The resource description.
            device_name: (String) This value can be used to reference the device under /dev/disk/by-id/.
            disk_id: (String) The ID of the existing disk (such as those managed by yandex_compute_disk) to attach as a boot disk.
            dns_record: (Block List) List of DNS records. (see below for nested schema)
            dns_zone_id: (String) DNS zone id (if not set, private zone used).
            filesystem: (Block Set) List of filesystems to attach to the instance. (see below for nested schema)
            filesystem_id: (String) ID of the filesystem that should be attached.
            fixed_scale: '(Block List, Max: 1) The fixed scaling policy of the instance group. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) DNS record FQDN (must have dot at the end).
            gce_http_endpoint: '(Number) Enables access to GCE flavored metadata. Possible values: 0, 1 for enabled and 2 for disabled.'
            gce_http_token: '(Number) Enables access to IAM credentials with GCE flavored metadata. Possible values: 0, 1 for enabled and 2 for disabled.'
            gpus: (Number) If provided, specifies the number of GPU devices for the instance.
            health_check: (Block List) Health check specifications. (see below for nested schema)
            healthy_threshold: (Number) The number of successful health checks before the managed instance is declared healthy.
            hostname: |-
                (String) Hostname template for the instance. This field is used to generate the FQDN value of instance. The hostname must be unique within the network and region. If not specified, the hostname will be equal to id of the instance and FQDN will be <id>.auto.internal. Otherwise FQDN will be <hostname>.<region_id>.internal.
                In order to be unique it must contain at least on of instance unique placeholders:
            http_options: '(Block List, Max: 1) HTTP check options. (see below for nested schema)'
            id: (String) The ID of this resource.
            ignore_health_checks: (Boolean) Do not wait load balancer health checks.
            image_id: (String) The disk image to initialize this disk from.
            index: (Number)
            initial_size: (Number) The initial number of instances in the instance group.
            initialize_params: '(Block List, Max: 1) Parameters for creating a disk alongside the instance.'
            instance_id: (String)
            instance_tag: (String)
            instance_tags_pool: (Block List) Array of availability zone IDs with list of instance tags. (see below for nested schema)
            instance_template: '(Block List, Min: 1, Max: 1) The template for creating new instances. (see below for nested schema)'
            instances: (List of Object) Instances block. (see below for nested schema)
            interval: (Number) The interval to wait between health checks in seconds.
            ip_address: (String) Manual set static IP address.
            ipv4: (Boolean) Allocate an IPv4 address for the interface. The default value is true.
            ipv6: (Boolean) If true, allocate an IPv6 address for the interface. The address will be automatically assigned from the specified subnet.
            ipv6_address: (String) Manual set static IPv6 address.
            ipv6_dns_record: (Block List) List of IPv6 DNS records. (see below for nested schema)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            load_balancer: '(Block List, Max: 1) Load balancing specifications. (see below for nested schema)'
            mac_address: (String)
            max_checking_health_duration: (Number) Timeout for waiting for the VM to become healthy. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
            max_creating: (Number) The maximum number of instances that can be created at the same time.
            max_deleting: (Number) The maximum number of instances that can be deleted at the same time.
            max_expansion: (Number) The maximum number of instances that can be temporarily allocated above the group's target size during the update process.
            max_opening_traffic_duration: (Number) Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
            max_size: (Number) The maximum number of virtual machines in the group.
            max_unavailable: (Number) The maximum number of running instances that can be taken offline (stopped or deleted) at the same time during the update process.
            measurement_duration: (Number) The amount of time, in seconds, that metrics are averaged for. If the average value at the end of the interval is higher than the cpu_utilization_target, the instance group will increase the number of virtual machines in the group.
            memory: (Number) The memory size in GB.
            metadata: (Map of String) A set of metadata key/value pairs to make available from within the instance.
            metadata_options: '(Block List, Max: 1) Options allow user to configure access to managed instances metadata (see below for nested schema)'
            metric_name: (String) Name of the metric in Monitoring.
            metric_type: (String) Type of metric, can be GAUGE or COUNTER. GAUGE metric reflects the value at particular time point. COUNTER metric exhibits a monotonous growth over time.
            min_zone_size: (Number) The minimum number of virtual machines in a single availability zone.
            mode: (String) The access mode to the disk resource. By default a disk is attached in READ_WRITE mode.
            name: (String) The resource name.
            nat: (Boolean) Flag for using NAT.
            nat_dns_record: (Block List) List of NAT DNS records. (see below for nested schema)
            nat_ip_address: (String) A public address that can be used to access the internet over NAT. Use variables to set.
            nat_ip_version: (String)
            network_id: (String) The ID of the network.
            network_interface: '(Block List, Min: 1) Network specifications for the instance. This can be used multiple times for adding multiple interfaces. (see below for nested schema)'
            network_settings: (Block List) Network acceleration type for instance. (see below for nested schema)
            path: (String) The URL path used for health check requests.
            placement_group_id: (String) Specifies the id of the Placement Group to assign to the instances.
            placement_policy: '(Block List, Max: 1) The placement policy configuration. (see below for nested schema)'
            platform_id: (String) The ID of the hardware platform configuration for the instance.
            port: (Number) The port used for HTTP health checks.
            preemptible: (Boolean) Specifies if the instance is preemptible. Defaults to false.
            ptr: (Boolean) When set to true, also create PTR DNS record.
            resources: '(Block List, Min: 1, Max: 1) Compute resource specifications for the instance. (see below for nested schema)'
            rule_type: (String) The metric rule type (UTILIZATION, WORKLOAD). UTILIZATION for metrics describing resource utilization per VM instance. WORKLOAD for metrics describing total workload on all VM instances.
            scale_policy: '(Block List, Min: 1, Max: 1) The scaling policy of the instance group.'
            scheduling_policy: '(Block List, Max: 1) The scheduling policy configuration. (see below for nested schema)'
            secondary_disk: (Block List) A list of disks to attach to the instance. (see below for nested schema)
            security_group_ids: (Set of String) Security group (SG) IDs for network interface.
            service: (String) If specified, sets the service name to fetch metrics. The default value is custom. You can use a label to specify service metrics, e.g., service with the compute value for Compute Cloud.
            service_account_id: (String) Service account which linked to the resource.
            size: (Number) The size of the disk in GB.
            snapshot_id: (String) The snapshot to initialize this disk from.
            stabilization_duration: (Number) The minimum time interval, in seconds, to monitor the load before an instance group can reduce the number of virtual machines in the group. During this time, the group will not decrease even if the average load falls below the value of cpu_utilization_target.
            startup_duration: (Number) The amount of time in seconds to allow for an instance to start. Instance will be considered up and running (and start receiving traffic) only after the startup_duration has elapsed and all health checks are passed.
            status: (String) The status of the instance.
            status_changed_at: (String)
            status_message: (String) The status message of the instance.
            strategy: (String) Affects the lifecycle of the instance during deployment. If set to proactive (default), Instance Groups can forcefully stop a running instance. If opportunistic, Instance Groups does not stop a running instance. Instead, it will wait until the instance stops itself or becomes unhealthy.
            subnet_id: (String)
            subnet_ids: (Set of String) The ID of the subnets to attach this interface to.
            tags: (List of String) List of tags for instances in zone.
            target: (Number) Target metric value by which Instance Groups calculates the number of required VM instances.
            target_group_description: (String) A description of the target group.
            target_group_id: (String) The ID of the target group.
            target_group_labels: (Map of String) A set of key/value label pairs.
            target_group_name: (String) The name of the target group.
            tcp_options: '(Block List, Max: 1) TCP check options. (see below for nested schema)'
            test_auto_scale: '(Block List, Max: 1) The test auto scaling policy of the instance group. Use it to test how the auto scale works. (see below for nested schema)'
            timeout: (Number) The length of time to wait for a response before the health check times out in seconds.
            timeouts: (Block, Optional) (see below for nested schema)
            ttl: (Number) DNS record TTL.
            type: (String) The disk type.
            unhealthy_threshold: (Number) The number of failed health checks before the managed instance is declared unhealthy.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            variables: (Map of String) A set of key/value variables pairs to assign to the instance group.
            warmup_duration: (Number) The warm-up time of the virtual machine, in seconds. During this time, traffic is fed to the virtual machine, but load metrics are not taken into account.
            zone: (String) Availability zone.
            zone_id: (String)
            zones: (Set of String) A list of availability zones.
        importStatements: []
    yandex_compute_instance_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the Compute Instance.
        name: yandex_compute_instance_iam_binding
        title: yandex_compute_instance_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "image_id": "${data.yandex_compute_instance.vm1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                image_id: data.yandex_compute_instance.vm1.id
              dependencies:
                yandex_compute_instance.vm1: |-
                    {
                      "boot_disk": [
                        {
                          "disk_id": "${yandex_compute_disk.boot-disk.id}"
                        }
                      ],
                      "metadata": {
                        "foo": "bar",
                        "ssh-keys": "ubuntu:${file(\"~/.ssh/id_ed25519.pub\")}"
                      },
                      "name": "test",
                      "network_interface": [
                        {
                          "index": 1,
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        }
                      ],
                      "platform_id": "standard-v3",
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 4
                        }
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            instance_id: (String) The ID of the compute Instance to attach the policy to.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_instance_iam_binding can be used per role.
        importStatements: []
    yandex_compute_placement_group:
        subCategory: Compute Cloud
        description: Manages a Placement group resource.
        name: yandex_compute_placement_group
        title: yandex_compute_placement_group
        examples:
            - name: group1
              manifest: |-
                {
                  "description": "my description",
                  "folder_id": "abc*********123",
                  "name": "test-pg"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            placement_strategy_partitions: (Number) A number of partitions in the placement strategy with partitions policy of the Placement Group (conflicts with placement_strategy_spread).
            placement_strategy_spread: (Boolean) A placement strategy with spread policy of the Placement Group. Should be true or unset (conflicts with placement_strategy_partitions).
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_compute_placement_group_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the Placement Group.
        name: yandex_compute_placement_group_iam_binding
        title: yandex_compute_placement_group_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "placement_group_id": "${data.yandex_compute_placement_group.pg1.id}",
                  "role": "editor"
                }
              references:
                placement_group_id: data.yandex_compute_placement_group.pg1.id
              dependencies:
                yandex_compute_placement_group.pg1: |-
                    {
                      "description": "my description",
                      "folder_id": "abc*********123",
                      "name": "test-pg"
                    }
        argumentDocs:
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            placement_group_id: (String) The ID of the compute Placement Group to attach the policy to.
            role: (String) The role that should be assigned. Only one yandex_compute_placement_group_iam_binding can be used per role.
        importStatements: []
    yandex_compute_snapshot:
        subCategory: Compute Cloud
        description: Creates a new snapshot of a disk.
        name: yandex_compute_snapshot
        title: yandex_compute_snapshot
        examples:
            - name: default
              manifest: |-
                {
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "test-snapshot",
                  "source_disk_id": "test_disk_id"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disk_size: (Number) Size of the disk when the snapshot was created, specified in GB.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            generation2_features: '(Block List, Max: 1) A newer hardware generation, which always uses PCI_TOPOLOGY_V2 and UEFI boot. (see below for nested schema)'
            hardware_generation: '(Block List, Max: 1) Hardware generation and its features, which will be applied to the instance when this snapshot is used as a boot disk source. Provide this property if you wish to override this value, which otherwise is inherited from the source. (see below for nested schema)'
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            legacy_features: '(Block List, Max: 1) Defines the first known hardware generation and its features. (see below for nested schema)'
            name: (String) The resource name.
            pci_topology: (String) A variant of PCI topology, one of PCI_TOPOLOGY_V1 or PCI_TOPOLOGY_V2.
            source_disk_id: (String) ID of the disk to create a snapshot from.
            storage_size: (Number) Size of the snapshot, specified in GB.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_compute_snapshot_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the Snapshot.
        name: yandex_compute_snapshot_iam_binding
        title: yandex_compute_snapshot_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor",
                  "snapshot_id": "${data.yandex_compute_snapshot.snapshot1.id}"
                }
              references:
                snapshot_id: data.yandex_compute_snapshot.snapshot1.id
              dependencies:
                yandex_compute_snapshot.snapshot1: |-
                    {
                      "labels": {
                        "my-label": "my-label-value"
                      },
                      "name": "test-snapshot",
                      "source_disk_id": "test_disk_id"
                    }
        argumentDocs:
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_snapshot_iam_binding can be used per role.
            snapshot_id: (String) The ID of the compute Snapshot to attach the policy to.
        importStatements: []
    yandex_compute_snapshot_schedule:
        subCategory: Compute Cloud
        description: Creates a new snapshot schedule.
        name: yandex_compute_snapshot_schedule
        title: yandex_compute_snapshot_schedule
        examples:
            - name: vm_snap_sch1
              manifest: |-
                {
                  "disk_ids": [
                    "test_disk_id",
                    "another_test_disk_id"
                  ],
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "my-name",
                  "schedule_policy": [
                    {
                      "expression": "0 0 * * *"
                    }
                  ],
                  "snapshot_count": 1,
                  "snapshot_spec": [
                    {
                      "description": "snapshot-description",
                      "labels": {
                        "snapshot-label": "my-snapshot-label-value"
                      }
                    }
                  ]
                }
            - name: vm_snap_sch2
              manifest: |-
                {
                  "disk_ids": [
                    "test_disk_id",
                    "another_test_disk_id"
                  ],
                  "retention_period": "12h",
                  "schedule_policy": [
                    {
                      "expression": "0 0 * * *"
                    }
                  ],
                  "snapshot_spec": [
                    {
                      "description": "retention-snapshot"
                    }
                  ]
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disk_ids: (Set of String) IDs of the disk for snapshot schedule.
            expression: (String) Cron expression to schedule snapshots (in cron format " * ****").
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            retention_period: '(String) Time duration applied to snapshots created by this snapshot schedule. This is a signed sequence of decimal numbers, each with optional fraction and a unit suffix. Valid time units are ns, us (or µs), ms, s, m, h. Examples: 300ms, 1.5h or 2h45m.'
            schedule_policy: '(Block List, Max: 1) Schedule policy of the snapshot schedule. (see below for nested schema)'
            snapshot_count: (Number) Maximum number of snapshots for every disk of the snapshot schedule.
            snapshot_spec: '(Block List, Max: 1) Additional attributes for snapshots created by this snapshot schedule. (see below for nested schema)'
            start_at: (String) Time to start the snapshot schedule (in format RFC3339 2006-01-02T15:04:05Z07:00). If empty current time will be used. Unlike an expression that specifies regularity rules, the start_at parameter determines from what point these rules will be applied.
            status: (String) The status of the snapshot schedule.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_compute_snapshot_schedule_iam_binding:
        subCategory: Compute Cloud
        description: Allows management of a single IAM binding for the Snapshot Schedule.
        name: yandex_compute_snapshot_schedule_iam_binding
        title: yandex_compute_snapshot_schedule_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor",
                  "snapshot_schedule_id": "${data.yandex_compute_snapshot_schedule.schedule1.id}"
                }
              references:
                snapshot_schedule_id: data.yandex_compute_snapshot_schedule.schedule1.id
              dependencies:
                yandex_compute_snapshot_schedule.schedule1: |-
                    {
                      "disk_ids": [
                        "test_disk_id",
                        "another_test_disk_id"
                      ],
                      "retention_period": "12h",
                      "schedule_policy": [
                        {
                          "expression": "0 0 * * *"
                        }
                      ],
                      "snapshot_spec": [
                        {
                          "description": "retention-snapshot"
                        }
                      ]
                    }
        argumentDocs:
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_compute_snapshot_schedule_iam_binding can be used per role.
            snapshot_schedule_id: (String) The ID of the compute Snapshot Schedule to attach the policy to.
        importStatements: []
    yandex_container_registry:
        subCategory: Container Registry
        description: Creates a new container registry.
        name: yandex_container_registry
        title: yandex_container_registry
        examples:
            - name: default
              manifest: |-
                {
                  "folder_id": "test_folder_id",
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "test-registry"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            status: (String) Status of the registry.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_container_registry_iam_binding:
        subCategory: Container Registry
        description: Allows management of a single IAM binding for a Yandex Container Registry.
        name: yandex_container_registry_iam_binding
        title: yandex_container_registry_iam_binding
        examples:
            - name: puller
              manifest: |-
                {
                  "members": [
                    "system:allUsers"
                  ],
                  "registry_id": "${yandex_container_registry.your-registry.id}",
                  "role": "container-registry.images.puller"
                }
              references:
                registry_id: yandex_container_registry.your-registry.id
              dependencies:
                yandex_container_registry.your-registry: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "registry-name"
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            registry_id: (String) The Yandex Container Registry ID to apply a binding to.
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_container_registry_ip_permission:
        subCategory: Container Registry
        description: Creates a new Container Registry IP Permission.
        name: yandex_container_registry_ip_permission
        title: yandex_container_registry_ip_permission
        examples:
            - name: my_ip_permission
              manifest: |-
                {
                  "pull": [
                    "10.1.0.0/16",
                    "10.5.0/16"
                  ],
                  "push": [
                    "10.1.0.0/16",
                    "10.2.0.0/16",
                    "10.3.0.0/16"
                  ],
                  "registry_id": "${yandex_container_registry.my_registry.id}"
                }
              references:
                registry_id: yandex_container_registry.my_registry.id
              dependencies:
                yandex_container_registry.my_registry: |-
                    {
                      "folder_id": "test_folder_id",
                      "labels": {
                        "my-label": "my-label-value"
                      },
                      "name": "test-registry"
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            pull: (Set of String) List of configured CIDRs, from which pull is allowed.
            push: (Set of String) List of configured CIDRs, from which push is allowed.
            registry_id: (String) The ID of the registry that ip restrictions applied to.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_container_repository:
        subCategory: Container Registry
        description: Creates a new Container Repository.
        name: yandex_container_repository
        title: yandex_container_repository
        examples:
            - name: my-repository
              manifest: |-
                {
                  "name": "${yandex_container_registry.my-registry.id}/test-repository"
                }
              dependencies:
                yandex_container_registry.my-registry: |-
                    {
                      "name": "test-registry"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) The ID of this resource.
            name: (String) A name of the repository. The name of the repository should start with id of a container registry and match the name of the images that will be pushed in the repository.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_container_repository_iam_binding:
        subCategory: Container Registry
        description: Allows management of a single IAM binding for a Yandex Container Repository.
        name: yandex_container_repository_iam_binding
        title: yandex_container_repository_iam_binding
        examples:
            - name: puller
              manifest: |-
                {
                  "members": [
                    "system:allUsers"
                  ],
                  "repository_id": "${yandex_container_repository.repo-1.id}",
                  "role": "container-registry.images.puller"
                }
              references:
                repository_id: yandex_container_repository.repo-1.id
              dependencies:
                yandex_container_registry.your-registry: |-
                    {
                      "folder_id": "your-folder-id",
                      "name": "registry-name"
                    }
                yandex_container_repository.repo-1: |-
                    {
                      "name": "${yandex_container_registry.your-registry.id}/repo-1"
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            repository_id: (String) The Yandex Container Repository ID to apply a binding to.
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_container_repository_lifecycle_policy:
        subCategory: Container Registry
        description: Creates a new container repository lifecycle policy.
        name: yandex_container_repository_lifecycle_policy
        title: yandex_container_repository_lifecycle_policy
        examples:
            - name: my_lifecycle_policy
              manifest: |-
                {
                  "name": "test-lifecycle-policy-name",
                  "repository_id": "${yandex_container_repository.my_repository.id}",
                  "rule": [
                    {
                      "description": "my description",
                      "retained_top": 1,
                      "tag_regexp": ".*",
                      "untagged": true
                    }
                  ],
                  "status": "active"
                }
              references:
                repository_id: yandex_container_repository.my_repository.id
              dependencies:
                yandex_container_registry.my_registry: |-
                    {
                      "name": "test-registry"
                    }
                yandex_container_repository.my_repository: |-
                    {
                      "name": "${yandex_container_registry.my_registry.id}/test-repository"
                    }
        argumentDocs:
            created_at: (String) The creation timestamp of the resource.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            description: (String) The resource description.
            expire_period: (String) The period of time that must pass after creating a image for it to suit the automatic deletion criteria. It must be a multiple of 24 hours.
            id: (String) The ID of this resource.
            name: (String) The resource name.
            repository_id: (String) The ID of the repository that the resource belongs to.
            retained_top: (Number) The number of images to be retained even if the expire_period already expired.
            rule: (Block List) Repository rules. (see below for nested schema)
            status: (String) The status of lifecycle policy. Must be active or disabled.
            tag_regexp: (String) Tag to specify a filter as a regular expression. For example .* - all images with tags.
            timeouts: (Block, Optional) (see below for nested schema)
            untagged: (Boolean) If enabled, rules apply to untagged Docker images.
        importStatements: []
    yandex_dataproc_cluster:
        subCategory: Data Processing
        description: Manages a Data Processing cluster within Yandex Cloud.
        name: yandex_dataproc_cluster
        title: yandex_dataproc_cluster
        examples:
            - name: foo
              manifest: |-
                {
                  "bucket": "${yandex_storage_bucket.foo.bucket}",
                  "cluster_config": [
                    {
                      "hadoop": [
                        {
                          "initialization_action": [
                            {
                              "args": [
                                "arg1",
                                "arg2"
                              ],
                              "uri": "s3a://yandex_storage_bucket.foo.bucket/scripts/script.sh"
                            }
                          ],
                          "properties": {
                            "yarn:yarn.resourcemanager.am.max-attempts": 5
                          },
                          "services": [
                            "HDFS",
                            "YARN",
                            "SPARK",
                            "TEZ",
                            "MAPREDUCE",
                            "HIVE"
                          ],
                          "ssh_public_keys": [
                            "${file(\"~/.ssh/id_rsa.pub\")}"
                          ]
                        }
                      ],
                      "subcluster_spec": [
                        {
                          "hosts_count": 1,
                          "name": "main",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "MASTERNODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        },
                        {
                          "hosts_count": 2,
                          "name": "data",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "DATANODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        },
                        {
                          "hosts_count": 2,
                          "name": "compute",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "COMPUTENODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        },
                        {
                          "autoscaling_config": [
                            {
                              "decommission_timeout": 60,
                              "max_hosts_count": 10,
                              "measurement_duration": 60,
                              "preemptible": false,
                              "stabilization_duration": 120,
                              "warmup_duration": 60
                            }
                          ],
                          "hosts_count": 2,
                          "name": "compute_autoscaling",
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-hdd",
                              "resource_preset_id": "s2.small"
                            }
                          ],
                          "role": "COMPUTENODE",
                          "subnet_id": "${yandex_vpc_subnet.foo.id}"
                        }
                      ]
                    }
                  ],
                  "depends_on": [
                    "${yandex_resourcemanager_folder_iam_binding.dataproc}"
                  ],
                  "description": "Dataproc Cluster created by Terraform",
                  "labels": {
                    "created_by": "terraform"
                  },
                  "name": "dataproc-cluster",
                  "service_account_id": "${yandex_iam_service_account.dataproc.id}",
                  "zone_id": "ru-central1-b"
                }
              references:
                bucket: yandex_storage_bucket.foo.bucket
                cluster_config.subcluster_spec.subnet_id: yandex_vpc_subnet.foo.id
                service_account_id: yandex_iam_service_account.dataproc.id
              dependencies:
                yandex_iam_service_account.dataproc: |-
                    {
                      "description": "service account to manage Dataproc Cluster",
                      "name": "dataproc"
                    }
                yandex_iam_service_account_static_access_key.foo: |-
                    {
                      "service_account_id": "${yandex_iam_service_account.dataproc.id}"
                    }
                yandex_resourcemanager_folder_iam_binding.bucket-creator: |-
                    {
                      "folder_id": "${data.yandex_resourcemanager_folder.foo.id}",
                      "members": [
                        "serviceAccount:${yandex_iam_service_account.dataproc.id}"
                      ],
                      "role": "editor"
                    }
                yandex_resourcemanager_folder_iam_binding.dataproc: |-
                    {
                      "folder_id": "${data.yandex_resourcemanager_folder.foo.id}",
                      "members": [
                        "serviceAccount:${yandex_iam_service_account.dataproc.id}"
                      ],
                      "role": "mdb.dataproc.agent"
                    }
                yandex_storage_bucket.foo: |-
                    {
                      "access_key": "${yandex_iam_service_account_static_access_key.foo.access_key}",
                      "bucket": "foo",
                      "depends_on": [
                        "${yandex_resourcemanager_folder_iam_binding.bucket-creator}"
                      ],
                      "secret_key": "${yandex_iam_service_account_static_access_key.foo.secret_key}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
        argumentDocs:
            args: (List of String) List of arguments of the initialization script.
            assign_public_ip: (Boolean) If true then assign public IP addresses to the hosts of the subclusters.
            autoscaling_config: '(Block List, Max: 1) Autoscaling configuration for compute subclusters. (see below for nested schema)'
            autoscaling_service_account_id: (String) Service account to be used for managing hosts in an autoscaled subcluster.
            bucket: (String) Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the service_account_id argument) should be given permission to create objects within this bucket.
            cluster_config: '(Block List, Min: 1, Max: 1) Configuration and resources for hosts that should be created with the cluster. (see below for nested schema)'
            cpu_utilization_target: (String) Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            decommission_timeout: (String) Timeout to gracefully decommission nodes during downscaling. In seconds.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a host, in gigabytes.
            disk_type_id: (String) Type of the storage of a host. One of network-hdd (default) or network-ssd.
            environment: (String) Deployment environment of the cluster. Can be either PRESTABLE or PRODUCTION. The default is PRESTABLE.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            hadoop: '(Block List, Max: 1) Yandex Data Processing specific options. (see below for nested schema)'
            host_group_ids: (Set of String) A list of host group IDs to place VMs of the cluster on.
            hosts_count: (Number) Number of hosts within Yandex Data Processing subcluster.
            id: (String) The ID of this resource.
            initialization_action: (Block List) List of initialization scripts. (see below for nested schema)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) ID of the cloud logging group for cluster logs.
            max_hosts_count: (Number) Maximum number of nodes in autoscaling subclusters.
            measurement_duration: (String) Time in seconds allotted for averaging metrics.
            name: (String) The resource name.
            oslogin: (Boolean) Whether to enable authorization via OS Login.
            preemptible: (Boolean) Use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see Preemptible Virtual Machines.
            properties: (Map of String) A set of key/value pairs that are used to configure cluster services.
            resource_preset_id: (String) The ID of the preset for computational resources available to a host. All available presets are listed in the documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to each host of the Yandex Data Processing subcluster. (see below for nested schema)'
            role: (String) Role of the subcluster in the Yandex Data Processing cluster.
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            service_account_id: (String) Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have mdb.dataproc.agent role on the folder where the Yandex Data Processing cluster will be located.
            services: (Set of String) List of services to run on Yandex Data Processing cluster.
            ssh_public_keys: (Set of String) List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see the official documentation.
            stabilization_duration: (String) Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn't decrease, even if the new metric values indicate that it should.
            subcluster_spec: '(Block List, Min: 1) Configuration of the Yandex Data Processing subcluster. (see below for nested schema)'
            subnet_id: (String) The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
            timeout: (String) Script execution timeout, in seconds.
            timeouts: (Block, Optional) (see below for nested schema)
            ui_proxy: (Boolean) Whether to enable UI Proxy feature.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            uri: (String) Script URI.
            version_id: (String) Version of Yandex Data Processing image.
            warmup_duration: (String) The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.
            zone_id: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements: []
    yandex_datasphere_community:
        subCategory: Datasphere
        description: Allows management of a Yandex Cloud Datasphere Community.
        name: yandex_datasphere_community
        title: yandex_datasphere_community
        examples:
            - name: my-community
              manifest: |-
                {
                  "billing_account_id": "example-organization-id",
                  "description": "Description of community",
                  "labels": {
                    "foo": "bar"
                  },
                  "name": "example-datasphere-community",
                  "organization_id": "example-organization-id"
                }
        argumentDocs:
            billing_account_id: (String) Billing account ID to associated with community
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            created_by: (String) Creator account ID of the Datasphere Community
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String)
            id: (String) The resource identifier.
            labels: (Map of String)
            name: (String) The resource name.
            organization_id: (String) Organization ID where community would be created
            timeouts: (Attributes) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_datasphere_community_iam_binding:
        subCategory: Datasphere
        description: Allows management of a single IAM binding for a Yandex Datasphere Community.
        name: yandex_datasphere_community_iam_binding
        title: yandex_datasphere_community_iam_binding
        examples:
            - name: community-iam
              manifest: |-
                {
                  "community_id": "${yandex_datasphere_community.my-community.id}",
                  "members": [
                    "system:allUsers"
                  ],
                  "role": "datasphere.communities.developer"
                }
              references:
                community_id: yandex_datasphere_community.my-community.id
              dependencies:
                yandex_datasphere_community.my-community: |-
                    {
                      "billing_account_id": "example-organization-id",
                      "description": "Description of community",
                      "labels": {
                        "foo": "bar"
                      },
                      "name": "example-datasphere-community",
                      "organization_id": "example-organization-id"
                    }
        argumentDocs:
            community_id: (String) The ID of the Datasphere Community to attach the policy to.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_datasphere_community_iam_binding can be used per role.
        importStatements: []
    yandex_datasphere_project:
        subCategory: Datasphere
        description: Allows management of a Yandex Cloud Datasphere Project.
        name: yandex_datasphere_project
        title: yandex_datasphere_project
        examples:
            - name: my-project
              manifest: |-
                {
                  "community_id": "${yandex_datasphere_community.my-community.id}",
                  "description": "Datasphere Project description",
                  "labels": {
                    "foo": "bar"
                  },
                  "limits": {
                    "balance": 10,
                    "max_units_per_execution": 10,
                    "max_units_per_hour": 10
                  },
                  "name": "example-datasphere-project",
                  "settings": {
                    "commit_mode": "AUTO",
                    "data_proc_cluster_id": "foo-data-proc-cluster-id",
                    "default_folder_id": "foo-folder-id",
                    "ide": "JUPYTER_LAB",
                    "security_group_ids": [
                      "${yandex_vpc_security_group.my-security-group.id}"
                    ],
                    "service_account_id": "${yandex_iam_service_account.my-account.id}",
                    "stale_exec_timeout_mode": "ONE_HOUR",
                    "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                  }
                }
              references:
                community_id: yandex_datasphere_community.my-community.id
              dependencies:
                yandex_datasphere_community.my-community: |-
                    {
                      "billing_account_id": "example-organization-id",
                      "description": "Description of community",
                      "labels": {
                        "foo": "bar"
                      },
                      "name": "example-datasphere-community",
                      "organization_id": "example-organization-id"
                    }
        argumentDocs:
            NO_TIMEOUT: ': Setting to never automatically stop stale executions.'
            ONE_HOUR: ': Setting to automatically stop stale execution after one hour with low consumption.'
            THREE_HOURS: ': Setting to automatically stop stale execution after three hours with low consumption.'
            balance: (Number) The number of units available to the project.
            community_id: (String) Community ID where project would be created.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            created_by: (String) Creator account ID of the Datasphere Project.
            data_proc_cluster_id: (String) ID of the DataProcessing cluster.
            default_folder_id: (String) Default project folder ID.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource name.
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            limits: (Attributes) Datasphere Project limits configuration. (see below for nested schema)
            max_units_per_execution: (Number) The number of units that can be spent on the one execution.
            max_units_per_hour: (Number) The number of units that can be spent per hour.
            name: (String) The resource name.
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            service_account_id: (String) Service account which linked to the resource.
            settings: (Attributes) Datasphere Project settings configuration. (see below for nested schema)
            stale_exec_timeout_mode: '(String) The timeout to automatically stop stale executions. The following modes can be used:'
            subnet_id: (String) ID of the subnet where the DataProcessing cluster resides. Currently only subnets created in the availability zone ru-central1-a are supported.
            timeouts: (Attributes) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_datasphere_project_iam_binding:
        subCategory: Datasphere
        description: Allows management of a single IAM binding for a Yandex Datasphere Project.
        name: yandex_datasphere_project_iam_binding
        title: yandex_datasphere_project_iam_binding
        examples:
            - name: project-iam
              manifest: |-
                {
                  "members": [
                    "system:allUsers"
                  ],
                  "project_id": "your-datasphere-project-id",
                  "role": "datasphere.community-projects.developer"
                }
              dependencies:
                yandex_datasphere_community.my-community: |-
                    {
                      "billing_account_id": "example-organization-id",
                      "description": "Description of community",
                      "name": "example-datasphere-community",
                      "organization_id": "example-organization-id"
                    }
                yandex_datasphere_project.my-project: |-
                    {
                      "community_id": "${yandex_datasphere_community.my-community.id}",
                      "description": "Datasphere Project description",
                      "name": "example-datasphere-project"
                    }
        argumentDocs:
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            project_id: (String) The ID of the Datasphere Project to attach the policy to.
            role: (String) The role that should be assigned. Only one yandex_datasphere_project_iam_binding can be used per role.
        importStatements: []
    yandex_datatransfer_endpoint:
        subCategory: Data Transfer
        description: Manages a Data Transfer endpoint within Yandex Cloud.
        name: yandex_datatransfer_endpoint
        title: yandex_datatransfer_endpoint
        examples:
            - name: pg_source
              manifest: |-
                {
                  "name": "pg-test-source",
                  "settings": [
                    {
                      "postgres_source": [
                        {
                          "connection": [
                            {
                              "on_premise": [
                                {
                                  "hosts": [
                                    "example.org"
                                  ],
                                  "port": 5432
                                }
                              ]
                            }
                          ],
                          "database": "db1",
                          "password": [
                            {
                              "raw": "123"
                            }
                          ],
                          "slot_gigabyte_lag_limit": 100,
                          "user": "user1"
                        }
                      ]
                    }
                  ]
                }
            - name: pg_target
              manifest: |-
                {
                  "folder_id": "some_folder_id",
                  "name": "pg-test-target2",
                  "settings": [
                    {
                      "postgres_target": [
                        {
                          "connection": [
                            {
                              "mdb_cluster_id": "some_cluster_id"
                            }
                          ],
                          "database": "db2",
                          "password": [
                            {
                              "raw": "321"
                            }
                          ],
                          "security_groups": [],
                          "user": "user2"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            add_rest_column: (Boolean) Add fields, that are not in the schema, into the _rest column.
            allow_ttl_rewind: (Boolean) Should continue working, if consumer read lag exceed TTL of topic.
            alt_names: (Block List) Table renaming rules. (see below for nested schema)
            audit_trails_v1_parser: '(Block List, Max: 1) Parse Audit Trails data. Empty struct. (see below for nested schema)'
            auth: '(Block List, Max: 1) Authentication data. (see below for nested schema)'
            auth_source: (String) Name of the database associated with the credentials.
            broker_urls: (List of String)
            buffer_flush_interval: (String)
            buffer_size: (String)
            ca_certificate: (String)
            cast: (String)
            changefeed_custom_name: (String) Custom name for changefeed.
            cleanup_policy: (String) How to clean collections when activating the transfer. One of CLICKHOUSE_CLEANUP_POLICY_DISABLED or CLICKHOUSE_CLEANUP_POLICY_DROP.
            clickhouse_cluster_name: (String)
            clickhouse_source: '(Block List, Max: 1) Settings specific to the ClickHouse source endpoint. (see below for nested schema)'
            clickhouse_target: '(Block List, Max: 1) Settings specific to the ClickHouse target endpoint. (see below for nested schema)'
            cloud_function: (String)
            cloud_logging_parser: '(Block List, Max: 1) Parse Cloud Logging data. Empty struct. (see below for nested schema)'
            cluster_id: (String)
            collation: (String)
            collection_name: (String)
            collections: (Block List) The list of the MongoDB collections that should be transferred. If omitted, all available collections will be transferred. (see below for nested schema)
            column_name: (String) The name of the column to calculate hash from.
            column_value: '(Block List, Max: 1) The value of the column. Currently only the string columns are supported. (see below for nested schema)'
            column_value_hash: '(Block List, Max: 1) Shard data by the hash value of the specified column. (see below for nested schema)'
            columns: (List of String)
            connection: '(Block List, Max: 1) Connection settings. (see below for nested schema)'
            connection_options: '(Block List, Max: 1) (see below for nested schema)'
            constraint: (String)
            consumer: (String) Consumer.
            counter_ids: (List of Number)
            custom_mapping: '(Block List, Max: 1) A custom shard mapping by the value of the specified column. (see below for nested schema)'
            data_schema: '(Block List, Max: 1) Data parsing scheme. (see below for nested schema)'
            database: (String)
            database_name: (String)
            default_compression: (String) Compression that will be used for default columns family on YDB table creation One of YDB_DEFAULT_COMPRESSION_UNSPECIFIED, YDB_DEFAULT_COMPRESSION_DISABLED, YDB_DEFAULT_COMPRESSION_LZ4.
            default_values: (String)
            description: (String) The resource description.
            disabled: '(Block List, Max: 1) (see below for nested schema)'
            enabled: '(Block List, Max: 1) (see below for nested schema)'
            endpoint: (String) YDS Endpoint.
            exclude_tables: (List of String) The list of tables that should not be transferred.
            exclude_tables_regex: (List of String) Opposite of include_table_regex. The tables matching the specified regular expressions will not be transferred.
            excluded_collections: (Block List) The list of the MongoDB collections that should not be transferred. (see below for nested schema)
            fields: '(Block List, Max: 1) (see below for nested schema)'
            fk_constraint: (String)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            from_name: (String)
            function: (String)
            hosts: (List of String)
            http_port: (Number)
            id: (String) The ID of this resource.
            include_tables: (List of String) The list of tables that should be transferred. Leave empty if all tables should be transferred.
            include_tables_regex: (List of String) List of regular expressions of table names which should be transferred. A table name is formatted as schemaname.tablename. For example, a single regular expression may look like ^mydb.employees$.
            index: (String)
            instance: '(String) Instance of YDB. Example: my-cute-ydb.yandex.cloud:2135.'
            invocation_timeout: (String)
            is_table_column_oriented: (Boolean) Whether a column-oriented (i.e. OLAP) tables should be created. Default is false (create row-oriented OLTP tables).
            json_fields: (String) Description of the data schema as JSON specification.
            json_parser: '(Block List, Max: 1) Parse data in JSON format. (see below for nested schema)'
            kafka_source: '(Block List, Max: 1) Settings specific to the Kafka source endpoint. (see below for nested schema)'
            kafka_target: '(Block List, Max: 1) Settings specific to the Kafka target endpoint. (see below for nested schema)'
            key: (Boolean) Mark field as Primary Key.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            mapping: (Block List) The mapping of the specified column values to the shard names. (see below for nested schema)
            materialized_view: (String)
            mdb_cluster_id: (String)
            mechanism: (String)
            metrika_source: '(Block List, Max: 1) Settings specific to the Yandex Metrika source endpoint. (see below for nested schema)'
            mongo_source: '(Block List, Max: 1) Settings specific to the MongoDB source endpoint. (see below for nested schema)'
            mongo_target: '(Block List, Max: 1) Settings specific to the MongoDB target endpoint. (see below for nested schema)'
            mysql_source: '(Block List, Max: 1) Settings specific to the MySQL source endpoint. (see below for nested schema)'
            mysql_target: '(Block List, Max: 1) Settings specific to the MySQL target endpoint. (see below for nested schema)'
            name: (String) The resource name.
            native_port: (Number)
            no_auth: '(Block List, Max: 1) (see below for nested schema)'
            null_keys_allowed: (Boolean) Allow null keys. If false - null keys will be putted to unparsed data.
            number_of_retries: (Number)
            object_transfer_settings: '(Block List, Max: 1) Defines which database schema objects should be transferred, e.g. views, routines, etc. All of the attrubutes in the block are optional and should be either BEFORE_DATA, AFTER_DATA or NEVER. (see below for nested schema)'
            on_premise: '(Block List, Max: 1) (see below for nested schema)'
            parser: '(Block List, Max: 1) Data parsing parameters. If not set, the source messages are read in raw. (see below for nested schema)'
            password: '(Block List, Max: 1) (see below for nested schema)'
            path: (String) Path to the field.
            paths: (List of String) A list of paths which should be uploaded. When not specified, all available tables are uploaded.
            policy: (String)
            port: (Number) TCP Port number.
            postgres_source: '(Block List, Max: 1) Settings specific to the PostgreSQL source endpoint. (see below for nested schema)'
            postgres_target: '(Block List, Max: 1) Settings specific to the PostgreSQL target endpoint. (see below for nested schema)'
            primary_key: (String)
            raw: (String, Sensitive)
            replica_set: (String) Replica set name.
            required: (Boolean) Mark field as required.
            round_robin: '(Block List, Max: 1) Distribute incoming rows between ClickHouse shards in a round-robin manner. Specify as an empty block to enable. (see below for nested schema)'
            routine: (String)
            rule: (String)
            sa_key_content: (String, Sensitive) Authentication key.
            sasl: '(Block List, Max: 1) (see below for nested schema)'
            save_tx_order: (Boolean) Not to split events queue into separate per-table queues.
            secondary_preferred_mode: (Boolean) Whether the secondary server should be preferred to the primary when copying data.
            security_groups: (List of String) List of security groups that the transfer associated with this endpoint should use.
            sequence: (String)
            sequence_owned_by: (String)
            sequence_set: (String)
            serializer: '(Block List, Max: 1) Data serialization settings. (see below for nested schema)'
            serializer_auto: '(Block List, Max: 1) Empty block. Select data serialization format automatically. (see below for nested schema)'
            serializer_debezium: '(Block List, Max: 1) Serialize data in json format. (see below for nested schema)'
            serializer_json: '(Block List, Max: 1) Empty block. Serialize data in json format. (see below for nested schema)'
            serializer_parameters: (Block List) A list of Debezium parameters set by the structure of the key and value string fields. (see below for nested schema)
            service_account_id: (String)
            service_database: (String)
            service_schema: (String) Name of the database schema in which auxiliary tables needed for the transfer will be created. Empty service_schema implies schema public.
            settings: '(Block List, Max: 1) DataTransfer Endpoint Settings block. (see below for nested schema)'
            shard_name: (String) The name of the shard into which all the rows with the specified column_value will be written.
            sharding: '(Block List, Max: 1) Shard selection rules for the data being transferred. (see below for nested schema)'
            shards: (Block List) (see below for nested schema)
            skip_constraint_checks: (Boolean) When true, disables foreign key checks. See foreign_key_checks. False by default.
            slot_gigabyte_lag_limit: (Number) Maximum WAL size held by the replication slot, in gigabytes. Exceeding this limit will result in a replication failure and deletion of the replication slot. Unlimited by default.
            sql_mode: (String) sql_mode to use when interacting with the server. Defaults to NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
            stream: (String) Stream.
            streams: (Block List) (see below for nested schema)
            string_value: (String) The string value of the column.
            subnet_id: (String) Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
            supported_codecs: (List of String) List of supported compression codec.
            table: (String)
            tables: (String)
            timezone: '(String) Timezone to use for parsing timestamps for saving source timezones. Accepts values from IANA timezone database. Default: local timezone.'
            tls_mode: '(Block List, Max: 1) (see below for nested schema)'
            to_name: (String)
            token: '(Block List, Max: 1) (see below for nested schema)'
            topic: '(Block List, Max: 1) All messages will be sent to one topic. (see below for nested schema)'
            topic_name: (String) Deprecated. Please use topic_names instead.
            topic_names: (List of String) The list of full source topic names.
            topic_prefix: (String) Topic name prefix. Messages will be sent to topic with name <topic_prefix>..<table_name>.
            topic_settings: '(Block List, Max: 1) Target topic settings. (see below for nested schema)'
            transfer_id: '(Block List, Max: 1) Shard data by ID of the transfer. (see below for nested schema)'
            transformer: '(Block List, Max: 1) Transform data with a custom Cloud Function. (see below for nested schema)'
            trigger: (String)
            tskv_parser: '(Block List, Max: 1) Parse data if TSKV format. (see below for nested schema)'
            type: '(String) Field type, one of: INT64, INT32, INT16, INT8, UINT64, UINT32, UINT16, UINT8, DOUBLE, BOOLEAN, STRING, UTF8, ANY, DATETIME.'
            unescape_string_values: (Boolean) Allow unescape string values.
            user: (String)
            value: (String)
            view: (String)
            ydb_source: '(Block List, Max: 1) Settings specific to the YDB source endpoint. (see below for nested schema)'
            ydb_target: '(Block List, Max: 1) Settings specific to the YDB target endpoint. (see below for nested schema)'
            yds_source: '(Block List, Max: 1) Settings specific to the YDS source endpoint. (see below for nested schema)'
            yds_target: '(Block List, Max: 1) Settings specific to the YDS target endpoint. (see below for nested schema)'
        importStatements: []
    yandex_datatransfer_transfer:
        subCategory: Data Transfer
        description: Manages a Data Transfer transfer within Yandex Cloud.
        name: yandex_datatransfer_transfer
        title: yandex_datatransfer_transfer
        examples:
            - name: pgpg_transfer
              manifest: |-
                {
                  "folder_id": "some_folder_id",
                  "name": "pgpg",
                  "runtime": [
                    {
                      "yc_runtime": [
                        {
                          "job_count": 1,
                          "upload_shard_params": [
                            {
                              "job_count": 4,
                              "process_count": 1
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "source_id": "${yandex_datatransfer_endpoint.pg_source.id}",
                  "target_id": "${yandex_datatransfer_endpoint.pg_target.id}",
                  "transformation": [
                    {
                      "transformers": [
                        {},
                        {}
                      ]
                    }
                  ],
                  "type": "SNAPSHOT_AND_INCREMENT"
                }
              references:
                source_id: yandex_datatransfer_endpoint.pg_source.id
                target_id: yandex_datatransfer_endpoint.pg_target.id
              dependencies:
                yandex_datatransfer_endpoint.pg_source: |-
                    {
                      "name": "pg-test-source",
                      "settings": [
                        {
                          "postgres_source": [
                            {
                              "connection": [
                                {
                                  "on_premise": [
                                    {
                                      "hosts": [
                                        "example.org"
                                      ],
                                      "port": 5432
                                    }
                                  ]
                                }
                              ],
                              "database": "db1",
                              "password": [
                                {
                                  "raw": "123"
                                }
                              ],
                              "slot_gigabyte_lag_limit": 100,
                              "user": "user1"
                            }
                          ]
                        }
                      ]
                    }
                yandex_datatransfer_endpoint.pg_target: |-
                    {
                      "folder_id": "some_folder_id",
                      "name": "pg-test-target2",
                      "settings": [
                        {
                          "postgres_target": [
                            {
                              "connection": [
                                {
                                  "mdb_cluster_id": "some_cluster_id"
                                }
                              ],
                              "database": "db2",
                              "password": [
                                {
                                  "raw": "321"
                                }
                              ],
                              "user": "user2"
                            }
                          ]
                        }
                      ]
                    }
        argumentDocs:
            columns: '(Block List, Max: 1) List of the columns to transfer to the target tables using lists of included and excluded columns. (see below for nested schema)'
            convert_to_string: '(Block List, Max: 1) Convert column values to strings. (see below for nested schema)'
            description: (String) The resource description.
            exclude_columns: (List of String) List of columns that will be excluded to transfer.
            exclude_tables: (List of String) List of tables that will be excluded to transfer.
            filter: (String) Filtering criterion. This can be comparison operators for numeric, string, and Boolean values, comparison to NULL, and checking whether a substring is part of a string. See details here.
            filter_columns: '(Block List, Max: 1) Set up a list of table columns to transfer. (see below for nested schema)'
            filter_rows: '(Block List, Max: 1) This filter only applies to transfers with queues (Apache Kafka®) as a data source. When running a transfer, only the strings meeting the specified criteria remain in a changefeed. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            function: '(Block List, Max: 1) Mask function. (see below for nested schema)'
            id: (String) The ID of this resource.
            include_columns: (List of String) List of columns that will be included to transfer.
            include_tables: (List of String) List of tables that will be included to transfer.
            job_count: (Number) Number of workers in parallel replication.
            keys: (List of String) List of columns to be used as primary keys.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            mask_field: '(Block List, Max: 1) Mask field transformer allows you to hash data. (see below for nested schema)'
            mask_function_hash: '(Block List, Max: 1) Hash mask function. (see below for nested schema)'
            name: (String) The resource name.
            name_space: (String)
            new_name: '(Block List, Max: 1) Specify the new names for this table in the target. (see below for nested schema)'
            on_create_activate_mode: (String) Activation action on create a new incremental transfer. It is not part of the transfer parameter and is used only on create. One of sync_activate, async_activate, dont_activate. The default is sync_activate.
            original_name: '(Block List, Max: 1) Specify the current names of the table in the source. (see below for nested schema)'
            process_count: (Number) Number of threads.
            rename_tables: '(Block List, Max: 1) Set rules for renaming tables by specifying the current names of the tables in the source and new names for these tables in the target. (see below for nested schema)'
            replace_primary_key: '(Block List, Max: 1) Override primary keys. (see below for nested schema)'
            runtime: '(Block List, Max: 1) Runtime parameters for the transfer. (see below for nested schema)'
            sharder_transformer: '(Block List, Max: 1) Set the number of shards for particular tables and a list of columns whose values will be used for calculating a hash to determine a shard. (see below for nested schema)'
            shards_count: (Number) Number of shards.
            source_id: (String) ID of the source endpoint for the transfer.
            splitter: (String) Specify the split string to be used for merging components in a new table name.
            table_splitter_transformer: '(Block List, Max: 1) Splits the X table into multiple tables (X_1, X_2, ..., X_n) based on data. (see below for nested schema)'
            tables: '(Block List, Max: 1) Table filter. (see below for nested schema)'
            target_id: (String) ID of the target endpoint for the transfer.
            transformation: '(Block List, Max: 1) Transformation for the transfer. (see below for nested schema)'
            transformers: (Block List) A list of transformers. You can specify exactly 1 transformer in each element of list. (see below for nested schema)
            type: (String) Type of the transfer. One of SNAPSHOT_ONLY, INCREMENT_ONLY, SNAPSHOT_AND_INCREMENT
            upload_shard_params: '(Block List, Max: 1) Parallel snapshot parameters. (see below for nested schema)'
            user_defined_salt: (String) This string will be used in the HMAC(sha256, salt) function applied to the column data.
            warning: (String) Error description if transfer has any errors.
            yc_runtime: '(Block List, Max: 1) YC Runtime parameters for the transfer. (see below for nested schema)'
        importStatements: []
    yandex_dns_recordset:
        subCategory: Cloud Domain Name System (DNS)
        description: Manages a DNS RecordSet within Yandex Cloud.
        name: yandex_dns_recordset
        title: yandex_dns_recordset
        examples:
            - name: rs1
              manifest: |-
                {
                  "data": [
                    "10.1.0.1"
                  ],
                  "name": "srv.example.com.",
                  "ttl": 200,
                  "type": "A",
                  "zone_id": "${yandex_dns_zone.zone1.id}"
                }
              references:
                zone_id: yandex_dns_zone.zone1.id
              dependencies:
                yandex_dns_zone.zone1: |-
                    {
                      "description": "desc",
                      "labels": {
                        "label1": "label-1-value"
                      },
                      "name": "my_private_zone",
                      "private_networks": [
                        "${yandex_vpc_network.foo.id}"
                      ],
                      "public": false,
                      "zone": "example.com."
                    }
                yandex_vpc_network.foo: '{}'
            - name: rs2
              manifest: |-
                {
                  "data": [
                    "10.1.0.2"
                  ],
                  "name": "srv2",
                  "ttl": 200,
                  "type": "A",
                  "zone_id": "${yandex_dns_zone.zone1.id}"
                }
              references:
                zone_id: yandex_dns_zone.zone1.id
              dependencies:
                yandex_dns_zone.zone1: |-
                    {
                      "description": "desc",
                      "labels": {
                        "label1": "label-1-value"
                      },
                      "name": "my_private_zone",
                      "private_networks": [
                        "${yandex_vpc_network.foo.id}"
                      ],
                      "public": false,
                      "zone": "example.com."
                    }
                yandex_vpc_network.foo: '{}'
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            data: (Set of String) The string data for the records in this record set.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) The ID of this resource.
            name: (String) The DNS name this record set will apply to.
            timeouts: (Block, Optional) (see below for nested schema)
            ttl: (Number) The time-to-live of this record set (seconds).
            type: (String) The DNS record set type.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone_id: (String) The id of the zone in which this record set will reside.
        importStatements: []
    yandex_dns_zone:
        subCategory: Cloud Domain Name System (DNS)
        description: Manages a DNS Zone within Yandex Cloud.
        name: yandex_dns_zone
        title: yandex_dns_zone
        examples:
            - name: zone1
              manifest: |-
                {
                  "deletion_protection": true,
                  "description": "desc",
                  "labels": {
                    "label1": "label-1-value"
                  },
                  "name": "my-private-zone",
                  "private_networks": [
                    "${yandex_vpc_network.foo.id}"
                  ],
                  "public": false,
                  "zone": "example.com."
                }
              references:
                private_networks: yandex_vpc_network.foo.id
              dependencies:
                yandex_dns_recordset.rs1: |-
                    {
                      "data": [
                        "10.1.0.1"
                      ],
                      "name": "srv.example.com.",
                      "ttl": 200,
                      "type": "A",
                      "zone_id": "${yandex_dns_zone.zone1.id}"
                    }
                yandex_vpc_network.foo: '{}'
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            private_networks: (Set of String) For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.
            public: '(Boolean) The zone''s visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone: (String) The DNS name of this zone, e.g. example.com.. Must ends with dot.
        importStatements:
            - |-
              # terraform import yandex_dns_zone.<resource Name> <resource Id>
              terraform import yandex_dns_zone.zone1 dns9m**********tducf
    yandex_dns_zone_iam_binding:
        subCategory: Cloud Domain Name System (DNS)
        description: Allows management of a single IAM binding for a Cloud DNS Zone.
        name: yandex_dns_zone_iam_binding
        title: yandex_dns_zone_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "dns_zone_id": "${yandex_dns_zone.zone1.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "dns.viewer"
                }
              references:
                dns_zone_id: yandex_dns_zone.zone1.id
              dependencies:
                yandex_dns_zone.zone1: |-
                    {
                      "name": "my-private-zone",
                      "zone": "example.com."
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            dns_zone_id: (String) The DNS Zone ID to apply a binding to.
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_dns_zone_iam_binding.<resource Name> "dns_zone_id dns.viewer"
              terraform import yandex_dns_zone_iam_binding.viewer "dns9m**********tducf dns.viewer"
    yandex_function:
        subCategory: Serverless Cloud Functions
        description: Allows management of a Yandex Cloud Function.
        name: yandex_function
        title: yandex_function
        examples:
            - name: test-function
              manifest: |-
                {
                  "async_invocation": [
                    {
                      "retries_count": "3",
                      "service_account_id": "ajeih**********838kk",
                      "ymq_failure_target": [
                        {
                          "arn": "yrn:yc:ymq:ru-central1:b1glr**********9hsfp:fail",
                          "service_account_id": "ajeqr**********qb76m"
                        }
                      ],
                      "ymq_success_target": [
                        {
                          "arn": "yrn:yc:ymq:ru-central1:b1glr**********9hsfp:success",
                          "service_account_id": "ajeqr**********qb76m"
                        }
                      ]
                    }
                  ],
                  "content": [
                    {
                      "zip_filename": "function.zip"
                    }
                  ],
                  "description": "any description",
                  "entrypoint": "main",
                  "execution_timeout": "10",
                  "log_options": [
                    {
                      "log_group_id": "e2392**********eq9fr",
                      "min_level": "ERROR"
                    }
                  ],
                  "memory": "128",
                  "mounts": [
                    {
                      "ephemeral_disk": [
                        {
                          "size_gb": 32
                        }
                      ],
                      "name": "mnt"
                    }
                  ],
                  "name": "some_name",
                  "runtime": "python37",
                  "secrets": [
                    {
                      "environment_variable": "ENV_VARIABLE",
                      "id": "${yandex_lockbox_secret.secret.id}",
                      "key": "secret-key",
                      "version_id": "${yandex_lockbox_secret_version.secret_version.id}"
                    }
                  ],
                  "service_account_id": "ajeih**********838kk",
                  "tags": [
                    "my_tag"
                  ],
                  "user_hash": "any_user_defined_string"
                }
              references:
                secrets.id: yandex_lockbox_secret.secret.id
                secrets.version_id: yandex_lockbox_secret_version.secret_version.id
            - name: test-function
              manifest: |-
                {
                  "content": [
                    {
                      "zip_filename": "function.zip"
                    }
                  ],
                  "entrypoint": "index.handler",
                  "execution_timeout": "10",
                  "memory": "128",
                  "mounts": [
                    {
                      "mode": "ro",
                      "name": "mnt",
                      "object_storage": [
                        {
                          "bucket": "${yandex_storage_bucket.my-bucket.bucket}"
                        }
                      ]
                    }
                  ],
                  "name": "some_name",
                  "runtime": "python37",
                  "service_account_id": "${yandex_iam_service_account.sa.id}",
                  "user_hash": "v1"
                }
              references:
                mounts.object_storage.bucket: yandex_storage_bucket.my-bucket.bucket
                service_account_id: yandex_iam_service_account.sa.id
              dependencies:
                yandex_iam_service_account.sa: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "name": "test-sa"
                    }
                yandex_iam_service_account_static_access_key.sa-static-key: |-
                    {
                      "description": "static access key for object storage",
                      "service_account_id": "${yandex_iam_service_account.sa.id}"
                    }
                yandex_resourcemanager_folder_iam_member.sa-editor: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "member": "serviceAccount:${yandex_iam_service_account.sa.id}",
                      "role": "storage.editor"
                    }
                yandex_storage_bucket.my-bucket: |-
                    {
                      "access_key": "${yandex_iam_service_account_static_access_key.sa-static-key.access_key}",
                      "bucket": "bucket",
                      "secret_key": "${yandex_iam_service_account_static_access_key.sa-static-key.secret_key}"
                    }
        argumentDocs:
            arn: (String) YMQ ARN.
            async_invocation: '(Block List, Max: 1) Config for asynchronous invocations of Yandex Cloud Function. (see below for nested schema)'
            aws_v1_http_endpoint: '(Number) Enables access to AWS flavored metadata (IMDSv1). Values: 0 - default, 1 - enabled, 2 - disabled.'
            block_size_kb: (Number) Optional block size of the ephemeral disk in KB.
            bucket: (String) Name of the mounting bucket.
            bucket_name: (String) Name of the bucket that stores the code for the version.
            concurrency: (Number) The maximum number of requests processed by a function instance at the same time.
            connectivity: '(Block List, Max: 1) Function version connectivity. If specified the version will be attached to specified network. (see below for nested schema)'
            content: '(Block List, Max: 1) Version deployment content for Yandex Cloud Function code. Can be only one package or content section. Either package or content section must be specified. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String)
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disabled: (Boolean) Is logging from function disabled.
            entrypoint: (String) Entrypoint for Yandex Cloud Function.
            environment: (Map of String) A set of key/value environment variables for Yandex Cloud Function. Each key must begin with a letter (A-Z, a-z).
            environment_variable: (String) Function's environment variable in which secret's value will be stored. Must begin with a letter (A-Z, a-z).
            ephemeral_disk: '(Block List, Max: 1) One of the available mount types. Disk available during the function execution time. (see below for nested schema)'
            execution_timeout: (String) Execution timeout in seconds for Yandex Cloud Function.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            gce_http_endpoint: '(Number) Enables access to GCE flavored metadata. Values: 0- default, 1 - enabled, 2 - disabled.'
            id: (String) The ID of this resource.
            image_size: (Number) Image size for Yandex Cloud Function.
            key: (String) Secret's entries key which value will be stored in environment variable.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) Log entries are written to specified log group.
            log_options: '(Block List, Max: 1) Options for logging from Yandex Cloud Function. (see below for nested schema)'
            memory: (Number) Memory in megabytes (aligned to 128MB) for Yandex Cloud Function.
            metadata_options: '(Block List, Max: 1) Options set the access mode to function''s metadata endpoints. (see below for nested schema)'
            min_level: (String) Minimum log entry level.
            mode: (String) Mount’s accessibility mode. Valid values are ro and rw.
            mount_point_name: (String) Name of the mount point. The directory where the bucket is mounted will be accessible at the /function/storage/<mount_point> path.
            mounts: (Block List) Mounts for Yandex Cloud Function. (see below for nested schema)
            name: (String) The resource name.
            network_id: (String) Network the version will have access to. It's essential to specify network with subnets in all availability zones.
            object_name: (String) Name of the object in the bucket that stores the code for the version.
            object_storage: '(Block List, Max: 1) One of the available mount types. Object storage as a mount. (see below for nested schema)'
            package: '(Block List, Max: 1) Version deployment package for Yandex Cloud Function code. Can be only one package or content section. Either package or content section must be specified. (see below for nested schema)'
            prefix: (String) Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.
            read_only: (Boolean) Mount the bucket in read-only mode.
            retries_count: (Number) Maximum number of retries for async invocation.
            runtime: (String) Runtime for Yandex Cloud Function.
            secrets: (Block List) Secrets for Yandex Cloud Function. (see below for nested schema)
            service_account_id: (String) Service account which linked to the resource.
            sha_256: (String) SHA256 hash of the version deployment package.
            size_gb: (Number) Size of the ephemeral disk in GB.
            storage_mounts: (Block List, Deprecated) (DEPRECATED, use mounts -> object_storage instead). Storage mounts for Yandex Cloud Function. (see below for nested schema)
            tags: (Set of String) Tags for Yandex Cloud Function. Tag $latest isn't returned.
            timeouts: (Block, Optional) (see below for nested schema)
            tmpfs_size: (Number) Tmpfs size for Yandex Cloud Function.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user_hash: (String) User-defined string for current function version. User must change this string any times when function changed. Function will be updated when hash is changed.
            version: (String) Version of Yandex Cloud Function.
            version_id: (String) Secret's version ID.
            ymq_failure_target: '(Block List, Max: 1) Target for unsuccessful async invocation. (see below for nested schema)'
            ymq_success_target: '(Block List, Max: 1) Target for successful async invocation. (see below for nested schema)'
            zip_filename: (String) Filename to zip archive for the version.
        importStatements:
            - |-
              # terraform import yandex_function.<resource Name> <resource Id>
              terraform import yandex_function.test-function d4e45**********pqvd3
    yandex_function_iam_binding:
        subCategory: Serverless Cloud Functions
        description: Allows management of a single IAM binding for a Yandex Cloud Function.
        name: yandex_function_iam_binding
        title: yandex_function_iam_binding
        examples:
            - name: function-iam
              manifest: |-
                {
                  "function_id": "dns9m**********tducf",
                  "members": [
                    "system:allUsers"
                  ],
                  "role": "serverless.functions.invoker"
                }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            function_id: (String) The Yandex Cloud Function ID to apply a binding to.
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_function_iam_binding.<resource Name> <resource Id> <resource Role>
              terraform import yandex_function_iam_binding.fn_viewer dns9m**********tducf functions.viewer
    yandex_function_scaling_policy:
        subCategory: Serverless Cloud Functions
        description: Allows management of a Yandex Cloud Function Scaling Policy.
        name: yandex_function_scaling_policy
        title: yandex_function_scaling_policy
        examples:
            - name: my_scaling_policy
              manifest: |-
                {
                  "function_id": "d4e45**********pqvd3",
                  "policy": [
                    {
                      "tag": "$latest",
                      "zone_instances_limit": 3,
                      "zone_requests_limit": 100
                    },
                    {
                      "tag": "my_tag",
                      "zone_instances_limit": 4,
                      "zone_requests_limit": 150
                    }
                  ]
                }
        argumentDocs:
            function_id: (String) Yandex Cloud Function id used to define function.
            id: (String) The ID of this resource.
            policy: (Block Set) List definition for Yandex Cloud Function scaling policies. (see below for nested schema)
            tag: (String) Yandex Cloud Function version tag for Yandex Cloud Function scaling policy.
            zone_instances_limit: (Number) Max number of instances in one zone for Yandex Cloud Function with tag.
            zone_requests_limit: (Number) Max number of requests in one zone for Yandex Cloud Function with tag.
        importStatements:
            - |-
              # terraform import yandex_function_scaling_policy.<resource Name> <resource Id>
              terraform import yandex_function_scaling_policy.my_policy ...
    yandex_function_trigger:
        subCategory: Serverless Cloud Functions
        description: Allows management of a Yandex Cloud Functions Trigger.
        name: yandex_function_trigger
        title: yandex_function_trigger
        examples:
            - name: my_trigger
              manifest: |-
                {
                  "description": "any description",
                  "function": [
                    {
                      "id": "tf-test"
                    }
                  ],
                  "name": "some_name",
                  "timer": [
                    {
                      "cron_expression": "* * * * ? *"
                    }
                  ]
                }
        argumentDocs:
            attachments_bucket_id: (String) Object Storage Bucket ID for Yandex Cloud Functions Trigger.
            batch_cutoff: (String) Batch Duration in seconds for Yandex Cloud Functions Trigger.
            batch_size: (String) Batch Size for Yandex Cloud Functions Trigger.
            bucket_id: (String) Object Storage Bucket ID for Yandex Cloud Functions Trigger.
            container: '(Block List, Max: 1) Yandex Cloud Serverless Container settings definition for Yandex Cloud Functions Trigger. (see below for nested schema)'
            container_registry: '(Block List, Max: 1) Container Registry settings definition for Yandex Cloud Functions Trigger, if present. (see below for nested schema)'
            create: (Boolean) Boolean flag for setting create event for Yandex Cloud Functions Trigger.
            create_image: (Boolean) Boolean flag for setting create image event for Yandex Cloud Functions Trigger.
            create_image_tag: (Boolean) Boolean flag for setting create image tag event for Yandex Cloud Functions Trigger.
            created_at: (String) The creation timestamp of the resource.
            cron_expression: (String) Cron expression for timer for Yandex Cloud Functions Trigger.
            data_streams: '(Block List, Max: 1) Data Streams settings definition for Yandex Cloud Functions Trigger, if present. (see below for nested schema)'
            database: (String) Stream database for Yandex Cloud Functions Trigger.
            delete: (Boolean) Boolean flag for setting delete event for Yandex Cloud Functions Trigger.
            delete_image: (Boolean) Boolean flag for setting delete image event for Yandex Cloud Functions Trigger.
            delete_image_tag: (Boolean) Boolean flag for setting delete image tag event for Yandex Cloud Functions Trigger.
            description: (String) The resource description.
            device_id: (String) IoT Device ID for Yandex Cloud Functions Trigger.
            dlq: '(Block List, Max: 1) Dead Letter Queue (DLQ) settings definition for Yandex Cloud Functions Trigger. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            function: '(Block List, Max: 1) Yandex Cloud Function settings definition for Yandex Cloud Functions Trigger. (see below for nested schema)'
            group_id: (String) Logging group ID for Yandex Cloud Functions Trigger.
            id: (String) The ID of this resource.
            image_name: (String) Image name filter setting for Yandex Cloud Functions Trigger.
            iot: '(Block List, Max: 1) IoT settings definition for Yandex Cloud Functions Trigger, if present. Only one section iot or message_queue. (see below for nested schema)'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            levels: (Set of String) Logging level filter setting for Yandex Cloud Functions Trigger.
            log_group: '(Block List, Max: 1) (see below for nested schema)'
            log_group_ids: (Set of String)
            logging: '(Block List, Max: 1) Logging settings definition for Yandex Cloud Functions Trigger, if present. (see below for nested schema)'
            mail: '(Block List, Max: 1) Mail settings definition for Yandex Cloud Functions Trigger, if present. (see below for nested schema)'
            message_queue: '(Block List, Max: 1) Message Queue settings definition for Yandex Cloud Functions Trigger, if present. (see below for nested schema)'
            name: (String) The resource name.
            object_storage: '(Block List, Max: 1) Object Storage settings definition for Yandex Cloud Functions Trigger, if present. (see below for nested schema)'
            path: (String) Path for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.
            payload: (String) Payload to be passed to function.
            prefix: (String) Prefix for Object Storage for Yandex Cloud Functions Trigger.
            queue_id: (String) ID of Dead Letter Queue for Trigger (Queue ARN).
            registry_id: (String) Container Registry ID for Yandex Cloud Functions Trigger.
            resource_ids: (Set of String) Resource ID filter setting for Yandex Cloud Functions Trigger.
            resource_types: (Set of String) Resource type filter setting for Yandex Cloud Functions Trigger.
            retry_attempts: (String) Retry attempts for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.
            retry_interval: (String) Retry interval in seconds for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.
            service_account_id: (String) Service account ID for Yandex Cloud Serverless Container for Yandex Cloud Functions Trigger.
            stream_name: (String) Stream name for Yandex Cloud Functions Trigger.
            stream_names: (Set of String) Logging stream name filter setting for Yandex Cloud Functions Trigger.
            suffix: (String) Suffix for Object Storage for Yandex Cloud Functions Trigger.
            tag: (String) Image tag filter setting for Yandex Cloud Functions Trigger.
            timeouts: (Block, Optional) (see below for nested schema)
            timer: '(Block List, Max: 1) Timer settings definition for Yandex Cloud Functions Trigger, if present. (see below for nested schema)'
            topic: (String) IoT Topic for Yandex Cloud Functions Trigger.
            update: (Boolean) Boolean flag for setting update event for Yandex Cloud Functions Trigger.
            visibility_timeout: (String) Visibility timeout for Yandex Cloud Functions Trigger.
        importStatements:
            - |-
              # terraform import yandex_function_trigger.<resource Name> <resource Id>
              terraform import yandex_function_trigger.my_trigger a1scn**********3ur32
    yandex_gitlab_instance:
        subCategory: Managed Service for GitLab
        description: Manages a GitLab instance within Yandex Cloud.
        name: yandex_gitlab_instance
        title: yandex_gitlab_instance
        examples:
            - name: my_gitlab_instance
              manifest: |-
                {
                  "admin_email": "gitlab-user@example.com",
                  "admin_login": "gitlab-user",
                  "backup_retain_period_days": 7,
                  "disk_size": 30,
                  "domain": "gitlab-terraform.gitlab.yandexcloud.net",
                  "name": "gitlab-created-with-terraform",
                  "resource_preset_id": "s2.micro",
                  "subnet_id": "${yandex_vpc_subnet.a.id}"
                }
              references:
                subnet_id: yandex_vpc_subnet.a.id
        argumentDocs:
            admin_email: (String) An email of admin user in Gitlab.
            admin_login: (String) A login of admin user in Gitlab.
            approval_rules_id: '(String) Approval rules configuration. One of: NONE, BASIC, STANDARD, ADVANCED.'
            approval_rules_token: (String, Sensitive) Approval rules token.
            backup_retain_period_days: (Number) Auto backups retain period in days.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Amount of disk storage available to a instance in GB.
            domain: (String) Domain of the Gitlab instance.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            gitlab_version: (String) Version of Gitlab on instance.
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_delete_untagged: (Boolean) The true value means that untagged images will be deleted during maintenance.
            name: (String) The resource name.
            resource_preset_id: '(String) ID of the preset for computational resources available to the instance (CPU, memory etc.). One of: s2.micro, s2.small, s2.medium, s2.large.'
            status: (String) Status of the instance.
            subnet_id: (String) ID of the subnet where the GitLab instance is located.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            updated_at: (String) The timestamp when the instance was updated.
        importStatements: []
    yandex_iam_service_account:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a Yandex Cloud IAM service account.
        name: yandex_iam_service_account
        title: yandex_iam_service_account
        examples:
            - name: builder
              manifest: |-
                {
                  "description": "service account to manage VMs",
                  "name": "vmmanager"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            name: (String) The resource name.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_iam_service_account.<resource Name> <resource Id>
              terraform import yandex_iam_service_account.builder aje5a**********qspd3
    yandex_iam_service_account_api_key:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a Yandex Cloud IAM service account API key.
        name: yandex_iam_service_account_api_key
        title: yandex_iam_service_account_api_key
        examples:
            - name: sa-api-key
              manifest: |-
                {
                  "description": "api key for authorization",
                  "expires_at": "2024-11-11T00:00:00Z",
                  "pgp_key": "keybase:keybaseusername",
                  "scopes": [
                    "yc.ydb.topics.manage",
                    "yc.ydb.tables.manage"
                  ],
                  "service_account_id": "aje5a**********qspd3"
                }
        argumentDocs:
            created_at: (String) The creation timestamp of the resource.
            description: (String) The resource description.
            encrypted_secret_key: (String) The encrypted secret key, base64 encoded. This is only populated when pgp_key is supplied.
            entry_for_secret_key: (String) entry that will store the value of secret_key
            expires_at: (String) The key will be no longer valid after expiration timestamp.
            id: (String) The ID of this resource.
            key_fingerprint: (String) The fingerprint of the PGP key used to encrypt the secret key. This is only populated when pgp_key is supplied.
            output_to_lockbox: '(Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)'
            output_to_lockbox_version_id: (String) ID of the Lockbox secret version that contains the value of secret_key. This is only populated when output_to_lockbox is supplied. This version will be destroyed when the IAM key is destroyed, or when output_to_lockbox is removed.
            pgp_key: (String) An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase username in the form keybase:keybaseusername.
            scope: (String, Deprecated) The scope of the key.
            scopes: (List of String) The list of scopes of the key.
            secret_id: (String) ID of the Lockbox secret where to store the sensible values.
            secret_key: (String, Sensitive) The secret key. This is only populated when neither pgp_key nor output_to_lockbox are provided.
            service_account_id: (String) ID of the service account to an API key for.
        importStatements: []
    yandex_iam_service_account_iam_binding:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a single IAM binding for a Yandex IAM service account.
        name: yandex_iam_service_account_iam_binding
        title: yandex_iam_service_account_iam_binding
        examples:
            - name: admin-account-iam
              manifest: |-
                {
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "admin",
                  "service_account_id": "aje5a**********qspd3"
                }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            service_account_id: (String) The service account ID to apply a binding to.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_iam_service_account_iam_binding.<resource Name> "service_account_id roles/<resource Role>"
              terraform import yandex_iam_service_account_iam_binding.admin-account-iam "aje5a**********qspd3 roles/admin"
    yandex_iam_service_account_iam_member:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a single member for a single IAM binding for a Yandex IAM service account.
        name: yandex_iam_service_account_iam_member
        title: yandex_iam_service_account_iam_member
        examples:
            - name: admin-account-iam
              manifest: |-
                {
                  "member": "userAccount:bar_user_id",
                  "role": "admin",
                  "service_account_id": "your-service-account-id"
                }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            service_account_id: (String) The service account ID to apply a binding to.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_iam_service_account_iam_member.<resource Name> "service_account_id roles/<resource Role> <member Id>"
              terraform import yandex_iam_service_account_iam_member.admin-account-iam "aje5a**********qspd3 roles/admin foo@example.com"
    yandex_iam_service_account_iam_policy:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of the IAM policy for a Yandex IAM service account.
        name: yandex_iam_service_account_iam_policy
        title: yandex_iam_service_account_iam_policy
        examples:
            - name: admin-account-iam
              manifest: |-
                {
                  "policy_data": "${data.yandex_iam_policy.admin.policy_data}",
                  "service_account_id": "aje5a**********qspd3"
                }
              references:
                policy_data: data.yandex_iam_policy.admin.policy_data
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            policy_data: (String) Required only by yandex_iam_service_account_iam_policy. The policy data generated by a yandex_iam_policy data source.
            service_account_id: (String) The service account ID to apply a binding to.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_iam_service_account_iam_policy.<resource Name> <resource Id>
              terraform import yandex_iam_service_account_iam_policy.admin-account-iam aje5a**********qspd3
    yandex_iam_service_account_key:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a Yandex Cloud IAM service account key.
        name: yandex_iam_service_account_key
        title: yandex_iam_service_account_key
        examples:
            - name: sa-auth-key
              manifest: |-
                {
                  "description": "key for service account",
                  "key_algorithm": "RSA_4096",
                  "pgp_key": "keybase:keybaseusername",
                  "service_account_id": "aje5a**********qspd3"
                }
        argumentDocs:
            created_at: (String) The creation timestamp of the resource.
            description: (String) The resource description.
            encrypted_private_key: (String) The encrypted private key, base64 encoded. This is only populated when pgp_key is supplied.
            entry_for_private_key: (String) entry that will store the value of private_key
            format: (String) The output format of the keys. PEM_FILE is the default format.
            id: (String) The ID of this resource.
            key_algorithm: (String) The algorithm used to generate the key. RSA_2048 is the default algorithm. Valid values are listed in the API reference.
            key_fingerprint: (String) The fingerprint of the PGP key used to encrypt the private key. This is only populated when pgp_key is supplied.
            output_to_lockbox: '(Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)'
            output_to_lockbox_version_id: (String) ID of the Lockbox secret version that contains the value of secret_key. This is only populated when output_to_lockbox is supplied. This version will be destroyed when the IAM key is destroyed, or when output_to_lockbox is removed.
            pgp_key: (String) An optional PGP key to encrypt the resulting private key material. May either be a base64-encoded public key or a keybase username in the form keybase:keybaseusername.
            private_key: (String, Sensitive) The private key. This is only populated when neither pgp_key nor output_to_lockbox are provided.
            public_key: (String) The public key.
            secret_id: (String) ID of the Lockbox secret where to store the sensible values.
            service_account_id: (String) ID of the service account to create a pair for.
        importStatements: []
    yandex_iam_service_account_static_access_key:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a Yandex Cloud IAM service account static access key.
        name: yandex_iam_service_account_static_access_key
        title: yandex_iam_service_account_static_access_key
        examples:
            - name: sa-static-key
              manifest: |-
                {
                  "description": "static access key for object storage",
                  "pgp_key": "keybase:keybaseusername",
                  "service_account_id": "aje5a**********qspd3"
                }
        argumentDocs:
            access_key: (String) ID of the static access key. This is only populated when output_to_lockbox is not provided.
            created_at: (String) The creation timestamp of the resource.
            description: (String) The resource description.
            encrypted_secret_key: (String) The encrypted secret, base64 encoded. This is only populated when pgp_key is supplied.
            entry_for_access_key: (String) entry that will store the value of access_key
            entry_for_secret_key: (String) entry that will store the value of secret_key
            id: (String) The ID of this resource.
            key_fingerprint: (String) The fingerprint of the PGP key used to encrypt the secret key. This is only populated when pgp_key is supplied.
            output_to_lockbox: '(Block List, Max: 1) option to create a Lockbox secret version from sensitive outputs (see below for nested schema)'
            output_to_lockbox_version_id: (String) ID of the Lockbox secret version that contains the value of secret_key. This is only populated when output_to_lockbox is supplied. This version will be destroyed when the IAM key is destroyed, or when output_to_lockbox is removed.
            pgp_key: (String) An optional PGP key to encrypt the resulting secret key material. May either be a base64-encoded public key or a keybase username in the form keybase:keybaseusername.
            secret_id: (String) ID of the Lockbox secret where to store the sensible values.
            secret_key: (String, Sensitive) Private part of generated static access key. This is only populated when neither pgp_key nor output_to_lockbox are provided.
            service_account_id: (String) ID of the service account which is used to get a static key.
        importStatements: []
    yandex_iam_workload_identity_federated_credential:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a Yandex Cloud IAM federated credentials.
        name: yandex_iam_workload_identity_federated_credential
        title: yandex_iam_workload_identity_federated_credential
        examples:
            - name: fed_cred
              manifest: |-
                {
                  "external_subject_id": "some_external_subject_id",
                  "federation_id": "some_wli_federation_id",
                  "service_account_id": "some_sa_id"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) Id of the external subject.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            external_subject_id: (String) Id of the workload identity federation which is used for authentication.
            federation_id: (String) Id of the federated credential.
            id: (String) The ID of this resource.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            service_account_id: (String) Id of the service account that the federated credential belongs to.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_iam_workload_identity_federated_credential.<resource Name> <resource Id>
              terraform import yandex_iam_workload_identity_federated_credential.fed_cred ...
    yandex_iam_workload_identity_oidc_federation:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a Yandex Cloud IAM workload identity OIDC federations.
        name: yandex_iam_workload_identity_oidc_federation
        title: yandex_iam_workload_identity_oidc_federation
        examples:
            - name: wlif
              manifest: |-
                {
                  "audiences": [
                    "aud1",
                    "aud2"
                  ],
                  "description": "some description",
                  "disabled": false,
                  "folder_id": "some_folder_id",
                  "issuer": "https://example-issuer.com",
                  "jwks_url": "https://example-issuer.com/jwks",
                  "labels": {
                    "key1": "value1",
                    "key2": "value2"
                  },
                  "name": "some_wlif_name"
                }
        argumentDocs:
            audiences: (List of String) List of trusted values for aud claim.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) Creation timestamp.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) Description of the OIDC workload identity federation.
            disabled: (Boolean) Disabled flag.
            enabled: (Boolean) Enabled flag.
            federation_id: (String) Id of the OIDC workload identity federation.
            folder_id: (String) Id of the folder that the OIDC workload identity federation belongs to.
            id: (String) The ID of this resource.
            issuer: (String) Issuer identifier of the external IdP server to be used for authentication.
            jwks_url: (String) URL reference to trusted keys in format of JSON Web Key Set.
            labels: (Map of String) Resource labels as key-value pairs.
            name: (String) Name of the OIDC workload identity federation. The name is unique within the folder.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_iam_workload_identity_oidc_federation.<resource Name> <resource Id>
              terraform import yandex_iam_workload_identity_oidc_federation.wlif ...
    yandex_iam_workload_identity_oidc_federation_iam_binding:
        subCategory: Identity and Access Management (IAM)
        description: Allows management of a single IAM binding for a Yandex IAM workload identity OIDC federation.
        name: yandex_iam_workload_identity_oidc_federation_iam_binding
        title: yandex_iam_workload_identity_oidc_federation_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "federation_id": "example_federation_id",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer"
                }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            federation_id: (String) ID of the OIDC workload identity federation to apply a binding to.
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_iam_workload_identity_oidc_federation_iam_binding.<resource Name> "federation_id roles/<resource Role>"
              terraform import yandex_iam_workload_identity_oidc_federation_iam_binding.viewer "example_federation_id roles/viewer"
    yandex_iot_core_broker:
        subCategory: IoT Core
        description: Allows management of a Yandex Cloud IoT Core Broker.
        name: yandex_iot_core_broker
        title: yandex_iot_core_broker
        examples:
            - name: my_broker
              manifest: |-
                {
                  "certificates": [
                    "public part of certificate1",
                    "public part of certificate2"
                  ],
                  "description": "any description",
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "log_options": [
                    {
                      "log_group_id": "log-group-id",
                      "min_level": "ERROR"
                    }
                  ],
                  "name": "some_name"
                }
        argumentDocs:
            certificates: (Set of String) A set of certificate's fingerprints for the IoT Core Broker.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disabled: (Boolean) Is logging for broker disabled.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) Log entries are written to specified log group.
            log_options: '(Block List, Max: 1) Options for logging for IoT Core Broker. (see below for nested schema)'
            min_level: (String) Minimum log entry level.
            name: (String) The resource name.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_iot_core_device:
        subCategory: IoT Core
        description: Allows management of a Yandex Cloud IoT Core Device.
        name: yandex_iot_core_device
        title: yandex_iot_core_device
        examples:
            - name: my_device
              manifest: |-
                {
                  "aliases": {
                    "some_alias1/subtopic": "$devices/{id}/events/somesubtopic",
                    "some_alias2/subtopic": "$devices/{id}/events/aaa/bbb"
                  },
                  "certificates": [
                    "public part of certificate1",
                    "public part of certificate2"
                  ],
                  "description": "any description",
                  "name": "some_name",
                  "passwords": [
                    "my-password1",
                    "my-password2"
                  ],
                  "registry_id": "are1sampleregistryid11"
                }
        argumentDocs:
            aliases: (Map of String) A set of key/value aliases pairs to assign to the IoT Core Device.
            certificates: (Set of String) A set of certificate's fingerprints for the IoT Core Device.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            passwords: (Set of String, Sensitive) A set of passwords's id for the IoT Core Device.
            registry_id: (String) IoT Core Registry ID for the IoT Core Device.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_iot_core_registry:
        subCategory: IoT Core
        description: Allows management of a Yandex Cloud IoT Core Registry.
        name: yandex_iot_core_registry
        title: yandex_iot_core_registry
        examples:
            - name: my_registry
              manifest: |-
                {
                  "certificates": [
                    "public part of certificate1",
                    "public part of certificate2"
                  ],
                  "description": "any description",
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "log_options": [
                    {
                      "log_group_id": "log-group-id",
                      "min_level": "ERROR"
                    }
                  ],
                  "name": "some_name",
                  "passwords": [
                    "my-password1",
                    "my-password2"
                  ]
                }
        argumentDocs:
            certificates: (Set of String) A set of certificate's fingerprints for the IoT Core Registry.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disabled: (Boolean) Is logging for registry disabled.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) Log entries are written to specified log group.
            log_options: '(Block List, Max: 1) Options for logging for IoT Core Registry. (see below for nested schema)'
            min_level: (String) Minimum log entry level.
            name: (String) The resource name.
            passwords: (Set of String, Sensitive) A set of passwords's id for the IoT Core Registry.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_kms_asymmetric_encryption_key:
        subCategory: Key Management Service (KMS)
        description: Creates a Yandex KMS asymmetric encryption key that can be used for cryptographic operation.
        name: yandex_kms_asymmetric_encryption_key
        title: yandex_kms_asymmetric_encryption_key
        examples:
            - name: key-a
              manifest: |-
                {
                  "description": "description for key",
                  "encryption_algorithm": "RSA_2048_ENC_OAEP_SHA_256",
                  "name": "example-asymetric-encryption-key"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            encryption_algorithm: (String) Encryption algorithm to be used with a new key. The default value is RSA_2048_ENC_OAEP_SHA_256.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            status: (String) The status of the key.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_kms_asymmetric_encryption_key.<resource Name> <resource Id>
              terraform import yandex_kms_asymmetric_encryption_key.key-a abj7u**********j38cd
    yandex_kms_asymmetric_encryption_key_iam_binding:
        subCategory: Key Management Service (KMS)
        description: Allows management of a single IAM binding for a Key Management Service.
        name: yandex_kms_asymmetric_encryption_key_iam_binding
        title: yandex_kms_asymmetric_encryption_key_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "asymmetric_encryption_key_id": "${yandex_kms_asymmetric_encryption_key.your-key.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer"
                }
              references:
                asymmetric_encryption_key_id: yandex_kms_asymmetric_encryption_key.your-key.id
              dependencies:
                yandex_kms_asymmetric_encryption_key.your-key: |-
                    {
                      "name": "asymmetric-encryption-key-name"
                    }
        argumentDocs:
            asymmetric_encryption_key_id: (String) The Yandex Key Management Service Asymmetric Encryption Key ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_kms_asymmetric_encryption_key_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_kms_asymmetric_encryption_key_iam_binding.viewer "abj7u**********j38cd viewer"
    yandex_kms_asymmetric_encryption_key_iam_member:
        subCategory: Key Management Service (KMS)
        description: Allows management of a single member for a single IAM binding for a Key Management Service.
        name: yandex_kms_asymmetric_encryption_key_iam_member
        title: yandex_kms_asymmetric_encryption_key_iam_member
        examples:
            - name: viewer
              manifest: |-
                {
                  "asymmetric_encryption_key_id": "${yandex_kms_asymmetric_encryption_key.your-key.id}",
                  "member": "userAccount:foo_user_id",
                  "role": "viewer"
                }
              references:
                asymmetric_encryption_key_id: yandex_kms_asymmetric_encryption_key.your-key.id
              dependencies:
                yandex_kms_asymmetric_encryption_key.your-key: |-
                    {
                      "name": "asymmetric-encryption-key-name"
                    }
        argumentDocs:
            asymmetric_encryption_key_id: (String) The Yandex Key Management Service Asymmetric Encryption Key ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_kms_asymmetric_encryption_key_iam_member.<resource Name> "<asymmetric_encryption_key_id> <resource Role> <Member Id>"
              terraform import yandex_kms_asymmetric_encryption_key_iam_member.viewer "abj7u**********j38cd viewer foo@example.com"
    yandex_kms_asymmetric_signature_key:
        subCategory: Key Management Service (KMS)
        description: Creates a Yandex KMS asymmetric signature key that can be used for cryptographic operation.
        name: yandex_kms_asymmetric_signature_key
        title: yandex_kms_asymmetric_signature_key
        examples:
            - name: key-a
              manifest: |-
                {
                  "description": "description for key",
                  "name": "example-asymetric-signature-key",
                  "signature_algorithm": "RSA_2048_SIGN_PSS_SHA_256"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            signature_algorithm: (String) Signature algorithm to be used with a new key. The default value is RSA_2048_SIGN_PSS_SHA_256.
            status: (String) The status of the key.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_kms_asymmetric_signature_key.<resource Name> <resource Id>
              terraform import yandex_kms_asymmetric_signature_key.key-a abjjf**********p3gp8
    yandex_kms_asymmetric_signature_key_iam_binding:
        subCategory: Key Management Service (KMS)
        description: Allows management of a single IAM binding for a Key Management Service.
        name: yandex_kms_asymmetric_signature_key_iam_binding
        title: yandex_kms_asymmetric_signature_key_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "asymmetric_signaturen_key_id": "${yandex_kms_asymmetric_signature_key.your-key.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer"
                }
              references:
                asymmetric_signaturen_key_id: yandex_kms_asymmetric_signature_key.your-key.id
              dependencies:
                yandex_kms_asymmetric_signature_key.your-key: |-
                    {
                      "name": "asymmetric-signature-key-name"
                    }
        argumentDocs:
            asymmetric_signature_key_id: (String) The Yandex Key Management Service Asymmetric Signature Key ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_kms_asymmetric_signature_key_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_kms_asymmetric_signature_key_iam_binding.viewer "abjjf**********p3gp8 viewer"
    yandex_kms_asymmetric_signature_key_iam_member:
        subCategory: Key Management Service (KMS)
        description: Allows management of a single member for a single IAM binding for a Key Management Service.
        name: yandex_kms_asymmetric_signature_key_iam_member
        title: yandex_kms_asymmetric_signature_key_iam_member
        examples:
            - name: viewer
              manifest: |-
                {
                  "asymmetric_signaturen_key_id": "${yandex_kms_asymmetric_signature_key.your-key.id}",
                  "member": "userAccount:foo_user_id",
                  "role": "viewer"
                }
              references:
                asymmetric_signaturen_key_id: yandex_kms_asymmetric_signature_key.your-key.id
              dependencies:
                yandex_kms_asymmetric_signature_key.your-key: |-
                    {
                      "name": "asymmetric-signature-key-name"
                    }
        argumentDocs:
            asymmetric_signature_key_id: (String) The Yandex Key Management Service Asymmetric Signature Key ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_kms_asymmetric_signature_key_iam_member.<resource Name> "<asymmetric_encryption_key_id> <resource Role> <Member Id>"
              terraform import yandex_kms_asymmetric_signature_key_iam_member.viewer "abjjf**********p3gp8 viewer foo@example.com"
    yandex_kms_secret_ciphertext:
        subCategory: Key Management Service (KMS)
        description: Encrypts given plaintext with the specified Yandex KMS key and provides access to the ciphertext.
        name: yandex_kms_secret_ciphertext
        title: yandex_kms_secret_ciphertext
        examples:
            - name: password
              manifest: |-
                {
                  "aad_context": "additional authenticated data",
                  "key_id": "${yandex_kms_symmetric_key.example.id}",
                  "plaintext": "strong password"
                }
              references:
                key_id: yandex_kms_symmetric_key.example.id
              dependencies:
                yandex_kms_symmetric_key.example: |-
                    {
                      "description": "description for key",
                      "name": "example-symetric-key"
                    }
        argumentDocs:
            aad_context: (String) Additional authenticated data (AAD context), optional. If specified, this data will be required for decryption with the SymmetricDecryptRequest.
            ciphertext: (String) Resulting CipherText, encoded with standard base64 alphabet as defined in RFC 4648 section 4.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) The ID of this resource.
            key_id: (String) ID of the symmetric KMS key to use for encryption.
            plaintext: (String, Sensitive) Plaintext to be encrypted.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_kms_symmetric_key:
        subCategory: Key Management Service (KMS)
        description: Creates a Yandex KMS symmetric key that can be used for cryptographic operation.
        name: yandex_kms_symmetric_key
        title: yandex_kms_symmetric_key
        examples:
            - name: key-a
              manifest: |-
                {
                  "default_algorithm": "AES_128",
                  "description": "description for key",
                  "name": "example-symetric-key",
                  "rotation_period": "8760h"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            default_algorithm: (String) Encryption algorithm to be used with a new key version, generated with the next rotation. The default value is AES_128.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            rotated_at: (String) Last rotation timestamp of the key.
            rotation_period: (String) Interval between automatic rotations. To disable automatic rotation, omit this parameter.
            status: (String) The status of the key.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_kms_symmetric_key.<resource Name> <resource Id>
              terraform import yandex_kms_symmetric_key.key-a abjjf**********p3gp8
    yandex_kms_symmetric_key_iam_binding:
        subCategory: Key Management Service (KMS)
        description: Allows management of a single IAM binding for a Key Management Service.
        name: yandex_kms_symmetric_key_iam_binding
        title: yandex_kms_symmetric_key_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer",
                  "symmetric_key_id": "${yandex_kms_symmetric_key.your-key.id}"
                }
              references:
                symmetric_key_id: yandex_kms_symmetric_key.your-key.id
              dependencies:
                yandex_kms_symmetric_key.your-key: |-
                    {
                      "name": "symmetric-key-name"
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            symmetric_key_id: (String) The Yandex Key Management Service Symmetric Key ID to apply a binding to.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_kms_symmetric_key_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_kms_symmetric_key_iam_binding.viewer "abjjf**********p3gp8 viewer"
    yandex_kms_symmetric_key_iam_member:
        subCategory: Key Management Service (KMS)
        description: Allows management of a single member for a single IAM binding for a Key Management Service.
        name: yandex_kms_symmetric_key_iam_member
        title: yandex_kms_symmetric_key_iam_member
        examples:
            - name: viewer
              manifest: |-
                {
                  "member": "userAccount:foo_user_id",
                  "role": "viewer",
                  "symmetric_key_id": "${yandex_kms_symmetric_key.your-key.id}"
                }
              references:
                symmetric_key_id: yandex_kms_symmetric_key.your-key.id
              dependencies:
                yandex_kms_symmetric_key.your-key: |-
                    {
                      "name": "symmetric-key-name"
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            symmetric_key_id: (String) The Yandex Key Management Service Symmetric Key ID to apply a binding to.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_kms_symmetric_key_iam_member.<resource Name> "<resource Id> <resource Role> <subject Id>"
              terraform import yandex_kms_symmetric_key_iam_member.viewer "abjjf**********p3gp8 viewer foo@example.com"
    yandex_kubernetes_cluster:
        subCategory: Managed Service for Kubernetes (MK8S)
        description: Allows management of Yandex Kubernetes Cluster.
        name: yandex_kubernetes_cluster
        title: yandex_kubernetes_cluster
        examples:
            - name: zonal_cluster
              manifest: |-
                {
                  "description": "description",
                  "kms_provider": [
                    {
                      "key_id": "${yandex_kms_symmetric_key.kms_key_resource_name.id}"
                    }
                  ],
                  "labels": {
                    "my_key": "my_value",
                    "my_other_key": "my_other_value"
                  },
                  "master": [
                    {
                      "maintenance_policy": [
                        {
                          "auto_upgrade": true,
                          "maintenance_window": [
                            {
                              "duration": "3h",
                              "start_time": "15:00"
                            }
                          ]
                        }
                      ],
                      "master_logging": [
                        {
                          "audit_enabled": true,
                          "cluster_autoscaler_enabled": true,
                          "enabled": true,
                          "events_enabled": true,
                          "kube_apiserver_enabled": true,
                          "log_group_id": "${yandex_logging_group.log_group_resoruce_name.id}"
                        }
                      ],
                      "public_ip": true,
                      "scale_policy": [
                        {
                          "auto_scale": [
                            {
                              "min_resource_preset_id": "s-c4-m16"
                            }
                          ]
                        }
                      ],
                      "security_group_ids": [
                        "${yandex_vpc_security_group.security_group_name.id}"
                      ],
                      "version": "1.30",
                      "zonal": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.subnet_resource_name.id}",
                          "zone": "${yandex_vpc_subnet.subnet_resource_name.zone}"
                        }
                      ]
                    }
                  ],
                  "name": "name",
                  "network_id": "${yandex_vpc_network.network_resource_name.id}",
                  "network_policy_provider": "CALICO",
                  "node_service_account_id": "${yandex_iam_service_account.node_service_account_resource_name.id}",
                  "release_channel": "RAPID",
                  "service_account_id": "${yandex_iam_service_account.service_account_resource_name.id}"
                }
              references:
                kms_provider.key_id: yandex_kms_symmetric_key.kms_key_resource_name.id
                master.master_logging.log_group_id: yandex_logging_group.log_group_resoruce_name.id
                master.zonal.subnet_id: yandex_vpc_subnet.subnet_resource_name.id
                master.zonal.zone: yandex_vpc_subnet.subnet_resource_name.zone
                network_id: yandex_vpc_network.network_resource_name.id
                node_service_account_id: yandex_iam_service_account.node_service_account_resource_name.id
                service_account_id: yandex_iam_service_account.service_account_resource_name.id
            - name: regional_cluster
              manifest: |-
                {
                  "description": "description",
                  "labels": {
                    "my_key": "my_value",
                    "my_other_key": "my_other_value"
                  },
                  "master": [
                    {
                      "maintenance_policy": [
                        {
                          "auto_upgrade": true,
                          "maintenance_window": [
                            {
                              "day": "monday",
                              "duration": "3h",
                              "start_time": "15:00"
                            },
                            {
                              "day": "friday",
                              "duration": "4h30m",
                              "start_time": "10:00"
                            }
                          ]
                        }
                      ],
                      "master_logging": [
                        {
                          "audit_enabled": true,
                          "cluster_autoscaler_enabled": true,
                          "enabled": true,
                          "events_enabled": true,
                          "folder_id": "${data.yandex_resourcemanager_folder.folder_resource_name.id}",
                          "kube_apiserver_enabled": true
                        }
                      ],
                      "public_ip": true,
                      "regional": [
                        {
                          "location": [
                            {
                              "subnet_id": "${yandex_vpc_subnet.subnet_a_resource_name.id}",
                              "zone": "${yandex_vpc_subnet.subnet_a_resource_name.zone}"
                            },
                            {
                              "subnet_id": "${yandex_vpc_subnet.subnet_b_resource_name.id}",
                              "zone": "${yandex_vpc_subnet.subnet_b_resource_name.zone}"
                            },
                            {
                              "subnet_id": "${yandex_vpc_subnet.subnet_d_resource_name.id}",
                              "zone": "${yandex_vpc_subnet.subnet_d_resource_name.zone}"
                            }
                          ],
                          "region": "ru-central1"
                        }
                      ],
                      "scale_policy": [
                        {
                          "auto_scale": [
                            {
                              "min_resource_preset_id": "s-c4-m16"
                            }
                          ]
                        }
                      ],
                      "version": "1.30"
                    }
                  ],
                  "name": "name",
                  "network_id": "${yandex_vpc_network.network_resource_name.id}",
                  "node_service_account_id": "${yandex_iam_service_account.node_service_account_resource_name.id}",
                  "release_channel": "STABLE",
                  "service_account_id": "${yandex_iam_service_account.service_account_resource_name.id}"
                }
              references:
                master.master_logging.folder_id: data.yandex_resourcemanager_folder.folder_resource_name.id
                master.regional.location.subnet_id: yandex_vpc_subnet.subnet_d_resource_name.id
                master.regional.location.zone: yandex_vpc_subnet.subnet_d_resource_name.zone
                network_id: yandex_vpc_network.network_resource_name.id
                node_service_account_id: yandex_iam_service_account.node_service_account_resource_name.id
                service_account_id: yandex_iam_service_account.service_account_resource_name.id
        argumentDocs:
            audit_enabled: (Boolean) Boolean flag that specifies if kube-apiserver audit logs should be sent to Yandex Cloud Logging.
            auto_scale: '(Block List, Max: 1) Autoscaled master instance resources. (see below for nested schema)'
            auto_upgrade: (Boolean) Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.
            cilium: '(Block List, Max: 1) Cilium network implementation configuration. No options exist. (see below for nested schema)'
            cluster_autoscaler_enabled: (Boolean) Boolean flag that specifies if cluster-autoscaler logs should be sent to Yandex Cloud Logging.
            cluster_ca_certificate: (String) PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
            cluster_ipv4_range: (String) CIDR block. IP range for allocating pod addresses. It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be set up for this CIDR blocks in node subnets.
            cluster_ipv6_range: (String) Identical to cluster_ipv4_range but for IPv6 protocol.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            current_version: (String)
            day: (String) The day of the week which you want to update.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            duration: (String) The duration of the day of week you want to update.
            enabled: (Boolean) Boolean flag that specifies if master components logs should be sent to Yandex Cloud Logging. The exact components that will send their logs must be configured via the options described below.
            etcd_cluster_size: (Number) Number of etcd clusters that will be used for the Kubernetes master.
            events_enabled: (Boolean) Boolean flag that specifies if kubernetes cluster events should be sent to Yandex Cloud Logging.
            external_v4_address: (String) An IPv4 external network address that is assigned to the master.
            external_v4_endpoint: (String) External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
            external_v6_address: (String) An IPv6 external network address that is assigned to the master.
            external_v6_endpoint: (String) External IPv6 endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            health: (String) Health of the Kubernetes cluster.
            id: (String) The ID of this resource.
            internal_v4_address: (String) An IPv4 internal network address that is assigned to the master.
            internal_v4_endpoint: (String) Internal endpoint that can be used to connect to the master from cloud networks.
            key_id: (String) KMS key ID.
            kms_provider: '(Block List, Max: 1) Cluster KMS provider parameters. (see below for nested schema)'
            kube_apiserver_enabled: (Boolean) Boolean flag that specifies if kube-apiserver logs should be sent to Yandex Cloud Logging.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            location: (Block List) Array of locations, where master instances will be allocated. (see below for nested schema)
            log_group_id: (String) Log group where cluster stores cluster system logs, like audit, events, or control plane logs.
            maintenance_policy: '(Block List, Max: 1) Maintenance policy for Kubernetes master. If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time. Revision upgrades are performed only within the same minor version, e.g. 1.29. Minor version upgrades (e.g. 1.29->1.30) should be performed manually. (see below for nested schema)'
            maintenance_window: (Block Set) This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time. To specify time of day interval, for all days, one element should be provided, with two fields set, start_time and duration. Please see zonal_cluster_resource_name config example.
            master: '(Block List, Min: 1, Max: 1) Kubernetes master configuration options. (see below for nested schema)'
            master_location: (Block List) Cluster master's instances locations array (zone and subnet). Cannot be used together with zonal or regional. Currently, supports either one, for zonal master, or three instances of master_location. Can be updated in place. When creating regional cluster (three master instances), its region will be evaluated automatically by backend. (see below for nested schema)
            master_logging: '(Block List, Max: 1) Master Logging options. (see below for nested schema)'
            min_resource_preset_id: (String) Minimal resource preset ID.
            name: (String) The resource name.
            network_id: (String) The ID of the cluster network.
            network_implementation: '(Block List, Max: 1) Network Implementation options. (see below for nested schema)'
            network_policy_provider: '(String) Network policy provider for the cluster. Possible values: CALICO.'
            new_revision_available: (Boolean)
            new_revision_summary: (String)
            node_ipv4_cidr_mask_size: (Number) Size of the masks that are assigned to each node in the cluster. Effectively limits maximum number of pods for each node.
            node_service_account_id: (String) Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node logs and metrics.
            public_ip: (Boolean) When true, Kubernetes master will have visible ipv4 address.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            region: (String) Name of availability region (e.g. ru-central1), where master instances will be allocated.
            regional: '(Block List, Max: 1) Initialize parameters for Regional Master (highly available master). (see below for nested schema)'
            release_channel: (String) Cluster release channel.
            scale_policy: '(Block List, Max: 1) Scale policy of the master. (see below for nested schema)'
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            service_account_id: (String) Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster. Selected service account should have edit role on the folder where the Kubernetes cluster will be located and on the folder where selected network resides.
            service_ipv4_range: (String) CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from. It should not overlap with any subnet in the network the Kubernetes cluster located in.
            service_ipv6_range: (String) Identical to service_ipv4_range but for IPv6 protocol.
            start_time: (String) The start time of the day of week you want to update.
            status: (String) Status of the Kubernetes cluster.
            subnet_id: (String) ID of the subnet.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            version: (String) Version of Kubernetes that will be used for master.
            version_deprecated: (Boolean)
            version_info: (List of Object) Information about cluster version. (see below for nested schema)
            zonal: '(Block List, Max: 1) Initialize parameters for Zonal Master (single node master). (see below for nested schema)'
            zone: (String) ID of the availability zone.
        importStatements:
            - |-
              # terraform import yandex_kubernetes_cluster.<resource Name> <resource Id>
              terraform import yandex_kubernetes_cluster.regional_cluster ...
    yandex_kubernetes_cluster_iam_binding Resource - yandex:
        subCategory: ""
        description: Allows creation and management of a single binding within IAM policy for an existing Yandex Managed Service for Kubernetes cluster. ~> Roles controlled by yandex_kubernetes_cluster_iam_binding should not be assigned using yandex_kubernetes_cluster_iam_member. ~> When you delete yandex_kubernetes_cluster_iam_binding resource, the roles can be deleted from other users within the folder as well. Be careful!
        name: yandex_kubernetes_cluster_iam_binding Resource - yandex
        title: yandex_kubernetes_cluster_iam_binding Resource - yandex
        argumentDocs:
            cluster_id: (String) The Yandex Managed Service for Kubernetes cluster ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_kubernetes_cluster_iam_member Resource - yandex:
        subCategory: ""
        description: Allows creation and management of a single member for a single binding within the IAM policy for an existing Yandex Managed Service for Kubernetes cluster. ~> Roles controlled by yandex_kubernetes_cluster_iam_binding should not be assigned using yandex_kubernetes_cluster_iam_member.
        name: yandex_kubernetes_cluster_iam_member Resource - yandex
        title: yandex_kubernetes_cluster_iam_member Resource - yandex
        argumentDocs:
            cluster_id: (String) The Yandex Managed Service for Kubernetes cluster ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_kubernetes_marketplace_helm_release:
        subCategory: Managed Kubernetes (MK8S) Marketplace
        description: Allows management of Kubernetes product installed from Yandex Cloud Marketplace.
        name: yandex_kubernetes_marketplace_helm_release
        title: yandex_kubernetes_marketplace_helm_release
        examples:
            - name: gatekeeper_helm_release
              manifest: |-
                {
                  "cluster_id": "${yandex_kubernetes_cluster.cluster_resource_name.id}",
                  "name": "gatekeeper",
                  "namespace": "${kubernetes_namespace.namespace_resource_name.name}",
                  "product_version": "f2ecif2vt62k2637tgus",
                  "user_values": {
                    "auditInterval": "90",
                    "constraintViolationsLimit": "30"
                  }
                }
              references:
                cluster_id: yandex_kubernetes_cluster.cluster_resource_name.id
                namespace: kubernetes_namespace.namespace_resource_name.name
        argumentDocs:
            cluster_id: (String) The ID of the Kubernetes cluster where the product will be installed.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The Helm Release creation (first installation) timestamp.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) The resource identifier.
            name: (String) The name of the deployment.
            namespace: (String) The Kubernetes namespace where the product will be installed.
            product_id: (String) The ID of the Marketplace product.
            product_name: (String) The name of the Marketplace product.
            product_version: (String) The ID of the product version to be installed.
            status: (String) Status of the deployment.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user_values: |-
                (Map of String, Sensitive) Values to be passed for the installation of the product. The block consists of attributes that accept string values. The exact structure depends on the particular product and may differ for different versions of the same product. Depending on the product, some values may be required, and the installation may fail if they are not provided.
                ~> applicationName and namespace, if provided in this block, override name and namespace arguments, respectively.
        importStatements: []
    yandex_kubernetes_node_group:
        subCategory: Managed Service for Kubernetes (MK8S)
        description: Allows management of Yandex Kubernetes Node Group.
        name: yandex_kubernetes_node_group
        title: yandex_kubernetes_node_group
        examples:
            - name: my_node_group
              manifest: |-
                {
                  "allocation_policy": [
                    {
                      "location": [
                        {
                          "zone": "ru-central1-a"
                        }
                      ]
                    }
                  ],
                  "cluster_id": "${yandex_kubernetes_cluster.my_cluster.id}",
                  "description": "description",
                  "instance_template": [
                    {
                      "boot_disk": [
                        {
                          "size": 64,
                          "type": "network-hdd"
                        }
                      ],
                      "container_runtime": [
                        {
                          "type": "containerd"
                        }
                      ],
                      "network_interface": [
                        {
                          "nat": true,
                          "subnet_ids": [
                            "${yandex_vpc_subnet.my_subnet.id}"
                          ]
                        }
                      ],
                      "platform_id": "standard-v2",
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 2
                        }
                      ],
                      "scheduling_policy": [
                        {
                          "preemptible": false
                        }
                      ]
                    }
                  ],
                  "labels": {
                    "key": "value"
                  },
                  "maintenance_policy": [
                    {
                      "auto_repair": true,
                      "auto_upgrade": true,
                      "maintenance_window": [
                        {
                          "day": "monday",
                          "duration": "3h",
                          "start_time": "15:00"
                        },
                        {
                          "day": "friday",
                          "duration": "4h30m",
                          "start_time": "10:00"
                        }
                      ]
                    }
                  ],
                  "name": "name",
                  "scale_policy": [
                    {
                      "fixed_scale": [
                        {
                          "size": 1
                        }
                      ]
                    }
                  ],
                  "version": "1.30"
                }
              references:
                cluster_id: yandex_kubernetes_cluster.my_cluster.id
        argumentDocs:
            '{instance.zone_id}': and {instance.index_in_zone}
            allocation_policy: '(Block List, Max: 1) This argument specify subnets (zones), that will be used by node group compute instances. (see below for nested schema)'
            allowed_unsafe_sysctls: (List of String) A list of allowed unsafe sysctl parameters for this node group. For more details see documentation.
            auto_repair: (Boolean) Flag that specifies if node group can be repaired automatically. When omitted, default value is true.
            auto_scale: '(Block List, Max: 1) Scale policy for an autoscaled node group. (see below for nested schema)'
            auto_upgrade: (Boolean) Flag specifies if node group can be upgraded automatically. When omitted, default value is true.
            boot_disk: '(Block List, Max: 1) The specifications for boot disks that will be attached to the instance. (see below for nested schema)'
            cluster_id: (String) The ID of the Kubernetes cluster that this node group belongs to.
            container_network: '(Block List, Max: 1) Container network configuration. (see below for nested schema)'
            container_runtime: '(Block List, Max: 1) Container runtime configuration. (see below for nested schema)'
            core_fraction: (Number) Baseline core performance as a percent.
            cores: (Number) Number of CPU cores allocated to the instance.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            current_version: (String)
            day: (String)
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deploy_policy: '(Block List, Max: 1) Deploy policy of the node group. (see below for nested schema)'
            description: (String) The resource description.
            dns_zone_id: (String) DNS zone ID (if not set, private zone is used).
            duration: (String)
            fixed_scale: '(Block List, Max: 1) Scale policy for a fixed scale node group. (see below for nested schema)'
            fqdn: (String) DNS record FQDN.
            gpu_cluster_id: (String) GPU cluster id.
            gpu_environment: '(String) GPU environment. Values: runc, runc_drivers_cuda.'
            gpu_settings: '(Block List, Max: 1) GPU settings. (see below for nested schema)'
            gpus: (Number) Number of GPU cores allocated to the instance.
            id: (String) The ID of this resource.
            initial: (Number) Initial number of instances in the node group.
            instance_group_id: (String) ID of instance group that is used to manage this Kubernetes node group.
            instance_template: '(Block List, Min: 1, Max: 1) Template used to create compute instances in this Kubernetes node group. (see below for nested schema)'
            ipv4: (Boolean) Allocate an IPv4 address for the interface. The default value is true.
            ipv4_dns_records: (Block List) List of configurations for creating ipv4 DNS records. (see below for nested schema)
            ipv6: (Boolean) If true, allocate an IPv6 address for the interface. The address will be automatically assigned from the specified subnet.
            ipv6_dns_records: (Block List) List of configurations for creating ipv6 DNS records. (see below for nested schema)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            location: (Block List) Repeated field, that specify subnets (zones), that will be used by node group compute instances. Subnet specified by subnet_id should be allocated in zone specified by 'zone' argument. (see below for nested schema)
            maintenance_policy: '(Block List, Max: 1) Maintenance policy for this Kubernetes node group. If policy is omitted, automatic revision upgrades are enabled and could happen at any time. Revision upgrades are performed only within the same minor version, e.g. 1.29. Minor version upgrades (e.g. 1.29->1.30) should be performed manually. (see below for nested schema)'
            maintenance_window: (Block Set) Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time.
            max: (Number) Maximum number of instances in the node group.
            max_expansion: (Number) The maximum number of instances that can be temporarily allocated above the group's target size during the update.
            max_unavailable: (Number) The maximum number of running instances that can be taken offline during update.
            memory: (Number) The memory size allocated to the instance.
            metadata: '(Map of String) The set of metadata key:value pairs assigned to this instance template. This includes custom metadata and predefined keys. Note: key user-data won''t be provided into instances. It reserved for internal activity in kubernetes_node_group resource.'
            min: (Number) Minimum number of instances in the node group.
            name: (String) The resource name.
            nat: (Boolean, Deprecated) Enables NAT for node group compute instances.
            network_acceleration_type: '(String) Type of network acceleration. Values: standard, software_accelerated.'
            network_interface: (Block List) An array with the network interfaces that will be attached to the instance. (see below for nested schema)
            new_revision_available: (Boolean)
            new_revision_summary: (String)
            node_labels: (Map of String) A set of key/value label pairs, that are assigned to all the nodes of this Kubernetes node group.
            node_taints: (List of String) A list of Kubernetes taints, that are applied to all the nodes of this Kubernetes node group.
            placement_group_id: (String) Specifies the id of the Placement Group to assign to the instances.
            placement_policy: '(Block List, Max: 1) The placement policy configuration. (see below for nested schema)'
            platform_id: (String) The ID of the hardware platform configuration for the node group compute instances.
            pod_mtu: (Number) MTU for pods.
            preemptible: (Boolean) Specifies if the instance is preemptible. Defaults to false.
            ptr: (Boolean) When set to true, also create a PTR DNS record.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            resources: '(Block List, Max: 1) (see below for nested schema)'
            scale_policy: '(Block List, Min: 1, Max: 1) Scale policy of the node group. (see below for nested schema)'
            scheduling_policy: '(Block List, Max: 1) The scheduling policy for the instances in node group. (see below for nested schema)'
            security_group_ids: (Set of String) Security group IDs for network interface.
            size: '(Number) The size of the disk in GB. Allowed minimal size: 64 GB.'
            start_time: (String)
            status: (String) Status of the Kubernetes node group.
            subnet_id: (String, Deprecated) ID of the subnet, that will be used by one compute instance in node group.
            subnet_ids: (Set of String) The IDs of the subnets.
            timeouts: (Block, Optional) (see below for nested schema)
            ttl: (Number) DNS record TTL (in seconds).
            type: (String) The disk type.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            version: (String) Version of Kubernetes that will be used for Kubernetes node group.
            version_deprecated: (Boolean)
            version_info: (List of Object) Information about Kubernetes node group version. (see below for nested schema)
            zone: (String) ID of the availability zone where for one compute instance in node group.
        importStatements:
            - |-
              # terraform import yandex_kubernetes_node_group.<resource Name> <resource Id>
              terraform import yandex_kubernetes_node_group.my_node_group ...
    yandex_lb_network_load_balancer:
        subCategory: Network Load Balancer (NLB)
        description: A network load balancer is used to evenly distribute the load across cloud resources.
        name: yandex_lb_network_load_balancer
        title: yandex_lb_network_load_balancer
        examples:
            - name: my_nlb
              manifest: |-
                {
                  "attached_target_group": [
                    {
                      "healthcheck": [
                        {
                          "http_options": [
                            {
                              "path": "/ping",
                              "port": 8080
                            }
                          ],
                          "name": "http"
                        }
                      ],
                      "target_group_id": "${yandex_lb_target_group.my-target-group.id}"
                    }
                  ],
                  "listener": [
                    {
                      "external_address_spec": [
                        {
                          "ip_version": "ipv4"
                        }
                      ],
                      "name": "my-listener",
                      "port": 8080
                    }
                  ],
                  "name": "my-network-load-balancer"
                }
              references:
                attached_target_group.target_group_id: yandex_lb_target_group.my-target-group.id
        argumentDocs:
            address: (String) External IP address for a listener. IP address will be allocated if it wasn't been set.
            allow_zonal_shift: (Boolean) Flag that marks the network load balancer as available to zonal shift.
            attached_target_group: (Block Set) An AttachedTargetGroup resource. (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            external_address_spec: '(Block Set, Max: 1) External IP address specification. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            healthcheck: '(Block List, Min: 1) A HealthCheck resource.'
            healthy_threshold: (Number) Number of successful health checks required in order to set the HEALTHY status for the target.
            http_options: '(Block List, Max: 1) Options for HTTP health check. (see below for nested schema)'
            id: (String) The ID of this resource.
            internal_address_spec: '(Block Set, Max: 1) Internal IP address specification. (see below for nested schema)'
            interval: (Number) The interval between health checks. The default is 2 seconds.
            ip_version: (String) IP version of the external addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            listener: (Block Set) Listener specification that will be used by a network load balancer.
            name: (String) The resource name.
            path: (String) URL path to set for health checking requests for every target in the target group. For example /ping. The default path is /.
            port: (Number) Port to use for HTTP health checks.
            protocol: (String) Protocol for incoming traffic. TCP or UDP and the default is TCP.
            region_id: (String) ID of the availability zone where the network load balancer resides. If omitted, default region is being used.
            subnet_id: (String) ID of the subnet to which the internal IP address belongs.
            target_group_id: (String) ID of the target group.
            target_port: (Number) Port of a target. The default is the same as listener's port.
            tcp_options: '(Block List, Max: 1) Options for TCP health check. (see below for nested schema)'
            timeout: (Number) Timeout for a target to return a response for the health check. The default is 1 second.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the network load balancer. Must be one of 'external' or 'internal'. The default is 'external'.
            unhealthy_threshold: (Number) Number of failed health checks before changing the status to UNHEALTHY. The default is 2.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_lb_network_load_balancer.<resource Name> <resource Id>
              terraform import yandex_lb_network_load_balancer.my_nlb ...
    yandex_lb_target_group:
        subCategory: Network Load Balancer (NLB)
        description: A load balancer distributes the load across cloud resources that are combined into a target group.
        name: yandex_lb_target_group
        title: yandex_lb_target_group
        examples:
            - name: my_tg
              manifest: |-
                {
                  "name": "my-target-group",
                  "region_id": "ru-central1",
                  "target": [
                    {
                      "address": "${yandex_compute_instance.my-instance-1.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    },
                    {
                      "address": "${yandex_compute_instance.my-instance-2.network_interface.0.ip_address}",
                      "subnet_id": "${yandex_vpc_subnet.my-subnet.id}"
                    }
                  ]
                }
              references:
                target.address: yandex_compute_instance.my-instance-2.network_interface.0.ip_address
                target.subnet_id: yandex_vpc_subnet.my-subnet.id
        argumentDocs:
            address: (String) IP address of the target.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            region_id: (String) ID of the availability zone where the target group resides. If omitted, default region is being used.
            subnet_id: (String) ID of the subnet that targets are connected to. All targets in the target group must be connected to the same subnet within a single availability zone.
            target: (Block Set) A Target resource. (see below for nested schema)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_lb_target_group.<resource Name> <resource Id>
              terraform import yandex_lb_target_group.my_tg ...
    yandex_loadtesting_agent:
        subCategory: Load Testing
        description: Manages an Yandex Cloud Load Testing Agent resource.
        name: yandex_loadtesting_agent
        title: yandex_loadtesting_agent
        examples:
            - name: my-agent
              manifest: |-
                {
                  "compute_instance": [
                    {
                      "boot_disk": [
                        {
                          "auto_delete": true,
                          "initialize_params": [
                            {
                              "size": 15
                            }
                          ]
                        }
                      ],
                      "network_interface": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.my-subnet-a.id}"
                        }
                      ],
                      "resources": [
                        {
                          "cores": 2,
                          "memory": 4
                        }
                      ],
                      "service_account_id": "${yandex_iam_service_account.test_account.id}",
                      "zone_id": "ru-central1-b"
                    }
                  ],
                  "description": "2 core 4 GB RAM agent",
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "labels": {
                    "jmeter": "5"
                  },
                  "name": "my-agent"
                }
              references:
                compute_instance.network_interface.subnet_id: yandex_vpc_subnet.my-subnet-a.id
                compute_instance.service_account_id: yandex_iam_service_account.test_account.id
                folder_id: data.yandex_resourcemanager_folder.test_folder.id
        argumentDocs:
            auto_delete: (Boolean) Whether the disk is auto-deleted when the instance is deleted. The default value is true.
            block_size: (Number) Block size of the disk, specified in bytes.
            boot_disk: '(Block List, Min: 1, Max: 1) Boot disk specifications for the instance. (see below for nested schema)'
            compute_instance: '(Block List, Min: 1, Max: 1) The template for creating new compute instance running load testing agent. (see below for nested schema)'
            compute_instance_id: (String) Compute Instance ID.
            computed_labels: (Map of String) The set of labels key:value pairs assigned to this instance. This includes user custom labels and predefined items created by Yandex Cloud Load Testing.
            computed_metadata: (Map of String) The set of metadata key:value pairs assigned to this instance. This includes user custom metadata, and predefined items created by Yandex Cloud Load Testing.
            core_fraction: (Number) If provided, specifies baseline core performance as a percent.
            cores: (Number) The number of CPU cores for the instance. Defaults to 2 cores.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            device_name: (String) This value can be used to reference the device under /dev/disk/by-id/.
            disk_id: (String) The ID of created disk.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            index: (Number)
            initialize_params: '(Block List, Min: 1, Max: 1) Parameters for creating a disk alongside the instance. (see below for nested schema)'
            ip_address: (String) Manual set static IP address.
            ipv4: (Boolean) Flag for allocating IPv4 address for the network interface.
            ipv6: (Boolean) Flag for allocating IPv6 address for the network interface.
            ipv6_address: (String) Manual set static IPv6 address.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) The ID of cloud logging group to which the load testing agent sends logs.
            log_settings: '(Block List, Max: 1) The logging settings of the load testing agent. (see below for nested schema)'
            mac_address: (String)
            memory: (Number) The memory size in GB. Defaults to 2 GB.
            metadata: (Map of String) A set of metadata key/value pairs to make available from within the instance.
            name: (String) The resource name.
            nat: (Boolean) Flag for using NAT.
            nat_ip_address: (String) A public address that can be used to access the internet over NAT.
            nat_ip_version: (String)
            network_interface: '(Block List, Min: 1) Network specifications for the instance. This can be used multiple times for adding multiple interfaces. (see below for nested schema)'
            platform_id: (String) The Compute platform for virtual machine.
            resources: '(Block List, Min: 1, Max: 1) Compute resource specifications for the instance. (see below for nested schema)'
            security_group_ids: (Set of String) Security group ids for network interface.
            service_account_id: (String) The ID of the service account authorized for this load testing agent. Service account should have loadtesting.generatorClient or loadtesting.externalAgent role in the folder.
            size: (Number) The size of the disk in GB. Defaults to 15 GB.
            subnet_id: (String) The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) The disk type.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            zone_id: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_loadtesting_agent.<resource Name> <resource Id>
              terraform import yandex_loadtesting_agent.my-agent ...
    yandex_lockbox_secret:
        subCategory: Lockbox (Secret Management)
        description: Manages Yandex Cloud Lockbox secret.
        name: yandex_lockbox_secret
        title: yandex_lockbox_secret
        examples:
            - name: my_secret
              manifest: |-
                {
                  "name": "test secret"
                }
            - name: my_secret
              manifest: |-
                {
                  "name": "test secret with passowrd",
                  "password_payload_specification": [
                    {
                      "length": 12,
                      "password_key": "some_password"
                    }
                  ]
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            excluded_punctuation: (String) String of punctuation characters to exclude from the default. Requires include_punctuation = true. Default is empty.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            include_digits: (Boolean) Use digits in the generated password. Default is true.
            include_lowercase: (Boolean) Use lowercase letters in the generated password. Default is true.
            include_punctuation: (Boolean) Use punctuations (!"#$%&'()*+,-./:;<=>?@[\]^_{|}~`) in the generated password. Default is true.
            include_uppercase: (Boolean) Use capital letters in the generated password. Default is true.
            included_punctuation: (String) String of specific punctuation characters to use. Requires include_punctuation = true. Default is empty.
            kms_key_id: (String) The KMS key used to encrypt the Yandex Cloud Lockbox secret.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            length: (Number) Length of generated password. Default is 36.
            name: (String) The resource name.
            password_key: (String) The key with which the generated password will be placed in the secret version.
            password_payload_specification: '(Block List, Max: 1) Payload specification for password generation. (see below for nested schema)'
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            status: (String) The Yandex Cloud Lockbox secret status.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_lockbox_secret.<resource Name> <resource Id>
              terraform import yandex_lockbox_secret.my_secret ...
    yandex_lockbox_secret_iam_binding:
        subCategory: Lockbox (Secret Management)
        description: Allows management of a single IAM binding for a Lockbox Secret.
        name: yandex_lockbox_secret_iam_binding
        title: yandex_lockbox_secret_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "viewer",
                  "secret_id": "${yandex_lockbox_secret.your-secret.id}"
                }
              references:
                secret_id: yandex_lockbox_secret.your-secret.id
              dependencies:
                yandex_lockbox_secret.your-secret: |-
                    {
                      "name": "secret-name"
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            secret_id: (String) The Yandex Lockbox Secret Secret ID to apply a binding to.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_lockbox_secret_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_lockbox_secret_iam_binding.viewer "abjjf**********p3gp8 viewer"
    yandex_lockbox_secret_iam_member:
        subCategory: Lockbox (Secret Management)
        description: Allows management of a single member for a single IAM binding for a Lockbox Secret.
        name: yandex_lockbox_secret_iam_member
        title: yandex_lockbox_secret_iam_member
        examples:
            - name: viewer
              manifest: |-
                {
                  "member": "userAccount:foo_user_id",
                  "role": "viewer",
                  "secret_id": "${yandex_lockbox_secret.your-secret.id}"
                }
              references:
                secret_id: yandex_lockbox_secret.your-secret.id
              dependencies:
                yandex_lockbox_secret.your-secret: |-
                    {
                      "name": "secret-name"
                    }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            secret_id: (String) The Yandex Lockbox Secret Secret ID to apply a binding to.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_lockbox_secret_iam_member.<resource Name> "<resource Id> <resource Role> <subject Id>"
              terraform import yandex_lockbox_secret_iam_member.viewer "abjjf**********p3gp8 viewer foo@example.com"
    yandex_lockbox_secret_version:
        subCategory: Lockbox (Secret Management)
        description: Manages Yandex Cloud Lockbox secret version.
        name: yandex_lockbox_secret_version
        title: yandex_lockbox_secret_version
        examples:
            - name: my_version
              manifest: |-
                {
                  "entries": [
                    {
                      "key": "key1",
                      "text_value": "value1"
                    },
                    {
                      "command": [
                        {
                          "path": "my_secret_generator.sh"
                        }
                      ],
                      "key": "k2"
                    }
                  ],
                  "secret_id": "${yandex_lockbox_secret.my_secret.id}"
                }
              references:
                secret_id: yandex_lockbox_secret.my_secret.id
              dependencies:
                yandex_lockbox_secret.my_secret: |-
                    {
                      "name": "test secret"
                    }
            - name: my_version
              manifest: |-
                {
                  "entries": [
                    {
                      "key": "key1",
                      "text_value": "value1"
                    },
                    {
                      "command": [
                        {
                          "path": "my_secret_generator.sh"
                        }
                      ],
                      "key": "k2"
                    }
                  ],
                  "secret_id": "${yandex_lockbox_secret.my_secret.id}"
                }
              references:
                secret_id: yandex_lockbox_secret.my_secret.id
              dependencies:
                yandex_lockbox_secret.my_secret: |-
                    {
                      "name": "test secret"
                    }
        argumentDocs:
            args: (List of String) List of arguments to be passed to the script/command.
            command: '(Block List, Max: 1) The command that generates the text value of the entry. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            entries: (Block List) List of entries in the Yandex Cloud Lockbox secret version. Must be omitted for secrets with a payload specification.
            env: (Map of String) Map of environment variables to set before calling the script/command.
            id: (String) The ID of this resource.
            key: (String) The key of the entry.
            path: (String) The path to the script or command to execute.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            secret_id: (String) The Yandex Cloud Lockbox secret ID where to add the version.
            text_value: (String, Sensitive) The text value of the entry.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_lockbox_secret_version_hashed:
        subCategory: Lockbox (Secret Management)
        description: Manages Yandex Cloud Lockbox secret version (with values hashed in state).
        name: yandex_lockbox_secret_version_hashed
        title: yandex_lockbox_secret_version_hashed
        examples:
            - name: my_version
              manifest: |-
                {
                  "key_1": "key1",
                  "key_2": "k2",
                  "secret_id": "${yandex_lockbox_secret.my_secret.id}",
                  "text_value_1": "sensitive value 1",
                  "text_value_2": "sensitive value 2"
                }
              references:
                secret_id: yandex_lockbox_secret.my_secret.id
              dependencies:
                yandex_lockbox_secret.my_secret: |-
                    {
                      "name": "test secret"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The Yandex Cloud Lockbox secret version description.
            id: (String) The ID of this resource.
            key_1: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_2: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_3: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_4: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_5: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_6: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_7: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_8: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_9: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            key_10: (String) Each of the entry keys in the Yandex Cloud Lockbox secret version.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            secret_id: (String) The Yandex Cloud Lockbox secret ID where to add the version.
            text_value_1: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_2: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_3: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_4: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_5: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_6: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_7: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_8: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_9: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            text_value_10: (String, Sensitive) Each of the entry values in the Yandex Cloud Lockbox secret version.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements: []
    yandex_logging_group:
        subCategory: Cloud Logging
        description: Manages Yandex Cloud Logging group.
        name: yandex_logging_group
        title: yandex_logging_group
        examples:
            - name: group1
              manifest: |-
                {
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "name": "test-logging-group"
                }
              references:
                folder_id: data.yandex_resourcemanager_folder.test_folder.id
        argumentDocs:
            cloud_id: (String) The Cloud ID which resource belongs to. If it is not provided, the default provider cloud-id is used.
            created_at: (String) The creation timestamp of the resource.
            data_stream: (String) Data Stream.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            retention_period: (String) Log entries retention period for the Yandex Cloud Logging group.
            status: (String) The Yandex Cloud Logging group status.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_logging_group.<resource Name> <resource Id>
              terraform import yandex_logging_group.group1 ...
    yandex_mdb_clickhouse_cluster:
        subCategory: Managed Service for ClickHouse
        description: Manages a ClickHouse cluster within Yandex Cloud.
        name: yandex_mdb_clickhouse_cluster
        title: yandex_mdb_clickhouse_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "clickhouse": [
                    {
                      "config": [
                        {
                          "background_pool_size": 16,
                          "background_schedule_pool_size": 16,
                          "compression": [
                            {
                              "method": "LZ4",
                              "min_part_size": 1024,
                              "min_part_size_ratio": 0.5
                            },
                            {
                              "method": "ZSTD",
                              "min_part_size": 2048,
                              "min_part_size_ratio": 0.7
                            }
                          ],
                          "geobase_uri": "",
                          "graphite_rollup": [
                            {
                              "name": "rollup1",
                              "pattern": [
                                {
                                  "function": "func1",
                                  "regexp": "abc",
                                  "retention": [
                                    {
                                      "age": 1000,
                                      "precision": 3
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "name": "rollup2",
                              "pattern": [
                                {
                                  "function": "func2",
                                  "retention": [
                                    {
                                      "age": 2000,
                                      "precision": 5
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "kafka": [
                            {
                              "sasl_mechanism": "SASL_MECHANISM_GSSAPI",
                              "sasl_password": "pass1",
                              "sasl_username": "user1",
                              "security_protocol": "SECURITY_PROTOCOL_PLAINTEXT"
                            }
                          ],
                          "kafka_topic": [
                            {
                              "name": "topic1",
                              "settings": [
                                {
                                  "sasl_mechanism": "SASL_MECHANISM_SCRAM_SHA_256",
                                  "sasl_password": "pass2",
                                  "sasl_username": "user2",
                                  "security_protocol": "SECURITY_PROTOCOL_SSL"
                                }
                              ]
                            },
                            {
                              "name": "topic2",
                              "settings": [
                                {
                                  "sasl_mechanism": "SASL_MECHANISM_PLAIN",
                                  "security_protocol": "SECURITY_PROTOCOL_SASL_PLAINTEXT"
                                }
                              ]
                            }
                          ],
                          "keep_alive_timeout": 3000,
                          "log_level": "TRACE",
                          "mark_cache_size": 5368709120,
                          "max_concurrent_queries": 50,
                          "max_connections": 100,
                          "max_partition_size_to_drop": 53687091200,
                          "max_table_size_to_drop": 53687091200,
                          "merge_tree": [
                            {
                              "max_bytes_to_merge_at_max_space_in_pool": 161061273600,
                              "max_bytes_to_merge_at_min_space_in_pool": 1048576,
                              "max_replicated_merges_in_queue": 16,
                              "number_of_free_entries_in_pool_to_lower_max_size_of_merge": 8,
                              "parts_to_delay_insert": 150,
                              "parts_to_throw_insert": 300,
                              "replicated_deduplication_window": 100,
                              "replicated_deduplication_window_seconds": 604800
                            }
                          ],
                          "metric_log_enabled": true,
                          "metric_log_retention_size": 536870912,
                          "metric_log_retention_time": 2592000,
                          "part_log_retention_size": 536870912,
                          "part_log_retention_time": 2592000,
                          "query_log_retention_size": 1073741824,
                          "query_log_retention_time": 2592000,
                          "query_thread_log_enabled": true,
                          "query_thread_log_retention_size": 536870912,
                          "query_thread_log_retention_time": 2592000,
                          "rabbitmq": [
                            {
                              "password": "rabbit_pass",
                              "username": "rabbit_user"
                            }
                          ],
                          "text_log_enabled": true,
                          "text_log_level": "TRACE",
                          "text_log_retention_size": 536870912,
                          "text_log_retention_time": 2592000,
                          "timezone": "UTC",
                          "trace_log_enabled": true,
                          "trace_log_retention_size": 536870912,
                          "trace_log_retention_time": 2592000,
                          "uncompressed_cache_size": 8589934592
                        }
                      ],
                      "resources": [
                        {
                          "disk_size": 32,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "cloud_storage": [
                    {
                      "enabled": false
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "format_schema": [
                    {
                      "name": "test_schema",
                      "type": "FORMAT_SCHEMA_TYPE_CAPNPROTO",
                      "uri": "https://storage.yandexcloud.net/ch-data/schema.proto"
                    }
                  ],
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "ml_model": [
                    {
                      "name": "test_model",
                      "type": "ML_MODEL_TYPE_CATBOOST",
                      "uri": "https://storage.yandexcloud.net/ch-data/train.csv"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "service_account_id": "your_service_account_id",
                  "user": [
                    {
                      "name": "user",
                      "password": "your_password",
                      "permission": [
                        {
                          "database_name": "db_name"
                        }
                      ],
                      "quota": [
                        {
                          "errors": 1000,
                          "interval_duration": 3600000,
                          "queries": 10000
                        },
                        {
                          "errors": 5000,
                          "interval_duration": 79800000,
                          "queries": 50000
                        }
                      ],
                      "settings": [
                        {
                          "max_memory_usage_for_user": 1000000000,
                          "output_format_json_quote_64bit_integers": true,
                          "read_overflow_mode": "throw"
                        }
                      ]
                    }
                  ]
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "clickhouse": [
                    {
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "cloud_storage": [
                    {
                      "enabled": false
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-a"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-b"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "ZOOKEEPER",
                      "zone": "ru-central1-a"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "ZOOKEEPER",
                      "zone": "ru-central1-b"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.baz.id}",
                      "type": "ZOOKEEPER",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "name": "ha",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "user": [
                    {
                      "name": "user",
                      "password": "password",
                      "permission": [
                        {
                          "database_name": "db_name"
                        }
                      ],
                      "quota": [
                        {
                          "errors": 1000,
                          "interval_duration": 3600000,
                          "queries": 10000
                        },
                        {
                          "errors": 5000,
                          "interval_duration": 79800000,
                          "queries": 50000
                        }
                      ],
                      "settings": [
                        {
                          "max_memory_usage_for_user": 1000000000,
                          "output_format_json_quote_64bit_integers": true,
                          "read_overflow_mode": "throw"
                        }
                      ]
                    }
                  ],
                  "zookeeper": [
                    {
                      "resources": [
                        {
                          "disk_size": 10,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ]
                }
              references:
                host.subnet_id: yandex_vpc_subnet.baz.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "clickhouse": [
                    {
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "cloud_storage": [
                    {
                      "enabled": false
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name"
                    }
                  ],
                  "environment": "PRODUCTION",
                  "host": [
                    {
                      "shard_name": "shard1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-a"
                    },
                    {
                      "shard_name": "shard1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-b"
                    },
                    {
                      "shard_name": "shard2",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-b"
                    },
                    {
                      "shard_name": "shard2",
                      "subnet_id": "${yandex_vpc_subnet.baz.id}",
                      "type": "CLICKHOUSE",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "name": "sharded",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "shard": [
                    {
                      "name": "shard1",
                      "weight": 110
                    },
                    {
                      "name": "shard2",
                      "weight": 300
                    }
                  ],
                  "shard_group": [
                    {
                      "description": "Cluster configuration that contain only shard1",
                      "name": "single_shard_group",
                      "shard_names": [
                        "shard1"
                      ]
                    }
                  ],
                  "user": [
                    {
                      "name": "user",
                      "password": "password",
                      "permission": [
                        {
                          "database_name": "db_name"
                        }
                      ],
                      "quota": [
                        {
                          "errors": 1000,
                          "interval_duration": 3600000,
                          "queries": 10000
                        },
                        {
                          "errors": 5000,
                          "interval_duration": 79800000,
                          "queries": 50000
                        }
                      ],
                      "settings": [
                        {
                          "max_memory_usage_for_user": 1000000000,
                          "output_format_json_quote_64bit_integers": true,
                          "read_overflow_mode": "throw"
                        }
                      ]
                    }
                  ],
                  "zookeeper": [
                    {
                      "resources": [
                        {
                          "disk_size": 10,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ]
                }
              references:
                host.subnet_id: yandex_vpc_subnet.baz.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access policy to the ClickHouse cluster. (see below for nested schema)'
            add_http_cors_header: (Boolean) Include CORS headers in HTTP responses.
            admin_password: (String, Sensitive) A password used to authorize as user admin when sql_user_management enabled.
            age: (Number) Minimum data age in seconds.
            allow_ddl: (Boolean) Allows or denies DDL queries.
            allow_introspection_functions: (Boolean) Enables introspections functions for query profiling.
            allow_remote_fs_zero_copy_replication: (Boolean) When this setting has a value greater than zero only a single replica starts the merge immediately if merged part on shared storage and allow_remote_fs_zero_copy_replication is enabled.
            allow_suspicious_low_cardinality_types: (Boolean) Allows specifying LowCardinality modifier for types of small fixed size (8 or less) in CREATE TABLE statements. Enabling this may increase merge times and memory consumption.
            any: '- perform approximate GROUP BY operation by continuing aggregation for the keys that got into the set, but don’t add new keys to the set.'
            any_join_distinct_right_table_keys: (Boolean) Enables legacy ClickHouse server behavior in ANY INNER|LEFT JOIN operations.
            assign_public_ip: (Boolean) Sets whether the host should get a public IP address on creation. Can be either true or false.
            async_insert: (Boolean) Enables asynchronous inserts. Disabled by default.
            async_insert_busy_timeout: '(Number) The maximum timeout in milliseconds since the first INSERT query before inserting collected data. If the parameter is set to 0, the timeout is disabled. Default value: 200.'
            async_insert_max_data_size: '(Number) The maximum size of the unparsed data in bytes collected per query before being inserted. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 100000.'
            async_insert_stale_timeout: (Number) The maximum timeout in milliseconds since the last INSERT query before dumping collected data. If enabled, the settings prolongs the async_insert_busy_timeout with every INSERT query as long as async_insert_max_data_size is not exceeded.
            async_insert_threads: '(Number) The maximum number of threads for background data parsing and insertion. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 16.'
            asynchronous_insert_log_enabled: (Boolean) Enable or disable asynchronous_insert_log system table.
            asynchronous_insert_log_retention_size: (Number) The maximum size that asynchronous_insert_log can grow to before old data will be removed.
            asynchronous_insert_log_retention_time: (Number) The maximum time that asynchronous_insert_log records will be retained before removal.
            asynchronous_metric_log_enabled: (Boolean) Enable or disable asynchronous_metric_log system table.
            asynchronous_metric_log_retention_size: (Number) The maximum size that asynchronous_metric_log can grow to before old data will be removed.
            asynchronous_metric_log_retention_time: (Number) The maximum time that asynchronous_metric_log records will be retained before removal.
            auto: '- when set to auto, hash join is tried first, and the algorithm is switched on the fly to another algorithm if the memory limit is violated.'
            auto_offset_reset: '(String) Action to take when there is no initial offset in offset store or the desired offset is out of range: ''smallest'',''earliest'' - automatically reset the offset to the smallest offset, ''largest'',''latest'' - automatically reset the offset to the largest offset, ''error'' - trigger an error (ERR__AUTO_OFFSET_RESET) which is retrieved by consuming messages and checking ''message->err''.'
            background_buffer_flush_schedule_pool_size: (Number) The maximum number of threads that will be used for performing flush operations for Buffer-engine tables in the background.
            background_common_pool_size: (Number) The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for MergeTree-engine tables in a background.
            background_distributed_schedule_pool_size: (Number) The maximum number of threads that will be used for executing distributed sends.
            background_fetches_pool_size: (Number) The maximum number of threads that will be used for fetching data parts from another replica for MergeTree-engine tables in a background.
            background_merges_mutations_concurrency_ratio: (Number) Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently.
            background_message_broker_schedule_pool_size: (Number) The maximum number of threads that will be used for executing background operations for message streaming.
            background_move_pool_size: (Number) The maximum number of threads that will be used for moving data parts to another disk or volume for MergeTree-engine tables in a background.
            background_pool_size: (Number) Sets the number of threads performing background merges and mutations for MergeTree-engine tables.
            background_schedule_pool_size: (Number) The maximum number of threads that will be used for constantly executing some lightweight periodic operations for replicated tables, Kafka streaming, and DNS cache updates.
            backup_retain_period_days: (Number) The period in days during which backups are stored.
            backup_window_start: '(Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)'
            break: '- stop query execution, return partial result.'
            cancel_http_readonly_queries_on_client_close: '(Boolean) Cancels HTTP read-only queries (e.g. SELECT) when a client closes the connection without waiting for the response. Default value: false.'
            check_sample_column_is_correct: '(Boolean) Enables the check at table creation, that the data type of a column for sampling or sampling expression is correct. The data type must be one of unsigned integer types: UInt8, UInt16, UInt32, UInt64. Default value: true.'
            cleanup_delay_period: (Number) Minimum period to clean old queue logs, blocks hashes and parts.
            clickhouse: '(Block List, Max: 1) Configuration of the ClickHouse subcluster. (see below for nested schema)'
            cloud_storage: '(Block List, Max: 1) Cloud Storage settings. (see below for nested schema)'
            cluster_id: (String) The cluster identifier.
            compile: (Boolean) Enable compilation of queries.
            compile_expressions: (Boolean) Turn on expression compilation.
            compression: (Block List) Data compression configuration. (see below for nested schema)
            config: '(Block List, Max: 1) ClickHouse server parameters. For more information, see the official documentation. (see below for nested schema)'
            connect_timeout: (Number) Connect timeout in milliseconds on the socket used for communicating with the client.
            connect_timeout_with_failover: '(Number) The timeout in milliseconds for connecting to a remote server for a Distributed table engine, if the ‘shard’ and ‘replica’ sections are used in the cluster definition. If unsuccessful, several attempts are made to connect to various replicas. Default value: 50.'
            connection_manager: (Map of String) Connection Manager connection configuration. Filled in by the server automatically.
            copy_schema_on_new_hosts: (Boolean) Whether to copy schema on new ClickHouse hosts.
            count_distinct_implementation: (String) Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_cache_enabled: (Boolean) Enables temporary storage in the cluster repository of data requested from the object repository.
            data_cache_max_size: (Number) Defines the maximum amount of memory (in bytes) allocated in the cluster storage for temporary storage of data requested from the object storage.
            data_lens: (Boolean) Allow access for DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer.
            database: (Block Set, Deprecated) A database of the ClickHouse cluster. (see below for nested schema)
            database_name: (String) The name of the database that the permission grants access to.
            date_time_input_format: '(String) Allows choosing a parser of the text representation of date and time, one of: best_effort, basic, best_effort_us. Default value: basic. Cloud default value: best_effort.'
            date_time_output_format: '(String) Allows choosing different output formats of the text representation of date and time, one of: simple, iso, unix_timestamp. Default value: simple.'
            day: '(String) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            debug: (String) A comma-separated list of debug contexts to enable.
            deduplicate_blocks_in_dependent_materialized_views: (Boolean) Enables or disables the deduplication check for materialized views that receive data from Replicated tables.
            default_database: (String) Default database name.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            dictionaries_lazy_load: (Boolean) Lazy loading of dictionaries. If true, then each dictionary is loaded on the first use.
            direct: '- this algorithm can be applied when the storage for the right table supports key-value requests.'
            disk_size: (Number) Volume of the storage available to a ClickHouse host, in gigabytes.
            disk_type_id: (String) Type of the storage of ClickHouse hosts. For more information see the official documentation.
            distinct_overflow_mode: '(String) Sets behavior on overflow when using DISTINCT. Possible values:'
            distributed_aggregation_memory_efficient: (Boolean) Determine the behavior of distributed subqueries.
            distributed_ddl_task_timeout: (Number) Timeout for DDL queries, in milliseconds.
            distributed_product_mode: (String) Changes the behavior of distributed subqueries.
            embedded_keeper: (Boolean) Whether to use ClickHouse Keeper as a coordination system and place it on the same hosts with ClickHouse. If not, it's used ZooKeeper with placement on separate hosts.
            empty_result_for_aggregation_by_empty_set: (Boolean) Allows to return empty result.
            enable_http_compression: (Boolean) Enables or disables data compression in the response to an HTTP request.
            enable_ssl_certificate_verification: (Boolean) Enable verification of SSL certificates.
            enabled: (Boolean) Whether to use Yandex Object Storage for storing ClickHouse data. Can be either true or false.
            environment: (String) Deployment environment of the ClickHouse cluster. Can be either PRESTABLE or PRODUCTION.
            errors: (Number) The number of queries that threw exception.
            execution_time: (Number) The total query execution time, in milliseconds (wall time).
            fallback_to_stale_replicas_for_distributed_queries: (Boolean) Forces a query to an out-of-date replica if updated data is not available.
            flatten_nested: (Boolean) Sets the data format of a nested columns.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            force_index_by_date: (Boolean) Disables query execution if the index can’t be used by date.
            force_primary_key: (Boolean) Disables query execution if indexing by the primary key is not possible.
            format_regexp: (String) Regular expression (for Regexp format).
            format_regexp_skip_unmatched: (Boolean) Skip lines unmatched by regular expression.
            format_schema: (Block Set) A set of protobuf or capnproto format schemas. (see below for nested schema)
            fqdn: (String) The fully qualified domain name of the host.
            full_sorting_merge: '- sort-merge algorithm with full sorting joined tables before joining.'
            function: (String) Aggregation function name.
            generate_password: '(Boolean) Generate password using Connection Manager. Allowed values: true or false. It''s used only during user creation and is ignored during updating.'
            geobase_enabled: (Boolean) Enable or disable geobase.
            geobase_uri: (String) Address of the archive with the user geobase in Object Storage.
            graphite_rollup: (Block List) Graphite rollup configuration. (see below for nested schema)
            group_by_overflow_mode: '(String) Sets behavior on overflow while GROUP BY operation. Possible values:'
            group_by_two_level_threshold: (Number) Sets the threshold of the number of keys, after that the two-level aggregation should be used.
            group_by_two_level_threshold_bytes: (Number) Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
            hash: '- hash join algorithm is used. The most generic implementation that supports all combinations of kind and strictness and multiple join keys that are combined with OR in the JOIN ON section.'
            health: (String) Aggregated health of the cluster. Can be ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
            hedged_connection_timeout_ms: '(Number) Connection timeout for establishing connection with replica for Hedged requests. Default value: 50 milliseconds.'
            host: '(Block List, Min: 1) A host of the ClickHouse cluster. (see below for nested schema)'
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
            hours: (Number) The hour at which backup will be started.
            http_connection_timeout: (Number) Timeout for HTTP connection in milliseconds.
            http_headers_progress_interval: (Number) Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
            http_receive_timeout: (Number) Timeout for HTTP connection in milliseconds.
            http_send_timeout: (Number) Timeout for HTTP connection in milliseconds.
            id: (String) The ID of this resource.
            idle_connection_timeout: '(Number) Timeout to close idle TCP connections after specified number of seconds. Default value: 3600 seconds.'
            inactive_parts_to_delay_insert: (Number) If the number of inactive parts in a single partition in the table at least that many the inactive_parts_to_delay_insert value, an INSERT artificially slows down. It is useful when a server fails to clean up parts quickly enough.
            inactive_parts_to_throw_insert: (Number) If the number of inactive parts in a single partition more than the inactive_parts_to_throw_insert value, INSERT is interrupted with the Too many inactive parts (N). Parts cleaning are processing significantly slower than inserts exception.
            input_format_defaults_for_omitted_fields: (Boolean) When performing INSERT queries, replace omitted input column values with default values of the respective columns.
            input_format_import_nested_json: (Boolean) Enables or disables the insertion of JSON data with nested objects.
            input_format_null_as_default: (Boolean) Enables or disables the initialization of NULL fields with default values, if data type of these fields is not nullable.
            input_format_parallel_parsing: (Boolean) Enables or disables order-preserving parallel parsing of data formats. Supported only for TSV, TKSV, CSV and JSONEachRow formats.
            input_format_values_interpret_expressions: (Boolean) Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
            input_format_with_names_use_header: (Boolean) Enables or disables checking the column order when inserting data.
            insert_keeper_max_retries: (Number) The setting sets the maximum number of retries for ClickHouse Keeper (or ZooKeeper) requests during insert into replicated MergeTree. Only Keeper requests which failed due to network error, Keeper session timeout, or request timeout are considered for retries.
            insert_null_as_default: '(Boolean) Enables the insertion of default values instead of NULL into columns with not nullable data type. Default value: true.'
            insert_quorum: (Number) Enables the quorum writes.
            insert_quorum_parallel: (Boolean) Enables or disables parallelism for quorum INSERT queries.
            insert_quorum_timeout: (Number) Write to a quorum timeout in milliseconds.
            interval_duration: (Number) Duration of interval for quota in milliseconds.
            jdbc_bridge: '(Block List, Max: 1) JDBC bridge configuration. (see below for nested schema)'
            join_algorithm: '(List of String) Specifies which JOIN algorithm is used. Possible values:'
            join_overflow_mode: '(String) Sets behavior on overflow in JOIN. Possible values:'
            join_use_nulls: (Boolean) Sets the type of JOIN behavior. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
            joined_subquery_requires_alias: (Boolean) Require aliases for subselects and table functions in FROM that more than one table is present.
            kafka: '(Block List, Max: 1) Kafka connection configuration. (see below for nested schema)'
            kafka_topic: (Block List) Kafka topic connection configuration. (see below for nested schema)
            keep_alive_timeout: (Number) The number of seconds that ClickHouse waits for incoming requests for HTTP protocol before closing the connection.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            level: (Number) Compression level for ZSTD method.
            load_balancing: '(String) Specifies the algorithm of replicas selection that is used for distributed query processing, one of: random, nearest_hostname, in_order, first_or_random, round_robin. Default value: random.'
            local_filesystem_read_method: '(String) Method of reading data from local filesystem. Possible values:'
            log_level: (String) Logging level.
            log_query_threads: '(Boolean) Setting up query threads logging. Query threads log into the system.query_thread_log table. This setting has effect only when log_queries is true. Queries’ threads run by ClickHouse with this setup are logged according to the rules in the query_thread_log server configuration parameter. Default value: true.'
            low_cardinality_allow_in_native_format: (Boolean) Allows or restricts using the LowCardinality data type with the Native format.
            maintenance_window: '(Block List, Max: 1) (see below for nested schema)'
            mark_cache_size: (Number) Maximum size of cache for marks
            max_ast_depth: (Number) Maximum abstract syntax tree depth.
            max_ast_elements: (Number) Maximum abstract syntax tree elements.
            max_avg_part_size_for_too_many_parts: (Number) The too many parts check according to parts_to_delay_insert and parts_to_throw_insert will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
            max_block_size: (Number) A recommendation for what size of the block (in a count of rows) to load from tables.
            max_bytes_before_external_group_by: (Number) Limit in bytes for using memory for GROUP BY before using swap on disk.
            max_bytes_before_external_sort: (Number) This setting is equivalent of the max_bytes_before_external_group_by setting, except for it is for sort operation (ORDER BY), not aggregation.
            max_bytes_in_distinct: (Number) Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
            max_bytes_in_join: (Number) Limit on maximum size of the hash table for JOIN, in bytes.
            max_bytes_in_set: (Number) Limit on the number of bytes in the set resulting from the execution of the IN section.
            max_bytes_to_merge_at_max_space_in_pool: (Number) The maximum total parts size (in bytes) to be merged into one part, if there are enough resources available. max_bytes_to_merge_at_max_space_in_pool -- roughly corresponds to the maximum possible part size created by an automatic background merge.
            max_bytes_to_merge_at_min_space_in_pool: '(Number) Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.'
            max_bytes_to_read: (Number) Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
            max_bytes_to_sort: (Number) Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
            max_bytes_to_transfer: (Number) Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
            max_cleanup_delay_period: '(Number) Maximum period to clean old queue logs, blocks hashes and parts. Default value: 300 seconds.'
            max_columns_to_read: (Number) Limits the maximum number of columns that can be read from a table in a single query.
            max_concurrent_queries: (Number) Limit on total number of concurrently executed queries.
            max_concurrent_queries_for_user: '(Number) The maximum number of concurrent requests per user. Default value: 0 (no limit).'
            max_connections: (Number) Max server connections.
            max_entries: '(Number) The maximum number of SELECT query results stored in the cache. Default value: 1024.'
            max_entry_size_in_bytes: '(Number) The maximum size in bytes SELECT query results may have to be saved in the cache. Default value: 1048576 (1 MiB).'
            max_entry_size_in_rows: '(Number) The maximum number of rows SELECT query results may have to be saved in the cache. Default value: 30000000 (30 mil).'
            max_execution_time: (Number) Limits the maximum query execution time in milliseconds.
            max_expanded_ast_elements: (Number) Maximum abstract syntax tree depth after after expansion of aliases.
            max_final_threads: (Number) Sets the maximum number of parallel threads for the SELECT query data read phase with the FINAL modifier.
            max_http_get_redirects: (Number) Limits the maximum number of HTTP GET redirect hops for URL-engine tables.
            max_insert_block_size: (Number) The size of blocks (in a count of rows) to form for insertion into a table.
            max_insert_threads: '(Number) The maximum number of threads to execute the INSERT SELECT query. Default value: 0.'
            max_memory_usage: (Number) Limits the maximum memory usage (in bytes) for processing queries on a single server.
            max_memory_usage_for_user: (Number) Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
            max_merge_selecting_sleep_ms: '(Number) Maximum sleep time for merge selecting, a lower setting will trigger selecting tasks in background_schedule_pool frequently which result in large amount of requests to zookeeper in large-scale clusters. Default value: 60000 milliseconds (60 seconds).'
            max_network_bandwidth: (Number) Limits the speed of the data exchange over the network in bytes per second.
            max_network_bandwidth_for_user: (Number) Limits the speed of the data exchange over the network in bytes per second.
            max_number_of_merges_with_ttl_in_pool: (Number) When there is more than specified number of merges with TTL entries in pool, do not assign new merge with TTL.
            max_parser_depth: (Number) Limits maximum recursion depth in the recursive descent parser. Allows controlling the stack size. Zero means unlimited.
            max_partition_size_to_drop: (Number) Restriction on dropping partitions.
            max_parts_in_total: (Number) Maximum number of parts in all partitions.
            max_poll_interval_ms: (Number) Maximum allowed time between calls to consume messages (e.g., rd_kafka_consumer_poll() for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.
            max_query_size: (Number) The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
            max_read_buffer_size: (Number) The maximum size of the buffer to read from the filesystem.
            max_replica_delay_for_distributed_queries: (Number) Disables lagging replicas for distributed queries.
            max_replicated_merges_in_queue: '(Number) Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.'
            max_result_bytes: (Number) Limits the number of bytes in the result.
            max_result_rows: (Number) Limits the number of rows in the result.
            max_rows_in_distinct: (Number) Limits the maximum number of different rows when using DISTINCT.
            max_rows_in_join: (Number) Limit on maximum size of the hash table for JOIN, in rows.
            max_rows_in_set: (Number) Limit on the number of rows in the set resulting from the execution of the IN section.
            max_rows_to_group_by: (Number) Limits the maximum number of unique keys received from aggregation function.
            max_rows_to_read: (Number) Limits the maximum number of rows that can be read from a table when running a query.
            max_rows_to_sort: (Number) Limits the maximum number of rows that can be read from a table for sorting.
            max_rows_to_transfer: (Number) Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
            max_size_in_bytes: '(Number) The maximum cache size in bytes. 0 means the query cache is disabled. Default value: 1073741824 (1 GiB).'
            max_table_size_to_drop: (Number) Restriction on deleting tables.
            max_temporary_columns: (Number) Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
            max_temporary_data_on_disk_size_for_query: (Number) The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running queries. Zero means unlimited.
            max_temporary_data_on_disk_size_for_user: (Number) The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running user queries. Zero means unlimited.
            max_temporary_non_const_columns: (Number) Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
            max_threads: (Number) The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
            memory_overcommit_ratio_denominator: (Number) It represents soft memory limit in case when hard limit is reached on user level. This value is used to compute overcommit ratio for the query. Zero means skip the query.
            memory_overcommit_ratio_denominator_for_user: (Number) It represents soft memory limit in case when hard limit is reached on global level. This value is used to compute overcommit ratio for the query. Zero means skip the query.
            memory_profiler_sample_probability: '(Number) Collect random allocations and deallocations and write them into system.trace_log with ''MemorySample'' trace_type. The probability is for every alloc/free regardless to the size of the allocation. Possible values: from 0 to 1. Default: 0.'
            memory_profiler_step: '(Number) Memory profiler step (in bytes). If the next query step requires more memory than this parameter specifies, the memory profiler collects the allocating stack trace. Values lower than a few megabytes slow down query processing. Default value: 4194304 (4 MB). Zero means disabled memory profiler.'
            memory_usage_overcommit_max_wait_microseconds: (Number) Maximum time thread will wait for memory to be freed in the case of memory overcommit on a user level. If the timeout is reached and memory is not freed, an exception is thrown.
            merge_max_block_size: '(Number) The number of rows that are read from the merged parts into memory. Default value: 8192.'
            merge_selecting_sleep_ms: (Number) Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
            merge_tree: '(Block List, Max: 1) MergeTree engine configuration. (see below for nested schema)'
            merge_tree_max_bytes_to_use_cache: (Number) If ClickHouse should read more than merge_tree_max_bytes_to_use_cache bytes in one query, it doesn’t use the cache of uncompressed blocks.
            merge_tree_max_rows_to_use_cache: (Number) If ClickHouse should read more than merge_tree_max_rows_to_use_cache rows in one query, it doesn’t use the cache of uncompressed blocks.
            merge_tree_min_bytes_for_concurrent_read: (Number) If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
            merge_tree_min_rows_for_concurrent_read: (Number) If the number of rows to be read from a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read then ClickHouse tries to perform a concurrent reading from this file on several threads.
            merge_with_recompression_ttl_timeout: '(Number) Minimum delay in seconds before repeating a merge with recompression TTL. Default value: 14400 seconds (4 hours).'
            merge_with_ttl_timeout: '(Number) Minimum delay in seconds before repeating a merge with delete TTL. Default value: 14400 seconds (4 hours).'
            method: '(String) Compression method. Two methods are available: LZ4 and zstd.'
            metric_log_enabled: (Boolean) Enable or disable metric_log system table.
            metric_log_retention_size: (Number) The maximum size that metric_log can grow to before old data will be removed.
            metric_log_retention_time: (Number) The maximum time that metric_log records will be retained before removal.
            metrika: (Boolean) Allow access for Yandex.Metrika.
            min_age_to_force_merge_on_partition_only: (Boolean) Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
            min_age_to_force_merge_seconds: (Number) Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
            min_bytes_for_wide_part: (Number) Minimum number of bytes in a data part that can be stored in Wide format. You can set one, both or none of these settings.
            min_bytes_to_use_direct_io: (Number) The minimum data volume required for using direct I/O access to the storage disk.
            min_count_to_compile: (Number) How many times to potentially use a compiled chunk of code before running compilation.
            min_count_to_compile_expression: (Number) A query waits for expression compilation process to complete prior to continuing execution.
            min_execution_speed: (Number) Minimal execution speed in rows per second.
            min_execution_speed_bytes: (Number) Minimal execution speed in bytes per second.
            min_insert_block_size_bytes: (Number) Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
            min_insert_block_size_rows: (Number) Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
            min_part_size: '(Number) Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.'
            min_part_size_ratio: '(Number) Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.'
            min_rows_for_wide_part: (Number) Minimum number of rows in a data part that can be stored in Wide format. You can set one, both or none of these settings.
            minutes: (Number) The minute at which backup will be started.
            ml_model: (Block Set) A group of machine learning models. (see below for nested schema)
            move_factor: (Number) Sets the minimum free space ratio in the cluster storage. If the free space is lower than this value, the data is transferred to Yandex Object Storage. Acceptable values are 0 to 1, inclusive.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            number_of_free_entries_in_pool_to_execute_mutation: '(Number) When there is less than specified number of free entries in pool, do not execute part mutations. This is to leave free threads for regular merges and avoid Too many parts. Default value: 20.'
            number_of_free_entries_in_pool_to_lower_max_size_of_merge: '(Number) Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.'
            opentelemetry_span_log_enabled: (Boolean) Enable or disable opentelemetry_span_log system table.
            opentelemetry_span_log_retention_size: (Number) The maximum size that opentelemetry_span_log can grow to before old data will be removed.
            opentelemetry_span_log_retention_time: (Number) The maximum time that opentelemetry_span_log records will be retained before removal.
            output_format_json_quote_64bit_integers: (Boolean) If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
            output_format_json_quote_denormals: (Boolean) Enables +nan, -nan, +inf, -inf outputs in JSON output format.
            parallel_hash: '- a variation of hash join that splits the data into buckets and builds several hash tables instead of one concurrently to speed up this process.'
            part_log_retention_size: (Number) The maximum size that part_log can grow to before old data will be removed.
            part_log_retention_time: (Number) The maximum time that part_log records will be retained before removal.
            partial_merge: '- a variation of the sort-merge algorithm, where only the right table is fully sorted.'
            parts_to_delay_insert: '(Number) Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table'
            parts_to_throw_insert: '(Number) Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the ''Too many parts ...'' exception.'
            password: (String, Sensitive) RabbitMQ user password.
            path_column_name: '(String) The name of the column storing the metric name (Graphite sensor). Default value: Path.'
            pattern: (Block List) Set of thinning rules. (see below for nested schema)
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            port: '(Number) Port of jdbc bridge. Default value: 9019.'
            pread: '- abort query execution, return an error.'
            pread_threadpool: '- stop query execution, return partial result. If the parameter is set to 0 (default), no hops is allowed.'
            precision: (Number) Accuracy of determining the age of the data in seconds.
            prefer_localhost_replica: '(Boolean) Enables/disables preferable using the localhost replica when processing distributed queries. Default value: true.'
            prefer_not_to_merge: (Boolean) Disables merging of data parts in Yandex Object Storage.
            prefer_partial_merge: '- clickHouse always tries to use partial_merge join if possible, otherwise, it uses hash. Deprecated, same as partial_merge,hash.'
            priority: (Number) Query priority.
            queries: (Number) The total number of queries.
            query_cache: '(Block List, Max: 1) Query cache configuration. (see below for nested schema)'
            query_log_retention_size: (Number) The maximum size that query_log can grow to before old data will be removed.
            query_log_retention_time: (Number) The maximum time that query_log records will be retained before removal.
            query_masking_rules: (Block List) Query masking rules configuration. (see below for nested schema)
            query_thread_log_enabled: (Boolean) Enable or disable query_thread_log system table.
            query_thread_log_retention_size: (Number) The maximum size that query_thread_log can grow to before old data will be removed.
            query_thread_log_retention_time: (Number) The maximum time that query_thread_log records will be retained before removal.
            query_views_log_enabled: (Boolean) Enable or disable query_views_log system table.
            query_views_log_retention_size: (Number) The maximum size that query_views_log can grow to before old data will be removed.
            query_views_log_retention_time: (Number) The maximum time that query_views_log records will be retained before removal.
            quota: (Block Set) Set of user quotas. (see below for nested schema)
            quota_mode: (String) Quota accounting mode.
            rabbitmq: '(Block List, Max: 1) RabbitMQ connection configuration. (see below for nested schema)'
            read: '- abort query execution, return an error.'
            read_overflow_mode: '(String) Sets behavior on overflow while read. Possible values:'
            read_rows: (Number) The total number of source rows read from tables for running the query, on all remote servers.
            readonly: (Number) Restricts permissions for reading data, write data and change settings queries.
            receive_timeout: (Number) Receive timeout in milliseconds on the socket used for communicating with the client.
            regexp: (String) Regular expression that the metric name must match.
            remote_filesystem_read_method: '(String) Method of reading data from remote filesystem, one of: read, threadpool.'
            replace: '(String) Substitution string for sensitive data. Default value: six asterisks.'
            replicated_deduplication_window: '(Number) Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).'
            replicated_deduplication_window_seconds: '(Number) Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).'
            replication_alter_partitions_sync: (Number) For ALTER ... ATTACH|DETACH|DROP queries, you can use the replication_alter_partitions_sync setting to set up waiting.
            resource_preset_id: (String) The ID of the preset for computational resources available to a ClickHouse host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Max: 1) Resources allocated to hosts of the ClickHouse subcluster. (see below for nested schema)'
            result_overflow_mode: '(String) Sets behavior on overflow in result. Possible values:'
            result_rows: (Number) The total number of rows given as the result.
            retention: (Block List) Retain parameters. (see below for nested schema)
            sasl_mechanism: (String) SASL mechanism used in kafka authentication.
            sasl_password: (String, Sensitive) User password on kafka server.
            sasl_username: (String) Username on kafka server.
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            security_protocol: (String) Security protocol used to connect to kafka server.
            select_sequential_consistency: (Boolean) Enables or disables sequential consistency for SELECT queries.
            send_progress_in_http_headers: (Boolean) Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
            send_timeout: (Number) Send timeout in milliseconds on the socket used for communicating with the client.
            serverless: (Boolean) Allow access for Serverless.
            service_account_id: (String) Service account which linked to the resource.
            session_log_enabled: (Boolean) Enable or disable session_log system table.
            session_log_retention_size: (Number) The maximum size that session_log can grow to before old data will be removed.
            session_log_retention_time: (Number) The maximum time that session_log records will be retained before removal.
            session_timeout_ms: (Number) Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.
            set_overflow_mode: '(String) Sets behavior on overflow in the set resulting. Possible values:'
            settings: '(Block List, Max: 1) Kafka connection settings. (see below for nested schema)'
            shard: (Block Set) A shard of the ClickHouse cluster. (see below for nested schema)
            shard_group: (Block List) A group of clickhouse shards. (see below for nested schema)
            shard_name: (String) The name of the shard to which the host belongs.
            shard_names: (List of String) List of shards names that belong to the shard group.
            skip_unavailable_shards: (Boolean) Enables or disables silently skipping of unavailable shards.
            sort_overflow_mode: '(String) Sets behavior on overflow while sort. Possible values:'
            sql_database_management: (Boolean) Grants admin user database management permission.
            sql_user_management: (Boolean) Enables admin user with user management permission.
            status: (String) Status of the cluster. Can be CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            text_log_enabled: (Boolean) Enable or disable text_log system table.
            text_log_level: (String) Logging level for text_log system table.
            text_log_retention_size: (Number) The maximum size that text_log can grow to before old data will be removed.
            text_log_retention_time: (Number) The maximum time that text_log records will be retained before removal.
            throw: '- abort query execution, return an error.'
            time_column_name: '(String) The name of the column storing the time of measuring the metric. Default value: Time.'
            timeout_before_checking_execution_speed: (Number) Timeout (in seconds) between checks of execution speed. It is checked that execution speed is not less that specified in min_execution_speed parameter. Must be at least 1000.
            timeout_overflow_mode: '(String) Sets behavior on overflow. Possible values:'
            timeouts: (Block, Optional) (see below for nested schema)
            timezone: (String) The server's time zone.
            total_memory_profiler_step: (Number) Whenever server memory usage becomes larger than every next step in number of bytes the memory profiler will collect the allocating stack trace.
            trace_log_enabled: (Boolean) Enable or disable trace_log system table.
            trace_log_retention_size: (Number) The maximum size that trace_log can grow to before old data will be removed.
            trace_log_retention_time: (Number) The maximum time that trace_log records will be retained before removal.
            transfer_overflow_mode: '(String) Sets behavior on overflow. Possible values:'
            transform_null_in: (Boolean) Enables equality of NULL values for IN operator.
            ttl_only_drop_parts: (Boolean) Enables zero-copy replication when a replica is located on a remote filesystem.
            type: (String) The type of the host to be deployed. Can be either CLICKHOUSE or ZOOKEEPER.
            uncompressed_cache_size: (Number) Cache size (in bytes) for uncompressed data used by table engines from the MergeTree family. Zero means disabled.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            uri: (String) Format schema file URL. You can only use format schemas stored in Yandex Object Storage.
            use_hedged_requests: '(Boolean) Enables hedged requests logic for remote queries. It allows to establish many connections with different replicas for query. New connection is enabled in case existent connection(s) with replica(s) were not established within hedged_connection_timeout or no data was received within receive_data_timeout. Query uses the first connection which send non empty progress packet (or data packet, if allow_changing_replica_until_first_data_packet); other connections are cancelled. Queries with max_parallel_replicas > 1 are supported. Default value: true.'
            use_uncompressed_cache: (Boolean) Whether to use a cache of uncompressed blocks.
            user: (Block Set, Deprecated) A user of the ClickHouse cluster. (see below for nested schema)
            username: (String) RabbitMQ username.
            value_column_name: '(String) The name of the column storing the value of the metric at the time set in time_column_name. Default value: Value.'
            version: (String) Version of the ClickHouse server software.
            version_column_name: '(String) The name of the column storing the version of the metric. Default value: Timestamp.'
            vhost: '(String) RabbitMQ vhost. Default: \.'
            wait_for_async_insert: (Boolean) Enables waiting for processing of asynchronous insertion. If enabled, server returns OK only after the data is inserted.
            wait_for_async_insert_timeout: (Number) The timeout (in seconds) for waiting for processing of asynchronous insertion. Value must be at least 1000 (1 second).
            web_sql: (Boolean) Allow access for Web SQL.
            weight: (Number) The weight of shard.
            yandex_query: (Boolean) Allow access for YandexQuery.
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
            zookeeper: '(Block List, Max: 1) Configuration of the ZooKeeper subcluster. (see below for nested schema)'
            zookeeper_log_enabled: (Boolean) Enable or disable zookeeper_log system table.
            zookeeper_log_retention_size: (Number) The maximum size that zookeeper_log can grow to before old data will be removed.
            zookeeper_log_retention_time: (Number) The maximum time that zookeeper_log records will be retained before removal.
        importStatements:
            - |-
              # terraform import yandex_mdb_clickhouse_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_clickhouse_cluster.my_cluster ...
    yandex_mdb_clickhouse_database:
        subCategory: Managed Service for ClickHouse
        description: Manages a Database in Clickhouse cluster within Yandex Cloud.
        name: yandex_mdb_clickhouse_database
        title: yandex_mdb_clickhouse_database
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_clickhouse_cluster.foo.id}",
                  "name": "database1"
                }
              references:
                cluster_id: yandex_mdb_clickhouse_cluster.foo.id
              dependencies:
                yandex_mdb_clickhouse_cluster.foo: |-
                    {
                      "config": [
                        {}
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "type": "CLICKHOUSE",
                          "zone": "ru-central1-a"
                        }
                      ],
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${database}",
                            "${user}"
                          ]
                        }
                      ],
                      "maintenance_window": [
                        {
                          "type": "ANYTIME"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources": [
                        {
                          "disk_size": 32,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "service_account_id": "your_service_account_id"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: bar
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_clickhouse_cluster.foo.id}",
                  "name": "database2"
                }
              references:
                cluster_id: yandex_mdb_clickhouse_cluster.foo.id
              dependencies:
                yandex_mdb_clickhouse_cluster.foo: |-
                    {
                      "config": [
                        {}
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "type": "CLICKHOUSE",
                          "zone": "ru-central1-a"
                        }
                      ],
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${database}",
                            "${user}"
                          ]
                        }
                      ],
                      "maintenance_window": [
                        {
                          "type": "ANYTIME"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources": [
                        {
                          "disk_size": 32,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "service_account_id": "your_service_account_id"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            cluster_id: (String) ID of the ClickHouse cluster. Provided by the client when the database is created.
            id: (String) The resource identifier.
            name: (String) The name of the database.
        importStatements:
            - |-
              # terraform import yandex_mdb_clickhouse_database.<resource Name> <resource Id>
              terraform import yandex_mdb_clickhouse_database.my_db1 cluster_id:my_dbname
    yandex_mdb_clickhouse_user:
        subCategory: Managed Service for ClickHouse
        description: Manages a Database user in Clickhouse cluster within Yandex Cloud.
        name: yandex_mdb_clickhouse_user
        title: yandex_mdb_clickhouse_user
        examples:
            - name: foo
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_clickhouse_cluster.foo.id}",
                  "name": "user",
                  "password": "your_password",
                  "permission": [
                    {
                      "database_name": "${yandex_mdb_clickhouse_database.foo.name}"
                    }
                  ],
                  "quota": [
                    {
                      "errors": 1000,
                      "interval_duration": 3600000,
                      "queries": 10000
                    },
                    {
                      "errors": 5000,
                      "interval_duration": 79800000,
                      "queries": 50000
                    }
                  ],
                  "settings": [
                    {
                      "max_memory_usage_for_user": 1000000000,
                      "output_format_json_quote_64bit_integers": true,
                      "read_overflow_mode": "throw"
                    }
                  ]
                }
              references:
                cluster_id: yandex_mdb_clickhouse_cluster.foo.id
                permission.database_name: yandex_mdb_clickhouse_database.foo.name
              dependencies:
                yandex_mdb_clickhouse_cluster.foo: |-
                    {
                      "config": [
                        {}
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "type": "CLICKHOUSE",
                          "zone": "ru-central1-a"
                        }
                      ],
                      "lifecycle": [
                        {
                          "ignore_changes": [
                            "${database}",
                            "${user}"
                          ]
                        }
                      ],
                      "maintenance_window": [
                        {
                          "type": "ANYTIME"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources": [
                        {
                          "disk_size": 32,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "service_account_id": "your_service_account_id"
                    }
                yandex_mdb_clickhouse_database.foo: |-
                    {
                      "cluster_id": "${yandex_mdb_clickhouse_cluster.foo.id}",
                      "name": "database1"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            add_http_cors_header: (Boolean) Include CORS headers in HTTP response.
            allow_ddl: (Boolean) Allows or denies DDL queries.
            allow_introspection_functions: (Boolean) Enables or disables introspection functions for query profiling.
            allow_suspicious_low_cardinality_types: (Boolean) Allows specifying LowCardinality modifier for types of small fixed size (8 or less) in CREATE TABLE statements. Enabling this may increase merge times and memory consumption.
            any_join_distinct_right_table_keys: (Boolean) Enables legacy ClickHouse server behaviour in ANY INNER|LEFT JOIN operations.
            async_insert: (Boolean) Enables asynchronous inserts. Disabled by default.
            async_insert_busy_timeout: '(Number) The maximum timeout in milliseconds since the first INSERT query before inserting collected data. If the parameter is set to 0, the timeout is disabled. Default value: 200.'
            async_insert_max_data_size: '(Number) The maximum size of the unparsed data in bytes collected per query before being inserted. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 100000.'
            async_insert_stale_timeout: (Number) The maximum timeout in milliseconds since the last INSERT query before dumping collected data. If enabled, the settings prolongs the async_insert_busy_timeout with every INSERT query as long as async_insert_max_data_size is not exceeded.
            async_insert_threads: '(Number) The maximum number of threads for background data parsing and insertion. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 16.'
            cancel_http_readonly_queries_on_client_close: '(Boolean) Cancels HTTP read-only queries (e.g. SELECT) when a client closes the connection without waiting for the response. Default value: false.'
            cluster_id: (String) ID of the ClickHouse cluster. Provided by the client when the user is created.
            compile_expressions: (Boolean) Enable or disable compilation of some scalar functions and operators to native code.
            connect_timeout: (Number) Connection timeout in milliseconds.
            connect_timeout_with_failover: (Number) The timeout in milliseconds for connecting to a remote server for a Distributed table engine.  Applies only if the cluster uses sharding and replication. If unsuccessful, several attempts are made to connect to various replicas.
            connection_id: (String) ID of Connection Manager connection. Filled in by the server automatically. String.
            connection_manager: (Attributes) Connection Manager connection configuration. Filled in by the server automatically. (see below for nested schema)
            count_distinct_implementation: (String) Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            database_name: (String) Name of the database that the permission grants access to.
            date_time_input_format: '(String) Allows choosing a parser of the text representation of date and time, one of: best_effort, basic, best_effort_us. Default value: basic. Cloud default value: best_effort.'
            date_time_output_format: '(String) Allows choosing different output formats of the text representation of date and time, one of: simple, iso, unix_timestamp. Default value: simple.'
            deduplicate_blocks_in_dependent_materialized_views: (Boolean) Enables or disables the deduplication check for materialized views that receive data from Replicated* tables.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            distinct_overflow_mode: (String) Sets behaviour on overflow when using DISTINCT.
            distributed_aggregation_memory_efficient: (Boolean) Enables of disables memory saving mode when doing distributed aggregation.
            distributed_ddl_task_timeout: (Number) Timeout for DDL queries, in milliseconds.
            distributed_product_mode: (String) Determine the behavior of distributed subqueries.
            empty_result_for_aggregation_by_empty_set: (Boolean) Allows to retunr empty result.
            enable_http_compression: (Boolean) Enables or disables data compression in the response to an HTTP request.
            errors: (Number) The number of queries that threw exception. 0 - unlimited.
            execution_time: (Number) The total query execution time, in milliseconds (wall time). 0 - unlimited.
            fallback_to_stale_replicas_for_distributed_queries: (Boolean) Enables or disables query forcing to a stale replica in case the actual data is unavailable. If enabled, ClickHouse will choose the most up-to-date replica and force the query to use the data in this replica.
            flatten_nested: (Boolean) Sets the data format of a nested columns.
            force_index_by_date: (Boolean) Disable query execution if the index cannot be used by date.
            force_primary_key: (Boolean) Disable query execution if indexing by the primary key is not possible.
            format_regexp: (String) Regular expression (for Regexp format).
            format_regexp_skip_unmatched: (Boolean) Skip lines unmatched by regular expression.
            generate_password: '(Boolean) Generate password using Connection Manager. Allowed values: true or false. It''s used only during user creation and is ignored during updating.'
            group_by_overflow_mode: (String) Sets behaviour on overflow while GROUP BY operation.
            group_by_two_level_threshold: (Number) Sets the threshold of the number of keys, after that the two-level aggregation should be used.
            group_by_two_level_threshold_bytes: (Number) Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
            hedged_connection_timeout_ms: '(Number) Connection timeout for establishing connection with replica for Hedged requests. Default value: 50 milliseconds.'
            http_connection_timeout: (Number) Timeout for HTTP connection in milliseconds.
            http_headers_progress_interval: (Number) Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
            http_receive_timeout: (Number) Timeout for HTTP connection in milliseconds.
            http_send_timeout: (Number) Timeout for HTTP connection in milliseconds.
            id: (String) The resource identifier.
            idle_connection_timeout: '(Number) Timeout to close idle TCP connections after specified number of seconds. Default value: 3600 seconds.'
            input_format_defaults_for_omitted_fields: (Boolean) When performing INSERT queries, replace omitted input column values with default values of the respective columns.
            input_format_import_nested_json: (Boolean) Enables or disables the insertion of JSON data with nested objects.
            input_format_null_as_default: (Boolean) Enables or disables the initialization of NULL fields with default values, if data type of these fields is not nullable.
            input_format_parallel_parsing: (Boolean) Enables or disables order-preserving parallel parsing of data formats. Supported only for TSV, TKSV, CSV and JSONEachRow formats.
            input_format_values_interpret_expressions: (Boolean) Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
            input_format_with_names_use_header: (Boolean) Enables or disables checking the column order when inserting data.
            insert_keeper_max_retries: (Number) The setting sets the maximum number of retries for ClickHouse Keeper (or ZooKeeper) requests during insert into replicated MergeTree. Only Keeper requests which failed due to network error, Keeper session timeout, or request timeout are considered for retries.
            insert_null_as_default: '(Boolean) Enables the insertion of default values instead of NULL into columns with not nullable data type. Default value: true.'
            insert_quorum: (Number) Enables the quorum writes.
            insert_quorum_parallel: (Boolean) Enables or disables parallelism for quorum INSERT queries.
            insert_quorum_timeout: (Number) Quorum write timeout in milliseconds.
            interval_duration: (Number) Duration of interval for quota in milliseconds.
            join_algorithm: (Set of String) Specifies which JOIN algorithm to use.
            join_overflow_mode: (String) Sets behaviour on overflow in JOIN.
            join_use_nulls: (Boolean) Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
            joined_subquery_requires_alias: (Boolean) Require aliases for subselects and table functions in FROM that more than one table is present.
            load_balancing: '(String) Specifies the algorithm of replicas selection that is used for distributed query processing, one of: random, nearest_hostname, in_order, first_or_random, round_robin. Default value: random.'
            local_filesystem_read_method: '(String) Method of reading data from local filesystem. Possible values:'
            log_query_threads: '(Boolean) Setting up query threads logging. Query threads log into the system.query_thread_log table. This setting has effect only when log_queries is true. Queries’ threads run by ClickHouse with this setup are logged according to the rules in the query_thread_log server configuration parameter. Default value: true.'
            low_cardinality_allow_in_native_format: (Boolean) Allows or restricts using the LowCardinality data type with the Native format.
            max_ast_depth: (Number) Limits the maximum depth of query syntax tree.
            max_ast_elements: (Number) Limits the maximum size of query syntax tree in number of nodes.
            max_block_size: (Number) A recommendation for what size of the block (in a count of rows) to load from tables.
            max_bytes_before_external_group_by: (Number) Limit in bytes for using memoru for GROUP BY before using swap on disk.
            max_bytes_before_external_sort: (Number) This setting is equivalent of the max_bytes_before_external_group_by setting, except for it is for sort operation (ORDER BY), not aggregation.
            max_bytes_in_distinct: (Number) Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
            max_bytes_in_join: (Number) Limit on maximum size of the hash table for JOIN, in bytes.
            max_bytes_in_set: (Number) Limit on the number of bytes in the set resulting from the execution of the IN section.
            max_bytes_to_read: (Number) Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
            max_bytes_to_sort: (Number) Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
            max_bytes_to_transfer: (Number) Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
            max_columns_to_read: (Number) Limits the maximum number of columns that can be read from a table in a single query.
            max_concurrent_queries_for_user: '(Number) The maximum number of concurrent requests per user. Default value: 0 (no limit).'
            max_execution_time: (Number) Limits the maximum query execution time in milliseconds.
            max_expanded_ast_elements: (Number) Limits the maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk values.
            max_final_threads: (Number) Sets the maximum number of parallel threads for the SELECT query data read phase with the FINAL modifier.
            max_http_get_redirects: (Number) Limits the maximum number of HTTP GET redirect hops for URL-engine tables.
            max_insert_block_size: (Number) The size of blocks (in a count of rows) to form for insertion into a table.
            max_insert_threads: '(Number) The maximum number of threads to execute the INSERT SELECT query. Default value: 0.'
            max_memory_usage: (Number) Maximum memory usage for processing all concurrently running queries for the user. Zero means unlimited.
            max_memory_usage_for_user: (Number) Maximum memory usage for processing all concurrently running queries for the user. Zero means unlimited.
            max_network_bandwidth: (Number) Limits the speed of the data exchange over the network in bytes per second.  This setting applies to every query.
            max_network_bandwidth_for_user: (Number) Limits the speed of the data exchange over the network in bytes per second. This setting applies to all concurrently running queries performed by a single user.
            max_parser_depth: (Number) Limits maximum recursion depth in the recursive descent parser. Allows controlling the stack size.
            max_partitions_per_insert_block: (Number) Limits the maximum number of partitions in a single inserted block.
            max_query_size: (Number) The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
            max_read_buffer_size: (Number) The maximum size of the buffer to read from the filesystem.
            max_replica_delay_for_distributed_queries: (Number) Max replica delay in milliseconds. If a replica lags more than the set value,this replica is not used and becomes a stale one.
            max_result_bytes: (Number) Limits the number of bytes in the result.
            max_result_rows: (Number) Limits the number of rows in the result.
            max_rows_in_distinct: (Number) Limits the maximum number of different rows when using DISTINCT.
            max_rows_in_join: (Number) Limit on maximum size of the hash table for JOIN, in rows.
            max_rows_in_set: (Number) Limit on the number of rows in the set resulting from the execution of the IN section.
            max_rows_to_group_by: (Number) Limits the maximum number of unique keys received from aggregation function.
            max_rows_to_read: (Number) Limits the maximum number of rows that can be read from a table when running a query.
            max_rows_to_sort: (Number) Limits the maximum number of rows that can be read from a table for sorting.
            max_rows_to_transfer: (Number) Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
            max_temporary_columns: (Number) Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
            max_temporary_data_on_disk_size_for_query: (Number) The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running queries. Zero means unlimited.
            max_temporary_data_on_disk_size_for_user: (Number) The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running user queries. Zero means unlimited.
            max_temporary_non_const_columns: (Number) Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
            max_threads: (Number) The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
            memory_overcommit_ratio_denominator: (Number) It represents soft memory limit in case when hard limit is reached on user level. This value is used to compute overcommit ratio for the query. Zero means skip the query.
            memory_overcommit_ratio_denominator_for_user: (Number) It represents soft memory limit in case when hard limit is reached on global level. This value is used to compute overcommit ratio for the query. Zero means skip the query.
            memory_profiler_sample_probability: '(Number) Collect random allocations and deallocations and write them into system.trace_log with ''MemorySample'' trace_type. The probability is for every alloc/free regardless to the size of the allocation. Possible values: from 0 to 1. Default: 0.'
            memory_profiler_step: '(Number) Memory profiler step (in bytes). If the next query step requires more memory than this parameter specifies, the memory profiler collects the allocating stack trace. Values lower than a few megabytes slow down query processing. Default value: 4194304 (4 MB). Zero means disabled memory profiler.'
            memory_usage_overcommit_max_wait_microseconds: (Number) Maximum time thread will wait for memory to be freed in the case of memory overcommit on a user level. If the timeout is reached and memory is not freed, an exception is thrown.
            merge_tree_max_bytes_to_use_cache: (Number) If ClickHouse should read more than merge_tree_max_bytes_to_use_cache bytes in one query, it doesn’t use the cache of uncompressed blocks.
            merge_tree_max_rows_to_use_cache: (Number) If ClickHouse should read more than merge_tree_max_rows_to_use_cache rows in one query, it doesn’t use the cache of uncompressed blocks.
            merge_tree_min_bytes_for_concurrent_read: (Number) If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
            merge_tree_min_rows_for_concurrent_read: (Number) If the number of rows to be read from a file of a MergeTree table exceeds merge_tree_min_rows_for_concurrent_read then ClickHouse tries to perform a concurrent reading from this file on several threads.
            min_bytes_to_use_direct_io: (Number) The minimum data volume required for using direct I/O access to the storage disk.
            min_count_to_compile_expression: (Number) Minimum count of executing same expression before it is get compiled.
            min_execution_speed: (Number) Minimal execution speed in rows per second.
            min_execution_speed_bytes: (Number) Minimal execution speed in bytes per second.
            min_insert_block_size_bytes: (Number) Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
            min_insert_block_size_rows: (Number) Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
            name: (String) Name of the ClickHouse user. Provided by the client when the user is created.
            output_format_json_quote_64bit_integers: (Boolean) If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
            output_format_json_quote_denormals: (Boolean) Enables +nan, -nan, +inf, -inf outputs in JSON output format.
            password: (String, Sensitive) Password of the ClickHouse user. Provided by the client when the user is created.
            permission: (Block Set) Block represents databases that are permitted to user. (see below for nested schema)
            prefer_localhost_replica: '(Boolean) Enables/disables preferable using the localhost replica when processing distributed queries. Default value: true.'
            priority: (Number) Priority of the query.
            queries: (Number) The total number of queries. 0 - unlimited.
            quota: (Block Set) ClickHouse quota representation. Each quota associated with an user and limits it resource usage for an interval. For more information, see the official documentation (see below for nested schema)
            quota_mode: (String) Quota accounting mode.
            read_overflow_mode: '(String) Sets behaviour on overflow while read. Possible values: * throw - abort query execution, return an error.  * break - stop query execution, return partial result.'
            read_rows: (Number) The total number of source rows read from tables for running the query, on all remote servers. 0 - unlimited.
            readonly: (Number) Restricts permissions for non-DDL queries.
            receive_timeout: (Number) Receive timeout in milliseconds.
            remote_filesystem_read_method: '(String) Method of reading data from remote filesystem, one of: read, threadpool.'
            replication_alter_partitions_sync: (Number) Wait mode for asynchronous actions in ALTER queries on replicated tables.
            result_overflow_mode: (String) Sets behaviour on overflow in result.
            result_rows: (Number) The total number of rows given as the result. 0 - unlimited.
            select_sequential_consistency: (Boolean) Determines the behavior of SELECT queries from replicated tables. If enabled, ClickHouse will terminate a query with error message in case the replica does not have a chunk written with the quorum and will not read the parts that have not yet been written with the quorum.
            send_progress_in_http_headers: (Boolean) Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
            send_timeout: (Number) Send timeout in milliseconds.
            set_overflow_mode: (String) Sets behaviour on overflow in the set resulting.
            settings: (Block, Optional) Block represents ClickHouse user settings. For more information, see the official documentation (see below for nested schema)
            skip_unavailable_shards: (Boolean) Enables or disables silent skipping of unavailable shards
            sort_overflow_mode: (String) Sets behaviour on overflow while sort.
            timeout_before_checking_execution_speed: (Number) Timeout (in seconds) between checks of execution speed. It is checked that execution speed is not less that specified in min_execution_speed parameter. Must be at least 1000.
            timeout_overflow_mode: (String) Sets behaviour on overflow.
            timeouts: (Block, Optional) (see below for nested schema)
            transfer_overflow_mode: (String) Sets behaviour on overflow.
            transform_null_in: (Boolean) Enables equality of NULL values for IN operator.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            use_hedged_requests: '(Boolean) Enables hedged requests logic for remote queries. It allows to establish many connections with different replicas for query. New connection is enabled in case existent connection(s) with replica(s) were not established within hedged_connection_timeout or no data was received within receive_data_timeout. Query uses the first connection which send non empty progress packet (or data packet, if allow_changing_replica_until_first_data_packet); other connections are cancelled. Queries with max_parallel_replicas > 1 are supported. Default value: true.'
            use_uncompressed_cache: (Boolean) Whether to use a cache of uncompressed blocks.
            wait_for_async_insert: (Boolean) Enables waiting for processing of asynchronous insertion. If enabled, server returns OK only after the data is inserted.
            wait_for_async_insert_timeout: (Number) The timeout (in seconds) for waiting for processing of asynchronous insertion. Value must be at least 1000 (1 second).
        importStatements:
            - |-
              # terraform import yandex_mdb_clickhouse_user.<resource Name> <cluster_id>:<user_name>
              terraform import yandex_mdb_clickhouse_user.my_user cluster_id:my_username
    yandex_mdb_elasticsearch_cluster:
        subCategory: Managed Service for Elasticsearch
        description: Manages a Elasticsearch cluster within Yandex Cloud.
        name: yandex_mdb_elasticsearch_cluster
        title: yandex_mdb_elasticsearch_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "admin_password": "super-password",
                      "data_node": [
                        {
                          "resources": [
                            {
                              "disk_size": 100,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "assign_public_ip": true,
                      "name": "node",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "type": "DATA_NODE",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "admin_password": "super-password",
                      "data_node": [
                        {
                          "resources": [
                            {
                              "disk_size": 100,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ],
                      "edition": "platinum",
                      "master_node": [
                        {
                          "resources": [
                            {
                              "disk_size": 10,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ],
                      "plugins": [
                        "analysis-icu"
                      ]
                    }
                  ],
                  "depends_on": [
                    "${yandex_vpc_subnet.es-subnet-a}",
                    "${yandex_vpc_subnet.es-subnet-b}",
                    "${yandex_vpc_subnet.es-subnet-d}"
                  ],
                  "dynamic": {
                    "host": [
                      {
                        "content": [
                          {
                            "assign_public_ip": true,
                            "name": "datanode${host.value}",
                            "type": "DATA_NODE",
                            "zone": "${local.zones[(host.value) % 3]}"
                          }
                        ],
                        "for_each": "${toset(range(0, 6))}"
                      },
                      {
                        "content": [
                          {
                            "name": "masternode${host.value}",
                            "type": "MASTER_NODE",
                            "zone": "${local.zones[host.value % 3]}"
                          }
                        ],
                        "for_each": "${toset(range(0, 3))}"
                      }
                    ]
                  },
                  "environment": "PRODUCTION",
                  "name": "my-cluster",
                  "network_id": "${yandex_vpc_network.es-net.id}"
                }
              references:
                network_id: yandex_vpc_network.es-net.id
              dependencies:
                yandex_vpc_network.es-net: '{}'
                yandex_vpc_subnet.es-subnet-a: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
                yandex_vpc_subnet.es-subnet-b: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.es-subnet-d: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            admin_password: (String, Sensitive) Password for admin user of Elasticsearch.
            assign_public_ip: (Boolean) Sets whether the host should get a public IP address on creation. Can be either true or false.
            config: '(Block List, Min: 1, Max: 1) Configuration of the Elasticsearch cluster. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_node: '(Block List, Min: 1, Max: 1) Configuration for Elasticsearch data nodes subcluster. (see below for nested schema)'
            day: '(String) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a host, in gigabytes.
            disk_type_id: (String) Type of the storage of Elasticsearch hosts.
            edition: (String) Edition of Elasticsearch. For more information, see the official documentation.
            environment: (String) Deployment environment of the Elasticsearch cluster. Can be either PRESTABLE or PRODUCTION.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            health: (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
            host: (Block Set) A host of the Elasticsearch cluster. (see below for nested schema)
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_window: '(Block List, Max: 1) Elasticsearch cluster maintenance window. (see below for nested schema)'
            master_node: '(Block List, Max: 1) Configuration for Elasticsearch master nodes subcluster. (see below for nested schema)'
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            plugins: (Set of String) A set of Elasticsearch plugins to install.
            resource_preset_id: (String) The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to hosts of the Elasticsearch data nodes subcluster. (see below for nested schema)'
            security_group_ids: (Set of String)
            service_account_id: (String) Service account which linked to the resource.
            status: (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) The type of the host to be deployed. Can be either DATA_NODE or MASTER_NODE.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            version: (String) Version of Elasticsearch.
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_mdb_elasticsearch_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_elasticsearch_cluster.my_cluster ...
    yandex_mdb_greenplum_cluster:
        subCategory: Managed Service for Greenplum
        description: Manages a Greenplum cluster within Yandex Cloud.
        name: yandex_mdb_greenplum_cluster
        title: yandex_mdb_greenplum_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "access": [
                    {
                      "web_sql": true
                    }
                  ],
                  "assign_public_ip": true,
                  "description": "test greenplum cluster",
                  "environment": "PRESTABLE",
                  "greenplum_config": {
                    "gp_add_column_inherits_table_setting": "true",
                    "gp_enable_global_deadlock_detector": "true",
                    "gp_global_deadlock_detector_period": 120,
                    "gp_workfile_compression": "false",
                    "gp_workfile_limit_files_per_query": 100000,
                    "gp_workfile_limit_per_query": 0,
                    "gp_workfile_limit_per_segment": 0,
                    "log_statement": 2,
                    "max_connections": 395,
                    "max_prepared_transactions": 500,
                    "max_slot_wal_keep_size": 1048576,
                    "max_statement_mem": 2147483648
                  },
                  "master_host_count": 2,
                  "master_subcluster": [
                    {
                      "resources": [
                        {
                          "disk_size": 24,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "security_group_ids": [
                    "${yandex_vpc_security_group.test-sg-x.id}"
                  ],
                  "segment_host_count": 5,
                  "segment_in_host": 1,
                  "segment_subcluster": [
                    {
                      "resources": [
                        {
                          "disk_size": 24,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                  ],
                  "subnet_id": "${yandex_vpc_subnet.foo.id}",
                  "user_name": "admin_user",
                  "user_password": "your_super_secret_password",
                  "version": "6.25",
                  "zone_id": "ru-central1-a"
                }
              references:
                network_id: yandex_vpc_network.foo.id
                security_group_ids: yandex_vpc_security_group.test-sg-x.id
                subnet_id: yandex_vpc_subnet.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_security_group.test-sg-x: |-
                    {
                      "egress": [
                        {
                          "description": "Allow outgoing traffic to members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "ingress": [
                        {
                          "description": "Allow incoming traffic from members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access policy to the Greenplum cluster. (see below for nested schema)'
            analyze_and_vacuum: (Block List) Block to configure 'ANALYZE' and 'VACUUM' daily operations. (see below for nested schema)
            analyze_timeout: (Number) Maximum duration of the ANALYZE operation, in seconds. The default value is 36000. As soon as this period expires, the ANALYZE operation will be forced to terminate.
            assign_public_ip: (Boolean) Sets whether the master hosts should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
            background_activities: (Block List) Background activities settings. (see below for nested schema)
            backup_window_start: '(Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)'
            cloud_storage: '(Block List, Max: 1) Cloud Storage settings of the Greenplum cluster. (see below for nested schema)'
            command_center_enabled: (Boolean) Deliver Yandex Command Center's logs to Cloud Logging.
            connection_timeout: (Number) The Tomcat server connection timeout for read operations in seconds. Value is between 5 and 600.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_lens: (Boolean) Allow access for Yandex DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer
            day: '(String) Day of the week (in DDD format). Allowed values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a host, in gigabytes.
            disk_type_id: (String) Type of the storage of Greenplum hosts - environment default is used if missing.
            enable: (Boolean) Flag that indicates whether script is enabled.
            enabled: (Boolean) Flag that indicates whether log delivery to Cloud Logging is enabled.
            environment: (String) Deployment environment of the Greenplum cluster. (PRODUCTION, PRESTABLE)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String)
            greenplum_config: (Map of String) Greenplum cluster config. Detail info in Greenplum cluster settings block.
            greenplum_enabled: (Boolean) Deliver Greenplum's logs to Cloud Logging.
            health: (String) Aggregated health of the cluster.
            hour: (Number) Hour of the day in UTC (in HH format). Allowed value is between 0 and 23.
            hours: (Number) The hour at which backup will be started (UTC).
            id: (String) The ID of this resource.
            ignore_users: (List of String) List of users to ignore when considering queries to terminate.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) Cloud Logging group ID to send logs to.
            logging: '(Block List, Max: 1) Cloud Logging settings. (see below for nested schema)'
            maintenance_window: '(Block List, Max: 1) Maintenance policy of the Greenplum cluster. (see below for nested schema)'
            master_host_count: (Number) Number of hosts in master subcluster (1 or 2).
            master_host_group_ids: (Set of String) A list of IDs of the host groups to place master subclusters' VMs of the cluster on.
            master_hosts: (List of Object) Info about hosts in master subcluster. (see below for nested schema)
            master_subcluster: '(Block List, Min: 1, Max: 1) Settings for master subcluster. (see below for nested schema)'
            max_age: (Number) Maximum duration for this type of queries (in seconds).
            max_threads: (Number) The maximum number of PXF tomcat threads. Value is between 1 and 1024.
            minutes: (Number) The minute at which backup will be started (UTC).
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            pool_allow_core_thread_timeout: (Boolean) Identifies whether or not core streaming threads are allowed to time out.
            pool_client_idle_timeout: (Number) Value for pool_client_idle_timeout parameter in Odyssey.
            pool_core_size: (Number) The number of core streaming threads. Value is between 1 and 1024.
            pool_max_size: (Number) The maximum allowed number of core streaming threads. Value is between 1 and 1024.
            pool_queue_capacity: (Number) The capacity of the core streaming thread pool queue. Value is positive.
            pool_size: (Number) Value for pool_size parameter in Odyssey.
            pooler_config: '(Block List, Max: 1) Configuration of the connection pooler. (see below for nested schema)'
            pooler_enabled: (Boolean) Deliver connection pooler's logs to Cloud Logging.
            pooling_mode: (String) Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
            pxf_config: '(Block List, Max: 1) Configuration of the PXF daemon. (see below for nested schema)'
            query_killer_idle: (Block List) Block to configure script that kills long running queries that are in idle state. (see below for nested schema)
            query_killer_idle_in_transaction: (Block List) Block to configure script that kills long running queries that are in idle in transaction state. (see below for nested schema)
            query_killer_long_running: (Block List) Block to configure script that kills long running queries (in any state). (see below for nested schema)
            resource_preset_id: (String) The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to hosts for master subcluster of the Greenplum cluster. (see below for nested schema)'
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            segment_host_count: (Number) Number of hosts in segment subcluster (from 1 to 32).
            segment_host_group_ids: (Set of String) A list of IDs of the host groups to place segment subclusters' VMs of the cluster on.
            segment_hosts: (List of Object) Info about hosts in segment subcluster. (see below for nested schema)
            segment_in_host: (Number) Number of segments on segment host (not more then 1 + RAM/8).
            segment_subcluster: '(Block List, Min: 1, Max: 1) Settings for segment subcluster. (see below for nested schema)'
            service_account_id: (String) ID of service account to use with Yandex Cloud resources (e.g. S3, Cloud Logging).
            start_time: (String) Time of day in 'HH:MM' format when scripts should run.
            status: (String) Status of the cluster.
            subnet_id: (String) The ID of the subnet, to which the hosts belongs. The subnet must be a part of the network to which the cluster belongs.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            upload_timeout: (Number) The Tomcat server connection timeout for write operations in seconds. Value is between 5 and 600.
            user_name: (String) Greenplum cluster admin user name.
            user_password: (String, Sensitive) Greenplum cluster admin password name.
            vacuum_timeout: (Number) Maximum duration of the VACUUM operation, in seconds. The default value is 36000. As soon as this period expires, the VACUUM operation will be forced to terminate.
            version: (String) Version of the Greenplum cluster. (6.25)
            web_sql: (Boolean) Allows access for SQL queries in the management console.
            xms: (Number) Maximum JVM heap size for PXF daemon. Value is between 64 and 16384.
            xmx: (Number) Initial JVM heap size for PXF daemon. Value is between 64 and 16384.
            yandex_query: (Boolean) Allow access for Yandex Query
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_mdb_greenplum_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_greenplum_cluster.my_cluster ...
    yandex_mdb_greenplum_resource_group:
        subCategory: Managed Service for Greenplum
        description: Manages a Greenplum resource group within Yandex Cloud.
        name: yandex_mdb_greenplum_resource_group
        title: yandex_mdb_greenplum_resource_group
        examples:
            - name: my_resource_group
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_greenplum_cluster.my_cluster.id}",
                  "name": "alice",
                  "password": "password",
                  "resource_group": "default_group"
                }
              references:
                cluster_id: yandex_mdb_greenplum_cluster.my_cluster.id
              dependencies:
                yandex_mdb_greenplum_cluster.my_cluster: |-
                    {
                      "environment": "PRESTABLE",
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            cluster_id: (String) The ID of the cluster to which resource group belongs to.
            concurrency: (Number) The maximum number of concurrent transactions, including active and idle transactions, that are permitted in the resource group.
            cpu_rate_limit: (Number) The percentage of CPU resources available to this resource group.
            id: (String) The resource identifier.
            is_user_defined: (Boolean) If false, the resource group is immutable and controlled by yandex
            memory_limit: (Number) The percentage of reserved memory resources available to this resource group.
            memory_shared_quota: (Number) The percentage of reserved memory to share across transactions submitted in this resource group.
            memory_spill_ratio: (Number) The memory usage threshold for memory-intensive transactions. When a transaction reaches this threshold, it spills to disk.
            name: (String) The name of the resource group.
        importStatements:
            - |-
              # terraform import yandex_mdb_greenplum_resource_group.<resource Name> <resource Id>
              terraform import yandex_mdb_greenplum_resource_group.my_resource_group ...
    yandex_mdb_greenplum_user:
        subCategory: Managed Service for Greenplum
        description: Manages a Greenplum user within Yandex Cloud.
        name: yandex_mdb_greenplum_user
        title: yandex_mdb_greenplum_user
        examples:
            - name: my_user
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_greenplum_cluster.my_cluster.id}",
                  "name": "alice",
                  "password": "password",
                  "resource_group": "default_group"
                }
              references:
                cluster_id: yandex_mdb_greenplum_cluster.my_cluster.id
              dependencies:
                yandex_mdb_greenplum_cluster.my_cluster: |-
                    {
                      "environment": "PRESTABLE",
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            cluster_id: (String) The ID of the cluster to which user belongs to.
            id: (String) The resource identifier.
            name: (String) The name of the user.
            password: (String, Sensitive) The password of the user.
            resource_group: (String) The resource group of the user.
        importStatements:
            - |-
              # terraform import yandex_mdb_greenplum_user.<resource Name> <resource Id>
              terraform import yandex_mdb_greenplum_user.my_user ...
    yandex_mdb_kafka_cluster:
        subCategory: Managed Service for Apache Kafka
        description: Manages a Kafka cluster within Yandex Cloud.
        name: yandex_mdb_kafka_cluster
        title: yandex_mdb_kafka_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "assign_public_ip": false,
                      "brokers_count": 1,
                      "kafka": [
                        {
                          "kafka_config": [
                            {
                              "compression_type": "COMPRESSION_TYPE_ZSTD",
                              "default_replication_factor": 1,
                              "log_flush_interval_messages": 1024,
                              "log_flush_interval_ms": 1000,
                              "log_flush_scheduler_interval_ms": 1000,
                              "log_retention_bytes": 1073741824,
                              "log_retention_hours": 168,
                              "log_retention_minutes": 10080,
                              "log_retention_ms": 86400000,
                              "log_segment_bytes": 134217728,
                              "message_max_bytes": 1048588,
                              "num_partitions": 10,
                              "offsets_retention_minutes": 10080,
                              "replica_fetch_max_bytes": 1048576,
                              "sasl_enabled_mechanisms": [
                                "SASL_MECHANISM_SCRAM_SHA_256",
                                "SASL_MECHANISM_SCRAM_SHA_512"
                              ],
                              "ssl_cipher_suites": [
                                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                                "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                              ]
                            }
                          ],
                          "resources": [
                            {
                              "disk_size": 32,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ],
                      "kafka_ui": [
                        {
                          "enabled": true
                        }
                      ],
                      "rest_api": [
                        {
                          "enabled": true
                        }
                      ],
                      "schema_registry": false,
                      "version": "2.8",
                      "zones": [
                        "ru-central1-a"
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.foo.id}"
                  ],
                  "user": [
                    {
                      "name": "producer-application",
                      "password": "password",
                      "permission": [
                        {
                          "allow_hosts": [
                            "host1.db.yandex.net",
                            "host2.db.yandex.net"
                          ],
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "input"
                        }
                      ]
                    },
                    {
                      "name": "worker",
                      "password": "password",
                      "permission": [
                        {
                          "role": "ACCESS_ROLE_CONSUMER",
                          "topic_name": "input"
                        },
                        {
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "output"
                        }
                      ]
                    }
                  ]
                }
              references:
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "assign_public_ip": true,
                      "brokers_count": 2,
                      "kafka": [
                        {
                          "kafka_config": [
                            {
                              "compression_type": "COMPRESSION_TYPE_ZSTD",
                              "default_replication_factor": 6,
                              "log_flush_interval_messages": 1024,
                              "log_flush_interval_ms": 1000,
                              "log_flush_scheduler_interval_ms": 1000,
                              "log_retention_bytes": 1073741824,
                              "log_retention_hours": 168,
                              "log_retention_minutes": 10080,
                              "log_retention_ms": 86400000,
                              "log_segment_bytes": 134217728,
                              "message_max_bytes": 1048588,
                              "num_partitions": 10,
                              "offsets_retention_minutes": 10080,
                              "replica_fetch_max_bytes": 1048576,
                              "sasl_enabled_mechanisms": [
                                "SASL_MECHANISM_SCRAM_SHA_256",
                                "SASL_MECHANISM_SCRAM_SHA_512"
                              ],
                              "ssl_cipher_suites": [
                                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                                "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                              ]
                            }
                          ],
                          "resources": [
                            {
                              "disk_size": 128,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.medium"
                            }
                          ]
                        }
                      ],
                      "kafka_ui": [
                        {
                          "enabled": true
                        }
                      ],
                      "rest_api": [
                        {
                          "enabled": true
                        }
                      ],
                      "schema_registry": false,
                      "version": "2.8",
                      "zones": [
                        "ru-central1-a",
                        "ru-central1-b",
                        "ru-central1-d"
                      ],
                      "zookeeper": [
                        {
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.foo.id}",
                    "${yandex_vpc_subnet.bar.id}",
                    "${yandex_vpc_subnet.baz.id}"
                  ],
                  "user": [
                    {
                      "name": "producer-application",
                      "password": "password",
                      "permission": [
                        {
                          "allow_hosts": [
                            "host1.db.yandex.net",
                            "host2.db.yandex.net"
                          ],
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "input"
                        }
                      ]
                    },
                    {
                      "name": "worker",
                      "password": "password",
                      "permission": [
                        {
                          "role": "ACCESS_ROLE_CONSUMER",
                          "topic_name": "input"
                        },
                        {
                          "role": "ACCESS_ROLE_PRODUCER",
                          "topic_name": "output"
                        }
                      ]
                    }
                  ]
                }
              references:
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: kraft-split
              manifest: |-
                {
                  "config": [
                    {
                      "assign_public_ip": true,
                      "brokers_count": 2,
                      "kafka": [
                        {
                          "kafka_config": [
                            {
                              "compression_type": "COMPRESSION_TYPE_ZSTD",
                              "default_replication_factor": 6,
                              "log_flush_interval_messages": 1024,
                              "log_flush_interval_ms": 1000,
                              "log_flush_scheduler_interval_ms": 1000,
                              "log_retention_bytes": 1073741824,
                              "log_retention_hours": 168,
                              "log_retention_minutes": 10080,
                              "log_retention_ms": 86400000,
                              "log_segment_bytes": 134217728,
                              "message_max_bytes": 1048588,
                              "num_partitions": 10,
                              "offsets_retention_minutes": 10080,
                              "replica_fetch_max_bytes": 1048576,
                              "sasl_enabled_mechanisms": [
                                "SASL_MECHANISM_SCRAM_SHA_256",
                                "SASL_MECHANISM_SCRAM_SHA_512"
                              ],
                              "ssl_cipher_suites": [
                                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                                "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                              ]
                            }
                          ],
                          "resources": [
                            {
                              "disk_size": 128,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.medium"
                            }
                          ]
                        }
                      ],
                      "kafka_ui": [
                        {
                          "enabled": true
                        }
                      ],
                      "kraft": [
                        {
                          "resources": [
                            {
                              "disk_size": 20,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ]
                        }
                      ],
                      "rest_api": [
                        {
                          "enabled": true
                        }
                      ],
                      "schema_registry": false,
                      "version": "3.6",
                      "zones": [
                        "ru-central1-a",
                        "ru-central1-b",
                        "ru-central1-d"
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.foo.id}",
                    "${yandex_vpc_subnet.bar.id}",
                    "${yandex_vpc_subnet.baz.id}"
                  ]
                }
              references:
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: kraft-combine
              manifest: |-
                {
                  "config": [
                    {
                      "assign_public_ip": true,
                      "brokers_count": 1,
                      "kafka": [
                        {
                          "kafka_config": [
                            {
                              "compression_type": "COMPRESSION_TYPE_ZSTD",
                              "default_replication_factor": 6,
                              "log_flush_interval_messages": 1024,
                              "log_flush_interval_ms": 1000,
                              "log_flush_scheduler_interval_ms": 1000,
                              "log_retention_bytes": 1073741824,
                              "log_retention_hours": 168,
                              "log_retention_minutes": 10080,
                              "log_retention_ms": 86400000,
                              "log_segment_bytes": 134217728,
                              "message_max_bytes": 1048588,
                              "num_partitions": 10,
                              "offsets_retention_minutes": 10080,
                              "replica_fetch_max_bytes": 1048576,
                              "sasl_enabled_mechanisms": [
                                "SASL_MECHANISM_SCRAM_SHA_256",
                                "SASL_MECHANISM_SCRAM_SHA_512"
                              ],
                              "ssl_cipher_suites": [
                                "TLS_DHE_RSA_WITH_AES_128_CBC_SHA",
                                "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
                              ]
                            }
                          ],
                          "resources": [
                            {
                              "disk_size": 128,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.medium"
                            }
                          ]
                        }
                      ],
                      "kafka_ui": [
                        {
                          "enabled": true
                        }
                      ],
                      "rest_api": [
                        {
                          "enabled": true
                        }
                      ],
                      "schema_registry": false,
                      "version": "3.6",
                      "zones": [
                        "ru-central1-a",
                        "ru-central1-b",
                        "ru-central1-d"
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.foo.id}",
                    "${yandex_vpc_subnet.bar.id}",
                    "${yandex_vpc_subnet.baz.id}"
                  ]
                }
              references:
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access policy to the Kafka cluster. (see below for nested schema)'
            allow_hosts: (Set of String) Set of hosts, to which this permission grants access to. Only ip-addresses allowed as value of single host.
            assign_public_ip: (Boolean) Determines whether each broker will be assigned a public IP address. The default is false.
            auto_create_topics_enable: (Boolean) Enable auto creation of topic on the server.
            brokers_count: (Number) Count of brokers per availability zone. The default is 1.
            cleanup_policy: (String) Retention policy to use on log segments.
            compression_type: (String) Compression type of kafka topics.
            config: '(Block List, Min: 1, Max: 1) Configuration of the Kafka cluster. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_transfer: (Boolean) Allow access for DataTransfer.
            day: '(String) Day of the week (in DDD format). Allowed values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            default_replication_factor: (String) The replication factor for automatically created topics, and for topics created with -1 as the replication factor.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            delete_retention_ms: (String) The amount of time to retain delete tombstone markers for log compacted topics.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a Kafka host, in gigabytes.
            disk_size_autoscaling: '(Block List, Max: 1) Disk autoscaling settings of the Kafka cluster. (see below for nested schema)'
            disk_size_limit: (Number) Maximum possible size of disk in bytes.
            disk_type_id: (String) Type of the storage of Kafka hosts. For more information see the official documentation.
            emergency_usage_threshold: (Number) Percent of disk utilization. Disk will autoscale immediately, if this threshold reached. Value is between 0 and 100. Default value is 0 (autoscaling disabled). Must be not less then 'planned_usage_threshold' value.
            enabled: (Boolean) Enables KAFKA UI on cluster. The default is false.
            environment: (String) Deployment environment of the Kafka cluster. Can be either PRESTABLE or PRODUCTION. The default is PRODUCTION.
            file_delete_delay_ms: (String) The time to wait before deleting a file from the filesystem.
            flush_messages: (String) This setting allows specifying an interval at which we will force an fsync of data written to the log.
            flush_ms: (String) This setting allows specifying a time interval at which we will force an fsync of data written to the log.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            health: (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
            host: (Set of Object) A host of the Kafka cluster. (see below for nested schema)
            host_group_ids: (Set of String) A list of IDs of the host groups to place VMs of the cluster on.
            hour: (Number) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.
            id: (String) The ID of this resource.
            kafka: '(Block List, Min: 1, Max: 1) Configuration of the Kafka subcluster. (see below for nested schema)'
            kafka_config: '(Block List, Max: 1) User-defined settings for the Kafka cluster. For more information, see the official documentation and the Kafka documentation. (see below for nested schema)'
            kafka_ui: '(Block List, Max: 1) KAFKA UI settings of the Kafka cluster. (see below for nested schema)'
            kraft: '(Block List, Max: 1) Configuration of the KRaft-controller subcluster. (see below for nested schema)'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_flush_interval_messages: (String) The number of messages accumulated on a log partition before messages are flushed to disk.
            log_flush_interval_ms: (String) The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
            log_flush_scheduler_interval_ms: (String) The frequency in ms that the log flusher checks whether any log needs to be flushed to disk.
            log_preallocate: (Boolean, Deprecated) Should pre allocate file when create new segment?
            log_retention_bytes: (String) The maximum size of the log before deleting it.
            log_retention_hours: (String) The number of hours to keep a log file before deleting it (in hours), tertiary to log.retention.ms property.
            log_retention_minutes: (String) The number of minutes to keep a log file before deleting it (in minutes), secondary to log.retention.ms property. If not set, the value in log.retention.hours is used.
            log_retention_ms: (String) The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.
            log_segment_bytes: (String) The maximum size of a single log file.
            maintenance_window: '(Block List, Max: 1) Maintenance policy of the Kafka cluster. (see below for nested schema)'
            max_message_bytes: (String) The largest record batch size allowed by Kafka (after compression if compression is enabled).
            message_max_bytes: (String) The largest record batch size allowed by Kafka (after compression if compression is enabled).
            min_compaction_lag_ms: (String) The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.
            min_insync_replicas: (String) When a producer sets acks to "all" (or "-1"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            num_partitions: (String) The default number of log partitions per topic.
            offsets_retention_minutes: (String) For subscribed consumers, committed offset of a specific partition will be expired and discarded after this period of time.
            partitions: (Number) The number of the topic's partitions.
            password: (String, Sensitive) The password of the user.
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            planned_usage_threshold: (Number) Percent of disk utilization. During maintenance disk will autoscale, if this threshold reached. Value is between 0 and 100. Default value is 0 (autoscaling disabled).
            preallocate: (Boolean, Deprecated) True if we should preallocate the file on disk when creating a new log segment.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            replica_fetch_max_bytes: (String) The number of bytes of messages to attempt to fetch for each partition.
            replication_factor: (Number) Amount of data copies (replicas) for the topic in the cluster.
            resource_preset_id: (String) The ID of the preset for computational resources available to a Kafka host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to hosts of the Kafka subcluster. (see below for nested schema)'
            rest_api: '(Block List, Max: 1) REST API settings of the Kafka cluster. (see below for nested schema)'
            retention_bytes: (String) This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the "delete" retention policy.
            retention_ms: (String) This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the "delete" retention policy.
            role: (String) The role type to grant to the topic.
            sasl_enabled_mechanisms: (Set of String) The list of SASL mechanisms enabled in the Kafka server.
            schema_registry: (Boolean) Enables managed schema registry on cluster. The default is false.
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            segment_bytes: (String) This configuration controls the segment file size for the log.
            socket_receive_buffer_bytes: (String) The SO_RCVBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.
            socket_send_buffer_bytes: (String) The SO_SNDBUF buffer of the socket server sockets. If the value is -1, the OS default will be used.
            ssl_cipher_suites: (Set of String) A list of cipher suites.
            status: (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
            subnet_id: (String)
            subnet_ids: (List of String) The list of VPC subnets identifiers which resource is attached.
            timeouts: (Block, Optional) (see below for nested schema)
            topic: (Block List, Deprecated) To manage topics, please switch to using a separate resource type yandex_mdb_kafka_topic. (see below for nested schema)
            topic_config: '(Block List, Max: 1) User-defined settings for the topic. For more information, see the official documentation and the Kafka documentation. (see below for nested schema)'
            topic_name: (String) The name of the topic that the permission grants access to.
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.
            unmanaged_topics: (Boolean, Deprecated)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user: (Block Set, Deprecated) To manage users, please switch to using a separate resource type yandex_mdb_kafka_user. (see below for nested schema)
            version: (String) Version of the Kafka server software.
            zone_id: (String)
            zones: (List of String) List of availability zones.
            zookeeper: '(Block List, Max: 1) Configuration of the ZooKeeper subcluster. (see below for nested schema)'
        importStatements:
            - |-
              # terraform import yandex_mdb_kafka_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_kafka_cluster.my_cluster ...
    yandex_mdb_kafka_connector:
        subCategory: Managed Service for Apache Kafka
        description: Manages a connectors of a Kafka cluster within Yandex Cloud.
        name: yandex_mdb_kafka_connector
        title: yandex_mdb_kafka_connector
        examples:
            - name: my_conn
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.my_cluster.id}",
                  "connector_config_mirrormaker": [
                    {
                      "replication_factor": 1,
                      "source_cluster": [
                        {
                          "alias": "source",
                          "external_cluster": [
                            {
                              "bootstrap_servers": "somebroker1:9091,somebroker2:9091",
                              "sasl_mechanism": "SCRAM-SHA-512",
                              "sasl_password": "somepassword",
                              "sasl_username": "someuser",
                              "security_protocol": "SASL_SSL"
                            }
                          ]
                        }
                      ],
                      "target_cluster": [
                        {
                          "alias": "target",
                          "this_cluster": [
                            {}
                          ]
                        }
                      ],
                      "topics": "data.*"
                    }
                  ],
                  "name": "replication",
                  "properties": {
                    "refresh.topics.enabled": "true"
                  },
                  "tasks_max": 3
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.my_cluster.id
              dependencies:
                yandex_mdb_kafka_cluster.my_cluster: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
            - name: connector
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.my_cluster.id}",
                  "connector_config_s3_sink": [
                    {
                      "file_compression_type": "gzip",
                      "file_max_records": 100,
                      "s3_connection": [
                        {
                          "bucket_name": "somebucket",
                          "external_s3": [
                            {
                              "access_key_id": "some_access_key_id",
                              "endpoint": "storage.yandexcloud.net",
                              "secret_access_key": "some_secret_access_key"
                            }
                          ]
                        }
                      ],
                      "topics": "data.*"
                    }
                  ],
                  "name": "s3-sink",
                  "properties": {
                    "file.name.template": "dir1/dir2/{{topic}}-{{partition:padding=true}}-{{start_offset:padding=true}}.gz",
                    "format.output.type": "jsonl",
                    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
                    "timestamp.timezone": "Europe/Moscow",
                    "value.converter": "org.apache.kafka.connect.json.JsonConverter",
                    "value.converter.schemas.enable": "false"
                  },
                  "tasks_max": 3
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.my_cluster.id
              dependencies:
                yandex_mdb_kafka_cluster.my_cluster: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
        argumentDocs:
            access_key_id: (String) ID of aws-compatible static key.
            alias: (String) Name of the cluster. Used also as a topic prefix.
            bootstrap_servers: (String) List of bootstrap servers to connect to cluster.
            bucket_name: (String) Name of the bucket in s3-compatible storage.
            cluster_id: (String) The ID of the Kafka cluster.
            connector_config_mirrormaker: (Block List) Settings for MirrorMaker2 connector. (see below for nested schema)
            connector_config_s3_sink: (Block List) Settings for S3 Sink connector. (see below for nested schema)
            endpoint: (String) URL of s3-compatible storage.
            external_cluster: (Block List) Connection settings for external cluster. (see below for nested schema)
            external_s3: '(Block List, Min: 1) Connection params for external s3-compatible storage. (see below for nested schema)'
            file_compression_type: (String) Compression type for messages. Cannot be changed.
            file_max_records: (Number) Max records per file.
            id: (String) The ID of this resource.
            name: (String) The resource name.
            properties: (Map of String) Additional properties for connector.
            region: (String) Region of s3-compatible storage. Available region list.
            replication_factor: (Number) Replication factor for topics created in target cluster.
            s3_connection: '(Block List, Min: 1, Max: 1) Settings for connection to s3-compatible storage. (see below for nested schema)'
            sasl_mechanism: (String) Type of SASL authentification mechanism to use.
            sasl_password: (String, Sensitive) Password to use in SASL authentification mechanism
            sasl_username: (String) Username to use in SASL authentification mechanism.
            secret_access_key: (String, Sensitive) Secret key of aws-compatible static key.
            security_protocol: (String) Security protocol to use.
            source_cluster: '(Block List, Min: 1, Max: 1) Settings for source cluster. (see below for nested schema)'
            target_cluster: '(Block List, Min: 1, Max: 1) Settings for target cluster. (see below for nested schema)'
            tasks_max: (Number) The number of the connector's parallel working tasks. Default is the number of brokers.
            this_cluster: (Block List) Using this section in the cluster definition (source or target) means it's this cluster. (see below for nested schema)
            topics: (String) The pattern for topic names to be replicated.
        importStatements:
            - |-
              # terraform import yandex_mdb_kafka_connector.<resource Name> <resource Id>
              terraform import yandex_mdb_kafka_connector.my_conn ...
    yandex_mdb_kafka_topic:
        subCategory: Managed Service for Apache Kafka
        description: Manages a topic of a Kafka cluster within Yandex Cloud.
        name: yandex_mdb_kafka_topic
        title: yandex_mdb_kafka_topic
        examples:
            - name: events
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.my_cluster.id}",
                  "name": "events",
                  "partitions": 4,
                  "replication_factor": 1,
                  "topic_config": [
                    {
                      "cleanup_policy": "CLEANUP_POLICY_COMPACT",
                      "compression_type": "COMPRESSION_TYPE_LZ4",
                      "delete_retention_ms": 86400000,
                      "file_delete_delay_ms": 60000,
                      "flush_messages": 128,
                      "flush_ms": 1000,
                      "max_message_bytes": 1048588,
                      "min_compaction_lag_ms": 0,
                      "min_insync_replicas": 1,
                      "retention_bytes": 10737418240,
                      "retention_ms": 604800000,
                      "segment_bytes": 268435456
                    }
                  ]
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.my_cluster.id
              dependencies:
                yandex_mdb_kafka_cluster.my_cluster: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
        argumentDocs:
            cleanup_policy: (String) Retention policy to use on log segments.
            cluster_id: (String) The ID of the Kafka cluster.
            compression_type: (String) Compression type of kafka topic.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            delete_retention_ms: (String) The amount of time to retain delete tombstone markers for log compacted topics.
            file_delete_delay_ms: (String) The time to wait before deleting a file from the filesystem.
            flush_messages: (String) This setting allows specifying an interval at which we will force an fsync of data written to the log.
            flush_ms: (String) This setting allows specifying a time interval at which we will force an fsync of data written to the log.
            id: (String) The ID of this resource.
            max_message_bytes: (String) The largest record batch size allowed by Kafka (after compression if compression is enabled).
            min_compaction_lag_ms: (String) The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.
            min_insync_replicas: (String) When a producer sets acks to "all" (or "-1"), this configuration specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.
            name: (String) The resource name.
            partitions: (Number) The number of the topic's partitions.
            preallocate: (Boolean, Deprecated) True if we should preallocate the file on disk when creating a new log segment.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            replication_factor: (Number) Amount of data copies (replicas) for the topic in the cluster.
            retention_bytes: (String) This configuration controls the maximum size a partition (which consists of log segments) can grow to before we will discard old log segments to free up space if we are using the "delete" retention policy.
            retention_ms: (String) This configuration controls the maximum time we will retain a log before we will discard old log segments to free up space if we are using the "delete" retention policy.
            segment_bytes: (String) This configuration controls the segment file size for the log.
            timeouts: (Block, Optional) (see below for nested schema)
            topic_config: '(Block List, Max: 1) User-defined settings for the topic. For more information, see the official documentation and the Kafka documentation. (see below for nested schema)'
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_mdb_kafka_topic.<resource_name> <cluster_id>:<topic_name>
              terraform import yandex_mdb_kafka_topic.events <cluster_id>:events
    yandex_mdb_kafka_user:
        subCategory: Managed Service for Apache Kafka
        description: Manages a user of a Kafka cluster within Yandex Cloud.
        name: yandex_mdb_kafka_user
        title: yandex_mdb_kafka_user
        examples:
            - name: user_events
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_kafka_cluster.foo.id}",
                  "name": "user-events",
                  "password": "pass1231232332",
                  "permission": [
                    {
                      "allow_hosts": [
                        "host1.db.yandex.net",
                        "host2.db.yandex.net"
                      ],
                      "role": "ACCESS_ROLE_CONSUMER",
                      "topic_name": "events"
                    },
                    {
                      "role": "ACCESS_ROLE_PRODUCER",
                      "topic_name": "events"
                    }
                  ]
                }
              references:
                cluster_id: yandex_mdb_kafka_cluster.foo.id
              dependencies:
                yandex_mdb_kafka_cluster.my_cluster: |-
                    {
                      "config": [
                        {
                          "kafka": [
                            {
                              "resources": [
                                {
                                  "disk_size": 16,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ]
                            }
                          ],
                          "version": "2.8",
                          "zones": [
                            "ru-central1-a"
                          ]
                        }
                      ],
                      "name": "foo",
                      "network_id": "c64vs98keiqc7f24pvkd"
                    }
                yandex_mdb_kafka_topic.events: |-
                    {
                      "cluster_id": "${yandex_mdb_kafka_cluster.my_cluster.id}",
                      "name": "events",
                      "partitions": 4,
                      "replication_factor": 1
                    }
        argumentDocs:
            allow_hosts: (Set of String) Set of hosts, to which this permission grants access to. Only ip-addresses allowed as value of single host.
            cluster_id: (String) The ID of the Kafka cluster.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) The ID of this resource.
            name: (String) The resource name.
            password: (String, Sensitive) The password of the user.
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            role: (String) The role type to grant to the topic.
            timeouts: (Block, Optional) (see below for nested schema)
            topic_name: (String) The name of the topic that the permission grants access to.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_mdb_kafka_user.<resource Name> <resource Id>
              terraform import yandex_mdb_kafka_user.user_events ...
    yandex_mdb_mongodb_cluster:
        subCategory: Managed Service for MongoDB
        description: Manages a MongoDB cluster within Yandex Cloud.
        name: yandex_mdb_mongodb_cluster
        title: yandex_mdb_mongodb_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "cluster_config": [
                    {
                      "version": "4.2"
                    }
                  ],
                  "database": [
                    {
                      "name": "testdb"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone_id": "ru-central1-d"
                    }
                  ],
                  "labels": {
                    "test_key": "test_value"
                  },
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources_mongocfg": [
                    {
                      "disk_size": 14,
                      "disk_type_id": "network-hdd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "resources_mongod": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-hdd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "resources_mongos": [
                    {
                      "disk_size": 14,
                      "disk_type_id": "network-hdd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "user": [
                    {
                      "name": "john",
                      "password": "password",
                      "permission": [
                        {
                          "database_name": "testdb"
                        }
                      ]
                    }
                  ]
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access policy to the MongoDB cluster. (see below for nested schema)'
            assign_public_ip: (Boolean) Should this host have assigned public IP assigned. Can be either true or false.
            audit_authorization_success: (Boolean) Enables the auditing of authorization successes. Can be either true or false. For more information, see the auditAuthorizationSuccess description in the official documentation. Available only in enterprise edition.
            audit_log: '(Block List, Max: 1) A set of audit log settings (see the auditLog option). Available only in enterprise edition. (see below for nested schema)'
            backup_id: (String) Backup ID. The cluster will be created from the specified backup. How to get a list of PostgreSQL backups.
            backup_retain_period_days: (Number) Retain period of automatically created backup in days.
            backup_window_start: '(Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)'
            block_compressor: '(String) Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections. Available compressors are: none, snappy, zlib, zstd. This setting available only on mongod hosts. For more information, see the storage.wiredTiger.collectionConfig.blockCompressor description in the official documentation.'
            cache_size_gb: (Number) Defines the maximum size of the internal cache that WiredTiger will use for all data. For more information, see the storage.wiredTiger.engineConfig.cacheSizeGB description in the official documentation.
            client_certificate: (String) String containing the client certificate used for authenticating MongoDB to the KMIP server. For more information see security.kmip.clientCertificateFile description in the official documentation.
            cluster_config: '(Block List, Min: 1, Max: 1) Configuration of the MongoDB subcluster. (see below for nested schema)'
            cluster_id: (String) The ID of the cluster.
            commit_interval: (Number) The maximum amount of time in milliseconds that the mongod process allows between journal operations. For more information, see the storage.journal.commitIntervalMs description in the official documentation.
            compressors: '(List of String) Specifies the default compressor(s) to use for communication between this mongod or mongos. Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make disabled the only value. For more information, see the net.Compression.Compressors description in the official documentation.'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_lens: (Boolean) Allow access for Yandex DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer.
            database: (Block Set, Deprecated) A database of the MongoDB cluster. (see below for nested schema)
            database_name: (String) The name of the database that the permission grants access to.
            day: '(String) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a MongoDB host, in gigabytes.
            disk_size_autoscaling_mongocfg: '(Block List, Max: 1) Disk size autoscaling settings for mongocfg. (see below for nested schema)'
            disk_size_autoscaling_mongod: '(Block List, Max: 1) Disk size autoscaling settings for mongod. (see below for nested schema)'
            disk_size_autoscaling_mongoinfra: '(Block List, Max: 1) Disk size autoscaling settings for mongoinfra. (see below for nested schema)'
            disk_size_autoscaling_mongos: '(Block List, Max: 1) Disk size autoscaling settings for mongos. (see below for nested schema)'
            disk_size_limit: (Number) Limit of disk size after autoscaling (GiB).
            disk_type_id: (String) Type of the storage of MongoDB hosts. For more information see the official documentation.
            emergency_usage_threshold: (Number) Immediate autoscaling disk usage (percent).
            enable_encryption: (Boolean) Enables the encryption for the WiredTiger storage engine. Can be either true or false. For more information see security.enableEncryption description in the official documentation. Available only in enterprise edition.
            enable_flow_control: (Boolean) Enables the flow control. Can be either true or false. For more information, see the enableFlowControl description in the official documentation.
            enabled: (Boolean) Enable or disable performance diagnostics.
            environment: (String) Deployment environment of the MongoDB cluster. Can be either PRESTABLE or PRODUCTION.
            feature_compatibility_version: (String) Feature compatibility version of MongoDB. If not provided version is taken. Can be either 6.0, 5.0, 4.4 and 4.2.
            filter: (String) Configuration of the audit log filter in JSON format. For more information see auditLog.filter description in the official documentation. Available only in enterprise edition.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            health: (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
            hidden: (Boolean) Should this host be hidden in replicaset. Can be either true of false. For more information see the official documentation.
            host: '(Block List, Min: 1) A host of the MongoDB cluster. (see below for nested schema)'
            host_parameters: '(Block List, Max: 1) The parameters of mongod host in replicaset. (see below for nested schema)'
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
            hours: (Number) The hour at which backup will be started.
            id: (String) The ID of this resource.
            journal: '(Block List, Max: 1) The durability journal to ensure data files remain valid and recoverable. (see below for nested schema)'
            key_identifier: (String) Unique KMIP identifier for an existing key within the KMIP server. For more information see security.kmip.keyIdentifier description in the official documentation.
            kmip: '(Block List, Max: 1) Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP) (see Encryption tutorial ). Requires enable_encryption to be true. The structure is documented below. Available only in enterprise edition. (see below for nested schema)'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_window: '(Block List, Max: 1) Maintenance window settings of the MongoDB cluster. (see below for nested schema)'
            max_incoming_connections: (Number) The maximum number of simultaneous connections that host will accept. For more information, see the net.maxIncomingConnections description in the official documentation.
            min_snapshot_history_window_in_seconds: (Number) The minimum time window in seconds for which the storage engine keeps the snapshot history. For more information, see the minSnapshotHistoryWindowInSeconds description in the official documentation.
            minutes: (Number) The minute at which backup will be started.
            mode: '(String) Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all. For more information, see the operationProfiling.mode description in the official documentation.'
            mongocfg: '(Block List, Max: 1) Configuration of the mongocfg service. (see below for nested schema)'
            mongod: '(Block List, Max: 1) Configuration of the mongod service. (see below for nested schema)'
            mongos: '(Block List, Max: 1) Configuration of the mongos service. (see below for nested schema)'
            name: (String) The resource name.
            net: '(Block List, Max: 1) A set of network settings (see the net option). (see below for nested schema)'
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            operation_profiling: '(Block List, Max: 1) A set of profiling settings (see the operationProfiling option). (see below for nested schema)'
            password: (String, Sensitive) The password of the user.
            performance_diagnostics: '(Block List, Max: 1) Performance diagnostics to the MongoDB cluster. (see below for nested schema)'
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            planned_usage_threshold: (Number) Maintenance window autoscaling disk usage (percent).
            port: '(Number) Port number to use to communicate with the KMIP server. Default: 5696 For more information see security.kmip.port description in the official documentation.'
            prefix_compression: (Boolean) Enables or disables prefix compression for index data. Сan be either true or false. For more information, see the storage.wiredTiger.indexConfig.prefixCompression description in the official documentation.
            priority: (Number) A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see the official documentation.
            resource_preset_id: (String) The ID of the preset for computational resources available to a MongoDB host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Max: 1, Deprecated) (DEPRECATED, use resources_* instead) Resources allocated to hosts of the MongoDB cluster. (see below for nested schema)'
            resources_mongocfg: '(Block List, Max: 1) Resources allocated to mongocfg hosts of the MongoDB cluster. (see below for nested schema)'
            resources_mongod: '(Block List, Max: 1) Resources allocated to mongod hosts of the MongoDB cluster. (see below for nested schema)'
            resources_mongoinfra: '(Block List, Max: 1) Resources allocated to mongoinfra hosts of the MongoDB cluster. (see below for nested schema)'
            resources_mongos: '(Block List, Max: 1) Resources allocated to mongos hosts of the MongoDB cluster. (see below for nested schema)'
            restore: '(Block List, Max: 1) The cluster will be created from the specified backup. (see below for nested schema)'
            role: (String) The role of the cluster (either PRIMARY or SECONDARY).
            roles: (List of String) The roles of the user in this database. For more information see the official documentation.
            runtime_configuration: (Boolean) Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable. For more information see auditLog.runtimeConfiguration description in the official documentation. Available only in enterprise edition.
            secondary_delay_secs: (Number) The number of seconds behind the primary that this replica set member should lag. For more information see the official documentation.
            security: '(Block List, Max: 1) A set of MongoDB Security settings (see the security option). Available only in enterprise edition. (see below for nested schema)'
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            server_ca: (String) Path to CA File. Used for validating secure client connection to KMIP server. For more information see security.kmip.serverCAFile description in the official documentation.
            server_name: (String) Hostname or IP address of the KMIP server to connect to. For more information see security.kmip.serverName description in the official documentation.
            set_parameter: '(Block List, Max: 1) A set of MongoDB Server Parameters (see the setParameter option). (see below for nested schema)'
            shard_name: (String) The name of the shard to which the host belongs. Only for sharded cluster.
            sharded: (Boolean) MongoDB Cluster mode enabled/disabled.
            slow_op_sample_rate: (Number) The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive. For more information, see the operationProfiling.slowOpSampleRate description in the official documentation.
            slow_op_threshold: (Number) The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow. For more information, see the operationProfiling.slowOpThresholdMs description in the official documentation.
            status: (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
            storage: '(Block List, Max: 1) A set of storage settings (see the storage option). (see below for nested schema)'
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            tags: (Map of String) A set of key/value pairs to assign for the replica set member. For more information see the official documentation.
            time: '(String) Timestamp of the moment to which the MongoDB cluster should be restored. (Format: 2006-01-02T15:04:05 - UTC). When not set, current time is used.'
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of Mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user: (Block Set, Deprecated) A user of the MongoDB cluster. (see below for nested schema)
            version: (String) Version of the MongoDB server software. Can be either 4.2, 4.4, 4.4-enterprise, 5.0, 5.0-enterprise, 6.0 and 6.0-enterprise.
            web_sql: (Boolean) Allow access for WebSQL.
            wired_tiger: '(Block List, Max: 1) The WiredTiger engine settings. (see the storage.wiredTiger option). (see below for nested schema)'
            zone_id: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_mdb_mongodb_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_mongodb_cluster.my_cluster ...
    yandex_mdb_mongodb_database:
        subCategory: Managed Service for MongoDB
        description: Manages a MongoDB Database within Yandex Cloud.
        name: yandex_mdb_mongodb_database
        title: yandex_mdb_mongodb_database
        examples:
            - name: my_db
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_mongodb_cluster.my_cluster.id}",
                  "name": "testdb"
                }
              references:
                cluster_id: yandex_mdb_mongodb_cluster.my_cluster.id
              dependencies:
                yandex_mdb_mongodb_cluster.my_cluster: |-
                    {
                      "cluster_config": [
                        {
                          "version": "6.0"
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone_id": "ru-central1-d"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources_mongod": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            cluster_id: (String) The ID of MongoDB Cluster.
            id: (String) The resource identifier.
            name: (String) The name of the database.
        importStatements: []
    yandex_mdb_mongodb_user:
        subCategory: Managed Service for MongoDB
        description: Manages a MongoDB User within Yandex Cloud.
        name: yandex_mdb_mongodb_user
        title: yandex_mdb_mongodb_user
        examples:
            - name: my_user
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_mongodb_cluster.my_cluster.id}",
                  "name": "alice",
                  "password": "password"
                }
              references:
                cluster_id: yandex_mdb_mongodb_cluster.my_cluster.id
              dependencies:
                yandex_mdb_mongodb_cluster.my_cluster: |-
                    {
                      "cluster_config": [
                        {
                          "version": "6.0"
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone_id": "ru-central1-d"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources_mongod": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ]
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            cluster_id: (String) The ID of the cluster to which user belongs to.
            database_name: (String) The name of the database that the permission grants access to.
            id: (String) The resource identifier.
            name: (String) The name of the user.
            password: (String, Sensitive) The password of the user.
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            roles: (Set of String) The roles of the user in this database. For more information see the official documentation.
        importStatements: []
    yandex_mdb_mysql_cluster:
        subCategory: Managed Service for MySQL
        description: Manages a MySQL cluster within Yandex Cloud.
        name: yandex_mdb_mysql_cluster
        title: yandex_mdb_mysql_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "mysql_config": {
                    "default_authentication_plugin": "MYSQL_NATIVE_PASSWORD",
                    "innodb_print_all_deadlocks": true,
                    "max_connections": 100,
                    "sql_mode": "ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
                  },
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "name": "na-2",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-d"
                    },
                    {
                      "name": "nb-1",
                      "replication_source_name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "name": "nb-2",
                      "replication_source_name": "nb-1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "backup_priority": 5,
                      "name": "nb-1",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-d"
                    },
                    {
                      "backup_priority": 10,
                      "name": "nb-2",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "na-1",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "name": "nb-1",
                      "priority": 5,
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-d"
                    },
                    {
                      "name": "nb-2",
                      "priority": 10,
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-b"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.micro"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access policy to the MySQL cluster. (see below for nested schema)'
            allow_regeneration_host: |-
                (Boolean, Deprecated) Deprecated field. You can safely remove this option. There is no need to recreate host if assign_public_ip is changed.
                Regenerate hosts after changing the assign_public_ip parameter.
            assign_public_ip: (Boolean) Sets whether the host should get a public IP address. It can be changed on the fly only when name is set.
            authentication_plugin: '(String) Authentication plugin. Allowed values: MYSQL_NATIVE_PASSWORD, CACHING_SHA2_PASSWORD, SHA256_PASSWORD (for version 5.7 MYSQL_NATIVE_PASSWORD, SHA256_PASSWORD).'
            backup_id: (String) Backup ID. The cluster will be created from the specified backup. How to get a list of MySQL backups.
            backup_priority: (Number) Host backup priority. Value is between 0 and 100, default is 0.
            backup_retain_period_days: (Number) The period in days during which backups are stored.
            backup_window_start: '(Block List, Max: 1) Time to start the daily backup, in the UTC. (see below for nested schema)'
            connection_limits: '(Block List, Max: 1) User''s connection limits. If not specified there will be no changes. Default value is -1. When these parameters are set to -1, backend default values will be actually used. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_lens: (Boolean) Allow access for Yandex DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer.
            database: (Block Set, Deprecated) To manage databases, please switch to using a separate resource type yandex_mdb_mysql_databases. (see below for nested schema)
            database_name: (String) The name of the database that the permission grants access to.
            day: '(String) Day of the week (in DDD format). Allowed values: MON, TUE, WED, THU, FRI, SAT, SUN'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a MySQL host, in gigabytes.
            disk_type_id: (String) Type of the storage of MySQL hosts.
            enabled: (Boolean) Enable performance diagnostics.
            environment: (String) Deployment environment of the MySQL cluster.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            global_permissions: '(Set of String) List user''s global permissions. Allowed permissions: REPLICATION_CLIENT, REPLICATION_SLAVE, PROCESS for clear list use empty list. If the attribute is not specified there will be no changes.'
            health: (String) Aggregated health of the cluster.
            host: '(Block List, Min: 1) A host of the MySQL cluster. (see below for nested schema)'
            host_group_ids: (Set of String)
            hour: (Number) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.
            hours: (Number) The hour at which backup will be started.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_window: '(Block List, Max: 1) Maintenance policy of the MySQL cluster. (see below for nested schema)'
            max_connections_per_hour: (Number) Max connections per hour.
            max_questions_per_hour: (Number) Max questions per hour.
            max_updates_per_hour: (Number) Max updates per hour.
            max_user_connections: (Number) Max user connections.
            minutes: (Number) The minute at which backup will be started.
            mysql_config: (Map of String) MySQL cluster config block.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            password: (String, Sensitive) The password of the user.
            performance_diagnostics: '(Block List, Max: 1) Cluster performance diagnostics settings. YC Documentation. (see below for nested schema)'
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            priority: (Number) Host master promotion priority. Value is between 0 and 100, default is 0.
            replication_source: (String) Host replication source (fqdn), when replication_source is empty then host is in HA group.
            replication_source_name: (String) Host replication source name points to host's name from which this host should replicate. When not set then host in HA group. It works only when name is set.
            resource_preset_id: (String) The ID of the preset for computational resources available to a MySQL host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to hosts of the MySQL cluster. (see below for nested schema)'
            restore: '(Block List, Max: 1) The cluster will be created from the specified backup. (see below for nested schema)'
            roles: '(List of String) List user''s roles in the database. Allowed roles: ALL,ALTER,ALTER_ROUTINE,CREATE,CREATE_ROUTINE,CREATE_TEMPORARY_TABLES, CREATE_VIEW,DELETE,DROP,EVENT,EXECUTE,INDEX,INSERT,LOCK_TABLES,SELECT,SHOW_VIEW,TRIGGER,UPDATE.'
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            sessions_sampling_interval: (Number) Interval (in seconds) for my_stat_activity sampling Acceptable values are 1 to 86400, inclusive.
            statements_sampling_interval: (Number) Interval (in seconds) for my_stat_statements sampling Acceptable values are 1 to 86400, inclusive.
            status: (String) Status of the cluster.
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            time: '(String) Timestamp of the moment to which the MySQL cluster should be restored. (Format: 2006-01-02T15:04:05 - UTC). When not set, current time is used.'
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user: (Block List, Deprecated) To manage users, please switch to using a separate resource type yandex_mdb_mysql_user. (see below for nested schema)
            version: '(String) Version of the MySQL cluster. (allowed versions are: 5.7, 8.0).'
            web_sql: (Boolean) Allows access for SQL queries in the management console.
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_mdb_mysql_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_mysql_cluster.my_cluster ...
    yandex_mdb_mysql_cluster_v2:
        subCategory: Managed Service for MySQL
        description: Manages a MySQL cluster within the Yandex Cloud. For more information, see the official documentation https://cloud.yandex.com/docs/managed-mysql/. How to connect to the DB https://yandex.cloud/docs/managed-mysql/quickstart#connect. To connect, use port 6432. The port number is not configurable.
        name: yandex_mdb_mysql_cluster_v2
        title: yandex_mdb_mysql_cluster_v2
        examples:
            - name: cluster
              manifest: |-
                {
                  "access": {
                    "data_lens": true,
                    "data_transfer": true,
                    "web_sql": true
                  },
                  "backup_retain_period_days": 8,
                  "backup_window_start": {
                    "hours": 5,
                    "minutes": 5
                  },
                  "deletion_protection": true,
                  "description": "MySQL Test Cluster",
                  "environment": "PRODUCTION",
                  "hosts": {
                    "host": {
                      "assign_public_ip": false,
                      "subnet_id": "${yandex_vpc_subnet.mdb-pg-test-subnet-a.id}",
                      "zone": "ru-central1-a"
                    }
                  },
                  "labels": {
                    "key1": "value1",
                    "key2": "value2",
                    "key3": "value3"
                  },
                  "maintenance_window": {
                    "day": "MON",
                    "hour": 3,
                    "type": "WEEKLY"
                  },
                  "name": "mysql-cluster",
                  "network_id": "${yandex_vpc_network.mdb-pg-test-net.id}",
                  "performance_diagnostics": {
                    "sessions_sampling_interval": 60,
                    "statements_sampling_interval": 600
                  },
                  "resources": [
                    {
                      "disk_size": 10,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "b1.medium"
                    }
                  ],
                  "version": "8.0"
                }
              references:
                network_id: yandex_vpc_network.mdb-pg-test-net.id
              dependencies:
                yandex_vpc_network.test-net: '{}'
                yandex_vpc_security_group.test-sgroup: |-
                    {
                      "description": "Test security group",
                      "network_id": "${yandex_vpc_network.mdb-pg-test-net.id}"
                    }
                yandex_vpc_subnet.test-subnet: |-
                    {
                      "network_id": "${yandex_vpc_network.mdb-pg-test-net.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: (Attributes) Access policy to the MySQL cluster. (see below for nested schema)
            assign_public_ip: (Boolean) Assign a public IP address to the host.
            backup_retain_period_days: (Number) The period in days during which backups are stored.
            backup_window_start: (Attributes) Time to start the daily backup, in the UTC timezone. (see below for nested schema)
            data_lens: (Boolean) Allow access for Yandex DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer
            day: '(String) Day of the week (in DDD format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT","SUN"'
            deletion_protection: (Boolean) Inhibits deletion of the cluster. Can be either true or false.
            description: (String) Description of the MySQL cluster.
            disk_size: (Number) Size of the disk in bytes.
            disk_type_id: (String) ID of the disk type that determines the disk performance characteristics.
            enabled: (Boolean) Enable performance diagnostics
            environment: (String) Deployment environment of the MySQL cluster.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            hosts: (Attributes Map) A host configuration of the MySQL cluster. (see below for nested schema)
            hour: (Number) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.
            hours: (Number) The hour at which backup will be started (UTC).
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_window: (Attributes) Maintenance policy of the MySQL cluster. (see below for nested schema)
            minutes: (Number) The minute at which backup will be started (UTC).
            mysql_config: (Map of String) MySQL cluster config.
            name: (String) Name of the MySQL cluster. Provided by the client when the cluster is created.
            network_id: (String) ID of the network that the cluster belongs to.
            performance_diagnostics: (Attributes) Cluster performance diagnostics settings. The structure is documented below. (see below for nested schema)
            replication_source: (String) FQDN of the host that is used as a replication source.
            resource_preset_id: (String) ID of the resource preset that determines the number of CPU cores and memory size for the host.
            resources: (Block, Optional) Resources allocated to hosts of the MySQL cluster. (see below for nested schema)
            security_group_ids: (Set of String) A set of ids of security groups assigned to hosts of the cluster.
            sessions_sampling_interval: (Number) Interval (in seconds) for pg_stat_activity sampling Acceptable values are 1 to 86400, inclusive.
            statements_sampling_interval: (Number) Interval (in seconds) for pg_stat_statements sampling Acceptable values are 60 to 86400, inclusive.
            subnet_id: (String) ID of the subnet where the host is located.
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.
            version: (String) Version of the MySQL cluster.
            web_sql: (Boolean) Allow access for SQL queries in the management console
            zone: (String) The availability zone where the host is located.
        importStatements: []
    yandex_mdb_mysql_database:
        subCategory: Managed Service for MySQL
        description: Manages a MySQL database within Yandex Cloud.
        name: yandex_mdb_mysql_database
        title: yandex_mdb_mysql_database
        examples:
            - name: my_db
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_mysql_cluster.my_cluster.id}",
                  "name": "testdb"
                }
              references:
                cluster_id: yandex_mdb_mysql_cluster.my_cluster.id
              dependencies:
                yandex_mdb_mysql_cluster.my_cluster: |-
                    {
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-d"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": "8.0"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            cluster_id: (String) The MySQL cluster ID.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) The ID of this resource.
            name: (String) The name of the database.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_mdb_mysql_database.<resource Name> "<cluster Id>:<database Name>"
              terraform import yandex_mdb_mysql_database.my_db ...
    yandex_mdb_mysql_user:
        subCategory: Managed Service for MySQL
        description: Manages a MySQL user within Yandex Cloud.
        name: yandex_mdb_mysql_user
        title: yandex_mdb_mysql_user
        examples:
            - name: my_user
              manifest: |-
                {
                  "authentication_plugin": "SHA256_PASSWORD",
                  "cluster_id": "${yandex_mdb_mysql_cluster.my_cluster.id}",
                  "connection_limits": [
                    {
                      "max_connections_per_hour": 30,
                      "max_questions_per_hour": 10,
                      "max_updates_per_hour": 20,
                      "max_user_connections": 40
                    }
                  ],
                  "global_permissions": [
                    "PROCESS"
                  ],
                  "name": "john",
                  "password": "password",
                  "permission": [
                    {
                      "database_name": "${yandex_mdb_mysql_database.testdb.name}",
                      "roles": [
                        "ALL"
                      ]
                    },
                    {
                      "database_name": "${yandex_mdb_mysql_database.new_testdb.name}",
                      "roles": [
                        "ALL",
                        "INSERT"
                      ]
                    }
                  ]
                }
              references:
                cluster_id: yandex_mdb_mysql_cluster.my_cluster.id
                permission.database_name: yandex_mdb_mysql_database.new_testdb.name
              dependencies:
                yandex_mdb_mysql_cluster.my_cluster: |-
                    {
                      "config": [
                        {
                          "resources": [
                            {
                              "disk_size": 16,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ],
                          "version": 14
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-d"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            authentication_plugin: '(String) Authentication plugin. Allowed values: MYSQL_NATIVE_PASSWORD, CACHING_SHA2_PASSWORD, SHA256_PASSWORD (for version 5.7 MYSQL_NATIVE_PASSWORD, SHA256_PASSWORD)'
            cluster_id: (String) The ID of the MySQL cluster.
            connection_limits: '(Block List, Max: 1) User''s connection limits. If the attribute is not specified there will be no changes. Default value is -1. When these parameters are set to -1, backend default values will be actually used. (see below for nested schema)'
            connection_manager: (Map of String) Connection Manager connection configuration. Filled in by the server automatically.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            database_name: (String) The name of the database that the permission grants access to.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            generate_password: '(Boolean) Generate password using Connection Manager. Allowed values: true or false. It''s used only during user creation and is ignored during updating.'
            global_permissions: '(Set of String) List user''s global permissions. Allowed permissions: REPLICATION_CLIENT, REPLICATION_SLAVE, PROCESS for clear list use empty list. If the attribute is not specified there will be no changes.'
            id: (String) The ID of this resource.
            max_connections_per_hour: (Number) Max connections per hour.
            max_questions_per_hour: (Number) Max questions per hour.
            max_updates_per_hour: (Number) Max updates per hour.
            max_user_connections: (Number) Max user connections.
            name: (String) The name of the user.
            password: (String, Sensitive) The password of the user.
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            roles: '(List of String) List user''s roles in the database. Allowed roles: ALL,ALTER,ALTER_ROUTINE,CREATE,CREATE_ROUTINE,CREATE_TEMPORARY_TABLES, CREATE_VIEW,DELETE,DROP,EVENT,EXECUTE,INDEX,INSERT,LOCK_TABLES,SELECT,SHOW_VIEW,TRIGGER,UPDATE.'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_mdb_mysql_user.<resource Name> <resource Id>
              terraform import yandex_mdb_mysql_user.my_user ...
    yandex_mdb_opensearch_cluster:
        subCategory: Managed Service for OpenSearch
        description: Manages a OpenSearch cluster within Yandex Cloud.
        name: yandex_mdb_opensearch_cluster
        title: yandex_mdb_opensearch_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "admin_password": "super-password",
                      "opensearch": [
                        {
                          "node_groups": [
                            {
                              "assign_public_ip": true,
                              "hosts_count": 1,
                              "name": "group0",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "roles": [
                                "data",
                                "manager"
                              ],
                              "subnet_ids": [
                                "${yandex_vpc_subnet.foo.id}"
                              ],
                              "zone_ids": [
                                "ru-central1-d"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "environment": "PRESTABLE",
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "auth_settings": {
                    "saml": {
                      "dashboards_url": "https://dashboards.example.com",
                      "idp_entity_id": "urn:dev.auth0.example.com",
                      "idp_metadata_file_content": "\u003cEntityDescriptor entityID=\"https://test_identity_provider.example.com\"\u003e\u003c/EntityDescriptor\u003e",
                      "sp_entity_id": "https://test.example.com"
                    }
                  },
                  "config": [
                    {
                      "admin_password": "super-password",
                      "dashboards": [
                        {
                          "node_groups": [
                            {
                              "assign_public_ip": true,
                              "hosts_count": 1,
                              "name": "dashboards",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "zone_ids": "${local.zones}"
                            }
                          ]
                        }
                      ],
                      "opensearch": [
                        {
                          "node_groups": [
                            {
                              "assign_public_ip": true,
                              "hosts_count": 2,
                              "name": "hot_group0",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.small"
                                }
                              ],
                              "roles": [
                                "data"
                              ],
                              "zone_ids": "${local.zones}"
                            },
                            {
                              "assign_public_ip": true,
                              "hosts_count": 2,
                              "name": "cold_group0",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-hdd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "roles": [
                                "data"
                              ],
                              "zone_ids": "${local.zones}"
                            },
                            {
                              "assign_public_ip": true,
                              "hosts_count": 3,
                              "name": "managers_group",
                              "resources": [
                                {
                                  "disk_size": 10737418240,
                                  "disk_type_id": "network-ssd",
                                  "resource_preset_id": "s2.micro"
                                }
                              ],
                              "roles": [
                                "manager"
                              ],
                              "zone_ids": "${local.zones}"
                            }
                          ],
                          "plugins": [
                            "analysis-icu"
                          ]
                        }
                      ]
                    }
                  ],
                  "depends_on": [
                    "${yandex_vpc_subnet.es-subnet-a}",
                    "${yandex_vpc_subnet.es-subnet-b}",
                    "${yandex_vpc_subnet.es-subnet-d}"
                  ],
                  "environment": "PRODUCTION",
                  "name": "my-cluster",
                  "network_id": "${yandex_vpc_network.es-net.id}"
                }
              references:
                config.dashboards.node_groups.zone_ids: local.zones
                config.opensearch.node_groups.zone_ids: local.zones
                network_id: yandex_vpc_network.es-net.id
              dependencies:
                yandex_vpc_network.es-net: '{}'
                yandex_vpc_subnet.es-subnet-a: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
                yandex_vpc_subnet.es-subnet-b: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.es-subnet-d: |-
                    {
                      "network_id": "${yandex_vpc_network.es-net.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            access: (Block, Optional) Enable access to the Yandex Cloud services. (see below for nested schema)
            admin_password: (String, Sensitive) Password for admin user of OpenSearch.
            assign_public_ip: (Boolean) Sets whether the hosts should get a public IP address.
            auth_settings: (Attributes) Authentication settings for Dashboards. (see below for nested schema)
            cluster_id: (String) The ID of the OpenSearch cluster that the resource belongs to.
            config: (Block, Optional) Configuration of the OpenSearch cluster. (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            dashboards: (Block, Optional) Configuration for Dashboards node groups. (see below for nested schema)
            dashboards_url: (String) Dashboards URL.
            data_transfer: (Boolean) Enable access to the Data Transfer service.
            day: (String)
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a host, in bytes.
            disk_type_id: (String) Type of the storage of OpenSearch hosts.
            enabled: (Boolean) Enables SAML authentication.
            environment: '(String) Deployment environment of the OpenSearch cluster. Can be either PRESTABLE or PRODUCTION. Default: PRODUCTION. It is not possible to change this value after cluster creation.'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            health: (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
            hosts: (Attributes List) A hosts of the OpenSearch cluster. (see below for nested schema)
            hosts_count: (Number) Number of hosts in this node group.
            hour: (Number)
            id: (String) The resource identifier.
            idp_entity_id: (String) ID of the SAML Identity Provider.
            idp_metadata_file_content: (String) Metadata file content of the SAML Identity Provider. You can either put file content manually or use file function
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_window: (Block, Optional) (see below for nested schema)
            name: (String) Name of the OpenSearch cluster. The name must be unique within the folder.
            network_id: (String) ID of the network, to which the OpenSearch cluster belongs. It is not possible to change this value after cluster creation.
            node_group: (String) Name of the node group.
            node_groups: (Block List) (see below for nested schema)
            opensearch: (Block, Optional) Configuration for OpenSearch node groups. (see below for nested schema)
            plugins: (Set of String) A set of requested OpenSearch plugins.
            resource_preset_id: (String) The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see the official documentation.
            resources: (Block, Optional) Resources allocated to hosts of this OpenSearch node group. (see below for nested schema)
            roles: '(Set of String) A set of OpenSearch roles assigned to hosts. Available roles are: DATA, MANAGER. Default: [DATA, MANAGER].'
            roles_key: (String) Roles key.
            saml: (Attributes) SAML authentication options. (see below for nested schema)
            security_group_ids: (Set of String) A set of security groups IDs which assigned to hosts of the cluster.
            serverless: (Boolean) Enable access to the Cloud Functions service.
            service_account_id: (String) ID of the service account authorized for this cluster.
            sp_entity_id: (String) Service provider entity ID.
            status: (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
            subject_key: (String) Subject key.
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            subnet_ids: (List of String) A set of the subnets, to which the hosts belongs. The subnets must be a part of the network to which the cluster belongs.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            version: (String) Version of OpenSearch.
            zone: (String) The availability zone where the OpenSearch host will be created. For more information see the official documentation.
            zone_ids: (Set of String) A set of availability zones where hosts of node group may be allocated.
        importStatements: []
    yandex_mdb_postgresql_cluster:
        subCategory: Managed Service for PostgreSQL
        description: Manages a PostgreSQL cluster within Yandex Cloud.
        name: yandex_mdb_postgresql_cluster
        title: yandex_mdb_postgresql_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "postgresql_config": {
                        "autovacuum_vacuum_scale_factor": 0.34,
                        "default_transaction_isolation": "TRANSACTION_ISOLATION_READ_COMMITTED",
                        "enable_parallel_hash": true,
                        "max_connections": 395,
                        "shared_preload_libraries": "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"
                      },
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "ha",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.bar.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "resources": [
                        {
                          "disk_size": 10,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "description": "test High-Availability (HA) PostgreSQL Cluster",
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "name": "host_name_a",
                      "subnet_id": "${yandex_vpc_subnet.a.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "name": "host_name_b",
                      "replication_source_name": "host_name_d",
                      "subnet_id": "${yandex_vpc_subnet.b.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "name": "host_name_d",
                      "subnet_id": "${yandex_vpc_subnet.d.id}",
                      "zone": "ru-central1-d"
                    },
                    {
                      "name": "host_name_d_2",
                      "subnet_id": "${yandex_vpc_subnet.d.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "name": "test_ha",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.d.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.a: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
                yandex_vpc_subnet.b: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.d: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "postgresql_config": {
                        "autovacuum_vacuum_scale_factor": 0.34,
                        "default_transaction_isolation": "TRANSACTION_ISOLATION_READ_COMMITTED",
                        "enable_parallel_hash": true,
                        "max_connections": 395,
                        "shared_preload_libraries": "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"
                      },
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 15
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "restore": [
                    {
                      "backup_id": "c9q99999999999999994cm:base_000000010000005F000000B4",
                      "time": "2021-02-11T15:04:05"
                    }
                  ]
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access policy to the PostgreSQL cluster. (see below for nested schema)'
            assign_public_ip: (Boolean) Sets whether the host should get a public IP address on creation. It can be changed on the fly only when name is set.
            autofailover: (Boolean) Configuration setting which enables/disables autofailover in cluster.
            backup_id: (String) Backup ID. The cluster will be created from the specified backup. How to get a list of PostgreSQL backups.
            backup_retain_period_days: (Number) The period in days during which backups are stored.
            backup_window_start: '(Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)'
            catchup_timeout: '- The connection pooler setting. It determines the maximum allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold. Default value is 0, which disables this feature. Integer.'
            config: '(Block List, Min: 1, Max: 1) Configuration of the PostgreSQL cluster. (see below for nested schema)'
            conn_limit: (Number) The maximum number of connections per user. (Default 50).
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_lens: (Boolean) Allow access for Yandex DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer.
            database: (Block List, Deprecated) ~> Deprecated! To manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database. (see below for nested schema)
            database_name: (String) The name of the database that the permission grants access to.
            day: '(String) Day of the week (in DDD format). Allowed values: MON, TUE, WED, THU, FRI, SAT, SUN'
            default_transaction_isolation: '- defines the default isolation level to be set for all new SQL transactions. One of:  - 0: unspecified'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a PostgreSQL host, in gigabytes.
            disk_size_autoscaling: '(Block List, Max: 1) Cluster disk size autoscaling settings. (see below for nested schema)'
            disk_size_limit: (Number) Limit of disk size after autoscaling (GiB).
            disk_type_id: (String) Type of the storage of PostgreSQL hosts.
            emergency_usage_threshold: (Number) Immediate autoscaling disk usage (percent).
            enabled: (Boolean) Enable performance diagnostics.
            environment: (String) Deployment environment of the PostgreSQL cluster.
            extension: (Block Set) Set of database extensions. (see below for nested schema)
            "false": (default) — the restore point refers to the first backup moment before [time].
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            grants: (List of String) List of the user's grants.
            health: (String) Aggregated health of the cluster.
            host: '(Block List, Min: 1) A host of the PostgreSQL cluster. (see below for nested schema)'
            host_group_ids: (Set of String) Host Group IDs.
            host_master_name: (String, Deprecated) Deprecated field. Will be removed in future versions.
            hour: (Number) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.
            hours: (Number) The hour at which backup will be started (UTC).
            id: (String) The ID of this resource.
            idle_in_transaction_session_timeout: '- Sets the maximum allowed idle time (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer.'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            lc_collate: (String) POSIX locale for string sorting order. Forbidden to change in an existing database.
            lc_type: (String) POSIX locale for character classification. Forbidden to change in an existing database.
            lock_timeout: '- The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object (default 0)'
            log_min_duration_statement: '- This setting controls logging of the duration of statements. (default -1 disables logging of the duration of statements.)'
            log_statement: '- This setting specifies which SQL statements should be logged (on the user level). One of:'
            login: (Boolean) User's ability to login.
            maintenance_window: '(Block List, Max: 1) Maintenance policy of the PostgreSQL cluster. (see below for nested schema)'
            minutes: (Number) The hour at which backup will be started (UTC).
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            owner: (String) Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
            password: (String, Sensitive) The password of the user.
            performance_diagnostics: '(Block List, Max: 1) Cluster performance diagnostics settings. YC Documentation. (see below for nested schema)'
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            planned_usage_threshold: (Number) Maintenance window autoscaling disk usage (percent).
            pool_discard: (Boolean) Setting pool_discard parameter in Odyssey.
            pool_mode: '- Mode that the connection pooler is working in with specified user. One of:'
            pooler_config: '(Block List, Max: 1) Configuration of the connection pooler. (see below for nested schema)'
            pooling_mode: (String) Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
            postgresql_config: (Map of String) PostgreSQL cluster configuration. For detailed information specific to your PostgreSQL version, please refer to the API proto specifications.
            prepared_statements_pooling: '- This setting allows user to use prepared statements with transaction pooling. Boolean.'
            priority: (Number, Deprecated) Host priority in HA group. It works only when name is set.
            replication_source: (String) Host replication source (fqdn), when replication_source is empty then host is in HA group.
            replication_source_name: (String) Host replication source name points to host's name from which this host should replicate. When not set then host in HA group. It works only when name is set.
            resource_preset_id: (String) The ID of the preset for computational resources available to a PostgreSQL host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to hosts of the PostgreSQL cluster. (see below for nested schema)'
            restore: '(Block List, Max: 1) The cluster will be created from the specified backup. (see below for nested schema)'
            role: (String) Host's role (replica|primary), computed by server.
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            serverless: (Boolean) Allow access for connection to managed databases from functions.
            sessions_sampling_interval: (Number) Interval (in seconds) for pg_stat_activity sampling Acceptable values are 1 to 86400, inclusive.
            settings: (Map of String) Map of user settings. Full description.
            statement_timeout: '- The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the timeout. Integer'
            statements_sampling_interval: (Number) Interval (in seconds) for pg_stat_statements sampling Acceptable values are 1 to 86400, inclusive.
            status: (String) Status of the cluster.
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            synchronous_commit: '- This setting defines whether DBMS will commit transaction in a synchronous way. One of:'
            temp_file_limit: '- The maximum storage space size (in kilobytes) that a single process can use to create temporary files.'
            template_db: (String) Name of the template database.
            time: '(String) Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: 2006-01-02T15:04:05 - UTC). When not set, current time is used.'
            time_inclusive: '(Boolean) Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before. Possible values:'
            timeouts: (Block, Optional) (see below for nested schema)
            "true": — the restore point refers to the first backup point after [time].
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user: (Block List, Deprecated) ~> Deprecated! To manage users, please switch to using a separate resource type yandex_mdb_postgresql_user. (see below for nested schema)
            version: '(String) Version of the PostgreSQL cluster. (allowed versions are: 10, 10-1c, 11, 11-1c, 12, 12-1c, 13, 13-1c, 14, 14-1c, 15, 15-1c, 16, 17).'
            wal_sender_timeout: '- The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for longer than this amount of time. Integer.'
            web_sql: (Boolean) Allow access for SQL queries in the management console.
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_mdb_postgresql_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_postgresql_cluster.my_cluster ...
    yandex_mdb_postgresql_cluster_v2:
        subCategory: Managed Service for PostgreSQL
        description: Manages a PostgreSQL cluster within Yandex Cloud.
        name: yandex_mdb_postgresql_cluster_v2
        title: yandex_mdb_postgresql_cluster_v2
        examples:
            - name: my_v2_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "postgresql_config": {
                        "autovacuum_vacuum_scale_factor": 0.34,
                        "default_transaction_isolation": "TRANSACTION_ISOLATION_READ_COMMITTED",
                        "enable_parallel_hash": true,
                        "max_connections": 395,
                        "shared_preload_libraries": "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"
                      },
                      "resources": [
                        {
                          "disk_size": 16,
                          "disk_type_id": "network-ssd",
                          "resource_preset_id": "s2.micro"
                        }
                      ],
                      "version": 17
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "day": "SAT",
                      "hour": 12,
                      "type": "WEEKLY"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            access: (Attributes) Access policy to the PostgreSQL cluster. (see below for nested schema)
            assign_public_ip: (Boolean) Assign a public IP address to the host.
            autofailover: (Boolean) Configuration setting which enables/disables automatic failover in the cluster.
            backup_retain_period_days: (Number) The period in days during which backups are stored.
            backup_window_start: (Attributes) Time to start the daily backup, in the UTC timezone. (see below for nested schema)
            config: (Block, Optional) Configuration of the PostgreSQL cluster. (see below for nested schema)
            data_lens: (Boolean) Allow access for Yandex DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer
            day: '(String) Day of the week (in DDD format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT","SUN"'
            deletion_protection: (Boolean) Inhibits deletion of the cluster. Can be either true or false.
            description: (String) Description of the PostgreSQL cluster.
            disk_size: (Number) Size of the disk in bytes.
            disk_size_autoscaling: (Attributes) Cluster disk size autoscaling settings. (see below for nested schema)
            disk_size_limit: (Number) Limit of disk size after autoscaling, GiB.
            disk_type_id: (String) ID of the disk type that determines the disk performance characteristics.
            emergency_usage_threshold: (Number) Threshold for an immediate increase, in percent.
            enabled: (Boolean) Enable performance diagnostics
            environment: (String) Deployment environment of the PostgreSQL cluster.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            hosts: (Attributes Map) A host configuration of the PostgreSQL cluster. (see below for nested schema)
            hour: (Number) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.
            hours: (Number) The hour at which backup will be started (UTC).
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_window: (Attributes) Maintenance policy of the PostgreSQL cluster. (see below for nested schema)
            minutes: (Number) The minute at which backup will be started (UTC).
            name: (String) Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
            network_id: (String) ID of the network that the cluster belongs to.
            performance_diagnostics: (Attributes) Cluster performance diagnostics settings. The structure is documented below. (see below for nested schema)
            planned_usage_threshold: (Number) Threshold for planned increase, in percent.
            pool_discard: (Boolean) Setting pool_discard parameter in Odyssey.
            pooler_config: (Attributes) Configuration of the connection pooler. (see below for nested schema)
            pooling_mode: (String) Mode that the connection pooler is working in. See descriptions of all modes in the documentation for Odyssey
            postgresql_config: (Map of String) PostgreSQL cluster configuration. For detailed information specific to your PostgreSQL version, please refer to the API proto specifications.
            replication_source: (String) FQDN of the host that is used as a replication source.
            resource_preset_id: (String) ID of the resource preset that determines the number of CPU cores and memory size for the host.
            resources: (Block, Optional) Resources allocated to hosts of the PostgreSQL cluster. (see below for nested schema)
            security_group_ids: (Set of String) A set of ids of security groups assigned to hosts of the cluster.
            serverless: (Boolean) Allow access for connection to managed databases from functions
            sessions_sampling_interval: (Number) Interval (in seconds) for pg_stat_activity sampling Acceptable values are 1 to 86400, inclusive.
            statements_sampling_interval: (Number) Interval (in seconds) for pg_stat_statements sampling Acceptable values are 60 to 86400, inclusive.
            subnet_id: (String) ID of the subnet where the host is located.
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.
            version: (String) Version of the PostgreSQL cluster.
            web_sql: (Boolean) Allow access for SQL queries in the management console
            zone: (String) The availability zone where the host is located.
        importStatements: []
    yandex_mdb_postgresql_database:
        subCategory: Managed Service for PostgreSQL
        description: Manages a PostgreSQL database within Yandex Cloud.
        name: yandex_mdb_postgresql_database
        title: yandex_mdb_postgresql_database
        examples:
            - name: my_db
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_postgresql_cluster.my_cluster.id}",
                  "extension": [
                    {
                      "name": "uuid-ossp"
                    },
                    {
                      "name": "xml2"
                    }
                  ],
                  "lc_collate": "en_US.UTF-8",
                  "lc_type": "en_US.UTF-8",
                  "name": "testdb",
                  "owner": "${yandex_mdb_postgresql_user.my_user.name}"
                }
              references:
                cluster_id: yandex_mdb_postgresql_cluster.my_cluster.id
                owner: yandex_mdb_postgresql_user.my_user.name
              dependencies:
                yandex_mdb_postgresql_cluster.my_cluster: |-
                    {
                      "config": [
                        {
                          "resources": [
                            {
                              "disk_size": 16,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ],
                          "version": 15
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-d"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_mdb_postgresql_user.my_user: |-
                    {
                      "cluster_id": "${yandex_mdb_postgresql_cluster.my_cluster.id}",
                      "name": "alice",
                      "password": "password"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            cluster_id: (String) The ID of the PostgreSQL cluster.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (String) The true value means that resource is protected from accidental deletion.
            extension: (Block Set) Set of database extensions. (see below for nested schema)
            id: (String) The ID of this resource.
            lc_collate: (String) POSIX locale for string sorting order. Forbidden to change in an existing database.
            lc_type: (String) POSIX locale for character classification. Forbidden to change in an existing database.
            name: (String) The resource name.
            owner: (String) Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            template_db: (String) Name of the template database.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_mdb_postgresql_database.<resource Name> <resource Id>
              terraform import yandex_mdb_postgresql_database.my_db ...
    yandex_mdb_postgresql_user:
        subCategory: Managed Service for PostgreSQL
        description: Manages a PostgreSQL user within Yandex Cloud.
        name: yandex_mdb_postgresql_user
        title: yandex_mdb_postgresql_user
        examples:
            - name: my_user
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_postgresql_cluster.my_cluster.id}",
                  "conn_limit": 50,
                  "name": "alice",
                  "password": "password",
                  "settings": {
                    "default_transaction_isolation": "read committed",
                    "log_min_duration_statement": 5000
                  }
                }
              references:
                cluster_id: yandex_mdb_postgresql_cluster.my_cluster.id
              dependencies:
                yandex_mdb_postgresql_cluster.my_cluster: |-
                    {
                      "config": [
                        {
                          "resources": [
                            {
                              "disk_size": 16,
                              "disk_type_id": "network-ssd",
                              "resource_preset_id": "s2.micro"
                            }
                          ],
                          "version": 15
                        }
                      ],
                      "environment": "PRESTABLE",
                      "host": [
                        {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-d"
                        }
                      ],
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
        argumentDocs:
            catchup_timeout: '- The connection pooler setting. It determines the maximum allowed replication lag (in seconds). Pooler will reject connections to the replica with a lag above this threshold. Default value is 0, which disables this feature. Integer.'
            cluster_id: (String) The ID of the PostgreSQL cluster.
            conn_limit: (Number) The maximum number of connections per user. (Default 50).
            connection_manager: (Map of String) Connection Manager connection configuration. Filled in by the server automatically.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            database_name: (String) The name of the database that the permission grants access to.
            default_transaction_isolation: '- defines the default isolation level to be set for all new SQL transactions. One of:  - 0: unspecified'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (String) The true value means that resource is protected from accidental deletion.
            generate_password: '(Boolean) Generate password using Connection Manager. Allowed values: true or false. It''s used only during user creation and is ignored during updating.'
            grants: (List of String) List of the user's grants.
            id: (String) The ID of this resource.
            idle_in_transaction_session_timeout: '- Sets the maximum allowed idle time (in milliseconds) between queries, when in a transaction. Value of 0 (default) disables the timeout. Integer.'
            lock_timeout: '- The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object (default 0)'
            log_min_duration_statement: '- This setting controls logging of the duration of statements. (default -1 disables logging of the duration of statements.)'
            log_statement: '- This setting specifies which SQL statements should be logged (on the user level). One of:'
            login: (Boolean) User's ability to login.
            name: (String) The name of the user.
            password: (String, Sensitive) The password of the user.
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            pool_mode: '- Mode that the connection pooler is working in with specified user. One of:'
            prepared_statements_pooling: '- This setting allows user to use prepared statements with transaction pooling. Boolean.'
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            settings: (Map of String) Map of user settings. Full description.
            statement_timeout: '- The maximum time (in milliseconds) to wait for statement. Value of 0 (default) disables the timeout. Integer'
            synchronous_commit: '- This setting defines whether DBMS will commit transaction in a synchronous way. One of:'
            temp_file_limit: '- The maximum storage space size (in kilobytes) that a single process can use to create temporary files.'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            wal_sender_timeout: '- The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+). Terminate replication connections that are inactive for longer than this amount of time. Integer.'
        importStatements:
            - |-
              # terraform import yandex_mdb_postgresql_user.<resource Name> <resource Id>
              terraform import yandex_mdb_postgresql_user.my_user ...
    yandex_mdb_redis_cluster:
        subCategory: Managed Service for Redis
        description: Manages a Redis cluster within Yandex Cloud.
        name: yandex_mdb_redis_cluster
        title: yandex_mdb_redis_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "config": [
                    {
                      "password": "your_password",
                      "version": "6.2"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "maintenance_window": [
                    {
                      "type": "ANYTIME"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "resource_preset_id": "hm1.nano"
                    }
                  ]
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
            - name: foo
              manifest: |-
                {
                  "config": [
                    {
                      "password": "your_password",
                      "version": "6.2"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "shard_name": "first",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    {
                      "shard_name": "second",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    },
                    {
                      "shard_name": "third",
                      "subnet_id": "${yandex_vpc_subnet.baz.id}",
                      "zone": "ru-central1-d"
                    }
                  ],
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 16,
                      "resource_preset_id": "hm1.nano"
                    }
                  ],
                  "sharded": true
                }
              references:
                host.subnet_id: yandex_vpc_subnet.baz.id
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-d"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: '(Block List, Max: 1) Access policy to the Redis cluster. (see below for nested schema)'
            allow_data_loss: (Boolean) Allows some data to be lost in favor of faster switchover/restart by RDSync.
            announce_hostnames: (Boolean) Announce fqdn instead of ip address.
            assign_public_ip: (Boolean) Sets whether the host should get a public IP address or not.
            auth_sentinel: (Boolean) Allows to use ACL users to auth in sentinel
            backup_window_start: '(Block List, Max: 1) Time to start the daily backup, in the UTC timezone. (see below for nested schema)'
            client_output_buffer_limit_normal: (String) Normal clients output buffer limits. See redis config file.
            client_output_buffer_limit_pubsub: (String) Pubsub clients output buffer limits. See redis config file.
            cluster_allow_pubsubshard_when_down: (Boolean) Permits Pub/Sub shard operations when cluster is down.
            cluster_allow_reads_when_down: (Boolean) Allows read operations when cluster is down.
            cluster_require_full_coverage: (Boolean) Controls whether all hash slots must be covered by nodes.
            config: '(Block List, Min: 1, Max: 1) Configuration of the Redis cluster. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data_lens: (Boolean) Allow access for DataLens. Can be either true or false.
            databases: (Number) Number of databases (changing requires redis-server restart).
            day: '(String) Day of week for maintenance window if window type is weekly. Possible values: MON, TUE, WED, THU, FRI, SAT, SUN.'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a host, in gigabytes.
            disk_size_autoscaling: '(Block List, Max: 1) Disk size autoscaling settings. (see below for nested schema)'
            disk_size_limit: (Number) Limit of disk size after autoscaling (GiB).
            disk_type_id: (String) Type of the storage of Redis hosts - environment default is used if missing.
            emergency_usage_threshold: (Number) Immediate autoscaling disk usage (percent).
            environment: (String) Deployment environment of the Redis cluster. Can be either PRESTABLE or PRODUCTION.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            health: (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN. For more information see health field of JSON representation in the official documentation.
            host: '(Block List, Min: 1) A host of the Redis cluster. (see below for nested schema)'
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
            hours: (Number) The hour at which backup will be started.
            id: (String) The ID of this resource.
            io_threads_allowed: (Boolean) Allow Redis to use io-threads.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            lfu_decay_time: (Number) The time, in minutes, that must elapse in order for the key counter to be divided by two (or decremented if it has a value less <= 10).
            lfu_log_factor: (Number) Determines how the frequency counter represents key hits.
            lua_time_limit: (Number) Maximum time in milliseconds for Lua scripts.
            maintenance_window: '(Block List, Max: 1) Maintenance window settings. (see below for nested schema)'
            maxmemory_percent: (Number) Redis maxmemory usage in percent
            maxmemory_policy: (String) Redis key eviction policy for a dataset that reaches maximum memory. Can be any of the listed in the official RedisDB documentation.
            minutes: (Number) The minute at which backup will be started.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            notify_keyspace_events: (String) Select the events that Redis will notify among a set of classes.
            password: (String, Sensitive) Password for the Redis cluster.
            persistence_mode: '(String) Persistence mode. Possible values: ON, OFF.'
            planned_usage_threshold: (Number) Maintenance window autoscaling disk usage (percent).
            repl_backlog_size_percent: (Number) Replication backlog size as a percentage of flavor maxmemory.
            replica_priority: (Number) Replica priority of a current replica (usable for non-sharded only).
            resource_preset_id: (String) The ID of the preset for computational resources available to a host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to hosts of the Redis cluster. (see below for nested schema)'
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            shard_name: (String) The name of the shard to which the host belongs.
            sharded: (Boolean) Redis Cluster mode enabled/disabled. Enables sharding when cluster non-sharded. If cluster is sharded - disabling is not allowed.
            slowlog_log_slower_than: (Number) Log slow queries below this number in microseconds.
            slowlog_max_len: (Number) Slow queries log length.
            status: (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN. For more information see status field of JSON representation in the official documentation.
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            timeout: (Number) Close the connection after a client is idle for N seconds.
            timeouts: (Block, Optional) (see below for nested schema)
            tls_enabled: (Boolean) TLS support mode enabled/disabled.
            turn_before_switchover: (Boolean) Allows to turn before switchover in RDSync.
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. A day and hour of window need to be specified with weekly window.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            use_luajit: (Boolean) Use JIT for lua scripts and functions.
            version: (String) Version of Redis.
            web_sql: (Boolean) Allow access for Web SQL. Can be either true or false.
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
            zset_max_listpack_entries: (Number) Controls max number of entries in zset before conversion from memory-efficient listpack to CPU-efficient hash table and skiplist
        importStatements:
            - |-
              # terraform import yandex_mdb_redis_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_redis_cluster.my_cluster ...
    yandex_mdb_redis_cluster_v2:
        subCategory: Managed Service for Redis
        description: Manages a Redis cluster within Yandex Cloud.
        name: yandex_mdb_redis_cluster_v2
        title: yandex_mdb_redis_cluster_v2
        examples:
            - name: foo
              manifest: |-
                {
                  "config": {
                    "password": "your_password",
                    "version": "7.2-valkey"
                  },
                  "environment": "PRESTABLE",
                  "hosts": {
                    "aaa": {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  },
                  "maintenance_window": {
                    "type": "ANYTIME"
                  },
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": {
                    "disk_size": 16,
                    "resource_preset_id": "hm1.nano"
                  }
                }
              references:
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
            - name: foo
              manifest: |-
                {
                  "config": {
                    "password": "your_password",
                    "version": "7.2-valkey"
                  },
                  "environment": "PRESTABLE",
                  "hosts": {
                    "host_sh1": {
                      "shard_name": "first",
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    },
                    "host_sh2": {
                      "shard_name": "second",
                      "subnet_id": "${yandex_vpc_subnet.bar.id}",
                      "zone": "ru-central1-b"
                    },
                    "host_sh3": {
                      "shard_name": "third",
                      "subnet_id": "${yandex_vpc_subnet.baz.id}",
                      "zone": "ru-central1-c"
                    }
                  },
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": {
                    "disk_size": 16,
                    "resource_preset_id": "hm1.nano"
                  },
                  "sharded": true
                }
              references:
                network_id: yandex_vpc_network.foo.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.bar: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/24"
                      ],
                      "zone": "ru-central1-b"
                    }
                yandex_vpc_subnet.baz: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.3.0.0/24"
                      ],
                      "zone": "ru-central1-c"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.1.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            access: (Attributes) Access policy to the Redis cluster. (see below for nested schema)
            allow_data_loss: (Boolean) Allows some data to be lost in favor of faster switchover/restart. Can be either true or false.
            announce_hostnames: (Boolean) Announce fqdn instead of ip address. Can be either true or false.
            assign_public_ip: (Boolean) Assign a public IP address to the host. Can be either true or false.
            auth_sentinel: (Boolean) Allows to use ACL users to auth in sentinel
            backup_retain_period_days: (Number) Retain period of automatically created backup in days.
            backup_window_start: (Attributes) Time to start the daily backup, in the UTC timezone. (see below for nested schema)
            client_output_buffer_limit_normal: (String) Redis connection output buffers limits for clients.
            client_output_buffer_limit_pubsub: (String) Redis connection output buffers limits for pubsub operations.
            cluster_allow_pubsubshard_when_down: (Boolean) Permits Pub/Sub shard operations when cluster is down. Can be either true or false.
            cluster_allow_reads_when_down: (Boolean) Allows read operations when cluster is down. Can be either true or false.
            cluster_id: (String) ID of the Redis cluster. This ID is assigned by MDB at creation time.
            cluster_require_full_coverage: (Boolean) Controls whether all hash slots must be covered by nodes. Can be either true or false.
            config: (Attributes) Configuration of the Redis cluster. (see below for nested schema)
            created_at: (String) The creation timestamp of the resource.
            data_lens: (Boolean) Allow access for Yandex DataLens. Can be either true or false.
            databases: (Number) Number of database buckets on a single redis-server process.
            day: (String) Day of week for maintenance window if window type is weekly.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Size of the disk in bytes.
            disk_size_autoscaling: (Attributes) Disk size autoscaling settings. (see below for nested schema)
            disk_size_limit: (Number) Limit of disk size after autoscaling in bytes.
            disk_type_id: (String) ID of the disk type that determines the disk performance characteristics.
            emergency_usage_threshold: (Number) Immediate autoscaling disk usage (percent).
            environment: (String) Deployment environment of the Redis cluster.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) Fully Qualified Domain Name. In other words, hostname.
            hosts: (Attributes Map) A hosts of the Redis cluster as label:host_info pairs. (see below for nested schema)
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
            hours: (Number) The hour at which backup will be started.
            id: (String) The resource identifier.
            io_threads_allowed: (Boolean) Allow redis to use io-threads. Can be either true or false.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            lfu_decay_time: (Number) The time, in minutes, that must elapse in order for the key counter to be divided by two (or decremented if it has a value less <= 10).
            lfu_log_factor: (Number) Determines how the frequency counter represents key hits.
            lua_time_limit: (Number) Maximum time in milliseconds for Lua scripts, 0 - disabled mechanism.
            maintenance_window: (Attributes) Maintenance window settings of the Redis cluster. (see below for nested schema)
            maxmemory_percent: (Number) Redis maxmemory percent
            maxmemory_policy: (String) Redis key eviction policy for a dataset that reaches maximum memory, available to the host.
            minutes: (Number) The minute at which backup will be started.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            notify_keyspace_events: (String) String setting for pub\sub functionality.
            password: (String, Sensitive) Authentication password.
            persistence_mode: (String) Persistence mode.
            planned_usage_threshold: (Number) Maintenance window autoscaling disk usage (percent).
            repl_backlog_size_percent: (Number) Replication backlog size as a percentage of flavor maxmemory.
            replica_priority: (Number) A replica with a low priority number is considered better for promotion.
            resource_preset_id: (String) ID of the resource preset that determines the number of CPU cores and memory size for the host.
            resources: (Attributes) Resources allocated to hosts of the Redis cluster. (see below for nested schema)
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            shard_name: (String) Shard Name of the host in the cluster.
            sharded: (Boolean) Redis sharded mode. Can be either true or false.
            slowlog_log_slower_than: (Number) Threshold for logging slow requests to server in microseconds (log only slower than it).
            slowlog_max_len: (Number) Max slow requests number to log.
            subnet_id: (String) ID of the subnet where the host is located.
            timeout: (Number) Time that Redis keeps the connection open while the client is idle.
            tls_enabled: (Boolean) TLS port and functionality. Can be either true or false.
            turn_before_switchover: (Boolean) Allows to turn before switchover in RDSync. Can be either true or false.
            type: (String) Type of maintenance window.
            use_luajit: (Boolean) Use JIT for lua scripts and functions. Can be either true or false.
            version: (String) Redis version.
            web_sql: (Boolean) Allow access for SQL queries in the management console. Can be either true or false.
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
            zset_max_listpack_entries: (Number) Controls max number of entries in zset before conversion from memory-efficient listpack to CPU-efficient hash table and skiplist
        importStatements: []
    yandex_mdb_redis_user:
        subCategory: Managed Service for Redis
        description: Manages a Redis user within Yandex Cloud.
        name: yandex_mdb_redis_user
        title: yandex_mdb_redis_user
        examples:
            - name: my_user
              manifest: |-
                {
                  "cluster_id": "${yandex_mdb_redis_cluster_v2.my_cluster.id}",
                  "name": "alice",
                  "passwords": [
                    "password"
                  ]
                }
              references:
                cluster_id: yandex_mdb_redis_cluster_v2.my_cluster.id
              dependencies:
                yandex_mdb_redis_cluster_v2.my_cluster: |-
                    {
                      "config": {
                        "password": "your_password",
                        "version": "7.2-valkey"
                      },
                      "environment": "PRESTABLE",
                      "hosts": {
                        "aaa": {
                          "subnet_id": "${yandex_vpc_subnet.foo.id}",
                          "zone": "ru-central1-a"
                        }
                      },
                      "maintenance_window": {
                        "type": "ANYTIME"
                      },
                      "name": "test",
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "resources": {
                        "disk_size": 16,
                        "resource_preset_id": "hm1.nano"
                      }
                    }
                yandex_vpc_network.foo: '{}'
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            acl_options: (String) Raw ACL string which has been inserted into the Redis
            categories: (String) Command categories user has permissions to.
            cluster_id: (String) The ID of the cluster to which user belongs to.
            commands: (String) Commands user can execute.
            enabled: (Boolean) Is redis user enabled.
            id: (String) The resource identifier.
            name: (String) The name of the user.
            passwords: (Set of String, Sensitive) Set of user passwords
            patterns: (String) Keys patterns user has permission to.
            permissions: (Attributes) Set of permissions granted to the user. (see below for nested schema)
            pub_sub_channels: (String) Channel patterns user has permissions to.
            sanitize_payload: (String) SanitizePayload parameter.
        importStatements:
            - |-
              # terraform import yandex_mdb_redis_user.<resource Name> <cluster_id>:<database_name>
              terraform import yandex_mdb_redis_user.my_user ...:my_user
    yandex_mdb_sharded_postgresql_cluster Resource - yandex:
        subCategory: ""
        description: Manages a ShardedPostgresql cluste within the Yandex Cloud.
        name: yandex_mdb_sharded_postgresql_cluster Resource - yandex
        title: yandex_mdb_sharded_postgresql_cluster Resource - yandex
        argumentDocs:
            access: (Attributes) Access policy to the Sharded PostgreSQL cluster. (see below for nested schema)
            assign_public_ip: (Boolean) Assign a public IP address to the host.
            backup_retain_period_days: (Number) The period in days during which backups are stored.
            backup_window_start: (Attributes) Time to start the daily backup, in the UTC timezone. (see below for nested schema)
            balancer: (Map of String) Balancer specific configuration.
            common: (Map of String) General settings for all types of hosts.
            config: (Attributes) Configuration of the Sharded PostgreSQL cluster. (see below for nested schema)
            coordinator: (Attributes) Coordinator specific configuration. (see below for nested schema)
            data_lens: (Boolean) Allow access for Yandex DataLens.
            data_transfer: (Boolean) Allow access for DataTransfer
            day: '(String) Day of the week (in DDD format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT","SUN"'
            deletion_protection: (Boolean) Inhibits deletion of the cluster. Can be either true or false.
            description: (String) Description of the Sharded PostgreSQL cluster.
            disk_size: (Number) Size of the disk in bytes.
            disk_type_id: (String) ID of the disk type that determines the disk performance characteristics.
            environment: (String) Deployment environment of the PostgreSQL cluster.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            hosts: (Attributes Map) A host configuration of the PostgreSQL cluster. (see below for nested schema)
            hour: (Number) Hour of the day in UTC (in HH format). Allowed value is between 1 and 24.
            hours: (Number) The hour at which backup will be started (UTC).
            id: (String) The resource identifier.
            infra: (Attributes) (see below for nested schema)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            maintenance_window: (Attributes) Maintenance policy of the PostgreSQL cluster. (see below for nested schema)
            minutes: (Number) The minute at which backup will be started (UTC).
            name: (String) Name of the Sharded PostgreSQL cluster. Provided by the client when the cluster is created.
            network_id: (String) ID of the network that the cluster belongs to.
            resource_preset_id: (String) ID of the resource preset that determines the number of CPU cores and memory size for the host.
            resources: (Attributes) Resources allocated to routers of the Sharded PostgreSQL cluster. (see below for nested schema)
            router: (Attributes) Router specific configuration. (see below for nested schema)
            security_group_ids: (Set of String) A set of ids of security groups assigned to hosts of the cluster.
            serverless: (Boolean) Allow access for connection to managed databases from functions
            sharded_postgresql_config: (Attributes) Sharded PostgreSQL cluster configuration. (see below for nested schema)
            subnet_id: (String) ID of the subnet where the host is located.
            type: (String)
            web_sql: (Boolean) Allow access for SQL queries in the management console
            zone: (String) The availability zone where the host is located.
        importStatements: []
    yandex_mdb_sharded_postgresql_database Resource - yandex:
        subCategory: ""
        description: Manages a Sharded PostgreSQL database within the Yandex.Cloud
        name: yandex_mdb_sharded_postgresql_database Resource - yandex
        title: yandex_mdb_sharded_postgresql_database Resource - yandex
        argumentDocs:
            cluster_id: (String) ID of the Sharded PostgreSQL cluster. Provided by the client when the user is created.
            id: (String) The resource identifier.
            name: (String) Name of the Sharded PostgreSQL user. Provided by the client when the user is created.
        importStatements: []
    yandex_mdb_sharded_postgresql_user Resource - yandex:
        subCategory: ""
        description: Manages a Sharded PostgreSQL user within the Yandex.Cloud
        name: yandex_mdb_sharded_postgresql_user Resource - yandex
        title: yandex_mdb_sharded_postgresql_user Resource - yandex
        argumentDocs:
            cluster_id: (String) ID of the Sharded PostgreSQL cluster. Provided by the client when the user is created.
            database: (String) Name of the database that the permission grants access to.
            grants: (Set of String)
            id: (String) The resource identifier.
            name: (String) Name of the Sharded PostgreSQL user. Provided by the client when the user is created.
            password: (String, Sensitive) Password of the Sharded PostgreSQL user. Provided by the client when the user is created.
            permissions: (Block Set) Block represents databases that are permitted to user. (see below for nested schema)
            settings: (Map of String)
        importStatements: []
    yandex_mdb_sqlserver_cluster:
        subCategory: Managed Service for SQLServer
        description: Manages a Microsoft SQLServer cluster within Yandex Cloud.
        name: yandex_mdb_sqlserver_cluster
        title: yandex_mdb_sqlserver_cluster
        examples:
            - name: my_cluster
              manifest: |-
                {
                  "backup_window_start": [
                    {
                      "hours": 20,
                      "minutes": 30
                    }
                  ],
                  "database": [
                    {
                      "name": "db_name_a"
                    },
                    {
                      "name": "db_name"
                    },
                    {
                      "name": "db_name_b"
                    }
                  ],
                  "environment": "PRESTABLE",
                  "host": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.foo.id}",
                      "zone": "ru-central1-a"
                    }
                  ],
                  "host_group_ids": [
                    "host_group_1",
                    "host_group_2"
                  ],
                  "labels": {
                    "test_key": "test_value"
                  },
                  "name": "test",
                  "network_id": "${yandex_vpc_network.foo.id}",
                  "resources": [
                    {
                      "disk_size": 20,
                      "disk_type_id": "network-ssd",
                      "resource_preset_id": "s2.small"
                    }
                  ],
                  "security_group_ids": [
                    "${yandex_vpc_security_group.test-sg-x.id}"
                  ],
                  "sqlserver_config": {
                    "fill_factor_percent": 49,
                    "optimize_for_ad_hoc_workloads": true
                  },
                  "user": [
                    {
                      "name": "bob",
                      "password": "mysecurepassword"
                    },
                    {
                      "name": "alice",
                      "password": "mysecurepassword",
                      "permission": [
                        {
                          "database_name": "db_name",
                          "roles": [
                            "DDLADMIN"
                          ]
                        }
                      ]
                    },
                    {
                      "name": "chuck",
                      "password": "mysecurepassword",
                      "permission": [
                        {
                          "database_name": "db_name_a",
                          "roles": [
                            "OWNER"
                          ]
                        },
                        {
                          "database_name": "db_name",
                          "roles": [
                            "OWNER",
                            "DDLADMIN"
                          ]
                        },
                        {
                          "database_name": "db_name_b",
                          "roles": [
                            "OWNER",
                            "DDLADMIN"
                          ]
                        }
                      ]
                    }
                  ],
                  "version": "2016sp2std"
                }
              references:
                host.subnet_id: yandex_vpc_subnet.foo.id
                network_id: yandex_vpc_network.foo.id
                security_group_ids: yandex_vpc_security_group.test-sg-x.id
              dependencies:
                yandex_vpc_network.foo: '{}'
                yandex_vpc_security_group.test-sg-x: |-
                    {
                      "egress": [
                        {
                          "description": "Allow outgoing traffic to members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "ingress": [
                        {
                          "description": "Allow incoming traffic from members of the same security group",
                          "from_port": 0,
                          "protocol": "ANY",
                          "to_port": 65535,
                          "v4_cidr_blocks": [
                            "0.0.0.0/0"
                          ]
                        }
                      ],
                      "network_id": "${yandex_vpc_network.foo.id}"
                    }
                yandex_vpc_subnet.foo: |-
                    {
                      "network_id": "${yandex_vpc_network.foo.id}",
                      "v4_cidr_blocks": [
                        "10.5.0.0/24"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            assign_public_ip: (Boolean) Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
            backup_window_start: '(Block List, Max: 1) Time to start the daily backup, in the UTC. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            database: '(Block List, Min: 1) A database of the SQLServer cluster. (see below for nested schema)'
            database_name: (String) The name of the database that the permission grants access to.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            disk_size: (Number) Volume of the storage available to a SQLServer host, in gigabytes.
            disk_type_id: (String) Type of the storage of SQLServer hosts.
            environment: (String) Deployment environment of the SQLServer cluster. (PRODUCTION, PRESTABLE).
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) The fully qualified domain name of the host.
            health: (String) Aggregated health of the cluster.
            host: '(Block List, Min: 1) A host of the SQLServer cluster. (see below for nested schema)'
            host_group_ids: (Set of String) A list of IDs of the host groups hosting VMs of the cluster.
            hours: (Number) The hour at which backup will be started.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            minutes: (Number) The minute at which backup will be started.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            password: (String, Sensitive) The password of the user.
            permission: (Block Set) Set of permissions granted to the user. (see below for nested schema)
            resource_preset_id: (String) The ID of the preset for computational resources available to a SQLServer host (CPU, memory etc.). For more information, see the official documentation.
            resources: '(Block List, Min: 1, Max: 1) Resources allocated to hosts of the SQLServer cluster. (see below for nested schema)'
            roles: '(Set of String) List user''s roles in the database. Allowed roles: OWNER, SECURITYADMIN, ACCESSADMIN, BACKUPOPERATOR, DDLADMIN, DATAWRITER, DATAREADER, DENYDATAWRITER, DENYDATAREADER.'
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            sqlcollation: (String) SQL Collation cluster will be created with. This attribute cannot be changed when cluster is created!
            sqlserver_config: (Map of String) SQLServer cluster config. Detail info in SQLServer config section.
            status: (String) Status of the cluster.
            subnet_id: (String) The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user: '(Block List, Min: 1) A user of the SQLServer cluster. (see below for nested schema)'
            version: (String) Version of the SQLServer cluster. (2016sp2std, 2016sp2ent).
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_mdb_sqlserver_cluster.<resource Name> <resource Id>
              terraform import yandex_mdb_sqlserver_cluster.my_cluster ...
    yandex_message_queue:
        subCategory: Message Queue
        description: Allows management of a Yandex Cloud Message Queue.
        name: yandex_message_queue
        title: yandex_message_queue
        examples:
            - name: my_queue
              manifest: |-
                {
                  "message_retention_seconds": 1209600,
                  "name": "ymq_terraform_example",
                  "receive_wait_time_seconds": 20,
                  "redrive_policy": "${jsonencode({\n    deadLetterTargetArn = yandex_message_queue.example_deadletter_queue.arn\n    maxReceiveCount     = 3\n  })}",
                  "visibility_timeout_seconds": 600
                }
            - name: my_deadletter_queue
              manifest: |-
                {
                  "name": "ymq_terraform_deadletter_example"
                }
            - name: example_fifo_queue
              manifest: |-
                {
                  "content_based_deduplication": true,
                  "fifo_queue": true,
                  "name": "ymq_terraform_fifo_example.fifo"
                }
        argumentDocs:
            access_key: (String) The access key to use when applying changes. If omitted, ymq_access_key specified in provider config is used. For more information see documentation.
            arn: (String) ARN of the Yandex Message Queue. It is used for setting up a redrive policy. See documentation.
            content_based_deduplication: (Boolean) Enables content-based deduplication. Can be used only if queue is FIFO.
            delay_seconds: '(Number) Number of seconds to delay the message from being available for processing. Valid values: from 0 to 900 seconds (15 minutes). Default: 0.'
            fifo_queue: (Boolean) Is this queue FIFO. If this parameter is not used, a standard queue is created. You cannot change the parameter value for a created queue.
            id: (String) The ID of this resource.
            max_message_size: '(Number) Maximum message size in bytes. Valid values: from 1024 bytes (1 KB) to 262144 bytes (256 KB). Default: 262144 (256 KB). For more information see documentation.'
            message_retention_seconds: '(Number) The length of time in seconds to retain a message. Valid values: from 60 seconds (1 minute) to 1209600 seconds (14 days). Default: 345600 (4 days). For more information see documentation.'
            name: (String) Queue name. The maximum length is 80 characters. You can use numbers, letters, underscores, and hyphens in the name. The name of a FIFO queue must end with the .fifo suffix. If not specified, random name will be generated. Conflicts with name_prefix. For more information see documentation.
            name_prefix: (String) Generates random name with the specified prefix. Conflicts with name.
            receive_wait_time_seconds: '(Number) Wait time for the ReceiveMessage method (for long polling), in seconds. Valid values: from 0 to 20 seconds. Default: 0. For more information about long polling see documentation.'
            redrive_policy: '(String) Message redrive policy in Dead Letter Queue. The source queue and DLQ must be the same type: for FIFO queues, the DLQ must also be a FIFO queue. For more information about redrive policy see documentation. Also you can use example in this page.'
            region_id: (String) ID of the region where the message queue is located at. The default is 'ru-central1'.
            secret_key: (String, Sensitive) The secret key to use when applying changes. If omitted, ymq_secret_key specified in provider config is used. For more information see documentation.
            tags: (Map of String) SQS tags
            visibility_timeout_seconds: '(Number) Visibility timeout for messages in a queue, specified in seconds. Valid values: from 0 to 43200 seconds (12 hours). Default: 30.'
        importStatements:
            - |-
              # terraform import yandex_message_queue.<resource Name> <queue URL>
              terraform import yandex_message_queue.my_queue https://message-queue.api.cloud.yandex.net/abcdefghijklmn123456/opqrstuvwxyz87654321/ymq_terraform_import_example
    yandex_metastore_cluster:
        subCategory: Managed Service for Hive Metastore
        description: Manages Hive Metastore cluster within Yandex Cloud.
        name: yandex_metastore_cluster
        title: yandex_metastore_cluster
        examples:
            - name: my_metastore_cluster
              manifest: |-
                {
                  "cluster_config": {
                    "resource_preset_id": "c2-m8"
                  },
                  "description": "My awesome Metastore",
                  "logging": {
                    "enabled": true,
                    "folder_id": "${var.folder_id}",
                    "min_level": "INFO"
                  },
                  "maintenance_window": {
                    "day": "MON",
                    "hour": 12,
                    "type": "WEEKLY"
                  },
                  "name": "metastore-created-with-terraform",
                  "security_group_ids": [
                    "${yandex_vpc_security_group.metastore-sg.id}"
                  ],
                  "service_account_id": "${yandex_iam_service_account.for-metastore.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.a.id}"
                  ]
                }
              references:
                security_group_ids: yandex_vpc_security_group.metastore-sg.id
                service_account_id: yandex_iam_service_account.for-metastore.id
                subnet_ids: yandex_vpc_subnet.a.id
        argumentDocs:
            cluster_config: (Attributes) Hive Metastore cluster configuration. (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            day: (String) Day of week for maintenance window. One of MON, TUE, WED, THU, FRI, SAT, SUN.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion. By default is set to false.
            description: (String) The resource description.
            enabled: (Boolean) Enables delivery of logs generated by Metastore to Cloud Logging.
            endpoint_ip: (String) IP address of Metastore server balancer endpoint.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            health: (String) Aggregated health of the cluster. Can be either ALIVE, DEGRADED, DEAD or HEALTH_UNKNOWN.
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window.
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) Logs will be written to the specified log group. Exactly one of the attributes folder_id or log_group_id should be specified.
            logging: (Attributes) Cloud Logging configuration. (see below for nested schema)
            maintenance_window: (Attributes) Configuration of window for maintenance operations. (see below for nested schema)
            min_level: (String) Minimum level of messages that will be sent to Cloud Logging. Can be either TRACE, DEBUG, INFO, WARN, ERROR or FATAL. If not set then server default is applied (currently INFO).
            name: (String) The resource name.
            network_id: (String) VPC network identifier which resource is attached.
            resource_preset_id: (String) The identifier of the preset for computational resources available to an instance (CPU, memory etc.).
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            service_account_id: (String) Service account with role managed-metastore.integrationProvider. For more information, see documentation.
            status: (String) Status of the cluster. Can be either CREATING, STARTING, RUNNING, UPDATING, STOPPING, STOPPED, ERROR or STATUS_UNKNOWN.
            subnet_ids: (Set of String) The list of VPC subnets identifiers which resource is attached.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. If WEEKLY, day and hour must be specified.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_monitoring_dashboard:
        subCategory: Monitoring
        description: Allows management of a Yandex Cloud Monitoring Dashboard.
        name: yandex_monitoring_dashboard
        title: yandex_monitoring_dashboard
        examples:
            - name: my-dashboard
              manifest: |-
                {
                  "description": "Description",
                  "labels": {
                    "a": "b"
                  },
                  "name": "local-id-resource",
                  "parametrization": [
                    {
                      "parameters": [
                        {
                          "custom": [
                            {
                              "default_values": [
                                "1",
                                "2"
                              ],
                              "multiselectable": true,
                              "values": [
                                "1",
                                "2",
                                "3"
                              ]
                            }
                          ],
                          "description": "param1 description",
                          "hidden": false,
                          "id": "param1",
                          "title": "title"
                        },
                        {
                          "hidden": true,
                          "id": "param2",
                          "label_values": [
                            {
                              "default_values": [
                                "1",
                                "2"
                              ],
                              "label_key": "key",
                              "multiselectable": true,
                              "selectors": "a=b"
                            }
                          ]
                        },
                        {
                          "hidden": true,
                          "id": "param3",
                          "text": [
                            {
                              "default_value": "abc"
                            }
                          ]
                        }
                      ],
                      "selectors": "a=b"
                    }
                  ],
                  "title": "My title",
                  "widgets": [
                    {
                      "position": [
                        {
                          "h": 1,
                          "w": 1,
                          "x": 4,
                          "y": 4
                        }
                      ],
                      "text": [
                        {
                          "text": "text here"
                        }
                      ]
                    },
                    {
                      "chart": [
                        {
                          "chart_id": "chart1id",
                          "description": "chart description",
                          "display_legend": true,
                          "freeze": "FREEZE_DURATION_HOUR",
                          "name_hiding_settings": [
                            {
                              "names": [
                                "a",
                                "b"
                              ],
                              "positive": true
                            }
                          ],
                          "queries": [
                            {
                              "downsampling": [
                                {
                                  "disabled": false,
                                  "gap_filling": "GAP_FILLING_NULL",
                                  "grid_aggregation": "GRID_AGGREGATION_COUNT",
                                  "max_points": 100
                                }
                              ],
                              "target": [
                                {
                                  "hidden": true,
                                  "query": "{service=monitoring}",
                                  "text_mode": true
                                }
                              ]
                            }
                          ],
                          "series_overrides": [
                            {
                              "name": "name",
                              "settings": [
                                {
                                  "color": "colorValue",
                                  "grow_down": true,
                                  "name": "series_overrides name",
                                  "stack_name": "stack name",
                                  "type": "SERIES_VISUALIZATION_TYPE_LINE",
                                  "yaxis_position": "YAXIS_POSITION_LEFT"
                                }
                              ]
                            }
                          ],
                          "title": "title for chart",
                          "visualization_settings": [
                            {
                              "aggregation": "SERIES_AGGREGATION_AVG",
                              "color_scheme_settings": [
                                {
                                  "gradient": [
                                    {
                                      "green_value": "11",
                                      "red_value": "22",
                                      "violet_value": "33",
                                      "yellow_value": "44"
                                    }
                                  ]
                                }
                              ],
                              "heatmap_settings": [
                                {
                                  "green_value": "1",
                                  "red_value": "2",
                                  "violet_value": "3",
                                  "yellow_value": "4"
                                }
                              ],
                              "interpolate": "INTERPOLATE_LEFT",
                              "normalize": true,
                              "show_labels": true,
                              "title": "visualization_settings title",
                              "type": "VISUALIZATION_TYPE_POINTS",
                              "yaxis_settings": [
                                {
                                  "left": [
                                    {
                                      "max": "111",
                                      "min": "11",
                                      "precision": 3,
                                      "title": "yaxis_settings left title",
                                      "type": "YAXIS_TYPE_LOGARITHMIC",
                                      "unit_format": "UNIT_CELSIUS"
                                    }
                                  ],
                                  "right": [
                                    {
                                      "max": "22",
                                      "min": "2",
                                      "precision": 2,
                                      "title": "yaxis_settings right title",
                                      "type": "YAXIS_TYPE_LOGARITHMIC",
                                      "unit_format": "UNIT_NONE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "position": [
                        {
                          "h": 100,
                          "w": 100,
                          "x": 6,
                          "y": 6
                        }
                      ]
                    },
                    {
                      "position": [
                        {
                          "h": 1,
                          "w": 1,
                          "x": 1,
                          "y": 1
                        }
                      ],
                      "title": [
                        {
                          "size": "TITLE_SIZE_XS",
                          "text": "title here"
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            aggregation: (String) Aggregation
            automatic: (Block List) Automatic color scheme (see below for nested schema)
            chart: (Block List) Chart widget settings. (see below for nested schema)
            chart_id: (String) Chart ID.
            color: (String) Series color or empty
            color_scheme_settings: (Block List) Color scheme settings (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            custom: '(Block List) Custom values parameter. Oneof: label_values, custom, text. (see below for nested schema)'
            dashboard_id: (String) Dashboard ID.
            default_value: (String) Default value.
            default_values: (List of String) Default value.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            disabled: (Boolean) Disable downsampling
            display_legend: (Boolean) Enable legend under chart.
            downsampling: (Block List) Downsampling settings (see below for nested schema)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            freeze: '(String) Fixed time interval for chart. Values:'
            gap_filling: (String) Parameters for filling gaps in data
            gradient: (Block List) Gradient color scheme (see below for nested schema)
            green_value: (String) Gradient green value
            grid_aggregation: (String) Function that is used for downsampling
            grid_interval: (Number) Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
            grow_down: (Boolean) Stack grow down
            h: (Number) Height.
            heatmap_settings: (Block List) Heatmap settings (see below for nested schema)
            hidden: (Boolean) UI-visibility
            id: (String) The ID of this resource.
            interpolate: (String) Interpolate
            label_key: (String) Label key to list label values.
            label_values: '(Block List) Label values parameter. Oneof: label_values, custom, text. (see below for nested schema)'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            left: (Block List) Left Y axis settings (see below for nested schema)
            max: (String) Max value in extended number format or empty
            max_points: (Number) Maximum number of points to be returned
            min: (String) Min value in extended number format or empty
            multiselectable: (Boolean) Specifies the multiselectable values of parameter.
            name: (String) The resource name.
            name_hiding_settings: (Block List) Name hiding settings (see below for nested schema)
            names: (List of String)
            normalize: (Boolean) Normalize
            parameters: (Block List) Dashboard parameters. (see below for nested schema)
            parametrization: (Block List) Dashboard parametrization. (see below for nested schema)
            position: (Block List) Widget layout position. (see below for nested schema)
            positive: (Boolean) True if we want to show concrete series names only, false if we want to hide concrete series names
            precision: (Number) Tick value precision (null as default, 0-7 in other cases)
            queries: (Block List) Queries settings. (see below for nested schema)
            query: (String) Required. Query
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            red_value: (String) Gradient red value
            right: (Block List) Right Y axis settings (see below for nested schema)
            selectors: (String) Dashboard predefined parameters selector.
            series_overrides: (Block List) Time series settings. (see below for nested schema)
            settings: (Block List) Override settings (see below for nested schema)
            show_labels: (Boolean) Show chart labels
            size: |-
                (String) Title size.
                Title size. Values:
            stack_name: (String) Stack name or empty
            standard: (Block List) Standard color scheme (see below for nested schema)
            target: (Block List) Downsampling settings (see below for nested schema)
            target_index: (String) Target index
            text: '(Block List) Text parameter. Oneof: label_values, custom, text. (see below for nested schema)'
            text_mode: (Boolean) Text mode
            timeouts: (Block, Optional) (see below for nested schema)
            title: (String) Dashboard title.
            type: (String) Type
            unit_format: (String) Unit format
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            values: (List of String) Parameter values.
            violet_value: (String) Gradient violet_value
            visualization_settings: (Block List) Visualization settings. (see below for nested schema)
            w: (Number) Weight.
            widgets: (Block List) Widgets. (see below for nested schema)
            x: (Number) X-axis top-left corner coordinate.
            "y": (Number) Y-axis top-left corner coordinate.
            yaxis_position: (String) Yaxis position
            yaxis_settings: (Block List) Y axis settings (see below for nested schema)
            yellow_value: (String) Gradient yellow value
        importStatements:
            - |-
              # terraform import yandex_monitoring.<resource Name> <resource Id>
              terraform import yandex_monitoring_dashboard.my-dashboard ...
    yandex_organizationmanager_group:
        subCategory: Cloud Organization
        description: Allows management of a single Group within an existing Yandex Cloud Organization.
        name: yandex_organizationmanager_group
        title: yandex_organizationmanager_group
        examples:
            - name: my_group
              manifest: |-
                {
                  "description": "My new Group",
                  "name": "my-group",
                  "organization_id": "sdf4*********3fr"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            id: (String) The ID of this resource.
            name: (String) The resource name.
            organization_id: (String) The organization to attach this Group to.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_group.<resource Name> <resource Id>
              terraform import yandex_organizationmanager_group.my_group ...
    yandex_organizationmanager_group_iam_member:
        subCategory: Cloud Organization
        description: Allows management of a single member for a single IAM binding on a Yandex Cloud Organization Manager Group.
        name: yandex_organizationmanager_group_iam_member
        title: yandex_organizationmanager_group_iam_member
        examples:
            - name: editor
              manifest: |-
                {
                  "group_id": "some_group_id",
                  "member": "userAccount:user_id",
                  "role": "editor"
                }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            group_id: (String) The ID of the organization to attach a policy to.
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_group_iam_member.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_organizationmanager_group_iam_member.editor "abjjf**********p3gp8 editor"
    yandex_organizationmanager_group_mapping:
        subCategory: Cloud Organization
        description: Allows management of a Yandex Cloud Organization Manager Group Mapping.
        name: yandex_organizationmanager_group_mapping
        title: yandex_organizationmanager_group_mapping
        examples:
            - name: my_group_map
              manifest: |-
                {
                  "enabled": true,
                  "federation_id": "my-federation-id"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            enabled: (Boolean) Set "true" to enable organization manager group mapping.
            federation_id: (String) ID of the SAML Federation.
            id: (String) The ID of this resource.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_group_mapping.<resource Name> <resource Id>
              terraform import yandex_organizationmanager_group.my_group_map ...
    yandex_organizationmanager_group_mapping_item:
        subCategory: Cloud Organization
        description: Allows management of a Yandex Cloud Organization Manager Group Mapping Items.
        name: yandex_organizationmanager_group_mapping_item
        title: yandex_organizationmanager_group_mapping_item
        examples:
            - name: group_mapping_item
              manifest: |-
                {
                  "depends_on": [
                    "${yandex_organizationmanager_group_mapping.group_mapping}"
                  ],
                  "external_group_id": "my_external_group_id",
                  "federation_id": "my-federation_id",
                  "internal_group_id": "my_internal_group_id"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            external_group_id: (String) ID of the external group
            federation_id: (String) ID of the SAML Federation
            id: (String) The ID of this resource.
            internal_group_id: (String) ID of the internal group
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_group_mapping_item.<resource Name> <resource Id>
              terraform import yandex_organizationmanager_group_mapping_item.group_mapping_item .../.../...
    yandex_organizationmanager_group_membership:
        subCategory: Cloud Organization
        description: Allows management of members of Yandex Cloud Organization Manager Group.
        name: yandex_organizationmanager_group_membership
        title: yandex_organizationmanager_group_membership
        examples:
            - name: group
              manifest: |-
                {
                  "group_id": "sdf4*********3fr",
                  "members": [
                    "xdf********123"
                  ]
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            group_id: (String) The Group to add/remove members to/from.
            id: (String) The ID of this resource.
            members: (Set of String) A set of members of the Group. Each member is represented by an id.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_organizationmanager_organization_iam_binding:
        subCategory: Cloud Organization
        description: Allows management of a single IAM binding for a Yandex Organization Manager organization.
        name: yandex_organizationmanager_organization_iam_binding
        title: yandex_organizationmanager_organization_iam_binding
        examples:
            - name: editor
              manifest: |-
                {
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "organization_id": "some_organization_id",
                  "role": "editor"
                }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            organization_id: (String) The ID of the organization to attach the policy to.
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_organization_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_organizationmanager_organization_iam_binding.editor "abjjf**********p3gp8 editor"
    yandex_organizationmanager_organization_iam_member:
        subCategory: Cloud Organization
        description: Allows management of a single member for a single IAM binding on a Yandex Cloud Organization Manager organization.
        name: yandex_organizationmanager_organization_iam_member
        title: yandex_organizationmanager_organization_iam_member
        examples:
            - name: editor
              manifest: |-
                {
                  "member": "userAccount:user_id",
                  "organization_id": "some_organization_id",
                  "role": "editor"
                }
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            organization_id: (String) The ID of the organization to attach the policy to.
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_organization_iam_member.<resource Name> "<resource Id> <resource Role> <subject>"
              terraform import yandex_organizationmanager_organization_iam_member.editor "abjjf**********p3gp8 editor foo@example.com"
    yandex_organizationmanager_os_login_settings:
        subCategory: Cloud Organization
        description: Allows management of OsLogin Settings within an existing Yandex Cloud Organization.
        name: yandex_organizationmanager_os_login_settings
        title: yandex_organizationmanager_os_login_settings
        examples:
            - name: my_settings
              manifest: |-
                {
                  "organization_id": "sdf4*********3fr",
                  "ssh_certificate_settings": [
                    {
                      "enabled": true
                    }
                  ],
                  "user_ssh_key_settings": [
                    {
                      "allow_manage_own_keys": true,
                      "enabled": true
                    }
                  ]
                }
        argumentDocs:
            allow_manage_own_keys: (Boolean) If set to true subject is allowed to manage own ssh keys without having to be assigned specific permissions.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            enabled: (Boolean) Enables or disables usage of SSH certificates signed by trusted Certification Authority (CA).
            id: (String) The ID of this resource.
            organization_id: (String) The organization to manage it's OsLogin Settings.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            ssh_certificate_settings: '(Block List, Max: 1) SSH Certificate settings. (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            user_ssh_key_settings: '(Block List, Max: 1) Users SSH key settings. (see below for nested schema)'
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_os_login_settings.<resource Name> <resource Id>
              terraform import yandex_organizationmanager_os_login_settings.my_settings ...
    yandex_organizationmanager_saml_federation:
        subCategory: Cloud Organization
        description: Allows management of a single SAML Federation within an existing Yandex Cloud Organization.
        name: yandex_organizationmanager_saml_federation
        title: yandex_organizationmanager_saml_federation
        examples:
            - name: saml_fed
              manifest: |-
                {
                  "description": "My new SAML federation",
                  "issuer": "my-issuer",
                  "name": "my-federation",
                  "organization_id": "sdf4*********3fr",
                  "sso_binding": "POST",
                  "sso_url": "https://my-sso.url"
                }
        argumentDocs:
            auto_create_account_on_login: (Boolean) Add new users automatically on successful authentication. The user will get the resource-manager.clouds.member role automatically, but you need to grant other roles to them. If the value is false, users who aren't added to the cloud can't log in, even if they have authenticated on your server.
            case_insensitive_name_ids: (Boolean) Use case-insensitive name IDs.
            cookie_max_age: (String) The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user immediately and redirects them to the home page. The default value is 8h.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            encrypted_assertions: (Boolean) Enable encrypted assertions.
            force_authn: (Boolean) Force authentication on session expiration
            id: (String) The ID of this resource.
            issuer: (String) The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user authenticates.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            organization_id: (String) The organization to attach this SAML Federation to.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            security_settings: '(Block List, Max: 1) Federation security settings. (see below for nested schema)'
            sso_binding: (String) Single sign-on endpoint binding type. Most Identity Providers support the POST binding type. SAML Binding is a mapping of a SAML protocol message onto standard messaging formats and/or communications protocols.
            sso_url: (String) Single sign-on (SSO) endpoint URL. Specify the link to the IdP login page here.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_saml_federation.<resource Name> <resource Id>
              terraform import yandex_organizationmanager_saml_federation.saml_fed ...
    yandex_organizationmanager_saml_federation_user_account:
        subCategory: Cloud Organization
        description: Allows management of a single SAML Federation user account within an existing Yandex Cloud Organization.
        name: yandex_organizationmanager_saml_federation_user_account
        title: yandex_organizationmanager_saml_federation_user_account
        examples:
            - name: account
              manifest: |-
                {
                  "federation_id": "some_federation_id",
                  "name_id": "example@example.org"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            federation_id: (String) ID of a SAML Federation.
            id: (String) The ID of this resource.
            name_id: (String) Name ID of the SAML federated user.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_saml_federation_user_account.<resource Name> <resource Id>
              terraform import yandex_organizationmanager_saml_federation_user_account.account ...
    yandex_organizationmanager_user_ssh_key:
        subCategory: Cloud Organization
        description: Allows management of User SSH Keys within an existing Yandex Cloud Organization and Subject.
        name: yandex_organizationmanager_user_ssh_key
        title: yandex_organizationmanager_user_ssh_key
        examples:
            - name: my_user_ssh_key
              manifest: |-
                {
                  "data": "ssh_key_data",
                  "organization_id": "some_organization_id",
                  "subject_id": "some_subject_id"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            data: (String) Data of the user ssh key.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            expires_at: (String) User ssh key will be no longer valid after expiration timestamp.
            fingerprint: (String) SSH Key Fingerprint.
            id: (String) Resource ID.
            name: (String) The resource name.
            organization_id: (String) Organization that the user ssh key belongs to.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            subject_id: (String) Subject that the user ssh key belongs to.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_organizationmanager_user_ssh_key.<resource Name> <resource Id>
              terraform import yandex_organizationmanager_user_ssh_key.my_user_ssh_key ...
    yandex_resourcemanager_cloud:
        subCategory: Resource Manager
        description: Allows management of the Cloud resource.
        name: yandex_resourcemanager_cloud
        title: yandex_resourcemanager_cloud
        examples:
            - name: my_cloud
              manifest: |-
                {
                  "organization_id": "my_organization_id"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            organization_id: (String) Yandex Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_resourcemanager_cloud.<resource Name> <resource Id>
              terraform import yandex_resourcemanager_cloud.my_cloud b1g3a**********qc5df
    yandex_resourcemanager_cloud_iam_binding:
        subCategory: Resource Manager
        description: Allows management of a single IAM binding for a Yandex Resource Manager cloud.
        name: yandex_resourcemanager_cloud_iam_binding
        title: yandex_resourcemanager_cloud_iam_binding
        examples:
            - name: admin
              manifest: |-
                {
                  "cloud_id": "${data.yandex_resourcemanager_cloud.project1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                cloud_id: data.yandex_resourcemanager_cloud.project1.id
        argumentDocs:
            cloud_id: (String) The ID of the cloud to attach the policy to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_resourcemanager_cloud_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_resourcemanager_cloud_iam_binding.admin "b1g3a**********qc5df admin"
    yandex_resourcemanager_cloud_iam_member:
        subCategory: Resource Manager
        description: Allows management of a single member for a single IAM binding on a Yandex Resource Manager cloud.
        name: yandex_resourcemanager_cloud_iam_member
        title: yandex_resourcemanager_cloud_iam_member
        examples:
            - name: admin
              manifest: |-
                {
                  "cloud_id": "${data.yandex_resourcemanager_cloud.department1.id}",
                  "member": "userAccount:user_id",
                  "role": "editor"
                }
              references:
                cloud_id: data.yandex_resourcemanager_cloud.department1.id
        argumentDocs:
            cloud_id: (String) The ID of the cloud to attach the policy to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_resourcemanager_cloud_iam_member.<resource Name> "<resource Id> <resource Role> <subject>"
              terraform import yandex_resourcemanager_cloud_iam_member.admin "b1g3a**********qc5df admin foo@example.com"
    yandex_resourcemanager_folder:
        subCategory: Resource Manager
        description: Allows management of the Cloud Folder.
        name: yandex_resourcemanager_folder
        title: yandex_resourcemanager_folder
        examples:
            - name: folder1
              manifest: |-
                {
                  "cloud_id": "my_cloud_id"
                }
        argumentDocs:
            cloud_id: (String) Cloud that the resource belongs to. If value is omitted, the default provider Cloud ID is used.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_resourcemanager_folder.<resource Name> <resource Id>
              terraform import yandex_resourcemanager_folder.my_foldeer b1g5r**********dqmsp
    yandex_resourcemanager_folder_iam_binding:
        subCategory: Resource Manager
        description: Allows management of a single IAM binding for a Yandex Resource Manager folder.
        name: yandex_resourcemanager_folder_iam_binding
        title: yandex_resourcemanager_folder_iam_binding
        examples:
            - name: admin
              manifest: |-
                {
                  "folder_id": "${data.yandex_resourcemanager_folder.project1.id}",
                  "members": [
                    "userAccount:some_user_id"
                  ],
                  "role": "editor"
                }
              references:
                folder_id: data.yandex_resourcemanager_folder.project1.id
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            folder_id: (String) The ID of the folder to attach a policy to.
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_resourcemanager_folder_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_resourcemanager_folder_iam_binding.admin "b1g5r**********dqmsp admin"
    yandex_resourcemanager_folder_iam_member:
        subCategory: Resource Manager
        description: Allows management of a single member for a single IAM binding for a Yandex Resource Manager folder.
        name: yandex_resourcemanager_folder_iam_member
        title: yandex_resourcemanager_folder_iam_member
        examples:
            - name: admin
              manifest: |-
                {
                  "folder_id": "${data.yandex_resourcemanager.department1.name}",
                  "member": "userAccount:user_id",
                  "role": "editor"
                }
              references:
                folder_id: data.yandex_resourcemanager.department1.name
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            folder_id: (String) The ID of the folder to attach a policy to.
            id: (String) The ID of this resource.
            member: '(String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_resourcemanager_folder_iam_member.<resource Name> "<resource Id> <resource Role> <subject>"
              terraform import yandex_resourcemanager_folder_iam_member.admin "b1g5r**********dqmsp admin foo@example.com"
    yandex_resourcemanager_folder_iam_policy:
        subCategory: Resource Manager
        description: Allows management of the IAM policy for a Yandex Resource Manager folder.
        name: yandex_resourcemanager_folder_iam_policy
        title: yandex_resourcemanager_folder_iam_policy
        examples:
            - name: folder_admin_policy
              manifest: |-
                {
                  "folder_id": "${data.yandex_folder.project1.id}",
                  "policy_data": "${data.yandex_iam_policy.admin.policy_data}"
                }
              references:
                folder_id: data.yandex_folder.project1.id
                policy_data: data.yandex_iam_policy.admin.policy_data
        argumentDocs:
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            folder_id: (String) The ID of the folder to attach a policy to.
            id: (String) The ID of this resource.
            policy_data: (String) Required only by yandex_iam_service_account_iam_policy. The policy data generated by a yandex_iam_policy data source.
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_resourcemanager_folder_iam_policy.<resource Name> <resource Id>
              terraform import yandex_resourcemanager_folder_iam_policy.folder_admin_policy ...
    yandex_serverless_container:
        subCategory: Serverless Containers
        description: Allows management of a Yandex Cloud Serverless Container.
        name: yandex_serverless_container
        title: yandex_serverless_container
        examples:
            - name: test-container
              manifest: |-
                {
                  "core_fraction": 100,
                  "cores": 1,
                  "description": "any description",
                  "execution_timeout": "15s",
                  "image": [
                    {
                      "url": "cr.yandex/yc/test-image:v1"
                    }
                  ],
                  "log_options": [
                    {
                      "log_group_id": "e2392vo6d1bne2aeq9fr",
                      "min_level": "ERROR"
                    }
                  ],
                  "memory": 256,
                  "mounts": [
                    {
                      "ephemeral_disk": [
                        {
                          "size_gb": 5
                        }
                      ],
                      "mount_point_path": "/mount/point"
                    }
                  ],
                  "name": "some_name",
                  "provision_policy": [
                    {
                      "min_instances": 1
                    }
                  ],
                  "runtime": [
                    {
                      "type": "task"
                    }
                  ],
                  "secrets": [
                    {
                      "environment_variable": "ENV_VARIABLE",
                      "id": "${yandex_lockbox_secret.secret.id}",
                      "key": "secret-key",
                      "version_id": "${yandex_lockbox_secret_version.secret_version.id}"
                    }
                  ],
                  "service_account_id": "are1service2account3id"
                }
              references:
                secrets.id: yandex_lockbox_secret.secret.id
                secrets.version_id: yandex_lockbox_secret_version.secret_version.id
            - name: test-container-with-digest
              manifest: |-
                {
                  "image": [
                    {
                      "digest": "sha256:e1d772fa8795adac847a2420c87d0d2e3d38fb02f168cab8c0b5fe2fb95c47f4",
                      "url": "cr.yandex/yc/test-image:v1"
                    }
                  ],
                  "memory": 128,
                  "name": "some_name"
                }
            - name: test-container-object-storage-mount
              manifest: |-
                {
                  "image": [
                    {
                      "url": "cr.yandex/yc/test-image:v1"
                    }
                  ],
                  "memory": 128,
                  "mounts": [
                    {
                      "mode": "ro",
                      "mount_point_path": "/mount/point",
                      "object_storage": [
                        {
                          "bucket": "${yandex_storage_bucket.my-bucket.bucket}"
                        }
                      ]
                    }
                  ],
                  "name": "some_name",
                  "service_account_id": "${yandex_iam_service_account.sa.id}"
                }
              references:
                mounts.object_storage.bucket: yandex_storage_bucket.my-bucket.bucket
                service_account_id: yandex_iam_service_account.sa.id
              dependencies:
                yandex_iam_service_account.sa: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "name": "test-sa"
                    }
                yandex_iam_service_account_static_access_key.sa-static-key: |-
                    {
                      "description": "static access key for object storage",
                      "service_account_id": "${yandex_iam_service_account.sa.id}"
                    }
                yandex_resourcemanager_folder_iam_member.sa-editor: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "member": "serviceAccount:${yandex_iam_service_account.sa.id}",
                      "role": "storage.editor"
                    }
                yandex_storage_bucket.my-bucket: |-
                    {
                      "access_key": "${yandex_iam_service_account_static_access_key.sa-static-key.access_key}",
                      "bucket": "bucket",
                      "secret_key": "${yandex_iam_service_account_static_access_key.sa-static-key.secret_key}"
                    }
        argumentDocs:
            args: (List of String) List of arguments for Yandex Cloud Serverless Container.
            aws_v1_http_endpoint: '(Number) Enables access to AWS flavored metadata (IMDSv1). Values: 0 - default, 1 - enabled, 2 - disabled.'
            block_size_kb: (Number) Block size of the ephemeral disk in KB.
            bucket: (String) Name of the mounting bucket.
            command: (List of String) List of commands for Yandex Cloud Serverless Container.
            concurrency: (Number) Concurrency of Yandex Cloud Serverless Container.
            connectivity: '(Block List, Max: 1) Network access. If specified the revision will be attached to specified network. (see below for nested schema)'
            core_fraction: (Number) Core fraction (0...100) of the Yandex Cloud Serverless Container.
            cores: (Number) Cores (1+) of the Yandex Cloud Serverless Container.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            digest: (String) Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if image.0.url stays the same. If field not specified then its value will be computed.
            disabled: (Boolean) Is logging from container disabled.
            environment: (Map of String) A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).
            environment_variable: (String) Container's environment variable in which secret's value will be stored. Must begin with a letter (A-Z, a-z).
            ephemeral_disk: '(Block List, Max: 1) One of the available mount types. Disk available during the function execution time. (see below for nested schema)'
            execution_timeout: (String) Execution timeout in seconds (duration format) for Yandex Cloud Serverless Container.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            gce_http_endpoint: '(Number) Enables access to GCE flavored metadata. Values: 0- default, 1 - enabled, 2 - disabled.'
            id: (String) The ID of this resource.
            image: '(Block List, Min: 1, Max: 1) Revision deployment image for Yandex Cloud Serverless Container. (see below for nested schema)'
            key: (String) Secret's entries key which value will be stored in environment variable.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) Log entries are written to specified log group.
            log_options: '(Block List, Max: 1) Options for logging from Yandex Cloud Serverless Container. (see below for nested schema)'
            memory: (Number) Memory in megabytes (aligned to 128 MB).
            metadata_options: '(Block List, Max: 1) Options set the access mode to revision''s metadata endpoints. (see below for nested schema)'
            min_instances: (Number) Minimum number of prepared instances that are always ready to serve requests.
            min_level: (String) Minimum log entry level.
            mode: (String) Mount’s accessibility mode. Valid values are ro and rw.
            mount_point_path: (String) Path inside the container to access the directory in which the target is mounted.
            mounts: (Block List) Mounts for Yandex Cloud Serverless Container. (see below for nested schema)
            name: (String) The resource name.
            network_id: (String) Network the revision will have access to.
            object_storage: '(Block List, Max: 1) Available mount types. Object storage as a mount. (see below for nested schema)'
            prefix: (String) Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.
            provision_policy: '(Block List, Max: 1) Provision policy. If specified the revision will have prepared instances. (see below for nested schema)'
            read_only: (Boolean) Mount the bucket in read-only mode.
            revision_id: (String) Last revision ID of the Yandex Cloud Serverless Container.
            runtime: '(Block List, Max: 1) Runtime for Yandex Cloud Serverless Container. (see below for nested schema)'
            secrets: (Block List) Secrets for Yandex Cloud Serverless Container. (see below for nested schema)
            service_account_id: (String) Service account which linked to the resource.
            size_gb: (Number) Size of the ephemeral disk in GB.
            storage_mounts: (Block List, Deprecated) (DEPRECATED, use mounts.object_storage instead) Storage mounts for Yandex Cloud Serverless Container. (see below for nested schema)
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the runtime for Yandex Cloud Serverless Container. Valid values are http and task.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            url: (String) Invoke URL for the Yandex Cloud Serverless Container.
            version_id: (String) Secret's version ID.
            work_dir: (String) Working directory for Yandex Cloud Serverless Container.
        importStatements:
            - |-
              # terraform import yandex_serverless_container.<resource Name> <resource Id>
              terraform import yandex_serverless_container.test-container ...
    yandex_serverless_container_iam_binding:
        subCategory: Serverless Containers
        description: Allows management of a single IAM binding for a Yandex Serverless Container.
        name: yandex_serverless_container_iam_binding
        title: yandex_serverless_container_iam_binding
        examples:
            - name: container-iam
              manifest: |-
                {
                  "container_id": "your-container-id",
                  "members": [
                    "system:allUsers"
                  ],
                  "role": "serverless.containers.invoker"
                }
        argumentDocs:
            container_id: (String) The Yandex Serverless Container ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_serverless_container_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_serverless_container_iam_binding.container-iam "... serverless.containers.invoker"
    yandex_serverless_eventrouter_bus:
        subCategory: Serverless Integrations
        description: Allows management of a Yandex Cloud Serverless Event Router Bus.
        name: yandex_serverless_eventrouter_bus
        title: yandex_serverless_eventrouter_bus
        argumentDocs:
            cloud_id: (String) ID of the cloud that the bus resides in
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) Creation timestamp
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) Deletion protection
            description: (String) Description of the bus
            folder_id: (String) ID of the folder that the bus belongs to
            id: (String) The ID of this resource.
            labels: (Map of String) Bus labels
            name: (String) Name of the bus
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_serverless_eventrouter_bus.<resource Name> <resource Id>
              terraform import yandex_serverless_eventrouter_bus.evr_bus ...
    yandex_serverless_eventrouter_connector:
        subCategory: Serverless Integrations
        description: Allows management of a Yandex Cloud Serverless Event Router Connector.
        name: yandex_serverless_eventrouter_connector
        title: yandex_serverless_eventrouter_connector
        argumentDocs:
            batch_size: (Number) Batch size for polling
            bus_id: (String) ID of the bus that the connector belongs to
            cloud_id: (String) ID of the cloud that the connector resides in
            consumer: (String) Consumer name
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) Creation timestamp
            cron_expression: '(String) Cron expression. Cron expression with seconds. Example: 0 45 16 ? * *'
            database: (String) Stream database
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) Deletion protection
            description: (String) Description of the connector
            folder_id: (String) ID of the folder that the connector resides in
            id: (String) The ID of this resource.
            labels: (Map of String) Connector labels
            name: (String) Name of the connector
            payload: (String) Payload to be passed to bus
            polling_timeout: (String) Queue polling timeout
            queue_arn: '(String) Queue ARN. Example: yrn:yc:ymq:ru-central1:aoe***:test'
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            service_account_id: (String) Service account which has read permission on the stream
            stream_name: (String) Stream name, absolute or relative
            timeouts: (Block, Optional) (see below for nested schema)
            timer: (Block List) Timer source of the connector (see below for nested schema)
            timezone: '(String) Timezone in tz database format. Example: Europe/Moscow'
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            visibility_timeout: (String) Queue visibility timeout override
            yds: (Block List) Data Stream source of the connector (see below for nested schema)
            ymq: (Block List) Message Queue source of the connector (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_serverless_eventrouter_connector.<resource Name> <resource Id>
              terraform import yandex_serverless_eventrouter_connector.evr_con ...
    yandex_serverless_eventrouter_rule:
        subCategory: Serverless Integrations
        description: Allows management of a Yandex Cloud Serverless Event Router Rule.
        name: yandex_serverless_eventrouter_rule
        title: yandex_serverless_eventrouter_rule
        argumentDocs:
            batch_settings: '(Block List, Max: 1) Batch settings (see below for nested schema)'
            bus_id: (String) ID of the bus that the rule belongs to
            cloud_id: (String) ID of the cloud that the rule resides in
            container: (Block List) ContainerTarget (see below for nested schema)
            container_id: (String) Container ID
            container_revision_id: (String) Container revision ID
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) Creation timestamp
            cutoff: '(String) Maximum batch size: rule will send a batch if its lifetime exceeds this value'
            database: (String) Stream database
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) Deletion protection
            description: (String) Description of the rule
            folder_id: (String) ID of the folder that the rule resides in
            function: (Block List) FunctionTarget (see below for nested schema)
            function_id: (String) Function ID
            function_tag: (String) Function tag
            gateway_id: (String) Gateway ID
            gateway_websocket_broadcast: (Block List) GatewayWebsocketBroadcastTarget (see below for nested schema)
            id: (String) The ID of this resource.
            jq_filter: (String) JQ filter for matching events
            labels: (Map of String) Rule labels
            log_group_id: (String) Log group ID
            logging: (Block List) LoggingTarget. Includes either log_group_id or folder_id (see below for nested schema)
            max_bytes: '(Number) Maximum batch size: rule will send a batch if total size of events exceeds this value'
            max_count: '(Number) Maximum batch size: rule will send a batch if number of events exceeds this value'
            name: (String) Name of the rule
            path: (String) Endpoint HTTP path to invoke
            queue_arn: '(String) Queue ARN. Example: yrn:yc:ymq:ru-central1:aoe***:test'
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            service_account_id: (String) Service account which should be used to call a container
            stream_name: (String) Full stream name, like /ru-central1/aoegtvhtp8ob********/cc8004q4lbo6********/test
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            workflow: (Block List) WorkflowTarget (see below for nested schema)
            workflow_id: (String) Workflow ID
            yds: (Block List) YdsTarget (see below for nested schema)
            ymq: (Block List) YmqTarget (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_serverless_eventrouter_rule.<resource Name> <resource Id>
              terraform import yandex_serverless_eventrouter_rule.evr_rule ...
    yandex_smartcaptcha_captcha:
        subCategory: Smart Captcha
        description: Allows management of a Yandex Cloud SmartCaptcha.
        name: yandex_smartcaptcha_captcha
        title: yandex_smartcaptcha_captcha
        examples:
            - name: demo-captcha-simple
              manifest: |-
                {
                  "allowed_sites": [
                    "example.com",
                    "example.ru"
                  ],
                  "challenge_type": "IMAGE_TEXT",
                  "complexity": "HARD",
                  "deletion_protection": true,
                  "name": "demo-captcha-simple",
                  "pre_check_type": "SLIDER"
                }
            - name: demo-captcha-advanced
              manifest: |-
                {
                  "allowed_sites": [
                    "example.com",
                    "example.ru"
                  ],
                  "challenge_type": "IMAGE_TEXT",
                  "complexity": "HARD",
                  "deletion_protection": true,
                  "name": "demo-captcha-advanced",
                  "override_variant": [
                    {
                      "challenge_type": "SILHOUETTES",
                      "complexity": "EASY",
                      "description": "override variant 1",
                      "pre_check_type": "CHECKBOX",
                      "uuid": "xxx"
                    },
                    {
                      "challenge_type": "KALEIDOSCOPE",
                      "complexity": "HARD",
                      "description": "override variant 2",
                      "pre_check_type": "CHECKBOX",
                      "uuid": "yyy"
                    }
                  ],
                  "pre_check_type": "SLIDER",
                  "security_rule": [
                    {
                      "condition": [
                        {
                          "headers": [
                            {
                              "name": "User-Agent",
                              "value": [
                                {
                                  "pire_regex_match": ".*curl.*"
                                }
                              ]
                            },
                            {
                              "name": "Referer",
                              "value": [
                                {
                                  "pire_regex_not_match": ".*bot.*"
                                }
                              ]
                            }
                          ],
                          "host": [
                            {
                              "hosts": [
                                {
                                  "exact_match": "example.com"
                                },
                                {
                                  "exact_match": "example.net"
                                }
                              ]
                            }
                          ],
                          "source_ip": [
                            {
                              "geo_ip_match": [
                                {
                                  "locations": [
                                    "ru",
                                    "es"
                                  ]
                                }
                              ],
                              "geo_ip_not_match": [
                                {
                                  "locations": [
                                    "us",
                                    "fm",
                                    "gb"
                                  ]
                                }
                              ],
                              "ip_ranges_match": [
                                {
                                  "ip_ranges": [
                                    "1.2.33.44",
                                    "2.3.4.56"
                                  ]
                                }
                              ],
                              "ip_ranges_not_match": [
                                {
                                  "ip_ranges": [
                                    "8.8.0.0/16",
                                    "10::1234:1abc:1/64"
                                  ]
                                }
                              ]
                            }
                          ],
                          "uri": [
                            {
                              "path": [
                                {
                                  "prefix_match": "/form"
                                }
                              ],
                              "queries": [
                                {
                                  "key": "firstname",
                                  "value": [
                                    {
                                      "pire_regex_match": ".*ivan.*"
                                    }
                                  ]
                                },
                                {
                                  "key": "lastname",
                                  "value": [
                                    {
                                      "pire_regex_match": ".*petr.*"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "description": "My first security rule. This rule it's just example to show possibilities of configuration.",
                      "name": "rule1",
                      "override_variant_uuid": "xxx",
                      "priority": 11
                    },
                    {
                      "condition": [
                        {
                          "uri": [
                            {
                              "path": [
                                {
                                  "prefix_match": "/form"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "description": "Second rule",
                      "name": "rule2",
                      "override_variant_uuid": "yyy",
                      "priority": 555
                    },
                    {
                      "description": "Empty condition rule",
                      "name": "rule3",
                      "override_variant_uuid": "yyy",
                      "priority": 99999
                    }
                  ]
                }
        argumentDocs:
            CHECKBOX: '- User must click the ''I am not a robot'' button.'
            EASY: '- High chance to pass pre-check and easy advanced challenge.'
            FORCE_HARD: '- Impossible to pass pre-check and hard advanced challenge.'
            HARD: '- Little chance to pass pre-check and hard advanced challenge.'
            IMAGE_TEXT: '- Text recognition: The user has to type a distorted text from the picture into a special field.'
            KALEIDOSCOPE: '- Kaleidoscope: The user has to build a picture from individual parts by shuffling them using a slider.'
            MEDIUM: '- Medium chance to pass pre-check and normal advanced challenge.'
            SILHOUETTES: '- Silhouettes: The user has to mark several icons from the picture in a particular order.'
            SLIDER: '- User must move the slider from left to right.'
            allowed_sites: (List of String) List of allowed host names, see Domain validation.
            challenge_type: '(String) Additional task type of the captcha. Possible values:'
            client_key: (String) Client key of the captcha, see CAPTCHA keys.
            cloud_id: (String) The Cloud ID which resource belongs to. If it is not provided, the default provider cloud-id is used.
            complexity: '(String) Complexity of the captcha. Possible values:'
            condition: '(Block List, Max: 1) The condition for matching the rule. You can find all possibilities of condition in gRPC specs. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) Optional description of the rule. 0-512 characters long.
            exact_match: (String)
            exact_not_match: (String)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            geo_ip_match: '(Block List, Max: 1) (see below for nested schema)'
            geo_ip_not_match: '(Block List, Max: 1) (see below for nested schema)'
            headers: (Block List) (see below for nested schema)
            host: '(Block List, Max: 1) (see below for nested schema)'
            hosts: (Block List) (see below for nested schema)
            id: (String) The ID of this resource.
            ip_ranges: (List of String)
            ip_ranges_match: '(Block List, Max: 1) (see below for nested schema)'
            ip_ranges_not_match: '(Block List, Max: 1) (see below for nested schema)'
            key: (String)
            locations: (List of String)
            name: (String) The resource name.
            override_variant: (Block List) List of variants to use in security_rules. (see below for nested schema)
            override_variant_uuid: (String) Variant UUID to show in case of match the rule. Keep empty to use defaults.
            path: '(Block List, Max: 1) (see below for nested schema)'
            pire_regex_match: (String)
            pire_regex_not_match: (String)
            pre_check_type: '(String) Basic check type of the captcha.Possible values:'
            prefix_match: (String)
            prefix_not_match: (String)
            priority: (Number) Priority of the rule. Lower value means higher priority.
            queries: (Block List) (see below for nested schema)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            security_rule: (Block List) List of security rules. (see below for nested schema)
            source_ip: '(Block List, Max: 1) (see below for nested schema)'
            style_json: (String) JSON with variables to define the captcha appearance. For more details see generated JSON in cloud console.
            suspend: (Boolean)
            timeouts: (Block, Optional) (see below for nested schema)
            turn_off_hostname_check: (Boolean) Turn off host name check, see Domain validation.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            uri: '(Block List, Max: 1) (see below for nested schema)'
            uuid: (String) Unique identifier of the variant.
            value: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
        importStatements:
            - |-
              # terraform import yandex_smartcaptcha_captcha.<resource Name> <resource Id>
              terraform import yandex_smartcaptcha_captcha.demo-captcha-simple ...
    yandex_spark_cluster:
        subCategory: Managed Service for Apache Spark
        description: Manages an Apache Spark cluster within Yandex Cloud.
        name: yandex_spark_cluster
        title: yandex_spark_cluster
        examples:
            - name: my_spark_cluster
              manifest: |-
                {
                  "config": {
                    "dependencies": {
                      "pip_packages": [
                        "numpy==2.2.2"
                      ]
                    },
                    "resource_pools": {
                      "driver": {
                        "resource_preset_id": "c2-m8",
                        "size": 1
                      },
                      "executor": {
                        "max_size": 2,
                        "min_size": 1,
                        "resource_preset_id": "c4-m16"
                      }
                    }
                  },
                  "description": "created by terraform",
                  "labels": {
                    "my_key": "my_value"
                  },
                  "logging": {
                    "enabled": true,
                    "folder_id": "${var.folder_id}"
                  },
                  "maintenance_window": {
                    "day": "TUE",
                    "hour": 10,
                    "type": "WEEKLY"
                  },
                  "name": "spark-cluster-1",
                  "network": {
                    "security_group_ids": [
                      "${yandex_vpc_security_group.spark-sg1.id}"
                    ],
                    "subnet_ids": [
                      "${yandex_vpc_subnet.a.id}"
                    ]
                  },
                  "service_account_id": "${yandex_iam_service_account.for-spark.id}"
                }
              references:
                service_account_id: yandex_iam_service_account.for-spark.id
        argumentDocs:
            cluster_id: (String) Metastore cluster ID for default spark configuration.
            config: (Attributes) Configuration of the Spark cluster. (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The timestamp when the cluster was created.
            day: (String) Day of week for maintenance window. One of MON, TUE, WED, THU, FRI, SAT, SUN.
            deb_packages: (Set of String) Deb-packages that need to be installed using system package manager.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            dependencies: (Attributes) Environment dependencies. (see below for nested schema)
            description: (String) Description of the cluster. 0-256 characters long.
            driver: (Attributes) Computational resources for the driver pool. (see below for nested schema)
            enabled: '(Boolean) Enable Spark History Server. Default: true.'
            executor: (Attributes) Computational resources for the executor pool. (see below for nested schema)
            folder_id: (String) ID of the cloud folder that the cluster belongs to.
            health: (String) Aggregated health of the cluster.
            history_server: (Attributes) History Server configuration. (see below for nested schema)
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window.
            id: (String) Unique ID of the cluster.
            labels: (Map of String) Cluster labels as key/value pairs.
            log_group_id: (String) Logs will be written to the specified log group. Exactly one of the attributes folder_id or log_group_id should be specified.
            logging: (Attributes) Cloud Logging configuration. (see below for nested schema)
            maintenance_window: (Attributes) Configuration of the window for maintenance operations. (see below for nested schema)
            max_size: (Number) Maximum node count for the driver pool with autoscaling.
            metastore: (Attributes) Metastore configuration. (see below for nested schema)
            min_size: (Number) Minimum node count for the driver pool with autoscaling.
            name: (String) Name of the cluster. The name is unique within the folder.
            network: (Attributes) Network configuration. (see below for nested schema)
            pip_packages: (Set of String) Python packages that need to be installed using pip (in pip requirement format).
            resource_pools: (Attributes) Computational resources. (see below for nested schema)
            resource_preset_id: (String) Resource preset ID for the driver pool.
            security_group_ids: (Set of String) Network security groups.
            service_account_id: (String) The service account used by the cluster to access cloud resources.
            size: (Number) Node count for the driver pool with fixed size.
            status: (String) Status of the cluster.
            subnet_ids: (Set of String) Network subnets.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. If WEEKLY, day and hour must be specified.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements: []
    yandex_storage_bucket:
        subCategory: Object Storage (S3)
        description: Allows management of a Yandex Cloud Storage Bucket.
        name: yandex_storage_bucket
        title: yandex_storage_bucket
        examples:
            - name: test_bucket
              manifest: |-
                {
                  "bucket": "tf-test-bucket"
                }
            - name: test
              manifest: |-
                {
                  "access_key": "${yandex_iam_service_account_static_access_key.sa-static-key.access_key}",
                  "bucket": "tf-test-bucket",
                  "secret_key": "${yandex_iam_service_account_static_access_key.sa-static-key.secret_key}"
                }
              references:
                access_key: yandex_iam_service_account_static_access_key.sa-static-key.access_key
                secret_key: yandex_iam_service_account_static_access_key.sa-static-key.secret_key
              dependencies:
                yandex_iam_service_account.sa: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "name": "tf-test-sa"
                    }
                yandex_iam_service_account_static_access_key.sa-static-key: |-
                    {
                      "description": "static access key for object storage",
                      "service_account_id": "${yandex_iam_service_account.sa.id}"
                    }
                yandex_resourcemanager_folder_iam_member.sa-editor: |-
                    {
                      "folder_id": "${local.folder_id}",
                      "member": "serviceAccount:${yandex_iam_service_account.sa.id}",
                      "role": "storage.editor"
                    }
            - name: test
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "storage-website-test.hashicorp.com",
                  "website": [
                    {
                      "error_document": "error.html",
                      "index_document": "index.html",
                      "routing_rules": "[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"documents/\"\n    }\n}]\n"
                    }
                  ]
                }
            - name: test
              manifest: |-
                {
                  "bucket": "mybucket",
                  "grant": [
                    {
                      "id": "myuser",
                      "permissions": [
                        "FULL_CONTROL"
                      ],
                      "type": "CanonicalUser"
                    },
                    {
                      "permissions": [
                        "READ",
                        "WRITE"
                      ],
                      "type": "Group",
                      "uri": "http://acs.amazonaws.com/groups/global/AllUsers"
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "public-read",
                  "bucket": "s3-website-test.hashicorp.com",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "PUT",
                        "POST"
                      ],
                      "allowed_origins": [
                        "https://s3-website-test.hashicorp.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "acl": "private",
                  "bucket": "my-tf-test-bucket",
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::my-policy-bucket/*\",\n        \"arn:aws:s3:::my-policy-bucket\"\n      ]\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": \"s3:PutObject\",\n      \"Resource\": [\n        \"arn:aws:s3:::my-policy-bucket/*\",\n        \"arn:aws:s3:::my-policy-bucket\"\n      ]\n    }\n  ]\n}\n"
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "tags": {
                    "other_key": "other_value",
                    "test_key": "test_value"
                  }
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "max_size": 1048576
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "folder_id": "\u003cfolder_id\u003e"
                }
            - name: b
              manifest: |-
                {
                  "anonymous_access_flags": [
                    {
                      "config_read": true,
                      "list": false,
                      "read": true
                    }
                  ],
                  "bucket": "my-policy-bucket"
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "https": [
                    {
                      "certificate_id": "\u003ccertificate_id_from_certificate_manager\u003e"
                    }
                  ]
                }
            - name: b
              manifest: |-
                {
                  "bucket": "my-policy-bucket",
                  "default_storage_class": "COLD"
                }
            - name: log_bucket
              manifest: |-
                {
                  "bucket": "my-tf-log-bucket",
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 365
                        }
                      ],
                      "id": "cleanupoldlogs"
                    }
                  ]
                }
              dependencies:
                yandex_kms_symmetric_key.key-a: |-
                    {
                      "default_algorithm": "AES_128",
                      "description": "description for key",
                      "name": "example-symetric-key",
                      "rotation_period": "8760h"
                    }
            - name: all_settings
              manifest: |-
                {
                  "anonymous_access_flags": [
                    {
                      "list": true,
                      "read": true
                    }
                  ],
                  "bucket": "example-tf-settings-bucket",
                  "cors_rule": [
                    {
                      "allowed_headers": [
                        "*"
                      ],
                      "allowed_methods": [
                        "GET",
                        "PUT"
                      ],
                      "allowed_origins": [
                        "https://storage-cloud.example.com"
                      ],
                      "expose_headers": [
                        "ETag"
                      ],
                      "max_age_seconds": 3000
                    }
                  ],
                  "default_storage_class": "COLD",
                  "folder_id": "\u003cfolder_id\u003e",
                  "https": {
                    "certificate_id": "\u003ccertificate_id\u003e"
                  },
                  "lifecycle_rule": [
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 30
                        }
                      ],
                      "id": "test",
                      "prefix": "prefix/"
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "id": "log",
                      "prefix": "log/",
                      "transition": [
                        {
                          "days": 30,
                          "storage_class": "COLD"
                        }
                      ]
                    },
                    {
                      "enabled": true,
                      "expiration": [
                        {
                          "days": 180
                        }
                      ],
                      "id": "everything180",
                      "prefix": ""
                    },
                    {
                      "enabled": true,
                      "id": "cleanupoldversions",
                      "noncurrent_version_expiration": [
                        {
                          "days": 90
                        }
                      ],
                      "noncurrent_version_transition": [
                        {
                          "days": 30,
                          "storage_class": "COLD"
                        }
                      ],
                      "prefix": "config/"
                    },
                    {
                      "abort_incomplete_multipart_upload_days": 7,
                      "enabled": true,
                      "id": "abortmultiparts",
                      "prefix": ""
                    }
                  ],
                  "logging": [
                    {
                      "target_bucket": "${yandex_storage_bucket.log_bucket.id}",
                      "target_prefix": "tf-logs/"
                    }
                  ],
                  "max_size": 1024,
                  "server_side_encryption_configuration": [
                    {
                      "rule": [
                        {
                          "apply_server_side_encryption_by_default": [
                            {
                              "kms_master_key_id": "${yandex_kms_symmetric_key.key-a.id}",
                              "sse_algorithm": "aws:kms"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "tags": {
                    "some_key": "some_value"
                  },
                  "versioning": [
                    {
                      "enabled": true
                    }
                  ],
                  "website": [
                    {
                      "error_document": "error.html",
                      "index_document": "index.html"
                    }
                  ]
                }
              references:
                logging.target_bucket: yandex_storage_bucket.log_bucket.id
                server_side_encryption_configuration.rule.apply_server_side_encryption_by_default.kms_master_key_id: yandex_kms_symmetric_key.key-a.id
              dependencies:
                yandex_kms_symmetric_key.key-a: |-
                    {
                      "default_algorithm": "AES_128",
                      "description": "description for key",
                      "name": "example-symetric-key",
                      "rotation_period": "8760h"
                    }
        argumentDocs:
            abort_incomplete_multipart_upload_days: (Number) Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
            access_key: (String) The access key to use when applying changes. This value can also be provided as storage_access_key specified in provider config (explicitly or within shared_credentials_file) is used.
            acl: (String, Deprecated) The predefined ACL to apply. Defaults to private. Conflicts with grant.
            allowed_headers: (List of String) Specifies which headers are allowed.
            allowed_methods: (List of String) Specifies which methods are allowed. Can be GET, PUT, POST, DELETE or HEAD.
            allowed_origins: (List of String) Specifies which origins are allowed.
            and: '(Block List, Max: 1) A logical and operator applied to one or more filter parameters. It should be used when two or more of the above parameters are used. (see below for nested schema)'
            anonymous_access_flags: '(Block Set, Max: 1) Provides various access to objects. See Bucket Availability for more information. (see below for nested schema)'
            apply_server_side_encryption_by_default: '(Block List, Min: 1, Max: 1) A single object for setting server-side encryption by default. (see below for nested schema)'
            bucket: (String) The name of the bucket. If omitted, Terraform will assign a random, unique name.
            bucket_domain_name: (String) The bucket domain name.
            bucket_prefix: (String) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket.
            certificate_id: (String) Id of the certificate in Certificate Manager, that will be used for bucket.
            config_read: (Boolean) Allows to read bucket configuration anonymously.
            cors_rule: (Block List) A rule of Cross-Origin Resource Sharing (CORS object). (see below for nested schema)
            date: (String) Specifies the date after which you want the corresponding action to take effect.
            days: (Number) Specifies the number of days after object creation when the specific rule action takes effect.
            default_retention: '(Block List, Min: 1, Max: 1) Default retention object. (see below for nested schema)'
            default_storage_class: '(String) Storage class which is used for storing objects by default. Available values are: "STANDARD", "COLD", "ICE". Default is "STANDARD". See Storage Class for more information.'
            enabled: (Boolean) Specifies lifecycle rule status.
            error_document: (String) An absolute path to the document to return in case of a 4XX error.
            expiration: '(Block List, Max: 1) Specifies a period in the object''s expire. (see below for nested schema)'
            expired_object_delete_marker: (Boolean) n a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.
            expose_headers: (List of String) Specifies expose header in the response.
            filter: '(Block List, Max: 1) Filter block identifies one or more objects to which the rule applies. A Filter must have exactly one of Prefix, Tag, or And specified. The filter supports options listed below.'
            folder_id: (String) Allow to create bucket in different folder. In case you are using IAM token from UserAccount, you are needed to explicitly specify folder_id in the resource, as it cannot be identified from such type of account. In case you are using IAM token from ServiceAccount or static access keys, folder_id does not need to be specified unless you want to create the resource in a different folder than the account folder.
            force_destroy: (Boolean) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable. Default is false.
            grant: (Block Set, Deprecated) An ACL policy grant. Conflicts with acl.
            https: '(Block Set, Max: 1) Manages https certificates for bucket. See https for more information. (see below for nested schema)'
            id: (String) The ID of this resource.
            index_document: (String) Storage returns this index document when requests are made to the root domain or any of the subfolders (unless using redirect_all_requests_to).
            key: (String) A key.
            kms_master_key_id: (String) The KMS master key ID used for the SSE-KMS encryption.
            lifecycle_rule: (Block List) A configuration of object lifecycle management. (see below for nested schema)
            list: (Boolean) Allows to list object in bucket anonymously.
            logging: (Block Set) A settings of bucket logging. (see below for nested schema)
            max_age_seconds: (Number) Specifies time in seconds that browser can cache the response for a preflight request.
            max_size: (Number) The size of bucket, in bytes. See Size Limiting for more information.
            mode: (String) Specifies a type of object lock. One of ["GOVERNANCE", "COMPLIANCE"].
            noncurrent_version_expiration: '(Block List, Max: 1) Specifies when noncurrent object versions expire. (see below for nested schema)'
            noncurrent_version_transition: (Block Set) Specifies when noncurrent object versions transitions. (see below for nested schema)
            object_lock_configuration: '(Block List, Max: 1) A configuration of object lock management. (see below for nested schema)'
            object_lock_enabled: (String) Enable object locking in a bucket. Require versioning to be enabled.
            object_size_greater_than: (Number) Minimum object size to which the rule applies.
            object_size_less_than: (Number) Maximum object size to which the rule applies.
            permissions: (Set of String) List of permissions to apply for grantee. Valid values are READ, WRITE, FULL_CONTROL.
            policy: (String, Deprecated) The policy object should contain the only field with the text of the policy. See policy documentation for more information on policy format.
            prefix: (String, Deprecated) Object key prefix identifying one or more objects to which the rule applies.
            read: (Boolean) Allows to read objects in bucket anonymously.
            redirect_all_requests_to: (String) A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting requests. The default is the protocol that is used in the original request.
            routing_rules: (String) A JSON array containing routing rules describing redirect behavior and when redirects are applied.
            rule: '(Block List, Max: 1) Specifies a default locking configuration for added objects. Require object_lock_enabled to be enabled. (see below for nested schema)'
            secret_key: (String, Sensitive) The secret key to use when applying changes. This value can also be provided as storage_secret_key specified in provider config (explicitly or within shared_credentials_file) is used.
            server_side_encryption_configuration: '(Block List, Max: 1) A configuration of server-side encryption for the bucket. (see below for nested schema)'
            sse_algorithm: (String) The server-side encryption algorithm to use. Single valid value is aws:kms.
            storage_class: '(String) Specifies the storage class to which you want the noncurrent object versions to transition. Supported values: [STANDARD_IA, COLD, ICE].'
            tag: '(Block List, Max: 1) A key and value pair for filtering objects. E.g.: key=key1, value=value1. (see below for nested schema)'
            tags: (Map of String) The tags object for setting tags (or labels) for bucket. See Tags for more information.
            target_bucket: (String) The name of the bucket that will receive the log objects.
            target_prefix: (String) To specify a key prefix for log objects.
            transition: (Block Set) Specifies a period in the object's transitions. (see below for nested schema)
            type: (String) Type of grantee to apply for. Valid values are CanonicalUser and Group.
            uri: (String) URI address to grant for. Used only when type is Group.
            value: (String) A value.
            versioning: '(Block List, Max: 1) A state of versioning.'
            website: '(Block List, Max: 1) A Website Object (see below for nested schema)'
            website_domain: (String) The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
            website_endpoint: (String) The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
            years: (Number) Specifies a retention period in years after uploading an object version. It must be a positive integer. You can't set it simultaneously with days.
        importStatements:
            - |-
              # terraform import yandex_storage_bucket.<resource Name> <resource Id>
              terraform import yandex_storage_bucket.test_bucket ...
    yandex_storage_bucket_grant:
        subCategory: Object Storage (S3)
        description: Allows management of grants on an existing Yandex Cloud Storage Bucket.
        name: yandex_storage_bucket_grant
        title: yandex_storage_bucket_grant
        examples:
            - name: my_grant_0
              manifest: |-
                {
                  "bucket": "my_bucket_name_0",
                  "grant": [
                    {
                      "id": "\u003cuser_id\u003e",
                      "permissions": [
                        "READ",
                        "WRITE",
                        "FULL_CONTROL"
                      ],
                      "type": "CanonicalUser"
                    }
                  ]
                }
            - name: my_grant_1
              manifest: |-
                {
                  "bucket": "my_bucket_name_1",
                  "grant": [
                    {
                      "id": "\u003cuser_id\u003e",
                      "permissions": [
                        "FULL_CONTROL"
                      ],
                      "type": "CanonicalUser"
                    },
                    {
                      "permissions": [
                        "READ"
                      ],
                      "type": "Group",
                      "uri": "\u003cgroup_uri\u003e"
                    }
                  ]
                }
            - name: my_bucket_grant
              manifest: |-
                {
                  "bucket": "my_bucket_name_0",
                  "grant": [
                    {
                      "id": "\u003cuser0_id\u003e",
                      "permissions": [
                        "READ",
                        "WRITE"
                      ],
                      "type": "CanonicalUser"
                    },
                    {
                      "id": "\u003cuser1_id\u003e",
                      "permissions": [
                        "FULL_CONTROL"
                      ],
                      "type": "CanonicalUser"
                    },
                    {
                      "permissions": [
                        "READ"
                      ],
                      "type": "Group",
                      "uri": "http://acs.amazonaws.com/groups/global/AuthenticatedUsers"
                    }
                  ]
                }
        argumentDocs:
            access_key: (String) The access key to use when applying changes. This value can also be provided as storage_access_key specified in provider config (explicitly or within shared_credentials_file) is used.
            acl: (String) The predefined ACL to apply. Defaults to private. Conflicts with grant.
            bucket: (String) The name of the bucket.
            grant: |-
                (Block List) An ACL policy grant. Conflicts with acl.
                All permissions for a single grantee must be specified in a single grant block.
            id: (String) Canonical user id to grant for. Used only when type is CanonicalUser.
            permissions: (List of String) List of permissions to apply for grantee. Valid values are READ, WRITE, FULL_CONTROL.
            secret_key: (String, Sensitive) The secret key to use when applying changes. This value can also be provided as storage_secret_key specified in provider config (explicitly or within shared_credentials_file) is used.
            type: (String) Type of grantee to apply for. Valid values are CanonicalUser and Group.
            uri: (String) URI address to grant for. Used only when type is Group.
        importStatements: []
    yandex_storage_bucket_iam_binding:
        subCategory: Object Storage (S3)
        description: Allows management of a single IAM binding for a Object Storage (S3) bucket.
        name: yandex_storage_bucket_iam_binding
        title: yandex_storage_bucket_iam_binding
        examples:
            - name: bucket-iam
              manifest: |-
                {
                  "bucket": "your-bucket-name",
                  "members": [
                    "system:allUsers"
                  ],
                  "role": "storage.admin"
                }
        argumentDocs:
            bucket: (String) The name of the Object Storage (S3) bucket to attach the policy to. This resource should be used for managing Service roles only.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be assigned. Only one yandex_storage_bucket_iam_binding can be used per role.
        importStatements:
            - |-
              # terraform import yandex_storage_bucket_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_storage_bucket_iam_binding.bucket-iam "... storage.admin"
    yandex_storage_bucket_policy:
        subCategory: Object Storage (S3)
        description: Allows management of a policy on an existing Yandex Cloud Storage Bucket.
        name: yandex_storage_bucket_policy
        title: yandex_storage_bucket_policy
        examples:
            - name: my_policy_0
              manifest: |-
                {
                  "bucket": "my_bucket_name_0",
                  "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::my-policy-bucket/*\",\n        \"arn:aws:s3:::my-policy-bucket\"\n      ]\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Principal\": \"*\",\n      \"Action\": \"s3:PutObject\",\n      \"Resource\": [\n        \"arn:aws:s3:::my-policy-bucket/*\",\n        \"arn:aws:s3:::my-policy-bucket\"\n      ]\n    }\n  ]\n}\n"
                }
        argumentDocs:
            access_key: (String, Sensitive) The access key to use when applying changes. This value can also be provided as storage_access_key specified in provider config (explicitly or within shared_credentials_file) is used.
            bucket: (String) The name of the bucket.
            policy: (String) The text of the policy.
            secret_key: (String, Sensitive) The secret key to use when applying changes. This value can also be provided as storage_secret_key specified in provider config (explicitly or within shared_credentials_file) is used.
        importStatements: []
    yandex_storage_object:
        subCategory: Object Storage (S3)
        description: Allows management of a Yandex Cloud Storage Object.
        name: yandex_storage_object
        title: yandex_storage_object
        examples:
            - name: cute-cat-picture
              manifest: |-
                {
                  "bucket": "cat-pictures",
                  "key": "cute-cat",
                  "source": "/images/cats/cute-cat.jpg",
                  "tags": {
                    "test": "value"
                  }
                }
        argumentDocs:
            access_key: (String) The access key to use when applying changes. This value can also be provided as storage_access_key specified in provider config (explicitly or within shared_credentials_file) is used.
            acl: (String) The predefined ACL to apply. Defaults to private.
            bucket: (String) The name of the containing bucket.
            content: (String) Literal string value to use as the object content, which will be uploaded as UTF-8-encoded text. Conflicts with source and content_base64.
            content_base64: (String) Base64-encoded data that will be decoded and uploaded as raw bytes for the object content. This allows safely uploading non-UTF8 binary data, but is recommended only for small content such as the result of the gzipbase64 function with small text strings. For larger objects, use source to stream the content from a disk file. Conflicts with source and content.
            content_type: (String) A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.
            id: (String) The ID of this resource.
            key: (String) The name of the object once it is in the bucket.
            object_lock_legal_hold_status: (String) Specifies a legal hold status of an object. Requires object_lock_configuration to be enabled on a bucket.
            object_lock_mode: (String) Specifies a type of object lock. One of ["GOVERNANCE", "COMPLIANCE"]. It must be set simultaneously with object_lock_retain_until_date. Requires object_lock_configuration to be enabled on a bucket.
            object_lock_retain_until_date: (String) Specifies date and time in RTC3339 format until which an object is to be locked. It must be set simultaneously with object_lock_mode. Requires object_lock_configuration to be enabled on a bucket.
            secret_key: (String, Sensitive) The secret key to use when applying changes. This value can also be provided as storage_secret_key specified in provider config (explicitly or within shared_credentials_file) is used.
            source: (String) The path to a file that will be read and uploaded as raw bytes for the object content. Conflicts with content and content_base64.
            source_hash: (String) Used to trigger object update when the source content changes. So the only meaningful value is `filemd5("path/to/source"). The value is only stored in state and not saved by Yandex Storage.
            tags: (Map of String) The tags object for setting tags (or labels) for bucket. See Tags for more information.
        importStatements: []
    yandex_sws_advanced_rate_limiter_profile:
        subCategory: Smart Web Security (SWS)
        description: Manage a SWS Advanced Rate Limiter.
        name: yandex_sws_advanced_rate_limiter_profile
        title: yandex_sws_advanced_rate_limiter_profile
        examples:
            - name: demo-profile
              manifest: |-
                {
                  "advanced_rate_limiter_rule": [
                    {
                      "description": "First test rule",
                      "dry_run": true,
                      "name": "rule1",
                      "priority": 10,
                      "static_quota": [
                        {
                          "action": "DENY",
                          "condition": [
                            {
                              "request_uri": [
                                {
                                  "path": [
                                    {
                                      "exact_match": "/api"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "limit": 10000000,
                          "period": 1
                        }
                      ]
                    }
                  ],
                  "name": "demo-profile"
                }
        argumentDocs:
            action: '(String) Action in case of exceeding this quota. Possible values: DENY.'
            advanced_rate_limiter_rule: (Block List) List of rules.
            authorities: (Block List) (see below for nested schema)
            authority: '(Block List, Max: 1) (see below for nested schema)'
            case_insensitive: (Boolean) Determines case-sensitive or case-insensitive keys matching.
            characteristic: (Block List) List of characteristics.
            cloud_id: (String) The Cloud ID which resource belongs to. If it is not provided, the default provider cloud-id is used.
            condition: '(Block List, Max: 1) The condition for matching the rule. You can find all possibilities of condition in gRPC specs. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            dry_run: (Boolean) This allows you to evaluate backend capabilities and find the optimum limit values. Requests will not be blocked in this mode.
            dynamic_quota: '(Block List, Max: 1) Dynamic quota. Grouping requests by a certain attribute and limiting the number of groups. (see below for nested schema)'
            exact_match: (String)
            exact_not_match: (String)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            geo_ip_match: '(Block List, Max: 1) (see below for nested schema)'
            geo_ip_not_match: '(Block List, Max: 1) (see below for nested schema)'
            headers: (Block List) (see below for nested schema)
            http_method: '(Block List, Max: 1) (see below for nested schema)'
            http_methods: (Block List) (see below for nested schema)
            id: (String) The ID of this resource.
            ip_ranges: (List of String)
            ip_ranges_match: '(Block List, Max: 1) (see below for nested schema)'
            ip_ranges_not_match: '(Block List, Max: 1) (see below for nested schema)'
            key: (String)
            key_characteristic: '(Block List, Max: 1) Characteristic based on key match in the Query params, HTTP header, and HTTP cookie attributes. See Rules for more details. (see below for nested schema)'
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            limit: (Number) Desired maximum number of requests per period.
            locations: (List of String)
            name: (String) The resource name.
            path: '(Block List, Max: 1) (see below for nested schema)'
            period: (Number) Period of time in seconds.
            pire_regex_match: (String)
            pire_regex_not_match: (String)
            prefix_match: (String)
            prefix_not_match: (String)
            priority: (Number) Determines the priority in case there are several matched rules. Enter an integer within the range of 1 and 999999. The rule priority must be unique within the entire ARL profile. A lower numeric value means a higher priority.
            queries: (Block List) (see below for nested schema)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            request_uri: '(Block List, Max: 1) (see below for nested schema)'
            simple_characteristic: '(Block List, Max: 1) Characteristic automatically based on the Request path, HTTP method, IP address, Region, and Host attributes. See Rules for more details. (see below for nested schema)'
            source_ip: '(Block List, Max: 1) (see below for nested schema)'
            static_quota: '(Block List, Max: 1) Static quota. Counting each request individually. (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            type: '(String) Type of key characteristic. Possible values: COOKIE_KEY, HEADER_KEY, QUERY_KEY.'
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            value: (String) String value of the key.
        importStatements:
            - |-
              # terraform import yandex_sws_advanced_rate_limiter_profile.<resource Name> <resource Id>
              terraform import yandex_sws_advanced_rate_limiter_profile.demo-profile ...
    yandex_sws_security_profile:
        subCategory: Smart Web Security (SWS)
        description: With security profiles you can protect your infrastructure from DDoS attacks at the application level (L7).
        name: yandex_sws_security_profile
        title: yandex_sws_security_profile
        examples:
            - name: demo-profile-simple
              manifest: |-
                {
                  "default_action": "ALLOW",
                  "name": "demo-profile-simple",
                  "security_rule": [
                    {
                      "name": "smart-protection",
                      "priority": 99999,
                      "smart_protection": [
                        {
                          "mode": "API"
                        }
                      ]
                    }
                  ]
                }
            - name: demo-profile-advanced
              manifest: |-
                {
                  "advanced_rate_limiter_profile_id": "\u003carl_id\u003e",
                  "captcha_id": "\u003ccaptcha_id\u003e",
                  "default_action": "ALLOW",
                  "name": "demo-profile-advanced",
                  "security_rule": [
                    {
                      "name": "smart-protection",
                      "priority": 99999,
                      "smart_protection": [
                        {
                          "mode": "API"
                        }
                      ]
                    },
                    {
                      "name": "waf",
                      "priority": 88888,
                      "waf": [
                        {
                          "mode": "API",
                          "waf_profile_id": "\u003cwaf_id\u003e"
                        }
                      ]
                    },
                    {
                      "name": "rule-condition-1",
                      "priority": 1,
                      "rule_condition": [
                        {
                          "action": "ALLOW",
                          "condition": [
                            {
                              "authority": [
                                {
                                  "authorities": [
                                    {
                                      "exact_match": "example.com"
                                    },
                                    {
                                      "exact_match": "example.net"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "rule-condition-2",
                      "priority": 2,
                      "rule_condition": [
                        {
                          "action": "DENY",
                          "condition": [
                            {
                              "http_method": [
                                {
                                  "http_methods": [
                                    {
                                      "exact_match": "DELETE"
                                    },
                                    {
                                      "exact_match": "PUT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "name": "rule-condition-3",
                      "priority": 3,
                      "rule_condition": [
                        {
                          "action": "DENY",
                          "condition": [
                            {
                              "headers": [
                                {
                                  "name": "User-Agent",
                                  "value": [
                                    {
                                      "pire_regex_match": ".*curl.*"
                                    }
                                  ]
                                },
                                {
                                  "name": "Referer",
                                  "value": [
                                    {
                                      "pire_regex_not_match": ".*bot.*"
                                    }
                                  ]
                                }
                              ],
                              "request_uri": [
                                {
                                  "path": [
                                    {
                                      "prefix_match": "/form"
                                    }
                                  ],
                                  "queries": [
                                    {
                                      "key": "firstname",
                                      "value": [
                                        {
                                          "pire_regex_match": ".*ivan.*"
                                        }
                                      ]
                                    },
                                    {
                                      "key": "lastname",
                                      "value": [
                                        {
                                          "pire_regex_match": ".*petr.*"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "source_ip": [
                                {
                                  "geo_ip_match": [
                                    {
                                      "locations": [
                                        "ru",
                                        "es"
                                      ]
                                    }
                                  ],
                                  "geo_ip_not_match": [
                                    {
                                      "locations": [
                                        "us",
                                        "fm",
                                        "gb"
                                      ]
                                    }
                                  ],
                                  "ip_ranges_match": [
                                    {
                                      "ip_ranges": [
                                        "1.2.33.44",
                                        "2.3.4.56"
                                      ]
                                    }
                                  ],
                                  "ip_ranges_not_match": [
                                    {
                                      "ip_ranges": [
                                        "8.8.0.0/16",
                                        "10::1234:1abc:1/64"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            action: '(String) Action to perform if this rule matched. Possible values: ALLOW or DENY.'
            advanced_rate_limiter_profile_id: (String) Advanced rate limiter profile ID to use with this security profile. Set empty to use default.
            authorities: (Block List) (see below for nested schema)
            authority: '(Block List, Max: 1) (see below for nested schema)'
            captcha_id: (String) Captcha ID to use with this security profile. Set empty to use default.
            cloud_id: (String) The Cloud ID which resource belongs to. If it is not provided, the default provider cloud-id is used.
            condition: '(Block List, Max: 1) The condition for matching the rule. You can find all possibilities of condition in gRPC specs. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            default_action: '(String) Action to perform if none of rules matched. Possible values: ALLOW or DENY.'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            dry_run: (Boolean) This mode allows you to test your security profile or a single rule.
            exact_match: (String)
            exact_not_match: (String)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            geo_ip_match: '(Block List, Max: 1) (see below for nested schema)'
            geo_ip_not_match: '(Block List, Max: 1) (see below for nested schema)'
            headers: (Block List) (see below for nested schema)
            http_method: '(Block List, Max: 1) (see below for nested schema)'
            http_methods: (Block List) (see below for nested schema)
            id: (String) The ID of this resource.
            ip_ranges: (List of String)
            ip_ranges_match: '(Block List, Max: 1) (see below for nested schema)'
            ip_ranges_not_match: '(Block List, Max: 1) (see below for nested schema)'
            key: (String)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            locations: (List of String)
            mode: '(String) Mode of protection. Possible values: FULL (full protection means that the traffic will be checked based on ML models and behavioral analysis, with suspicious requests being sent to SmartCaptcha) or API (API protection means checking the traffic based on ML models and behavioral analysis without sending suspicious requests to SmartCaptcha. The suspicious requests will be blocked).'
            name: (String) The resource name.
            path: '(Block List, Max: 1) (see below for nested schema)'
            pire_regex_match: (String)
            pire_regex_not_match: (String)
            prefix_match: (String)
            prefix_not_match: (String)
            priority: (Number) Determines the priority for checking the incoming traffic.
            queries: (Block List) (see below for nested schema)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            request_uri: '(Block List, Max: 1) (see below for nested schema)'
            rule_condition: '(Block List, Max: 1) Rule actions, see Rule actions. (see below for nested schema)'
            security_rule: (Block List) List of security rules.
            smart_protection: '(Block List, Max: 1) Smart Protection rule, see Smart Protection rules. (see below for nested schema)'
            source_ip: '(Block List, Max: 1) (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            value: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            waf: '(Block List, Max: 1) Web Application Firewall (WAF) rule, see WAF rules. (see below for nested schema)'
            waf_profile_id: (String) ID of WAF profile to use in this rule.
        importStatements:
            - |-
              # terraform import yandex_sws_security_profile.<resource Name> <resource Id>
              terraform import yandex_sws_security_profile.demo-profile-simple ...
    yandex_sws_waf_profile:
        subCategory: Smart Web Security (SWS)
        description: Manage a Web Application Firewall in Yandex Cloud.
        name: yandex_sws_waf_profile
        title: yandex_sws_waf_profile
        examples:
            - name: empty
              manifest: |-
                {
                  "core_rule_set": [
                    {
                      "inbound_anomaly_score": 2,
                      "paranoia_level": 1,
                      "rule_set": [
                        {
                          "name": "OWASP Core Ruleset",
                          "version": "4.0.0"
                        }
                      ]
                    }
                  ],
                  "name": "waf-profile-dummy"
                }
            - name: default
              manifest: |-
                {
                  "analyze_request_body": [
                    {
                      "is_enabled": true,
                      "size_limit": 8,
                      "size_limit_action": "IGNORE"
                    }
                  ],
                  "core_rule_set": [
                    {
                      "inbound_anomaly_score": 2,
                      "paranoia_level": "${local.waf_paranoia_level}",
                      "rule_set": [
                        {
                          "name": "OWASP Core Ruleset",
                          "version": "4.0.0"
                        }
                      ]
                    }
                  ],
                  "dynamic": {
                    "rule": [
                      {
                        "content": [
                          {
                            "is_blocking": false,
                            "is_enabled": true,
                            "rule_id": "${rule.value.id}"
                          }
                        ],
                        "for_each": "${[\n      for rule in data.yandex_sws_waf_rule_set_descriptor.owasp4.rules : rule\n      if rule.paranoia_level \u003e= local.waf_paranoia_level\n    ]}"
                      }
                    ]
                  },
                  "name": "waf-profile-default"
                }
              references:
                core_rule_set.paranoia_level: local.waf_paranoia_level
                dynamic.content.rule_id: rule.value.id
        argumentDocs:
            analyze_request_body: '(Block List, Max: 1) Parameters for request body analyzer. (see below for nested schema)'
            authorities: (Block List) (see below for nested schema)
            authority: '(Block List, Max: 1) (see below for nested schema)'
            cloud_id: (String) The Cloud ID which resource belongs to. If it is not provided, the default provider cloud-id is used.
            condition: '(Block List, Max: 1) (see below for nested schema)'
            core_rule_set: '(Block List, Max: 1) Core rule set settings. See Basic rule set for details. (see below for nested schema)'
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            exact_match: (String)
            exact_not_match: (String)
            exclude_all: (Boolean) Set this option true to exclude all rules.
            exclude_rules: '(Block List, Min: 1, Max: 1) Exclude rules. (see below for nested schema)'
            exclusion_rule: (Block List) List of exclusion rules. See Rules. (see below for nested schema)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            geo_ip_match: '(Block List, Max: 1) (see below for nested schema)'
            geo_ip_not_match: '(Block List, Max: 1) (see below for nested schema)'
            headers: (Block List) (see below for nested schema)
            http_method: '(Block List, Max: 1) (see below for nested schema)'
            http_methods: (Block List) (see below for nested schema)
            id: (String) The ID of this resource.
            inbound_anomaly_score: (Number) Anomaly score. Enter an integer within the range of 2 and 10000. The higher this value, the more likely it is that the request that satisfies the rule is an attack. See Rules for more details.
            ip_ranges: (List of String)
            ip_ranges_match: '(Block List, Max: 1) (see below for nested schema)'
            ip_ranges_not_match: '(Block List, Max: 1) (see below for nested schema)'
            is_blocking: (Boolean) Determines is it rule blocking or not.
            is_enabled: (Boolean) Possible to turn analyzer on and turn if off.
            key: (String)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            locations: (List of String)
            log_excluded: (Boolean) Records the fact that an exception rule is triggered.
            name: (String) The resource name.
            paranoia_level: '(Number) Paranoia level. Enter an integer within the range of 1 and 4. Paranoia level classifies rules according to their aggression. The higher the paranoia level, the better your protection, but also the higher the probability of WAF false positives. See Rules for more details. NOTE: this option has no effect on enabling or disabling rules, it is used only as recommendation for user to enable all rules with paranoia_level <= this value.'
            path: '(Block List, Max: 1) (see below for nested schema)'
            pire_regex_match: (String)
            pire_regex_not_match: (String)
            prefix_match: (String)
            prefix_not_match: (String)
            queries: (Block List) (see below for nested schema)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            request_uri: '(Block List, Max: 1) (see below for nested schema)'
            rule: (Block List) Settings for each rule in rule set. (see below for nested schema)
            rule_id: (String) Rule ID.
            rule_ids: (List of String) List of rules to exclude.
            rule_set: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            size_limit: (Number) Maximum size of body to pass to analyzer. In kilobytes.
            size_limit_action: '(String) Action to perform if maximum size of body exceeded. Possible values: IGNORE and DENY.'
            source_ip: '(Block List, Max: 1) (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            value: '(Block List, Min: 1, Max: 1) (see below for nested schema)'
            version: (String)
        importStatements:
            - |-
              # terraform import yandex_sws_waf_profile.<resource Name> <resource Id>
              terraform import yandex_sws_waf_profile.default ...
    yandex_trino_catalog:
        subCategory: Managed Service for Trino
        description: Manages Trino catalog within Yandex Cloud.
        name: yandex_trino_catalog
        title: yandex_trino_catalog
        examples:
            - name: catalog
              manifest: |-
                {
                  "cluster_id": "${yandex_trino_cluster.trino.id}",
                  "description": "descriptionr",
                  "name": "name",
                  "postgresql": {
                    "connection_manager": {
                      "connection_id": "\u003cconnection_id\u003e",
                      "connection_properties": {
                        "targetServerType": "primary"
                      },
                      "database": "database-name"
                    }
                  }
                }
              references:
                cluster_id: yandex_trino_cluster.trino.id
        argumentDocs:
            additional_properties: (Map of String) Additional properties.
            aws_access_key: (String, Sensitive) AWS access key ID for S3 authentication.
            aws_endpoint: (String) AWS S3 compatible endpoint URL.
            aws_region: (String) AWS region for S3 storage.
            aws_secret_key: (String, Sensitive) AWS secret access key for S3 authentication.
            clickhouse: (Attributes) Configuration for Clickhouse connector. (see below for nested schema)
            cluster_id: (String) ID of the Trino cluster. Provided by the client when the Catalog is created.
            connection_id: (String) Connection ID.
            connection_manager: (Attributes) Configuration for connection manager connection. (see below for nested schema)
            connection_properties: (Map of String) Additional connection properties.
            connection_url: (String) Connection to the clickhouse.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            database: (String) Database.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            delta_lake: (Attributes) Configuration for DeltaLake connector. (see below for nested schema)
            description: (String) The resource description.
            external_s3: (Attributes) Describes External S3 compatible file system. (see below for nested schema)
            file_system: (Attributes) File system configuration. (see below for nested schema)
            hive: (Attributes) Configuration for Hive connector. (see below for nested schema)
            iceberg: (Attributes) Configuration for Iceberg connector. (see below for nested schema)
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            metastore: (Attributes) Metastore configuration. (see below for nested schema)
            name: (String) The resource name.
            on_premise: (Attributes) Configuration for on-premise connection. (see below for nested schema)
            oracle: (Attributes) Configuration for Oracle connector. (see below for nested schema)
            password: (String) Password of the clickhouse user.
            postgresql: (Attributes) Configuration for Postgresql connector. (see below for nested schema)
            s3: (Attributes) Describes YandexCloud native S3 file system. (see below for nested schema)
            sqlserver: (Attributes) Configuration for SQLServer connector. (see below for nested schema)
            timeouts: (Block, Optional) (see below for nested schema)
            tpcds: (Attributes) Configuration for TPCDS connector. (see below for nested schema)
            tpch: (Attributes) Configuration for TPCH connector. (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            uri: (String) The resource description.
            user_name: (String) Name of the clickhouse user.
        importStatements: []
    yandex_trino_cluster:
        subCategory: Managed Service for Trino
        description: Manages Trino cluster within Yandex Cloud.
        name: yandex_trino_cluster
        title: yandex_trino_cluster
        examples:
            - name: trino
              manifest: |-
                {
                  "coordinator": {
                    "resource_preset_id": "c8-m32"
                  },
                  "maintenance_window": {
                    "day": "MON",
                    "hour": 15,
                    "type": "ANYTIME"
                  },
                  "name": "trino-created-with-terraform",
                  "retry_policy": {
                    "additional_properties": {
                      "fault-tolerant-execution-max-task-split-count": 1024
                    },
                    "exchange_manager": {
                      "additional_properties": {
                        "exchange.sink-buffer-pool-min-size": 16
                      },
                      "service_s3": {}
                    },
                    "policy": "TASK"
                  },
                  "service_account_id": "${yandex_iam_service_account.trino.id}",
                  "subnet_ids": [
                    "${yandex_vpc_subnet.a.id}",
                    "${yandex_vpc_subnet.b.id}",
                    "${yandex_vpc_subnet.d.id}"
                  ],
                  "worker": {
                    "fixed_scale": {
                      "count": 4
                    },
                    "resource_preset_id": "c4-m16"
                  }
                }
              references:
                service_account_id: yandex_iam_service_account.trino.id
                subnet_ids: yandex_vpc_subnet.a.id
        argumentDocs:
            additional_properties: (Map of String) Additional properties.
            auto_scale: (Attributes) A scaling policy that dynamically adjusts the number of worker instances based on the cluster's workload. (see below for nested schema)
            coordinator: (Attributes) Configuration of coordinator instances. (see below for nested schema)
            count: (Number) Specifies the number of worker instances.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            day: (String) Day of week for maintenance window. One of MON, TUE, WED, THU, FRI, SAT, SUN.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            enabled: (Boolean) Enables delivery of logs generated by the Trino components to Cloud Logging.
            exchange_manager: (Attributes) Configuration for exchange manager. (see below for nested schema)
            fixed_scale: (Attributes) A fixed scaling policy that specifies a fixed number of worker instances. (see below for nested schema)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            hour: (Number) Hour of day in UTC time zone (1-24) for maintenance window.
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            log_group_id: (String) Logs will be written to the specified log group. Exactly one of the attributes folder_id or log_group_id should be specified.
            logging: (Attributes) Cloud Logging configuration. (see below for nested schema)
            maintenance_window: (Attributes) Configuration of window for maintenance operations. (see below for nested schema)
            max_count: (Number) The maximum number of worker instances.
            min_count: (Number) The minimum number of worker instances.
            min_level: (String) Minimum level of messages that will be sent to Cloud Logging. Can be either TRACE, DEBUG, INFO, WARN, ERROR or FATAL. If not set then server default is applied (currently INFO).
            name: (String) The resource name.
            policy: (String) Retry policy level
            resource_preset_id: (String) The identifier of the preset for computational resources available to an instance (CPU, memory etc.).
            retry_policy: (Attributes) Configuration for retry policy, specifying the spooling storage destination and other settings. (see below for nested schema)
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            service_account_id: (String) Service account which linked to the resource. For more information, see documentation.
            service_s3: (Attributes) Use S3 created on service side as exchange manager. (see below for nested schema)
            subnet_ids: (Set of String) The list of VPC subnets identifiers which resource is attached.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of maintenance window. Can be either ANYTIME or WEEKLY. If WEEKLY, day and hour must be specified.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            worker: (Attributes) Configuration of worker instances. (see below for nested schema)
        importStatements: []
    yandex_vpc_address:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC address within Yandex Cloud.
        name: yandex_vpc_address
        title: yandex_vpc_address
        examples:
            - name: addr
              manifest: |-
                {
                  "external_ipv4_address": [
                    {
                      "zone_id": "ru-central1-a"
                    }
                  ],
                  "name": "exampleAddress"
                }
            - name: vpnaddr
              manifest: |-
                {
                  "external_ipv4_address": [
                    {
                      "ddos_protection_provider": "qrator",
                      "zone_id": "ru-central1-a"
                    }
                  ],
                  "name": "vpnaddr"
                }
        argumentDocs:
            address: (String) Allocated IP address.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            ddos_protection_provider: '(String) Enable DDOS protection. Possible values are: qrator'
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            dns_record: (Block List) DNS record specification of address. (see below for nested schema)
            dns_zone_id: (String) DNS zone id to create record at.
            external_ipv4_address: '(Block List, Max: 1) Specification of IPv4 address.'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            fqdn: (String) FQDN for record to address.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            outgoing_smtp_capability: (String) Wanted outgoing smtp capability.
            ptr: (Boolean) If PTR record is needed.
            reserved: (Boolean) false means that address is ephemeral.
            timeouts: (Block, Optional) (see below for nested schema)
            ttl: (Number) TTL of DNS record.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            used: (Boolean) true if address is used.
            zone_id: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_vpc_address.<resource Name> <resource Id>
              terraform import yandex_vpc_address.addr ...
    yandex_vpc_default_security_group:
        subCategory: Virtual Private Cloud (VPC)
        description: Yandex VPC Default Security Group.
        name: yandex_vpc_default_security_group
        title: yandex_vpc_default_security_group
        examples:
            - name: default-sg
              manifest: |-
                {
                  "description": "description for default security group",
                  "egress": [
                    {
                      "description": "rule2 description",
                      "from_port": 8090,
                      "protocol": "ANY",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    },
                    {
                      "description": "rule3 description",
                      "from_port": 8090,
                      "protocol": "UDP",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24"
                      ]
                    }
                  ],
                  "ingress": [
                    {
                      "description": "rule1 description",
                      "port": 8080,
                      "protocol": "TCP",
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    }
                  ],
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "network_id": "${yandex_vpc_network.lab-net.id}"
                }
              references:
                network_id: yandex_vpc_network.lab-net.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            egress: (Block Set) A list of egress rules. (see below for nested schema)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            from_port: (Number) Minimum port number.
            id: (String) The ID of this resource.
            ingress: (Block Set) A list of ingress rules. (see below for nested schema)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name. Cannot be updated.
            network_id: (String) ID of the network this security group belongs to.
            port: (Number) Port number (if applied to a single port).
            predefined_target: (String) Special-purpose targets. self_security_group refers to this particular security group. loadbalancer_healthchecks represents loadbalancer health check nodes.
            protocol: (String) One of ANY, TCP, UDP, ICMP, IPV6_ICMP.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            security_group_id: (String) Target security group ID for this rule.
            status: (String) Status of this security group.
            timeouts: (Block, Optional) (see below for nested schema)
            to_port: (Number) Maximum port number.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            v4_cidr_blocks: (List of String) The blocks of IPv4 addresses for this rule.
            v6_cidr_blocks: (List of String) The blocks of IPv6 addresses for this rule. v6_cidr_blocks argument is currently not supported. It will be available in the future.
        importStatements:
            - |-
              # terraform import yandex_vpc_default_security_group.<resource Name> <resource Id>
              terraform import yandex_vpc_default_security_group.default-sg ...
    yandex_vpc_gateway:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a gateway within Yandex Cloud.
        name: yandex_vpc_gateway
        title: yandex_vpc_gateway
        examples:
            - name: my_gw
              manifest: |-
                {
                  "name": "foobar",
                  "shared_egress_gateway": [
                    {}
                  ]
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            shared_egress_gateway: '(Block List, Max: 1) Shared egress gateway configuration. Currently empty. (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_vpc_gateway.<resource Name> <resource Id>
              terraform import yandex_vpc_gateway.my_gw ...
    yandex_vpc_network:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a network within Yandex Cloud.
        name: yandex_vpc_network
        title: yandex_vpc_network
        examples:
            - name: my_net
              manifest: |-
                {
                  "name": "foobar"
                }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            default_security_group_id: (String) ID of default Security Group of this network.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            subnet_ids: (List of String) The list of VPC subnets identifiers which resource is attached.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_vpc_network.<resource Name> <resource Id>
              terraform import yandex_vpc_network.my_net ...
    yandex_vpc_private_endpoint:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Private Endpoint within Yandex Cloud.
        name: yandex_vpc_private_endpoint
        title: yandex_vpc_private_endpoint
        examples:
            - name: my_pe
              manifest: |-
                {
                  "description": "description for private endpoint",
                  "dns_options": [
                    {
                      "private_dns_records_enabled": true
                    }
                  ],
                  "endpoint_address": [
                    {
                      "subnet_id": "${yandex_vpc_subnet.lab-subnet-a.id}"
                    }
                  ],
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "object-storage-private-endpoint",
                  "network_id": "${yandex_vpc_network.lab-net.id}",
                  "object_storage": [
                    {}
                  ]
                }
              references:
                endpoint_address.subnet_id: yandex_vpc_subnet.lab-subnet-a.id
                network_id: yandex_vpc_network.lab-net.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
                yandex_vpc_subnet.lab-subnet-a: |-
                    {
                      "network_id": "${yandex_vpc_network.lab-net.id}",
                      "v4_cidr_blocks": [
                        "10.2.0.0/16"
                      ],
                      "zone": "ru-central1-a"
                    }
        argumentDocs:
            address: (String) Specifies IP address within subnet_id.
            address_id: (String) ID of the address.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            dns_options: '(Block List, Max: 1) Private endpoint DNS options block. (see below for nested schema)'
            endpoint_address: '(Block List, Max: 1) Private endpoint address specification block.'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            network_id: (String) ID of the network which private endpoint belongs to.
            object_storage: '(Block List, Min: 1, Max: 1) Private endpoint for Object Storage. (see below for nested schema)'
            private_dns_records_enabled: (Boolean) If enabled - additional service DNS will be created.
            status: (String) Status of the private endpoint.
            subnet_id: (String) Subnet of the IP address.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_vpc_private_endpoint.<resource Name> <resource Id>
              terraform import yandex_vpc_private_endpoint.my_pe ...
    yandex_vpc_route_table:
        subCategory: Virtual Private Cloud (VPC)
        description: A VPC route table is a virtual version of the traditional route table on router device.
        name: yandex_vpc_route_table
        title: yandex_vpc_route_table
        examples:
            - name: lab-rt-a
              manifest: |-
                {
                  "network_id": "${yandex_vpc_network.lab-net.id}",
                  "static_route": [
                    {
                      "destination_prefix": "10.2.0.0/16",
                      "next_hop_address": "172.16.10.10"
                    },
                    {
                      "destination_prefix": "0.0.0.0/0",
                      "gateway_id": "${yandex_vpc_gateway.egress-gateway.id}"
                    }
                  ]
                }
              references:
                network_id: yandex_vpc_network.lab-net.id
                static_route.gateway_id: yandex_vpc_gateway.egress-gateway.id
              dependencies:
                yandex_vpc_gateway.egress-gateway: |-
                    {
                      "name": "egress-gateway",
                      "shared_egress_gateway": [
                        {}
                      ]
                    }
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            destination_prefix: (String) Route prefix in CIDR notation.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            gateway_id: (String) ID of the gateway used ad next hop.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            network_id: (String) ID of the network this route table belongs to.
            next_hop_address: (String) Address of the next hop.
            static_route: (Block Set) A list of static route records for the route table.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_vpc_route_table.<resource Name> <resource Id>
              terraform import yandex_vpc_route_table.lab-rt-a ...
    yandex_vpc_security_group:
        subCategory: Virtual Private Cloud (VPC)
        description: Manage a Yandex VPC Security Group.
        name: yandex_vpc_security_group
        title: yandex_vpc_security_group
        examples:
            - name: sg1
              manifest: |-
                {
                  "description": "description for my security group",
                  "egress": [
                    {
                      "description": "rule2 description",
                      "from_port": 8090,
                      "protocol": "ANY",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    },
                    {
                      "description": "rule3 description",
                      "from_port": 8090,
                      "protocol": "UDP",
                      "to_port": 8099,
                      "v4_cidr_blocks": [
                        "10.0.1.0/24"
                      ]
                    }
                  ],
                  "ingress": [
                    {
                      "description": "rule1 description",
                      "port": 8080,
                      "protocol": "TCP",
                      "v4_cidr_blocks": [
                        "10.0.1.0/24",
                        "10.0.2.0/24"
                      ]
                    }
                  ],
                  "labels": {
                    "my-label": "my-label-value"
                  },
                  "name": "My security group",
                  "network_id": "${yandex_vpc_network.lab-net.id}"
                }
              references:
                network_id: yandex_vpc_network.lab-net.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            egress: (Block Set) A list of egress rules. (see below for nested schema)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            from_port: (Number) Minimum port number.
            id: (String) The ID of this resource.
            ingress: (Block Set) A list of ingress rules. (see below for nested schema)
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            network_id: (String) ID of the network this security group belongs to.
            port: (Number) Port number (if applied to a single port).
            predefined_target: (String) Special-purpose targets. self_security_group refers to this particular security group. loadbalancer_healthchecks represents loadbalancer health check nodes.
            protocol: (String) One of ANY, TCP, UDP, ICMP, IPV6_ICMP.
            security_group_id: (String) Target security group ID for this rule.
            status: (String) Status of this security group.
            timeouts: (Block, Optional) (see below for nested schema)
            to_port: (Number) Maximum port number.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            v4_cidr_blocks: (List of String) The blocks of IPv4 addresses for this rule.
            v6_cidr_blocks: (List of String) The blocks of IPv6 addresses for this rule. v6_cidr_blocks argument is currently not supported. It will be available in the future.
        importStatements:
            - |-
              # terraform import yandex_vpc_security_group.<resource Name> <resource Id>
              terraform import yandex_vpc_security_group.sg1 enphq**********cjsw4
    yandex_vpc_security_group_rule:
        subCategory: Virtual Private Cloud (VPC)
        description: Manages a VPC Security Group Rule within Yandex Cloud.
        name: yandex_vpc_security_group_rule
        title: yandex_vpc_security_group_rule
        examples:
            - name: rule1
              manifest: |-
                {
                  "description": "rule1 description",
                  "direction": "ingress",
                  "port": 8080,
                  "protocol": "TCP",
                  "security_group_binding": "${yandex_vpc_security_group.group1.id}",
                  "v4_cidr_blocks": [
                    "10.0.1.0/24",
                    "10.0.2.0/24"
                  ]
                }
              references:
                security_group_binding: yandex_vpc_security_group.group1.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
                yandex_vpc_security_group.group1: |-
                    {
                      "description": "description for my security group",
                      "labels": {
                        "my-label": "my-label-value"
                      },
                      "name": "My security group",
                      "network_id": "${yandex_vpc_network.lab-net.id}"
                    }
            - name: rule2
              manifest: |-
                {
                  "description": "rule2 description",
                  "direction": "egress",
                  "from_port": 8090,
                  "protocol": "UDP",
                  "security_group_binding": "${yandex_vpc_security_group.group1.id}",
                  "to_port": 8099,
                  "v4_cidr_blocks": [
                    "10.0.1.0/24"
                  ]
                }
              references:
                security_group_binding: yandex_vpc_security_group.group1.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
                yandex_vpc_security_group.group1: |-
                    {
                      "description": "description for my security group",
                      "labels": {
                        "my-label": "my-label-value"
                      },
                      "name": "My security group",
                      "network_id": "${yandex_vpc_network.lab-net.id}"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            direction: (String) Direction of the Security group rule. Can be ingress (inbound network traffic to the VPC network) or egress (outbound network traffic from the VPC network).
            from_port: (Number) Minimum port number. Applicable for TCP and UDP protocols.
            id: (String) The resource identifier.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            port: (Number) Port number (if applied to a single port).
            predefined_target: (String) Special-purpose targets. The self_security_group target refers to this particular security group. The loadbalancer_healthchecks target represents NLB health check nodes.
            protocol: (String) Specific network protocol. Can be one of ANY, TCP, UDP, ICMP, IPV6_ICMP.
            security_group_binding: (String) The id of target security group which rule belongs to.
            security_group_id: (String) Target security group ID for this Security group rule.
            timeouts: (Block, Optional) (see below for nested schema)
            to_port: (Number) Maximum port number. Applicable for TCP and UDP protocols.
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            v4_cidr_blocks: (List of String) The list of IPv4 CIDR prefixes for this Security group rule.
            v6_cidr_blocks: (List of String) The list of IPv6 CIDR prefixes for this Security group rule. Not supported yet.
        importStatements: []
    yandex_vpc_subnet:
        subCategory: Virtual Private Cloud (VPC)
        description: A VPC network is a virtual version of the traditional physical networks that exist within and between physical data centers.
        name: yandex_vpc_subnet
        title: yandex_vpc_subnet
        examples:
            - name: my_subnet
              manifest: |-
                {
                  "network_id": "${yandex_vpc_network.lab-net.id}",
                  "v4_cidr_blocks": [
                    "10.2.0.0/16"
                  ],
                  "zone": "ru-central1-a"
                }
              references:
                network_id: yandex_vpc_network.lab-net.id
              dependencies:
                yandex_vpc_network.lab-net: |-
                    {
                      "name": "lab-network"
                    }
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) The creation timestamp of the resource.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) The resource description.
            dhcp_options: '(Block List, Max: 1) Options for DHCP client. (see below for nested schema)'
            domain_name: (String) Domain name.
            domain_name_servers: (List of String) Domain name server IP addresses.
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            name: (String) The resource name.
            network_id: (String) ID of the network this subnet belongs to. Only networks that are in the distributed mode can have subnets.
            ntp_servers: (List of String) NTP server IP addresses.
            route_table_id: (String) The ID of the route table to assign to this subnet. Assigned route table should belong to the same network as this subnet.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            v4_cidr_blocks: (List of String) A list of blocks of internal IPv4 addresses that are owned by this subnet. Provide this property when you create the subnet. For example, 10.0.0.0/22 or 192.168.0.0/16. Blocks of addresses must be unique and non-overlapping within a network. Minimum subnet size is /28, and maximum subnet size is /16. Only IPv4 is supported.
            v6_cidr_blocks: (List of String) An optional list of blocks of IPv6 addresses that are owned by this subnet.
            zone: (String) The availability zone where resource is located. If it is not provided, the default provider zone will be used.
        importStatements:
            - |-
              # terraform import yandex_vpc_subnet.<resource Name> <resource Id>
              terraform import yandex_vpc_subnet.my_subnet ...
    yandex_ydb_database_dedicated:
        subCategory: Managed Service for YDB
        description: Manages Yandex Database dedicated cluster.
        name: yandex_ydb_database_dedicated
        title: yandex_ydb_database_dedicated
        examples:
            - name: database1
              manifest: |-
                {
                  "deletion_protection": true,
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "location": [
                    {
                      "region": [
                        {
                          "id": "ru-central1"
                        }
                      ]
                    }
                  ],
                  "name": "test-ydb-dedicated",
                  "network_id": "${yandex_vpc_network.my-inst-group-network.id}",
                  "resource_preset_id": "medium",
                  "scale_policy": [
                    {
                      "fixed_scale": [
                        {
                          "size": 1
                        }
                      ]
                    }
                  ],
                  "storage_config": [
                    {
                      "group_count": 1,
                      "storage_type_id": "ssd"
                    }
                  ],
                  "subnet_ids": [
                    "${yandex_vpc_subnet.my-inst-group-subnet.id}"
                  ]
                }
              references:
                folder_id: data.yandex_resourcemanager_folder.test_folder.id
                network_id: yandex_vpc_network.my-inst-group-network.id
        argumentDocs:
            assign_public_ips: (Boolean) Whether public IP addresses should be assigned to the Yandex Database cluster.
            created_at: (String) The creation timestamp of the resource.
            database_path: (String) Full database path of the Yandex Database cluster. Useful for SDK configuration.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            fixed_scale: '(Block List, Min: 1, Max: 1) Fixed scaling policy for the Yandex Database cluster. (see below for nested schema)'
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            group_count: (Number) Amount of storage groups of selected type for the Yandex Database cluster.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            location: '(Block List, Max: 1) Location for the Yandex Database cluster. (see below for nested schema)'
            location_id: (String) Location ID for the Yandex Database cluster.
            name: (String) The resource name.
            network_id: (String) The VPC Network ID of subnets which resource attached to.
            region: '(Block List, Max: 1) Region for the Yandex Database cluster. (see below for nested schema)'
            resource_preset_id: (String) The Yandex Database cluster preset. Available presets can be obtained via yc ydb resource-preset list command.
            scale_policy: '(Block List, Min: 1, Max: 1) Scaling policy for the Yandex Database cluster.'
            security_group_ids: (Set of String) The list of security groups applied to resource or their components.
            size: (Number) Number of instances for the Yandex Database cluster.
            sleep_after: (Number)
            status: (String) Status of the Yandex Database cluster.
            storage_config: '(Block List, Min: 1, Max: 1) A list of storage configuration options for the Yandex Database cluster. (see below for nested schema)'
            storage_type_id: (String) Storage type ID for the Yandex Database cluster. Available presets can be obtained via yc ydb storage-type list command.
            subnet_ids: (Set of String) The list of VPC subnets identifiers which resource is attached.
            timeouts: (Block, Optional) (see below for nested schema)
            tls_enabled: (Boolean) Whether TLS is enabled for the Yandex Database cluster. Useful for SDK configuration.
            ydb_api_endpoint: (String) API endpoint of the Yandex Database cluster. Useful for SDK configuration.
            ydb_full_endpoint: (String) Full endpoint of the Yandex Database cluster.
        importStatements:
            - |-
              # terraform import yandex_ydb_database_dedicated.<resource Name> <resource Id>
              terraform import yandex_ydb_database_dedicated.my_ydb ...
    yandex_ydb_database_iam_binding:
        subCategory: Managed Service for YDB
        description: Allows management of a single IAM binding for a Managed service for YDB.
        name: yandex_ydb_database_iam_binding
        title: yandex_ydb_database_iam_binding
        examples:
            - name: viewer
              manifest: |-
                {
                  "database_id": "${yandex_ydb_database_serverless.database1.id}",
                  "members": [
                    "userAccount:foo_user_id"
                  ],
                  "role": "ydb.viewer"
                }
              references:
                database_id: yandex_ydb_database_serverless.database1.id
              dependencies:
                yandex_ydb_database_serverless.database1: |-
                    {
                      "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                      "name": "test-ydb-serverless"
                    }
        argumentDocs:
            database_id: (String) The Managed Service YDB instance Database ID to apply a binding to.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            id: (String) The ID of this resource.
            members: '(Set of String) An array of identities that will be granted the privilege in the role. Each entry can have one of the following values:'
            role: (String) The role that should be applied. See roles catalog.
            sleep_after: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
        importStatements:
            - |-
              # terraform import yandex_ydb_database_iam_binding.<resource Name> "<resource Id> <resource Role>"
              terraform import yandex_lockbox_secret_iam_binding.viewer "... viewer"
    yandex_ydb_database_serverless:
        subCategory: Managed Service for YDB
        description: Manages Yandex Database serverless cluster.
        name: yandex_ydb_database_serverless
        title: yandex_ydb_database_serverless
        examples:
            - name: my_ydb
              manifest: |-
                {
                  "deletion_protection": true,
                  "folder_id": "${data.yandex_resourcemanager_folder.test_folder.id}",
                  "name": "test-ydb-serverless"
                }
              references:
                folder_id: data.yandex_resourcemanager_folder.test_folder.id
        argumentDocs:
            created_at: (String) The creation timestamp of the resource.
            database_path: (String) Full database path of the Yandex Database serverless cluster. Useful for SDK configuration.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            deletion_protection: (Boolean) The true value means that resource is protected from accidental deletion.
            description: (String) The resource description.
            document_api_endpoint: (String) Document API endpoint of the Yandex Database serverless cluster.
            enable_throttling_rcu_limit: (Boolean)
            folder_id: (String) The folder identifier that resource belongs to. If it is not provided, the default provider folder-id is used.
            id: (String) The ID of this resource.
            labels: (Map of String) A set of key/value label pairs which assigned to resource.
            location_id: (String) Location ID for the Yandex Database serverless cluster.
            name: (String) The resource name.
            provisioned_rcu_limit: (Number)
            serverless_database: (Block Set) (see below for nested schema)
            sleep_after: (Number)
            status: (String) Status of the Yandex Database serverless cluster.
            storage_size_limit: (Number)
            throttling_rcu_limit: (Number)
            timeouts: (Block, Optional) (see below for nested schema)
            tls_enabled: (Boolean) Whether TLS is enabled for the Yandex Database serverless cluster. Useful for SDK configuration.
            ydb_api_endpoint: (String) API endpoint of the Yandex Database serverless cluster. Useful for SDK configuration.
            ydb_full_endpoint: (String) Full endpoint of the Yandex Database serverless cluster.
        importStatements:
            - |-
              # terraform import yandex_ydb_database_serverless.<resource Name> <resource Id>
              terraform import yandex_ydb_database_serverless.my_ydb ...
    yandex_ydb_table:
        subCategory: Managed Service for YDB
        description: Manages Yandex Database dedicated cluster.
        name: yandex_ydb_table
        title: yandex_ydb_table
        examples:
            - name: test_table
              manifest: |-
                {
                  "column": [
                    {
                      "name": "a",
                      "not_null": true,
                      "type": "Utf8"
                    },
                    {
                      "name": "b",
                      "not_null": true,
                      "type": "Uint32"
                    },
                    {
                      "name": "c",
                      "not_null": false,
                      "type": "Int32"
                    },
                    {
                      "name": "d",
                      "type": "Timestamp"
                    }
                  ],
                  "connection_string": "${yandex_ydb_database_serverless.database1.ydb_full_endpoint}",
                  "path": "test_dir/test_table_3_col",
                  "primary_key": [
                    "a",
                    "b"
                  ]
                }
              references:
                connection_string: yandex_ydb_database_serverless.database1.ydb_full_endpoint
        argumentDocs:
            attributes: (Map of String) A map of table attributes.
            auto_partitioning_by_load: (Boolean)
            auto_partitioning_by_size_enabled: (Boolean)
            auto_partitioning_max_partitions_count: (Number)
            auto_partitioning_min_partitions_count: (Number)
            auto_partitioning_partition_size_mb: (Number)
            column: '(Block Set, Min: 1) A list of column configuration options. (see below for nested schema)'
            column_name: (String) Column name for TTL.
            compression: '(String) Data codec (acceptable values: off, lz4).'
            connection_string: (String) Connection string for database.
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            data: '(String) Type of storage device for column data in this group (acceptable values: ssd, rot (from HDD spindle rotation)).'
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            expire_interval: (String) Interval in the ISO 8601 format.
            family: (Block List) A list of column group configuration options. The family block may be used to group columns into families to set shared parameters for them. (see below for nested schema)
            id: (String) The ID of this resource.
            key_bloom_filter: (Boolean) Use the Bloom filter for the primary key.
            keys: (List of String)
            name: (String) Column name.
            not_null: '(Boolean) A column cannot have the NULL data type. Default: false.'
            partition_at_keys: (Block List) (see below for nested schema)
            partitioning_settings: '(Block List, Max: 1) Table partitioning settings. (see below for nested schema)'
            path: (String) Table path.
            primary_key: (List of String) A list of table columns to be used as primary key.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            read_replicas_settings: (String) Read replication settings.
            timeouts: (Block, Optional) (see below for nested schema)
            ttl: '(Block Set, Max: 1) The TTL block supports allow you to create a special column type, TTL column, whose values determine the time-to-live for rows. (see below for nested schema)'
            type: (String) Column data type. YQL data types are used.
            uniform_partitions: (Number)
            unit: (String)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_ydb_table.<resource Name> <resource Id>
              terraform import yandex_ydb_table.test_table ...
    yandex_ydb_table_changefeed:
        subCategory: Managed Service for YDB
        description: Manages Yandex Database dedicated cluster.
        name: yandex_ydb_table_changefeed
        title: yandex_ydb_table_changefeed
        examples:
            - name: ydb_changefeed
              manifest: |-
                {
                  "consumer": [
                    {
                      "name": "test_consumer"
                    }
                  ],
                  "format": "JSON",
                  "mode": "NEW_IMAGE",
                  "name": "changefeed",
                  "table_id": "${yandex_ydb_table.test_table_2.id}"
                }
              references:
                table_id: yandex_ydb_table.test_table_2.id
        argumentDocs:
            connection_string: (String) Connection string, conflicts with table_id.
            consumer: (Block List) Changefeed consumers - named entities for reading data from the topic. (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            format: (String) Changefeed format.
            id: (String) The ID of this resource.
            important: (Boolean)
            mode: (String) Changefeed mode.
            name: (String) Changefeed name.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            retention_period: (String) Time of data retention in the topic, ISO 8601 format.
            starting_message_timestamp_ms: (Number) Timestamp in the UNIX timestamp format, from which the consumer will start reading data.
            supported_codecs: (List of String) Supported data encodings.
            table_id: (String) Terraform resource ID of the table.
            table_path: (String) Table path.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            virtual_timestamps: (Boolean) Use virtual timestamps.
        importStatements:
            - |-
              # terraform import yandex_ydb_table_changefeed.<resource Name> <resource Id>
              terraform import yandex_ydb_table_changefeed.ydb_changefeed ...
    yandex_ydb_table_index:
        subCategory: Managed Service for YDB
        description: Manage a YDB Table Index.
        name: yandex_ydb_table_index
        title: yandex_ydb_table_index
        argumentDocs:
            columns: (List of String)
            connection_string: (String)
            cover: (List of String)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) The ID of this resource.
            name: (String)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            table_id: (String)
            table_path: (String)
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_ydb_table_index.<resource Name> <resource Id>
              terraform import yandex_ydb_table_index.test_table_index ...
    yandex_ydb_topic:
        subCategory: Managed Service for YDB
        description: Manage a YDB Topic.
        name: yandex_ydb_topic
        title: yandex_ydb_topic
        examples:
            - name: my_topic
              manifest: |-
                {
                  "consumer": [
                    {
                      "name": "consumer-name",
                      "starting_message_timestamp_ms": 0,
                      "supported_codecs": [
                        "raw",
                        "gzip"
                      ]
                    }
                  ],
                  "database_endpoint": "${yandex_ydb_database_serverless.database_name.ydb_full_endpoint}",
                  "name": "topic-test",
                  "partitions_count": 1,
                  "retention_period_ms": 2000000,
                  "supported_codecs": [
                    "raw",
                    "gzip"
                  ]
                }
              references:
                database_endpoint: yandex_ydb_database_serverless.database_name.ydb_full_endpoint
              dependencies:
                yandex_ydb_database_serverless.database_name: |-
                    {
                      "location_id": "ru-central1",
                      "name": "database-name"
                    }
        argumentDocs:
            auto_partitioning_settings: '(Block List, Max: 1) (see below for nested schema)'
            auto_partitioning_strategy: (String) The auto partitioning strategy to use
            auto_partitioning_write_speed_strategy: '(Block List, Max: 1) (see below for nested schema)'
            consumer: (Block Set) Topic Readers. (see below for nested schema)
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            database_endpoint: (String) YDB database endpoint.
            default: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) Topic description.
            down_utilization_percent: (Number) The down utilization percentage threshold
            id: (String) The ID of this resource.
            important: (Boolean) Defines an important consumer. No data will be deleted from the topic until all the important consumers read them. Default value false.
            max_partitions_count: (Number) Number of max active partitions. Default value 1.
            metering_mode: (String) Resource metering mode (reserved_capacity - based on the allocated resources or request_units - based on actual usage). This option applies to topics in serverless databases.
            name: (String) Topic name.
            partition_write_speed_kbps: '(Number) Maximum allowed write speed per partition. If a write speed for a given partition exceeds this value, the write speed will be capped. Default value: 1024 (1MB).'
            partitions_count: (Number) Number of min partitions. Default value 1.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            retention_period_hours: (Number) Data retention time. Default value 86400000.
            retention_storage_mb: (Number)
            stabilization_window: (Number) The stabilization window in seconds
            starting_message_timestamp_ms: (Number) Timestamp in UNIX timestamp format from which the reader will start reading data. Default value 0.
            supported_codecs: (Set of String) Supported data encodings. Can be one of gzip, raw or zstd.
            timeouts: (Block, Optional) (see below for nested schema)
            up_utilization_percent: (Number) The up utilization percentage threshold
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
        importStatements:
            - |-
              # terraform import yandex_ydb_topic.<resource Name> <resource Id>
              terraform import yandex_ydb_topic.my_topic ...
    yandex_yq_monitoring_connection:
        subCategory: Yandex Query
        description: Manages Object Storage connection.
        name: yandex_yq_monitoring_connection
        title: yandex_yq_monitoring_connection
        examples:
            - name: my_mon_connection
              manifest: |-
                {
                  "description": "Connection has been created from Terraform",
                  "folder_id": "my_folder",
                  "name": "tf-test-mon-connection",
                  "service_account_id": "${yandex_iam_service_account.for-yq.id}"
                }
              references:
                service_account_id: yandex_iam_service_account.for-yq.id
        argumentDocs:
            cloud_id: (String) The cloud identifier.
            description: (String) The resource description.
            folder_id: (String) The folder identifier.
            id: (String) The resource identifier.
            name: (String) The resource name.
            service_account_id: (String) The service account ID to access resources on behalf of.
        importStatements:
            - |-
              # terraform import yandex_yq_monitoring_connection.<resource Name> <resource Id>
              terraform import yandex_yq_monitoring_connection.my_mon_connection ...
    yandex_yq_object_storage_binding:
        subCategory: Yandex Query
        description: Manages Object Storage binding.
        name: yandex_yq_object_storage_binding
        title: yandex_yq_object_storage_binding
        examples:
            - name: my_os_binding1
              manifest: |-
                {
                  "column": [
                    {
                      "name": "ts",
                      "type": "Timestamp"
                    },
                    {
                      "name": "message",
                      "type": "Utf8"
                    }
                  ],
                  "compression": "gzip",
                  "connection_id": "${yandex_yq_object_storage_connection.my_os_connection.id}",
                  "description": "Binding has been created from Terraform",
                  "format": "json_each_row",
                  "name": "tf-test-os-binding1",
                  "path_pattern": "my_logs/"
                }
              references:
                connection_id: yandex_yq_object_storage_connection.my_os_connection.id
            - name: my_os_binding2
              manifest: |-
                {
                  "column": [
                    {
                      "name": "year",
                      "not_null": true,
                      "type": "Int32"
                    },
                    {
                      "name": "month",
                      "not_null": true,
                      "type": "Int32"
                    },
                    {
                      "name": "day",
                      "not_null": true,
                      "type": "Int32"
                    },
                    {
                      "name": "ts",
                      "type": "Timestamp"
                    },
                    {
                      "name": "message",
                      "type": "Utf8"
                    }
                  ],
                  "connection_id": "${yandex_yq_object_storage_connection.my_os_connection.id}",
                  "description": "Binding has been created from Terraform",
                  "format": "csv_with_names",
                  "format_setting": {
                    "file_pattern": "*.csv"
                  },
                  "name": "tf-test-os-binding2",
                  "partitioned_by": [
                    "year",
                    "month",
                    "day"
                  ],
                  "path_pattern": "my_logs/"
                }
              references:
                connection_id: yandex_yq_object_storage_connection.my_os_connection.id
            - name: my_os_binding3
              manifest: |-
                {
                  "column": [
                    {
                      "name": "timestamp",
                      "not_null": false,
                      "type": "String"
                    },
                    {
                      "name": "message",
                      "not_null": false,
                      "type": "String"
                    },
                    {
                      "name": "date",
                      "not_null": true,
                      "type": "Date"
                    },
                    {
                      "name": "severity",
                      "not_null": true,
                      "type": "String"
                    }
                  ],
                  "compression": "gzip",
                  "connection_id": "${yandex_yq_object_storage_connection.my_os_connection.id}",
                  "description": "Binding has been created from Terraform",
                  "format": "json_each_row",
                  "name": "tf-test-os-binding3",
                  "partitioned_by": [
                    "date",
                    "severity"
                  ],
                  "path_pattern": "/cold",
                  "projection": {
                    "projection.date.format": "/year=%Y/month=%m/day=%d",
                    "projection.date.interval": "1",
                    "projection.date.max": "NOW",
                    "projection.date.min": "2022-12-01",
                    "projection.date.type": "date",
                    "projection.date.unit": "DAYS",
                    "projection.enabled": "true",
                    "projection.severity.type": "enum",
                    "projection.severity.values": "error,info,fatal",
                    "storage.location.template": "/${date}/${severity}"
                  }
                }
              references:
                connection_id: yandex_yq_object_storage_connection.my_os_connection.id
        argumentDocs:
            column: (Block List) (see below for nested schema)
            compression: (String) The data compression algorithm, e.g. brotli, bzip2, gzip, lz4, xz, zstd.
            connection_id: (String) The connection identifier.
            description: (String) The resource description.
            format: (String) The data format, e.g. csv_with_names, json_as_string, json_each_row, json_list, parquet, raw, tsv_with_names.
            format_setting: (Map of String) Special format setting.
            id: (String) The resource identifier.
            name: (String) The resource name.
            not_null: '(Boolean) A column cannot have the NULL data type. Default: false.'
            partitioned_by: (List of String) The list of partitioning column names.
            path_pattern: (String) The path pattern within Object Storage's bucket.
            projection: (Map of String) Projection rules.
            type: (String) Column data type. YQL data types are used.
        importStatements:
            - |-
              # terraform import yandex_yq_object_storage_binding.<resource Name> <resource Id>
              terraform import yandex_yq_object_storage_binding.my_os_binding ...
    yandex_yq_object_storage_connection:
        subCategory: Yandex Query
        description: Manages Object Storage connection.
        name: yandex_yq_object_storage_connection
        title: yandex_yq_object_storage_connection
        examples:
            - name: my_os_connection
              manifest: |-
                {
                  "bucket": "some-public-bucket",
                  "description": "Connection has been created from Terraform",
                  "name": "tf-test-os-connection",
                  "service_account_id": "${yandex_iam_service_account.for-yq.id}"
                }
              references:
                service_account_id: yandex_iam_service_account.for-yq.id
        argumentDocs:
            bucket: (String) The bucket name from ObjectStorage.
            description: (String) The resource description.
            id: (String) The resource identifier.
            name: (String) The resource name.
            service_account_id: (String) The service account ID to access resources on behalf of.
        importStatements:
            - |-
              # terraform import yandex_yq_object_storage_connection.<resource Name> <resource Id>
              terraform import yandex_yq_object_storage_connection.my_os_connection ...
    yandex_yq_ydb_connection:
        subCategory: Yandex Query
        description: Manages Object Storage connection.
        name: yandex_yq_ydb_connection
        title: yandex_yq_ydb_connection
        examples:
            - name: my_ydb_connection
              manifest: |-
                {
                  "database_id": "db_id",
                  "description": "Connection has been created from Terraform",
                  "name": "tf-test-ydb-connection",
                  "service_account_id": "${yandex_iam_service_account.for-yq.id}"
                }
              references:
                service_account_id: yandex_iam_service_account.for-yq.id
        argumentDocs:
            database_id: (String) The database identifier.
            description: (String) The resource description.
            id: (String) The resource identifier.
            name: (String) The resource name.
            service_account_id: (String) The service account ID to access resources on behalf of.
        importStatements:
            - |-
              # terraform import yandex_yq_ydb_connection.<resource Name> <resource Id>
              terraform import yandex_yq_ydb_connection.my_ydb_connection ...
    yandex_yq_yds_binding:
        subCategory: Yandex Query
        description: Manages Yandex DataStream binding.
        name: yandex_yq_yds_binding
        title: yandex_yq_yds_binding
        examples:
            - name: my_yds_binding
              manifest: |-
                {
                  "column": [
                    {
                      "name": "ts",
                      "type": "Timestamp"
                    },
                    {
                      "name": "message",
                      "type": "Utf8"
                    }
                  ],
                  "connection_id": "${yandex_yq_yds_connection.my_yds_connection.id}",
                  "description": "Binding has been created from Terraform",
                  "format": "csv_with_names",
                  "format_setting": {
                    "data.datetime.format_name": "POSIX"
                  },
                  "name": "tf-test-os-binding",
                  "stream": "my_stream"
                }
              references:
                connection_id: yandex_yq_yds_connection.my_yds_connection.id
        argumentDocs:
            column: (Block List) (see below for nested schema)
            compression: (String) The data compression algorithm, e.g. brotli, bzip2, gzip, lz4, xz, zstd.
            connection_id: (String) The connection identifier.
            description: (String) The resource description.
            format: (String) The data format, e.g. csv_with_names, json_as_string, json_each_row, json_list, parquet, raw, tsv_with_names.
            format_setting: (Map of String) Special format setting.
            id: (String) The resource identifier.
            name: (String) The resource name.
            not_null: '(Boolean) A column cannot have the NULL data type. Default: false.'
            stream: (String) The stream name.
            type: (String) Column data type. YQL data types are used.
        importStatements:
            - |-
              # terraform import yandex_yq_yds_binding.<resource Name> <resource Id>
              terraform import yandex_yq_yds_binding.my_yds_binding ...
    yandex_yq_yds_connection:
        subCategory: Yandex Query
        description: Manages Object Storage connection.
        name: yandex_yq_yds_connection
        title: yandex_yq_yds_connection
        examples:
            - name: my_yds_connection
              manifest: |-
                {
                  "database_id": "db_id",
                  "description": "Connection has been created from Terraform",
                  "name": "tf-test-yds-connection",
                  "service_account_id": "${yandex_iam_service_account.for-yq.id}"
                }
              references:
                service_account_id: yandex_iam_service_account.for-yq.id
        argumentDocs:
            database_id: (String) The database identifier.
            description: (String) The resource description.
            id: (String) The resource identifier.
            name: (String) The resource name.
            service_account_id: (String) The service account ID to access resources on behalf of.
            shared_reading: (Boolean) Whether to enable shared reading by different queries from the same connection.
        importStatements:
            - |-
              # terraform import yandex_yq_yds_connection.<resource Name> <resource Id>
              terraform import yandex_yq_yds_connection.my_yds_connection ...
    yandex_ytsaurus_cluster Resource - yandex:
        subCategory: ""
        name: yandex_ytsaurus_cluster Resource - yandex
        title: yandex_ytsaurus_cluster Resource - yandex
        argumentDocs:
            auto: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            cluster_id: (String) ID of the cluster to delete.
            compute: |-
                (Attributes List) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            count: |-
                (Number) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            created_at: (String) Time when the cluster was created.
            created_by: (String) User who created the cluster.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            description: (String) Description of the cluster.
            disks: |-
                (Attributes List) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            endpoints: (Attributes) Endpoints of the cluster. (see below for nested schema)
            external_http_proxy_balancer: |-
                (String) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            fixed: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            folder_id: (String) ID of the folder that the cluster belongs to.
            hdd: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            health: (String) Health of the cluster.
            http: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            id: (String) ID of the cluster to delete.
            internal_http_proxies: |-
                (List of String) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            internal_http_proxy_alias: |-
                (String) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            internal_rpc_proxies: |-
                (List of String) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            internal_rpc_proxy_alias: |-
                (String) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            labels: (Map of String) Cluster labels as key:value pairs.
            locations: (List of String) ID of the availability zone where the cluster resides.
            max_size: |-
                (Number) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            min_size: |-
                (Number) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            name: |-
                (String) Name of the cluster.
                The name is unique within the folder.
            preset: |-
                (String) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            proxy: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            rpc: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            scale_policy: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            security_group_ids: (List of String) Network interfaces security groups.
            size: (Number) ID of the cluster. Generated at creation time.
            size_gb: (Number) ID of the folder that the cluster belongs to.
            spec: (Attributes) Cluster specification. (see below for nested schema)
            ssd: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            status: (String) Status of the cluster.
            storage: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            subnet_id: (String) ID of the subnet where the cluster resides.
            tablet: |-
                (Attributes) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto (see below for nested schema)
            timeouts: (Attributes) (see below for nested schema)
            type: (String) ID of the cluster. Generated at creation time.
            ui: |-
                (String) package: yandex.cloud.ytsaurus.v1
                filename: yandex/cloud/ytsaurus/v1/cluster.proto
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            updated_at: (String) Time when the cluster was last updated.
            updated_by: (String) User who last updated the cluster.
            zone_id: (String) ID of the availability zone where the cluster resides.
        importStatements: []
